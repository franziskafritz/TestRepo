OBJECT Codeunit 50604 IWS Language Data Handling
{
  OBJECT-PROPERTIES
  {
    Date=11.11.14;
    Time=11:55:15;
    Modified=Yes;
    Version List=HME1790;
  }
  PROPERTIES
  {
    TableNo=50602;
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text50000@1000000008 : TextConst 'ENU=Item No. %1 is longer than 20 characters';
      Text50001@1000000007 : TextConst 'ENU=The imported Record is not a NAV Item.';
      Text50002@1000000006 : TextConst 'ENU=Compared to previous Item Import Log Entry there is no difference!';
      Text50003@1000000005 : TextConst 'ENU="Item category not found; "';
      Text50004@1000000004 : TextConst 'ENU="Manufacturer doesn''t exist; "';
      Text50005@1000000003 : TextConst 'ENU="Wrong EAN; "';
      Text50006@1000000002 : TextConst 'ENU="EAN exists for item %1; "';
      Text50007@1000000001 : TextConst 'ENU=Evaluated fields have not been inserted!';
      Text50008@1000000000 : TextConst 'ENU="Language Code for %1 %2 doesnt exist;"';
      ErrorText@1000000009 : Text[250];
      Text50009@1000000010 : TextConst 'ENU=Compared to previous %1 Data there was no difference, Record will not be updated';
      Text50010@1000000011 : TextConst 'ENU=Error occurs during %1 of the current Entry in Item Translation Table.';
      FPCGeneralSetup@1000000012 : Record 50055;

    PROCEDURE EvaluateLanguageCode@1000000005(VAR ImportLogLanguageData@1000000000 : Record 50602);
    VAR
      LanguageL@1000000001 : Record 8;
    BEGIN
      LanguageL.SETRANGE("Webshop Language Code",ImportLogLanguageData."Language ID");

      IF NOT LanguageL.FIND('-') THEN BEGIN
        ErrorText := ErrorText + COPYSTR(STRSUBSTNO(Text50008,ImportLogLanguageData.FIELDCAPTION("Language ID"),
                     ImportLogLanguageData."Language ID"),1,MAXSTRLEN(ImportLogLanguageData."Import Error Text"));
      END ELSE BEGIN
        ImportLogLanguageData."Evaluated NAV Language Code" := LanguageL.Code;
      END;
    END;

    PROCEDURE CreateItemDescription@1000000015(VAR ItemImportLogLangSpecDataV@1000000004 : Record 50602);
    VAR
      ItemDescriptionL@1000000003 : Text[100];
      ItemDescription2L@1000000002 : Text[100];
      Stop@1000000001 : Boolean;
      Length@1000000000 : Integer;
    BEGIN
      Length := STRLEN(ItemImportLogLangSpecDataV.Description);

      CASE Length OF
        1..50 :
          BEGIN
            ItemImportLogLangSpecDataV."Evaluated Item Description 1" := ItemImportLogLangSpecDataV.Description;
            ItemImportLogLangSpecDataV."Evaluated Item Description 2" := '';
          END;

        100 :
          BEGIN
            ItemImportLogLangSpecDataV."Evaluated Item Description 1" := COPYSTR(ItemImportLogLangSpecDataV.Description, 1, 50);
            ItemImportLogLangSpecDataV."Evaluated Item Description 2" := COPYSTR(ItemImportLogLangSpecDataV.Description, 51);
          END;

        51..99 :
          BEGIN
            IF STRPOS(ItemImportLogLangSpecDataV.Description, '') <> 0 THEN BEGIN
              ItemDescriptionL := COPYSTR(ItemImportLogLangSpecDataV.Description, 1,
                STRPOS(ItemImportLogLangSpecDataV.Description, ''));
              ItemDescription2L := COPYSTR(ItemImportLogLangSpecDataV.Description,
                STRPOS(ItemImportLogLangSpecDataV.Description, ''));
              IF STRLEN(ItemDescriptionL) < 50 THEN
                REPEAT
                  IF (STRLEN(ItemDescriptionL) + STRPOS(ItemDescription2L,'') < 50) THEN BEGIN
                    ItemDescriptionL := ItemDescriptionL + COPYSTR(ItemDescription2L, 1, STRPOS(ItemDescription2L, ''));
                    ItemDescription2L := DELSTR(ItemDescription2L, 1, STRPOS(ItemDescription2L, ''));
                  END ELSE
                    Stop := TRUE;
                UNTIL Stop;
            END ELSE BEGIN
              ItemImportLogLangSpecDataV."Evaluated Item Description 1" := COPYSTR(ItemImportLogLangSpecDataV.Description, 1, 50);
              ItemImportLogLangSpecDataV."Evaluated Item Description 2" := COPYSTR(ItemImportLogLangSpecDataV.Description, 51);
            END;
          END;
        //H1170 ARI 19.05.2014 ++++++++++++++++++++++++++++++++
        ELSE BEGIN
          ItemImportLogLangSpecDataV."Evaluated Item Description 1" := COPYSTR(ItemImportLogLangSpecDataV.Description, 1, 50);
          ItemImportLogLangSpecDataV."Evaluated Item Description 2" := COPYSTR(ItemImportLogLangSpecDataV.Description, 51,50);
        END;
        //H1170 ARI 19.05.2014 --------------------------------
      END;
    END;

    PROCEDURE CompareEvaluatedEntries@1000000001(VAR ItemImportLanguageData@1000000003 : Record 50602);
    VAR
      ItemImportLangaugeL@1000000005 : Record 50602;
    BEGIN
      //This Function compares the evaluated Entries with the latest evaluated entries.
      //If there is no difference at all, then set Import Status to Finished and add Errot Text that there was no difference

      //H1077 14.04.14 ARI +++++++++++++++++++++++++
      ItemImportLangaugeL.SETCURRENTKEY(ItemNo,"Import Status");
      //H1077 14.04.14 ARI -------------------------

      ItemImportLangaugeL.SETFILTER("Attached to Request ID",'<%1',ItemImportLanguageData."Attached to Request ID");
      ItemImportLangaugeL.SETRANGE(ItemNo,ItemImportLanguageData.ItemNo);
      ItemImportLangaugeL.SETRANGE("Import Status",ItemImportLangaugeL."Import Status"::Finished);
      ItemImportLangaugeL.SETRANGE("Language ID",ItemImportLanguageData."Language ID");

      IF ItemImportLangaugeL.FIND('+') THEN BEGIN
        IF (ItemImportLanguageData.Description <> ItemImportLangaugeL.Description) OR
           (ItemImportLanguageData."Material Detail" <> ItemImportLangaugeL."Material Detail") OR
           (ItemImportLanguageData."URL Path" <> ItemImportLangaugeL."URL Path") OR
           (ItemImportLanguageData."Evaluated Item Description 1" <> ItemImportLangaugeL."Evaluated Item Description 1") OR
           (ItemImportLanguageData."Evaluated Item Description 2" <> ItemImportLangaugeL."Evaluated Item Description 2") OR
           (ItemImportLanguageData."Evaluated NAV Language Code" <> ItemImportLangaugeL."Evaluated NAV Language Code") THEN BEGIN
          ItemImportLanguageData."Import Status" := ItemImportLanguageData."Import Status"::Evaluated;
          ItemImportLanguageData."Modified on" := CURRENTDATETIME;
        END ELSE BEGIN
          ItemImportLanguageData."Import Status" := ItemImportLanguageData."Import Status"::Finished;
          ItemImportLanguageData."Import Error Text" := STRSUBSTNO(Text50009,'Language');
          ItemImportLanguageData."Modified on" := CURRENTDATETIME;
        END;
      END ELSE BEGIN
        ItemImportLanguageData."Import Status" := ItemImportLanguageData."Import Status"::Evaluated;
        ItemImportLanguageData."Modified on" := CURRENTDATETIME;
      END;
    END;

    PROCEDURE UpdateItemValues@1000000000(VAR LanguageSpecificDataR@1000000001 : Record 50602);
    VAR
      ItemTranslationL@1000000002 : Record 30;
      ItemL@1000000000 : Record 27;
    BEGIN
      //H1790,H1216 11.11.2014 ARI +++++++++++++++++++++++++++++
      IF (LanguageSpecificDataR.Description <> '') OR (LanguageSpecificDataR."Material Detail" <> '') OR
        (LanguageSpecificDataR."URL Path" <> '') THEN BEGIN

        ItemTranslationL.LOCKTABLE;
        IF ItemTranslationL.GET(LanguageSpecificDataR.ItemNo,'',LanguageSpecificDataR."Evaluated NAV Language Code") THEN BEGIN
          ModifyItemTranslation(LanguageSpecificDataR,ItemTranslationL);
        END ELSE BEGIN
          InsertItemTranslation(LanguageSpecificDataR);
        END;
        ModifyItem(LanguageSpecificDataR);
      END;
      //H1790,H1216 11.11.2014 ARI -----------------------------
    END;

    PROCEDURE ModifyItemTranslation@1000000002(VAR LanguageSpecificDataR@1000000000 : Record 50602;VAR ItemTranslationR@1000000001 : Record 30);
    VAR
      DoModifyL@1000000002 : Boolean;
    BEGIN
      //H1216 17.06.14 ARI ++++++++++++++++++++++++++++++++++
      IF ItemTranslationR.Description <> LanguageSpecificDataR."Evaluated Item Description 1" THEN BEGIN
        ItemTranslationR.VALIDATE(Description, LanguageSpecificDataR."Evaluated Item Description 1");
        DoModifyL := TRUE;
      END;

      IF ItemTranslationR."Description 2" <> LanguageSpecificDataR."Evaluated Item Description 2" THEN BEGIN
        ItemTranslationR."Description 2" := LanguageSpecificDataR."Evaluated Item Description 2";
        DoModifyL := TRUE;
      END;

      IF ItemTranslationR."Material Detail" <> LanguageSpecificDataR."Material Detail" THEN BEGIN
        ItemTranslationR."Material Detail" := LanguageSpecificDataR."Material Detail";
        DoModifyL := TRUE;
      END;

      IF ItemTranslationR."URL Path" <> LanguageSpecificDataR."URL Path" THEN BEGIN
        ItemTranslationR."URL Path" := LanguageSpecificDataR."URL Path";
        DoModifyL := TRUE;
      END;

      IF DoModifyL THEN
        IF ItemTranslationR.MODIFY THEN BEGIN
          LanguageSpecificDataR."Import Status" := LanguageSpecificDataR."Import Status"::Finished;
          LanguageSpecificDataR."Modified on" := CURRENTDATETIME;
        END ELSE BEGIN
          ErrorText := STRSUBSTNO(Text50010,'modifiying');
          LanguageSpecificDataR."Modified on" := CURRENTDATETIME;
        END;
      //H1216 17.06.14 ARI ----------------------------------
    END;

    PROCEDURE InsertItemTranslation@1000000003(VAR LanguageSpecificDataR@1000000000 : Record 50602);
    VAR
      ItemTranslationL@1000000001 : Record 30;
    BEGIN
      //H1216 17.06.14 ARI ++++++++++++++++++++++++++++++++++
      ItemTranslationL.INIT;
      ItemTranslationL."Item No." := LanguageSpecificDataR.ItemNo;
      ItemTranslationL."Language Code" := LanguageSpecificDataR."Evaluated NAV Language Code";
      ItemTranslationL.VALIDATE(Description, LanguageSpecificDataR."Evaluated Item Description 1");
      ItemTranslationL."Description 2" := LanguageSpecificDataR."Evaluated Item Description 2";
      ItemTranslationL."Material Detail" := LanguageSpecificDataR."Material Detail";
      ItemTranslationL."URL Path" := LanguageSpecificDataR."URL Path";
      IF ItemTranslationL.INSERT THEN BEGIN
        LanguageSpecificDataR."Import Status" := LanguageSpecificDataR."Import Status"::Finished;
        LanguageSpecificDataR."Modified on" := CURRENTDATETIME;
      END ELSE BEGIN
        ErrorText := STRSUBSTNO(Text50010,'insertion');
        LanguageSpecificDataR."Modified on" := CURRENTDATETIME;
      END;
      //H1216 17.06.14 ARI ----------------------------------
    END;

    PROCEDURE ModifyItem@1000000004(VAR LanguageSpecificDataR@1000000000 : Record 50602);
    VAR
      ItemL@1000000001 : Record 27;
      DoModifyL@1000000002 : Boolean;
    BEGIN
      //H1216 17.06.14 ARI ++++++++++++++++++++++++++++++++++
      IF LanguageSpecificDataR."Evaluated NAV Language Code" = 'DEU' THEN BEGIN
        ItemL.LOCKTABLE;
        IF ItemL.GET(LanguageSpecificDataR.ItemNo) THEN BEGIN
          IF ItemL.Description <> LanguageSpecificDataR."Evaluated Item Description 1" THEN BEGIN
            ItemL.VALIDATE(Description,LanguageSpecificDataR."Evaluated Item Description 1");
            DoModifyL := TRUE;
          END;

          IF ItemL."Description 2" <> LanguageSpecificDataR."Evaluated Item Description 2" THEN BEGIN
            ItemL."Description 2" := LanguageSpecificDataR."Evaluated Item Description 2";
            DoModifyL := TRUE;
          END;
          IF DoModifyL THEN
            ItemL.MODIFY;
        END;
      END;
      //H1216 17.06.14 ARI ----------------------------------
    END;

    PROCEDURE EvaluateData@1000000006(VAR IILLanguageDataR@1000000000 : Record 50602;VAR ErrorMessageR@1000000001 : Text[250]);
    BEGIN
      //H1422 19.09.14 ARI ++++++++++++++++++++++++++++++++++++++++++++
      ErrorMessageR := '';

      EvaluateLanguageCode(IILLanguageDataR);
      CreateItemDescription(IILLanguageDataR);

      IILLanguageDataR."Modified on" := CURRENTDATETIME;

      IF ErrorMessageR = '' THEN BEGIN
        IILLanguageDataR."Import Status" := IILLanguageDataR."Import Status"::Evaluated;
        IILLanguageDataR.MODIFY;
      END;
      //H1422 19.09.14 ARI --------------------------------------------
    END;

    BEGIN
    {
      +--------------------------------------------+
      |                                            |
      |                  Home24                    |
      |       Internal Customizing by NAV-Team     |
      |                                            |
      +--------------------------------------------+

      Project No. Date      Shortcut  Description
      _____________________________________________

      H0566       30.01.14  ARI       Created
      H1055       07.04.14  ARI       Validate Description
      H1077       14.04.14  ARI       SetcurrentKey to increase Performance
      H1170       19.05.14  ARI       Shorten Item Description if Longer than 100 Characters
      H1216       16.06.14  ARI       Redesign of Update/Insert Logic
      H1422       25.09.14  ARI       Redesign Item Webservice: Renumber Object,New Function
      H1790       11.11.14  ARI       Item WS Performance Improvement : Just create Translation if Translation contains text.
    }
    END.
  }
}

