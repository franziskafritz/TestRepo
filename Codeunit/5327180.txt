OBJECT Codeunit 5327180 ACF Events
{
  OBJECT-PROPERTIES
  {
    Date=16.12.14;
    Time=17:47:12;
    Modified=Yes;
    Version List=ACF3.02.03,HME1424,T0080;
  }
  PROPERTIES
  {
    SingleInstance=Yes;
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Mgt@1000000009 : Codeunit 5327126;
      Text001@1000000010 : TextConst 'DEU=Die individuelle Web Page Tabellenrelation %1 existiert nicht.;ENU=Custom Web Page Table relation %1 does not exist.';
      Text002@1000000008 : TextConst 'DEU=Der Datensatz wurde gespeichert.;ENU=Data saved.';
      Text003@1000000007 : TextConst 'DEU=Der Zieldatensatz wurde in der CustomWebPageRelation nicht ge”ffnet;ENU=Destination Record was not opened in CustomWebPageRelation.';
      Text004@1000000006 : TextConst 'DEU=Der Funktionscode %1 existiert nicht.;ENU=Function Code %1 does not exist.';
      Text005@1000000005 : TextConst 'DEU=Das Passwort muss mindestens eine L„nge von 8 Zeichen haben.;ENU=Password length must be at least 8 signs.';
      Text006@1000000004 : TextConst 'DEU=M”chten Sie den Datensatz %1 %2 l”schen?;ENU=Do you want to delete record %1 %2?';
      Text007@1000000001 : TextConst 'DEU=M”chten Sie den Datensatz "%1" in "%2" umbenennen?;ENU=Do you want to rename the record "%1" in "%2?';
      Text008@1000000000 : TextConst 'DEU=M”chten Sie den Datensatz umbenennen?;ENU=Do you want to rename this record?';
      Text009@1000000011 : TextConst 'DEU=Das Passwort entspricht nicht den Sicherheitsrichtlinien. Das Kennwort muss mindestens 4 Zeichen enthalten.;ENU=The password does not match the security policy. It must contain at least 4 signs.';
      Text010@1000000002 : TextConst 'DEU=Der Datensatz wurde nicht gespeichert.;ENU=Data not saved.';
      Text011@5326062 : TextConst 'DEU=%1 Datens„tze in Tabelle %2 gefunden.\Filter: %3;ENU=%1 records found in table %2.\Filter: %3';
      Style@5326086 : Codeunit 5327125;
      WebPageElement@5326084 : Record 5327101;
      WebPageElementField@5326083 : Record 5327103;
      RecRef@5326082 : RecordRef;
      FldRef@5326081 : FieldRef;
      FldNo@5326080 : Integer;
      xRecRef@5326079 : RecordRef;
      xFldRef@5326078 : FieldRef;
      xFldNo@5326077 : Integer;
      WindowRecRef@5326076 : RecordRef;
      DestWebPageElement@5326075 : Record 5327101;
      DestRecRef@5326074 : RecordRef;
      CustomTableRelationRecRef@5326073 : RecordRef;
      FunctionCode@5326072 : Code[20];
      RelationCode@5326071 : Code[20];
      FieldName@5326070 : Text[50];
      TableNumber@5326068 : Integer;
      ClosedByNAV@5326067 : Boolean;
      "Field#1"@5326066 : Integer;
      "Field#2"@5326065 : Integer;
      LanguageFilter@5326064 : Record 8;
      CSS@5326063 : Text[1024];
      WebUser@5326069 : Record 5327140;
      Text012@5326088 : TextConst 'DEU=Unterschrift;ENU=Signature';
      Text013@5326087 : TextConst 'DEU=Speichern;ENU=Save';
      Text014@5326085 : TextConst 'DEU=L”schen;ENU=Clear';
      FPCGeneralSetup@1000000003 : Record 50055;
      Text050@1000000051 : TextConst 'DEU=Sie k”nnen die Zeile nicht stornieren, wenn es andere RHENUS Zeilen. Stornieren Sie die gesamte Auftrag.;ENU=You cannot cancel this line if there are other RHENUS lines. Cancel the whole order.';
      Text80018@1000000050 : TextConst 'DEU=Reklamation wurde erfolgreich erstellt!';
      Text80000@1000000049 : TextConst 'DEU=Soll %1 %2 wirklich freigegeben werden?;ENU=Do you want to release %1 %2?';
      Text80001@1000000048 : TextConst 'DEU=Wollen Sie %1 %2 wieder ”ffnen?;ENU=Do you want to re-open %1 %2?';
      Text80002@1000000047 : TextConst 'DEU=Soll %1 %2 wirklich storniert werden?;ENU=Do you want to cancel %1 %2?';
      Text80003@1000000046 : TextConst 'ENU=Do you want to create DHL shipment %1 %2?';
      Text80004@1000000045 : TextConst 'DEU=Soll %1 %2 wirklich DHL Versand stornieren werden?;ENU=Do you want to cancel DHL shipment %1 %2?';
      Text80005@1000000044 : TextConst 'DEU=Wollen Sie eine Reklamationsanfrage - Retoure fr den Auftrag %1 erstellen?;ENU=Do you want to run return process?';
      Text80006@1000000043 : TextConst 'DEU=Wollen Sie eine Reklamationsanfrage - Kulanz fr den Auftrag %1 erstellen?';
      Text80007@1000000042 : TextConst 'DEU=Neue Verkaufsreklamation %1 ist erstellt. Wollen Sie diese bearbeiten?;ENU=New Return Order was created.';
      Text80008@1000000041 : TextConst 'DEU=Wollen Sie eine Reklamationsanfrage - Storno fr den Auftrag %1 erstellen?';
      Text80009@1000000040 : TextConst 'DEU=Retourenlabels k”nnen nur fr Retouren / Umtausch Reklamationen verschickt werden!;ENU=Return labels only can be sent for return / change return orders!';
      Text80010@1000000039 : TextConst 'DEU=Die Retourenlabel wurden verschickt!';
      Text80011@1000000038 : TextConst 'DEU=Wollen Sie eine Reklamationsanfrage - Ersatzteil fr den Auftrag %1 erstellen?';
      Text80012@1000000037 : TextConst 'DEU=Wollen Sie einen Vermeidungsrabatt berechnen?';
      Text80013@1000000036 : TextConst 'DEU=Der Auftrag %1 ist abgeschlossen und kann nicht storniert werden. Wollen Sie eine Retoure erstellen?';
      Text80014@1000000035 : TextConst 'DEU=Wollen Sie eine Reklamationsanfrage - Umtausch fr den Auftrag %1 erstellen?';
      Text80015@1000000034 : TextConst 'DEU=Wollen Sie einen Umtausch Folgeauftrag fr Reklamation %1 erstellen?;ENU=Do you want to create a spare part order for return order %1?';
      Text80016@1000000033 : TextConst 'DEU=Die E-Mail Reklamationsbest„tigung wurde versendet!;ENU=E-Mail return order confirmation was send!';
      Text80017@1000000032 : TextConst 'DEU=Wollen Sie eine Reklamatione(n) zu diesem Auftrag %1 erstellen?;ENU=Do you want to create a return order to sales order %1?';
      Text80019@1000000031 : TextConst 'DEU=Wollen Sie die Dropship Mail (Labels) erneut senden?;ENU=Do you want to resend dropship email?';
      Error001@1000000030 : TextConst 'DEU=Sie haben keine Berechtigung %1 zu „ndern!;ENU=You have no permission to change% 1!';
      Error002@1000000029 : TextConst 'DEU=Verkaufsbemerkungszeilen k”nnen nicht gel”scht werden!;ENU=Sales comment lines can not be deleted!';
      Error003@1000000028 : TextConst 'DEU=Keine Reklamation vorhanden!;ENU=No Return Order to open!';
      Error004@1000000027 : TextConst 'DEU=DHL Shipment Nr. darf nicht ge„ndert werden!;ENU=You cannot change the DHL Shipment No.!';
      Error005@1000000026 : TextConst 'DEU=Hersteller SKU darf nicht ge„ndert werden!;ENU=You cannot change the vendor sku!';
      Text80020@1000000025 : TextConst 'DEU=Umtauschfolgeauftrag fr %1 wurde erstellt!;ENU=Change Return Order for Return Order %1 was created!';
      Error006@1000000024 : TextConst 'DEU=Sie haben keine Berechtigung Datens„tze zu l”schen.;ENU=You do not have permission to delete datasets.';
      GOBText001@1000000023 : TextConst 'DEU=Zeile %1:\\Sie k”nnen diese Auftrag nicht mehr automatisiert ber die Rhenus Schnittstelle stornieren.\ Sie mssen bei Rhenus erfragen, ob eine Stornierung weiterhin m”glich ist. Wollen Sie fortfahren?;ENU=Line %1:\\You can''t cancel this order via Rhenus interface. You have to check if a cancelation is still possible. Continue?';
      GOBText002@1000000022 : TextConst 'DEU=Zeile %2:\\Sie k”nnen diese Position (%1) nicht mehr automatisiert ber das DocData Interface stornieren.\ Sie mssen bei DocData erfragen, ob eine Stornierung weiterhin m”glich ist. Wollen Sie fortfahren?;ENU=Line %2:\\You can''t cancel this order line (%1) via DocData interface. You have to check if a cancelation is still possible. Continue?';
      GOBText003@1000000021 : TextConst 'DEU=Zeile %1:\\Sie sollten nur ein Drop Shipment stornieren wenn Sie bereits eine Best„tigung des Herstellers per E-Mail/Phone erhalten haben.\Haben Sie diese erhalten und m”chten Sie jetzt stornieren?;ENU=Line %1:\\You should only cancel this drop shipment if you have received a confirmation from the manufacturer/supplier.\Did you receive it? Do you really want to cancel now?';
      Text80021@1000000020 : TextConst 'DEU=Lieferung gebucht!;ENU=Shipment posted!';
      Text80022@1000000019 : TextConst 'DEU=Wollen Sie die Rechnung %1 erneut versenden?;ENU=Do you want to resend invoice %1?';
      Text80023@1000000018 : TextConst 'DEU=Rechnung wird verschickt!;ENU=Invoice will be sent!';
      Error007@1000000017 : TextConst 'DEU=Sie haben keine Berechtigung Lieferungen zu buchen.;ENU=You do not have permission to post shipments.';
      Text80024@1000000016 : TextConst 'DEU=Die E-Mail Umtauschfolgeauftragsbest„tigung wurde versendet!;ENU=E-Mail change order was send!';
      Text80025@1000000015 : TextConst 'DEU=Lieferadresse aktualisiert!;ENU=Shiptment Address updated!';
      GOBError006@1000000014 : TextConst 'DEU=Abbruch durch Benutzer!';
      Confirm001@1000000013 : TextConst 'DEU=Wurde manuell bei Rhenus oder DocData geprft, ob ein Update der Lieferadresse durchgefhrt werden kann?';
      Error008@1000000012 : TextConst 'DEU=Verkaufsbemerkungszeilen k”nnen nicht ver„ndert werden!;ENU=Sales comment lines can not be changed!';
      "***"@1000000053 : Integer;
      Customer@1000000052 : Record 18;
      "*HME**************************"@1000000054 : Integer;
      SalesHeaderArchive@1000000058 : Record 5107;
      PPM_Functions@1000000055 : Codeunit 50146;
      "**HME*************************"@1000000056 : TextConst;
      TextHME001@1000000057 : TextConst 'ENU=Do you want to process the customerïs complaint request for sales order %1?';

    PROCEDURE GetModuleName@1000000022() ModuleName : Text[30];
    BEGIN
      EXIT('Main Events Codeunit');
    END;

    PROCEDURE SETVALUES1@5326088(pWebPageElement@5326081 : Record 5327101;pWebPageElementField@5326080 : Record 5327103;VAR pRecRef@5326079 : RecordRef;pFldRef@5326078 : FieldRef;pFldNo@5326062 : Integer;pxRecRef@5326077 : RecordRef;pxFldRef@5326076 : FieldRef;pxFldNo@5326063 : Integer;pWindowRecRef@5326075 : RecordRef;pDestWebPageElement@5326074 : Record 5327101;pDestRecRef@5326073 : RecordRef;pCustomTableRelationRecRef@5326072 : RecordRef;pFunctionCode@5326071 : Code[20];pRelationCode@5326070 : Code[20];pFieldName@5326069 : Text[50];pTableNumber@5326067 : Integer);
    BEGIN
      // Set global variables
      WebPageElement := pWebPageElement;
      WebPageElementField := pWebPageElementField;
      RecRef := pRecRef;
      FldRef := pFldRef;
      FldNo := pFldNo;
      xRecRef := pxRecRef;
      xFldRef := pxFldRef;
      xFldNo := pxFldNo;
      WindowRecRef := pWindowRecRef;
      DestWebPageElement := pDestWebPageElement;
      DestRecRef := pDestRecRef;
      CustomTableRelationRecRef := pCustomTableRelationRecRef;
      FunctionCode := pFunctionCode;
      RelationCode := pRelationCode;
      FieldName := pFieldName;
      TableNumber := pTableNumber;

      IF pFldNo<>0 THEN FldRef := RecRef.FIELD(pFldNo);
      IF pxFldNo<>0 THEN xFldRef := xRecRef.FIELD(pxFldNo);

      WebUser.GET(Mgt.GetACFUser);
    END;

    PROCEDURE SETVALUES2@5326085(pClosedByNAV@5326062 : Boolean;pInitStyle@5326066 : Boolean);
    BEGIN
      // Set global variables
      ClosedByNAV := pClosedByNAV;
      IF pInitStyle THEN
        Style.Init(WebPageElement);
    END;

    PROCEDURE GETVALUES@5326089(VAR pRecRef@5326079 : RecordRef;VAR pFldRef@5326078 : FieldRef;VAR pDestRecRef@5326073 : RecordRef;VAR "pField#1"@5326065 : Integer;VAR "pField#2"@5326064 : Integer;VAR CSS@5326062 : Text[1024]);
    BEGIN
      // Return global variables
      pRecRef := RecRef;
      pFldRef := FldRef;
      pDestRecRef := DestRecRef;
      "pField#1" := "Field#1";
      "pField#2" := "Field#2";
      IF Style.IsInit THEN
        CSS := Style.GetStyle;
    END;

    LOCAL PROCEDURE "-- Main Events"@5326091();
    BEGIN
    END;

    PROCEDURE OnLogin@1000000006() LoginAllowed : Boolean;
    BEGIN
      // Called on user login. Login can be cancelled here by return value FALSE.
      // As it is a synchronious call, ACF Management messages like Mgt.MESSAGE cannot be used here.
      // Use ERROR-Message instead.

      // Example:
      //if Mgt.GetACFUser = 'WEBUSER' then
      //  error('Individual login error message.');

      EXIT(TRUE);
    END;

    PROCEDURE OnLogout@1000000001(UserAction@1000000002 : 'RefreshedBrowser,ClosedBrowser,Logout');
    BEGIN
      // Called on browser close, browser refresh oder on logout.
      // Is asyncronious call, so ACF Management messages can be used here in case of logout.
      // Do not use interactions on browser close or refresh, because message is not transported into browser and is hold in NAV Server.
      // Logout cannot be cancelled.

      CASE UserAction OF
        UserAction::RefreshedBrowser:
          BEGIN
            //Do not use ACF Management messages here
          END;
        UserAction::ClosedBrowser:
          BEGIN
            //Do not use ACF Management messages here
          END;
        UserAction::Logout:
          BEGIN
            //Example:
            //IF Mgt.GetACFUser = 'WEBUSER' THEN
            //    Mgt.MESSAGE('Goodbye.');
          END;
      END;
    END;

    PROCEDURE OnLoadEnvironment@1000000008();
    VAR
      WebUser@1000000000 : Record 5327140;
      Menu@5326062 : Record 5327130;
      SrcRecRef@1000000003 : RecordRef;
      locAnveoAccessPage@1000000002 : Record 50129;
      RecRef2@1000000001 : RecordRef;
    BEGIN
      // Environment loaded
      WebUser.GET(Mgt.GetACFUser);

      // Open Web Page that is defined in Main Menu of Web User
      Menu.GET(Menu.Type::"Main Menu", WebUser."Main Menu");
      IF Menu."Open Web Page on Login" <> '' THEN BEGIN
        Mgt.OpenWebPage(Menu."Open Web Page on Login",FALSE,RecRef,Menu."Open Web Page Cust. Table Rel.");
      END;

      // ** Examples **

      // Open Website depending on User Language
      //IF WebUser."User Language" = 'DEU' THEN
      //  Mgt.OpenURL('www.NAVwebclient.com','Anveo NAVwebclient.com',FALSE,1024,600)
      //ELSE
      //  Mgt.OpenURL('www.NAVwebclient.com','Anveo NAVwebclient.de',FALSE,1024,600);

      // Open Web Page depending on Relation Type
      //IF (WebUser."Relation Type" = WebUser."Relation Type"::Customer) AND (WebUser."Relation Code"<>'') THEN
      //  Mgt.OpenWebPage('CP_CUSTOMER_CARD',FALSE,RecRef,'');

      IF (WebUser."Relation Type" = WebUser."Relation Type"::Customer) AND (WebUser."Relation Code"<>'') THEN BEGIN
        SrcRecRef.OPEN(DATABASE::Customer);
        Mgt.OpenWebPage('CP_CUSTOMER_CARD',FALSE,SrcRecRef,'');
      END;

      locAnveoAccessPage.RESET;
      locAnveoAccessPage.SETRANGE(User,Mgt.GetACFUser);
      IF locAnveoAccessPage.FINDFIRST THEN BEGIN
        RecRef2.GETTABLE(locAnveoAccessPage);
        Mgt.OpenWebPage('FP_ACCESS_PAGE',FALSE,RecRef2,'');
      END ELSE BEGIN
        locAnveoAccessPage.INIT;
        locAnveoAccessPage.User := Mgt.GetACFUser;
        locAnveoAccessPage.INSERT;
        RecRef2.GETTABLE(locAnveoAccessPage);
        Mgt.OpenWebPage('FP_ACCESS_PAGE',FALSE,RecRef2,'');
      END;
    END;

    PROCEDURE ReadSecurityFilter@1000000012(VAR RecRef@1000000000 : RecordRef);
    VAR
      FldRef@1000000002 : FieldRef;
      WebUser@1000000001 : Record 5327140;
      SalesHeader@5326063 : Record 36;
      SalesLine@5326062 : Record 37;
    BEGIN
      // Set Security Filters (in Filtergroup 100)
      // Example: If user has main menu with a relation to Salesperson/Purchaser, filter Salesperson Code to used tables
      WebUser.GET(Mgt.GetACFUser);
      Mgt.Log('ReadSecurityFilter', STRSUBSTNO('Table:%1', RecRef.NUMBER));

      IF WebUser."Relation Type" = WebUser."Relation Type"::Customer THEN BEGIN
        CASE RecRef.NUMBER OF
          DATABASE::Customer:                 FldRef := RecRef.FIELD(1);
          DATABASE::"Sales Header":           FldRef := RecRef.FIELD(2);
          DATABASE::"Sales Line":             BEGIN
            // Test if current list is a sub element of a Sales Header. If yes, test Sales Header and show all related Sales Lines
            RecRef.FILTERGROUP(102);
            FldRef := RecRef.FIELD(SalesLine.FIELDNO("Document No."));
            Mgt.Log('ReadSecurityFilter', STRSUBSTNO('SalesLine.GETFILTER:%1', FldRef.GETFILTER));
            IF FldRef.GETFILTER <> '' THEN BEGIN
              SalesHeader.SETFILTER("No.",FldRef.GETFILTER);
              FldRef := RecRef.FIELD(SalesLine.FIELDNO("Document Type"));
              SalesHeader.SETFILTER("Document Type",FldRef.GETFILTER);
              SalesHeader.FINDFIRST;
              Mgt.Log('ReadSecurityFilter', STRSUBSTNO('SalesHeader found:%1 %2', SalesHeader."Document Type", SalesHeader."No."));
              RecRef.FILTERGROUP(100);
              FldRef := RecRef.FIELD(SalesLine.FIELDNO("Line No."));
              IF SalesHeader."Sell-to Customer No." <> WebUser."Relation Code" THEN BEGIN
                FldRef.SETRANGE(0);
                Mgt.Log('ReadSecurityFilter', 'END SalesHeader."Sell-to Customer No." is different.');
                EXIT;
              END;
              FldRef := RecRef.FIELD(SalesLine.FIELDNO("Document Type"));
              FldRef.SETFILTER(FORMAT(SalesHeader."Document Type"));
              FldRef := RecRef.FIELD(SalesLine.FIELDNO("Document No."));
              FldRef.SETFILTER(SalesHeader."No.");
              // Delete existing "Sell-to Customer No." Filter in Relation-Filtergroup
              RecRef.FILTERGROUP(102);
              FldRef := RecRef.FIELD(SalesLine.FIELDNO("Sell-to Customer No."));
              FldRef.SETRANGE;
              Mgt.Log('ReadSecurityFilter', 'END SalesHeader."Sell-to Customer No." is ok. RecRef.GETFILTERS:'+RecRef.GETFILTERS);
              EXIT;
            END;
            // Delete existing Line No. filter, if no Sales Header is found
            FldRef := RecRef.FIELD(SalesLine.FIELDNO("Line No."));
            FldRef.SETRANGE();
            // Sales line list is no subelement of a Sales Header, filter to Sell-to Customer No.
            FldRef := RecRef.FIELD(SalesLine.FIELDNO("Sell-to Customer No."));
          END;
          DATABASE::"Sales Shipment Header":  FldRef := RecRef.FIELD(2);
          DATABASE::"Sales Shipment Line":    FldRef := RecRef.FIELD(2);
          DATABASE::"Sales Invoice Header":   FldRef := RecRef.FIELD(2);
          DATABASE::"Sales Invoice Line":     FldRef := RecRef.FIELD(2);
          DATABASE::"Sales Cr.Memo Header":   FldRef := RecRef.FIELD(2);
          DATABASE::"Sales Cr.Memo Line":     FldRef := RecRef.FIELD(2);
          DATABASE::"Cust. Ledger Entry":     FldRef := RecRef.FIELD(3);
        ELSE
          EXIT;
        END;

        //If a specific Relation Code is not set, use Login name for filter
        IF WebUser."Relation Code" = '' THEN
          FldRef.SETRANGE(WebUser."Web User")
        ELSE
          FldRef.SETRANGE(WebUser."Relation Code");
      END;


      IF WebUser."Relation Type" = WebUser."Relation Type"::Vendor THEN BEGIN
        CASE RecRef.NUMBER OF
          DATABASE::Vendor:                   FldRef := RecRef.FIELD(1);
          DATABASE::Item:                     FldRef := RecRef.FIELD(31);
          DATABASE::"Vendor Ledger Entry":    FldRef := RecRef.FIELD(3);
          DATABASE::"Purchase Header":        FldRef := RecRef.FIELD(2);
          DATABASE::"Purch. Rcpt. Header":    FldRef := RecRef.FIELD(2);
          DATABASE::"Purch. Inv. Header":     FldRef := RecRef.FIELD(2);
          DATABASE::"Purch. Cr. Memo Hdr.":   FldRef := RecRef.FIELD(2);
          DATABASE::"Vendor Bank Account":    FldRef := RecRef.FIELD(1);
          DATABASE::"Default Dimension":      FldRef := RecRef.FIELD(2);
          DATABASE::"Purchase Header Archive":FldRef := RecRef.FIELD(2);
          DATABASE::"Item Cross Reference":   FldRef := RecRef.FIELD(5);
          DATABASE::"Nonstock Item":          FldRef := RecRef.FIELD(3);
          DATABASE::"Return Shipment Header": FldRef := RecRef.FIELD(2);
          DATABASE::"Purchase Price":         FldRef := RecRef.FIELD(2);
          DATABASE::"Purchase Line Discount": FldRef := RecRef.FIELD(2);
        ELSE
          EXIT;
        END;

        //If a specific Relation Code is not set, use Login name for filter
        IF WebUser."Relation Code" = '' THEN
          FldRef.SETRANGE(WebUser."Web User")
        ELSE
          FldRef.SETRANGE(WebUser."Relation Code");
      END;


      IF WebUser."Relation Type" = WebUser."Relation Type"::"Salesperson/Purchaser" THEN BEGIN
        CASE RecRef.NUMBER OF
          DATABASE::"Salesperson/Purchaser":  FldRef := RecRef.FIELD(1);
          DATABASE::Customer:                 FldRef := RecRef.FIELD(29);
          DATABASE::"Sales Header":           FldRef := RecRef.FIELD(43);
          DATABASE::Contact:                  FldRef := RecRef.FIELD(29);
        ELSE
          EXIT;
        END;

        //If a specific Relation Code is not set, use Login name for filter
        IF WebUser."Relation Code" = '' THEN
          FldRef.SETRANGE(WebUser."Web User")
        ELSE
          FldRef.SETRANGE(WebUser."Relation Code");
      END;
    END;

    PROCEDURE CheckPassword@1000000020(NewPassword@1000000000 : Text[32]) IsOK : Boolean;
    BEGIN
      // Test if password matches security policy
      // Return false, if password does not match policy.
      EXIT(STRLEN(NewPassword)>=4);
    END;

    PROCEDURE TestPassword@1000000023(NewPassword@1000000000 : Text[32]);
    BEGIN
      // Uses CheckPassword function to test password quality.
      // If not, show error message.
      IF NOT CheckPassword(NewPassword) THEN ERROR(Text009);
    END;

    PROCEDURE GetLanguageFilter@1000000017(VAR LanguageFilter@5326062 : Record 8);
    VAR
      Setup@5326063 : Record 5327160;
    BEGIN
      // Sets filter on Language table to show only languages that are supported by database
      Setup.GET();
      IF Setup."Language Filter" <> '' THEN
        LanguageFilter.SETFILTER(Code, Setup."Language Filter");

      //LanguageFilter.SETFILTER(Code,'DEU|ENU');
    END;

    LOCAL PROCEDURE "-- Events"@5326064();
    BEGIN
    END;

    PROCEDURE OnBeforeLoad@1000000003();
    VAR
      FldRef@1000000002 : FieldRef;
      locAnveoAccessPage@1000000001 : Record 50129;
      locSalesHeaderArch@1000000000 : Record 5107;
    BEGIN
      // Called before loading data for a Web Page Element
      // This event is synchronious call, Web Mangement messages cannot be used here.
      // Useful for initial values for temporary data
      // TEST: Attention: Filter set here gets lost on reload on Web Pages of type list. Use CustomWebPageRelation instead.

      IF WebPageElement."Web Page Code" = 'FP_ACCESS_PAGE' THEN BEGIN
        locAnveoAccessPage.RESET;
        locAnveoAccessPage.SETRANGE(User,Mgt.GetACFUser);
        IF locAnveoAccessPage.FINDFIRST THEN BEGIN
          RecRef.GETTABLE(locAnveoAccessPage);
          Mgt.OpenWebPage('FP_ACCESS_PAGE',FALSE,RecRef,'');
        END ELSE BEGIN
          locAnveoAccessPage.INIT;
          locAnveoAccessPage.User := Mgt.GetACFUser;
          locAnveoAccessPage.INSERT;
          RecRef.GETTABLE(locAnveoAccessPage);
          Mgt.OpenWebPage('FP_ACCESS_PAGE',FALSE,RecRef,'');
        END;
      END;
    END;

    PROCEDURE OnAfterGetField@1000000013() ShowValue : Boolean;
    VAR
      locSalesLine@1000000021 : Record 37;
      locOrderStatusDescription@1000000020 : Text[50];
      locOrderStatus@1000000019 : Code[10];
      locSalesLineArch@1000000018 : Record 5108;
      locPurchaseHeader@1000000017 : Record 38;
      locPurchaseLine@1000000016 : Record 39;
      SalesHeader_l@1000000015 : Record 36;
      Customer_l@1000000014 : Record 18;
      Vendor_l@1000000013 : Record 23;
      Contact_l@1000000012 : Record 5050;
      Item_l@1000000011 : Record 27;
      locSalesCommentLine@1000000010 : Record 44;
      LineStatus_l@1000000009 : Record 50021;
      PurchLineArch_l@1000000008 : Record 5110;
      SalesLineArch_l@1000000007 : Record 5108;
      locFPCManagement@1000000006 : Codeunit 50003;
      locString@1000000005 : Text[250];
      SalesLine_l@1000000004 : Record 37;
      PurchLine_l@1000000003 : Record 39;
      BillPayTrans@1000000002 : Record 50025;
      SalesHeaderArch@1000000001 : Record 5107;
      ReturnReason@1000000000 : Record 6635;
    BEGIN
      // This event is called after a field is loaded from (temporary) record.
      // It can be modified here before sending it to the user.
      // Useful for:
      // - Getting data not saved in phys. record but from table functions (eg. "Contact Profile Anweser".Question)
      // - Change of Style (Anveo Web Desk) like colors and other field attributes
      // - Enabling/Disabling fields to change the layout (Anveo Mobile lists)

      ShowValue := TRUE;

      CASE RecRef.NUMBER OF
        DATABASE::"Sales Line": BEGIN
          RecRef.SETTABLE(locSalesLine);
          IF FldRef.NUMBER = 75322 THEN
            FldRef.VALUE := locSalesLine.AnveoOrderLineStatus();

          IF WebPageElement."Web Page Code" = 'FP_SHP_DELAY_LIST' THEN
            CASE FldRef.NUMBER OF
              8: BEGIN
                IF SalesHeader_l.GET(locSalesLine."Document Type", locSalesLine."Document No.") THEN BEGIN
                  FldRef.VALUE := SalesHeader_l."Payment Method Code";
                END;
              END;
              11: BEGIN
                IF SalesHeader_l.GET(locSalesLine."Document Type", locSalesLine."Document No.") THEN BEGIN
                  FldRef.VALUE := SalesHeader_l."Sell-to Customer Name";
                END;
              END;
              5708: BEGIN
                IF Customer_l.GET(locSalesLine."Sell-to Customer No.") THEN BEGIN
                  FldRef.VALUE := Customer_l."Phone No.";
                END;
              END;
              50005: BEGIN
                IF Customer_l.GET(locSalesLine."Sell-to Customer No.") THEN BEGIN
                  FldRef.VALUE := Customer_l."E-Mail";
                END;
              END;
              75328: BEGIN
                CLEAR(Item_l);
                CLEAR(Vendor_l);
                CLEAR(Contact_l);

                IF Item_l.GET(locSalesLine."No.") THEN
                  IF Vendor_l.GET(Item_l."Vendor No.") THEN
                    IF Contact_l.GET(Vendor_l."Primary Contact No. (Direct)") THEN ;

                FldRef.VALUE := Contact_l."E-Mail";
              END;
              75329: BEGIN
                CLEAR(Item_l);
                CLEAR(Vendor_l);
                CLEAR(Contact_l);

                IF Item_l.GET(locSalesLine."No.") THEN
                  IF Vendor_l.GET(Item_l."Vendor No.") THEN
                    IF Contact_l.GET(Vendor_l."Primary Contact No. (Direct)") THEN ;

                FldRef.VALUE := Contact_l."Phone No.";
              END;
            END;

          IF WebPageElement."Web Page Code" <> 'FP_SHP_DELAY_LIST' THEN BEGIN
            IF FldRef.NUMBER = 75328 THEN BEGIN
              IF locSalesLine."Special Order" THEN BEGIN
                IF locPurchaseHeader.GET(locPurchaseHeader."Document Type"::Order,locSalesLine."Special Order Purchase No.") THEN
                  FldRef.VALUE := locPurchaseHeader."Phone No.";
              END;
              IF locSalesLine."Drop Shipment" THEN BEGIN
                IF locPurchaseHeader.GET(locPurchaseHeader."Document Type"::Order,locSalesLine."Purchase Order No.") THEN
                  FldRef.VALUE := locPurchaseHeader."Phone No.";
              END;
            END;
            IF FldRef.NUMBER = 75329 THEN BEGIN
              IF locSalesLine."Special Order" THEN BEGIN
                IF locPurchaseHeader.GET(locPurchaseHeader."Document Type"::Order,locSalesLine."Special Order Purchase No.") THEN
                  FldRef.VALUE := locPurchaseHeader."E-Mail";
              END;
              IF locSalesLine."Drop Shipment" THEN BEGIN
                IF locPurchaseHeader.GET(locPurchaseHeader."Document Type"::Order,locSalesLine."Purchase Order No.") THEN
                  FldRef.VALUE := locPurchaseHeader."E-Mail";
              END;
            END;
            IF FldRef.NUMBER = 50004 THEN BEGIN
              IF locSalesLine."Special Order" THEN BEGIN
                FldRef.VALUE := locSalesLine."Special Order Purchase No.";
              END;
              IF locSalesLine."Drop Shipment" THEN BEGIN
                FldRef.VALUE := locSalesLine."Purchase Order No.";
              END;
            END;
          END;
            IF FldRef.NUMBER = 50056 THEN BEGIN
              PurchLine_l.SETCURRENTKEY("Order No.","Order Line No.");
              PurchLine_l.SETRANGE("Order No.", locSalesLine."Document No.");
              PurchLine_l.SETFILTER("Order Line No.", '%1', locSalesLine."Line No.");
              IF PurchLine_l.FIND('-') THEN
                FldRef.VALUE := PurchLine_l."Confirmation No.";
            END;
        END;

        DATABASE::"Purchase Line": BEGIN
          RecRef.SETTABLE(locPurchaseLine);
          IF WebPageElement."Web Page Code" = 'FP_PO_CARD' THEN BEGIN

            IF FldRef.NUMBER = 5600 THEN BEGIN
              IF locSalesLine.GET(locSalesLine."Document Type"::Order,
                                  locPurchaseLine."Sales Order No.",
                                  locPurchaseLine."Sales Order Line No.") THEN BEGIN
                FldRef.VALUE := locSalesLine."Max. Order Date";
              END ELSE BEGIN
                locSalesLineArch.SETRANGE("Document Type",locSalesLineArch."Document Type"::Order);
                locSalesLineArch.SETRANGE("Document No.", locPurchaseLine."Order No.");
                locSalesLineArch.SETFILTER("Line No.", '%1', locPurchaseLine."Order Line No.");
                IF locSalesLineArch.FIND('-') THEN BEGIN
                  FldRef.VALUE := locSalesLineArch."Max. Order Date";
                END;
              END;
            END;

            IF FldRef.NUMBER = 50056 THEN BEGIN
              IF locSalesLine.GET(locSalesLine."Document Type"::Order,
                                  locPurchaseLine."Order No.",
                                  locPurchaseLine."Order Line No.") THEN BEGIN
                FldRef.VALUE := FORMAT(locSalesLine."Max. Order Date - Master",0,'<Day,2>.<Month,2>.<Year4>')
              END ELSE BEGIN
                locSalesLineArch.SETRANGE("Document Type",locSalesLineArch."Document Type"::Order);
                locSalesLineArch.SETRANGE("Document No.", locPurchaseLine."Order No.");
                locSalesLineArch.SETFILTER("Line No.", '%1', locPurchaseLine."Order Line No.");
                IF locSalesLineArch.FIND('-') THEN BEGIN
                  FldRef.VALUE := FORMAT(locSalesLineArch."Max. Order Date - Master",0,'<Day,2>.<Month,2>.<Year4>')
                END;
              END;
            END;

            IF FldRef.NUMBER = 75300 THEN BEGIN
              IF locSalesLine.GET(locSalesLine."Document Type"::Order,
                                  locPurchaseLine."Sales Order No.",
                                  locPurchaseLine."Sales Order Line No.") THEN
                FldRef.VALUE := locSalesLine."First Scan";
            END;

            IF FldRef.NUMBER = 75301 THEN BEGIN
              IF locSalesLine.GET(locSalesLine."Document Type"::Order,
                                  locPurchaseLine."Sales Order No.",
                                  locPurchaseLine."Sales Order Line No.") THEN
                FldRef.VALUE := locSalesLine."Latest First Scan";
            END;

            IF FldRef.NUMBER = 75321 THEN BEGIN
              FldRef.VALUE := locPurchaseLine.AnveoOrdeStatusCode();
            END;

            IF FldRef.NUMBER = 75322 THEN BEGIN
              FldRef.VALUE := locPurchaseLine.AnveoOrdeStatusDescription();
            END;

          END;
        END;

        DATABASE::"Sales Header": BEGIN
          RecRef.SETTABLE(SalesHeader_l);
          IF (WebPageElement."Web Page Code" = 'FP_SO_CARD') OR
             (WebPageElement."Web Page Code" = 'FP_SO_STORNO_CARD') OR
             (WebPageElement."Web Page Code" = 'FP_SRO_CARD') THEN

            CASE FldRef.NUMBER OF

              75300: BEGIN
                IF Customer_l.GET(SalesHeader_l."Sell-to Customer No.") THEN BEGIN
                  FldRef.VALUE := Customer_l."Phone No.";
                END;
              END;

              5796: BEGIN
                BillPayTrans.SETCURRENTKEY("Sales Header No.");
                BillPayTrans.SETRANGE("Sales Header No.", SalesHeader_l."External Document No.");
                IF BillPayTrans.FIND('+') THEN BEGIN
                  FldRef.VALUE := BillPayTrans."Invoice Due Date";
                END;
              END;

              75301: BEGIN
                IF Customer_l.GET(SalesHeader_l."Sell-to Customer No.") THEN BEGIN
                  FldRef.VALUE := Customer_l."E-Mail";
                END;
              END;
              // H0302 >>
              {
              75302: BEGIN
                SalesHeader_l.SETCURRENTKEY("No.");
                SalesHeader_l.SETRANGE("No.", SalesHeader_l."External Document No.");
                IF SalesHeader_l.FIND('-') THEN
                  FldRef.VALUE := FORMAT(SalesHeader_l."Extended Bill Pay Due Date",0,'<Day,2>.<Month,2>.<Year4>');
              END;
              }
              // H0302 <<
            END;
        END;

        DATABASE::"Purchase Header": BEGIN
          RecRef.SETTABLE(locPurchaseHeader);
          IF WebPageElement."Web Page Code" = 'FP_PO_CARD' THEN
            CASE FldRef.NUMBER OF
              75300: BEGIN
                IF Vendor_l.GET(locPurchaseHeader."Buy-from Vendor No.") THEN BEGIN
                  FldRef.VALUE := Vendor_l."E-Mail";
                END;
              END;
              75301: BEGIN
                IF Vendor_l.GET(locPurchaseHeader."Buy-from Vendor No.") THEN BEGIN
                  FldRef.VALUE := Vendor_l."Phone No.";
                END;
              END;
            END;
        END;

        DATABASE::Vendor: BEGIN
          RecRef.SETTABLE(Vendor_l);
          IF WebPageElement."Web Page Code" = 'FP_VENDOR_CARD' THEN
            CASE FldRef.NUMBER OF
              102: BEGIN
                IF Contact_l.GET(Vendor_l."Primary Contact No. (Direct)") THEN BEGIN
                  FldRef.VALUE := Contact_l."E-Mail";
                END;
              END;
              9: BEGIN
                IF Contact_l.GET(Vendor_l."Primary Contact No. (Direct)") THEN BEGIN
                  FldRef.VALUE := Contact_l."Phone No.";
                END;
              END;
            END;
        END;

        DATABASE::Item: BEGIN
          RecRef.SETTABLE(Item_l);
          IF WebPageElement."Web Page Code" = 'FP_ITEM_CARD' THEN
            CASE FldRef.NUMBER OF
              5095858: BEGIN
                IF Vendor_l.GET(Item_l."Vendor No.") THEN BEGIN
                  FldRef.VALUE := Vendor_l.Name;
                END;
              END;
            END;
        END;

        DATABASE::"DHL Parcels Status History": BEGIN
          RecRef.SETTABLE(LineStatus_l);
          IF WebPageElement."Web Page Code" = 'FP_LINESTATUS' THEN BEGIN
            CASE FldRef.NUMBER OF
              2: BEGIN
                IF LineStatus_l."Status Drop Shipment" THEN BEGIN
                  FldRef.VALUE := 'DS';
                END ELSE IF LineStatus_l."Status DHL HD" THEN BEGIN
                  FldRef.VALUE := 'DHL HD';
                END ELSE IF LineStatus_l."Status Docdata" THEN BEGIN
                  FldRef.VALUE := 'DocData';
                END ELSE IF LineStatus_l."Rhenus Entry" THEN BEGIN
                  FldRef.VALUE := 'Rhenus';
                END ELSE IF LineStatus_l."DHL Shipment Code" <> '' THEN BEGIN
                  FldRef.VALUE := 'DHL Paket';
                END ELSE BEGIN
                  FldRef.VALUE := '';
                END;
              END;
              4: BEGIN
                IF locSalesLine.GET(LineStatus_l."Document Type",
                     LineStatus_l."Document No.",
                     LineStatus_l."Document Line No.") THEN
                  FldRef.VALUE := locSalesLine."Purchasing Code"
                ELSE
                  FldRef.VALUE := '';

              END;
              27: BEGIN
                IF LineStatus_l."Status Drop Shipment" THEN BEGIN
                  FldRef.VALUE := LineStatus_l."Drop Shipment Status Desc.";
                END ELSE IF LineStatus_l."Status DHL HD" THEN BEGIN
                  FldRef.VALUE := LineStatus_l."DHL HD Status Code";
                END ELSE IF LineStatus_l."Status Docdata" THEN BEGIN
                  FldRef.VALUE := LineStatus_l."Docdate Status Code";
                END ELSE IF LineStatus_l."Rhenus Entry" THEN BEGIN
                  FldRef.VALUE := LineStatus_l."Status Code";
                END ELSE IF LineStatus_l."DHL Shipment Code" <> '' THEN BEGIN
                  LineStatus_l.CALCFIELDS("Status RIC Name");
                  FldRef.VALUE := LineStatus_l."Status RIC Name";
                END ELSE BEGIN
                  FldRef.VALUE := '';
                END;
              END;
              29: BEGIN
                IF LineStatus_l."Status Drop Shipment" THEN BEGIN
                  FldRef.VALUE := '';
                END ELSE IF LineStatus_l."Status DHL HD" THEN BEGIN
                  FldRef.VALUE := LineStatus_l."DHL HD Status Description";
                END ELSE IF LineStatus_l."Status Docdata" THEN BEGIN
                  FldRef.VALUE := LineStatus_l."Docdata Status Description";
                END ELSE IF LineStatus_l."Rhenus Entry" THEN BEGIN
                  LineStatus_l.CALCFIELDS("Rhenus Status Description");
                  FldRef.VALUE := LineStatus_l."Rhenus Status Description";
                END ELSE IF LineStatus_l."DHL Shipment Code" <> '' THEN BEGIN
                  FldRef.VALUE := LineStatus_l."Status Event Name";
                END ELSE BEGIN
                  FldRef.VALUE := '';
                END;
              END;
            END;
          END;
        END;

      // H0233 >>
        DATABASE::"Sales Header Archive": BEGIN
          RecRef.SETTABLE(SalesHeaderArch);
          IF WebPageElement."Web Page Code" = 'FP_SOA_CARD' THEN
            CASE FldRef.NUMBER OF
              5796: BEGIN
                BillPayTrans.SETCURRENTKEY("Sales Header No.");
                BillPayTrans.SETRANGE("Sales Header No.", SalesHeaderArch."External Document No.");
                IF BillPayTrans.FIND('+') THEN
                  FldRef.VALUE := BillPayTrans."Invoice Due Date";
              END;
            END;
          IF WebPageElement."Web Page Code" = 'FP_ARC_RETURN_CARD' THEN
            CASE FldRef.NUMBER OF
              5796: BEGIN
                BillPayTrans.SETCURRENTKEY("Sales Header No.");
                BillPayTrans.SETRANGE("Sales Header No.", SalesHeaderArch."External Document No.");
                IF BillPayTrans.FIND('+') THEN
                  FldRef.VALUE := BillPayTrans."Invoice Due Date";
              END;
              // H0302 >>
              {
              75302: BEGIN
                SalesHeaderArch.SETCURRENTKEY("Document Type","No.","Doc. No. Occurrence","Version No.");
                SalesHeaderArch.SETRANGE("No.", SalesHeaderArch."External Document No.");
                IF SalesHeaderArch.FIND('+') THEN
                  FldRef.VALUE := FORMAT(SalesHeaderArch."Extended Bill Pay Due Date",0,'<Day,2>.<Month,2>.<Year4>');
              END;
              }
              // H0302 <<
            END;

        END;

        DATABASE::"Sales Line Archive": BEGIN
          RecRef.SETTABLE(SalesLineArch_l);
          IF WebPageElement."Web Page Code" = 'FP_SOA_CARD' THEN
            CASE FldRef.NUMBER OF
              50056: BEGIN
                PurchLineArch_l.SETCURRENTKEY("Order No.","Order Line No.");
                PurchLineArch_l.SETRANGE("Order No.", SalesLineArch_l."Document No.");
                PurchLineArch_l.SETFILTER("Order Line No.", '%1', SalesLineArch_l."Line No.");
                IF PurchLineArch_l.FIND('-') THEN
                  FldRef.VALUE := PurchLineArch_l."Confirmation No.";
              END;
            END;
        END;

        DATABASE::"Purchase Line Archive": BEGIN
          RecRef.SETTABLE(PurchLineArch_l);
          IF WebPageElement."Web Page Code" = 'FP_PURACHSE_ARCH' THEN
            CASE FldRef.NUMBER OF
              50056: BEGIN
                SalesLineArch_l.SETRANGE("Document Type",SalesLineArch_l."Document Type"::Order);
                SalesLineArch_l.SETRANGE("Document No.", PurchLineArch_l."Order No.");
                SalesLineArch_l.SETFILTER("Line No.", '%1', PurchLineArch_l."Order Line No.");
                IF SalesLineArch_l.FIND('-') THEN BEGIN
                  FldRef.VALUE := FORMAT(SalesLineArch_l."Max. Order Date - Master",0,'<Day,2>.<Month,2>.<Year4>');
                END ELSE BEGIN
                  SalesLine_l.SETRANGE("Document Type",SalesLine_l."Document Type"::Order);
                  SalesLine_l.SETRANGE("Document No.", PurchLineArch_l."Order No.");
                  SalesLine_l.SETFILTER("Line No.", '%1', PurchLineArch_l."Order Line No.");
                  IF SalesLine_l.FIND('-') THEN BEGIN
                    FldRef.VALUE := FORMAT(SalesLine_l."Max. Order Date - Master",0,'<Day,2>.<Month,2>.<Year4>');
                  END;
                END;
              END;
              50064: BEGIN
                Item_l.SETRANGE("No.", PurchLineArch_l."No.");
                IF Item_l.FIND('-') THEN
                  FldRef.VALUE := Item_l."Vendor Item No.";
              END;
            END;
        END;
      // H0233 <<
      END;
    END;

    PROCEDURE OnAfterGetRecord@1000000019();
    BEGIN
      // Record is loaded and is ready for transport to GUI.
      // Changes of records cannot be made here because record is already processed for GUI representation.
      // Use OnAfterGetField instead.
    END;

    PROCEDURE OnAfterLoad@1000000014();
    BEGIN
      // Called after loading data for a Web Page Element
      // This event is synchronious call, Web Mangement messages cannot be used here.
    END;

    PROCEDURE OnInit@1000000007();
    VAR
      ContAltAdr@1000000003 : Record 5051;
      NewNo@1000000002 : Text[30];
      FldRef@1000000001 : FieldRef;
      locAnveoAccessPage@1000000000 : Record 50129;
    BEGIN
      // OnInit is called if a new record is initialized.
      // Default values can be set here

      //A/P0843
      IF (RecRef.NUMBER = 50129) THEN BEGIN
        RecRef.SETTABLE(locAnveoAccessPage);
        locAnveoAccessPage.INIT;
        locAnveoAccessPage.User := Mgt.GetACFUser;
        IF NOT locAnveoAccessPage.INSERT THEN
          locAnveoAccessPage.MODIFY;
      END;
      //E/P0843
    END;

    PROCEDURE OnBeforeValidate@1000000010() DoValidation : Boolean;
    VAR
      locSalesCommentLine@1000000013 : Record 44;
      locSalesCommentLineArch@1000000012 : Record 5126;
      locFPCManagement@1000000011 : Codeunit 50003;
      locString@1000000010 : Text[250];
      locRecRef@1000000009 : RecordRef;
      locSalesHeader@1000000008 : Record 36;
      locSalesHeaderArch@1000000007 : Record 5107;
      locOrderNo@1000000006 : Code[20];
      RecRef2@1000000005 : RecordRef;
      locCustomer@1000000004 : Record 18;
      locVendor@1000000003 : Record 23;
      locItem@1000000002 : Record 27;
      locPurchHeader@1000000001 : Record 38;
      locPurchHeaderArc@1000000000 : Record 5109;
    BEGIN
      // A value is set to a record, but validation is not done yet. Validation can be cancelled here by return value false.
      // Use input of FlowFields for transportation of input values from GUI to NAV

      // Default
      DoValidation := TRUE;

      // Your code here...

      // Save xRec and CurrFieldNo for usage of Mgt.GetxRec in table triggers
      Mgt.SetxRec(xRecRef,FldRef.NUMBER);

      //A/P0128
      IF (RecRef.NUMBER = 37) AND (FldRef.NUMBER = 50020) THEN BEGIN
        Mgt.MESSAGE(Error004);
        RecRef := xRecRef;
      END;
      //E/P0128
      //A/P0219
      IF (RecRef.NUMBER = 37) AND (FldRef.NUMBER = 75313) THEN BEGIN
        Mgt.MESSAGE(STRSUBSTNO(Error001, FldRef.CAPTION));
        RecRef := xRecRef;
      END;
      //E/P0219
      //A/P0225
      IF (RecRef.NUMBER = 50021) AND (FldRef.NUMBER = 1) THEN BEGIN
          Mgt.MESSAGE(Error004);
          RecRef := xRecRef;
      END;
      //E/P0225

      //A/P0324
      IF (RecRef.NUMBER = 44) AND (FldRef.NUMBER = 75301) THEN BEGIN
        RecRef.SETTABLE(locSalesCommentLine);
        locString := FldRef.VALUE;
        IF (locString <> '') AND (locSalesCommentLine.Comment = '') THEN
          locFPCManagement.InsertCommentLineAnveo(locString,Mgt.GetACFUserOrUSERID,locSalesCommentLine,
                                                  locSalesCommentLineArch);
        RecRef.GETTABLE(locSalesCommentLine);
      END;
      IF (RecRef.NUMBER = 5126) AND (FldRef.NUMBER = 75301) THEN BEGIN
        RecRef.SETTABLE(locSalesCommentLineArch);
        locString := FldRef.VALUE;
        IF (locString <> '') AND (locSalesCommentLineArch.Comment = '') THEN
          locFPCManagement.InsertCommentLineAnveo(locString,Mgt.GetACFUserOrUSERID,locSalesCommentLine,
                                                  locSalesCommentLineArch);
        RecRef.GETTABLE(locSalesCommentLineArch);
      END;

      //E/P0324

      //A/P0843
      IF (RecRef.NUMBER = 50129) THEN BEGIN
        CASE FldRef.NUMBER OF
          2: BEGIN
            locOrderNo := FldRef.VALUE;
            locSalesHeader.RESET;
            locSalesHeader.SETRANGE("Document Type",locSalesHeader."Document Type"::Order);
            locSalesHeader.SETRANGE("No.",locOrderNo);
            IF locSalesHeader.FINDFIRST THEN BEGIN
              RecRef2.GETTABLE(locSalesHeader);
              Mgt.OpenWebPage('FP_SO_CARD', FALSE, RecRef2,'');
            END ELSE BEGIN
              locSalesHeaderArch.RESET;
              locSalesHeaderArch.SETRANGE("Document Type",locSalesHeader."Document Type"::Order);
              locSalesHeaderArch.SETRANGE("No.",locOrderNo);
              IF locSalesHeaderArch.FINDLAST THEN BEGIN
                RecRef2.GETTABLE(locSalesHeaderArch);
                Mgt.OpenWebPage('FP_SOA_CARD', FALSE, RecRef2,'');
              END;
            END;
          END;
          3: BEGIN
            locOrderNo := FldRef.VALUE;
            locSalesHeader.RESET;
            locSalesHeader.SETRANGE("Document Type",locSalesHeader."Document Type"::"Return Order");
            locSalesHeader.SETRANGE("No.",locOrderNo);
            IF locSalesHeader.FINDFIRST THEN BEGIN
              RecRef2.GETTABLE(locSalesHeader);
              Mgt.OpenWebPage('FP_SRO_CARD', FALSE, RecRef2,'');
            END ELSE BEGIN
              locSalesHeaderArch.RESET;
              locSalesHeaderArch.SETRANGE("Document Type",locSalesHeader."Document Type"::"Return Order");
              locSalesHeaderArch.SETRANGE("No.",locOrderNo);
              IF locSalesHeaderArch.FINDLAST THEN BEGIN
                RecRef2.GETTABLE(locSalesHeaderArch);
                Mgt.OpenWebPage('FP_ARC_RETURN_CARD', FALSE, RecRef2,'');
              END;
            END;
          END;
          4: BEGIN
            locOrderNo := FldRef.VALUE;
            locCustomer.RESET;
            locCustomer.SETRANGE("No.",locOrderNo);
            IF locCustomer.FINDFIRST THEN BEGIN
              RecRef2.GETTABLE(locCustomer);
              Mgt.OpenWebPage('FP_CUST_CARD', FALSE, RecRef2,'');
            END;
          END;
          5: BEGIN
            locOrderNo := FldRef.VALUE;
            locItem.RESET;
            locItem.SETRANGE("No.",locOrderNo);
            IF locItem.FINDFIRST THEN BEGIN
              RecRef2.GETTABLE(locItem);
              Mgt.OpenWebPage('FP_ITEM_CARD', FALSE, RecRef2,'');
            END;
          END;
          6: BEGIN
            locOrderNo := FldRef.VALUE;
            locVendor.RESET;
            locVendor.SETRANGE("No.",locOrderNo);
            IF locVendor.FINDFIRST THEN BEGIN
              RecRef2.GETTABLE(locVendor);
              Mgt.OpenWebPage('FP_VENDOR_CARD', FALSE, RecRef2,'');
            END;
          END;
          7: BEGIN
            locOrderNo := FldRef.VALUE;
            locPurchHeader.RESET;
            locPurchHeader.SETRANGE("Document Type",locPurchHeader."Document Type"::Order);
            locPurchHeader.SETRANGE("No.",locOrderNo);
            //A/P0856
            //IF locSalesHeader.FINDFIRST THEN BEGIN
            IF locPurchHeader.FINDFIRST THEN BEGIN
            //A/P0856
              RecRef2.GETTABLE(locPurchHeader);
              Mgt.OpenWebPage('FP_PO_CARD', FALSE, RecRef2,'');
            END ELSE BEGIN
              locPurchHeaderArc.RESET;
              locPurchHeaderArc.SETRANGE("Document Type",locPurchHeader."Document Type"::Order);
              locPurchHeaderArc.SETRANGE("No.",locOrderNo);
              IF locPurchHeaderArc.FINDLAST THEN BEGIN
                RecRef2.GETTABLE(locPurchHeaderArc);
                Mgt.OpenWebPage('FP_PURACHSE_ARCH', FALSE, RecRef2,'');
              END;
            END;
          END;

        END;
      END;
      //E/P0843
    END;

    PROCEDURE OnValidate@1000000000();
    VAR
      FldRef@1000000010 : FieldRef;
      xFldRef@1000000009 : FieldRef;
      UserInteraction@1000000008 : Codeunit 5327180;
      locUserSetup@1000000007 : Record 5327140;
      AnveoChangeLogSetup_l@1000000006 : Record 50099;
      SalesCommentLine_l@1000000005 : Record 44;
      SalesHeader_l@1000000004 : Record 36;
      SalesLine_l@1000000003 : Record 37;
      DocumentType_l@1000000002 : 'Quote,Order,Invoice,Credit Memo,Blanket Order,Return Order,Shipment,Posted Invoice,Posted Credit Memo,Posted Return Receipt';
      DocumentNo_l@1000000001 : Code[20];
      DocumentLineNo_l@1000000000 : Integer;
    BEGIN
      // OnValidate is called on every input made in the GUI
      // Complete reload of web page is done after validating fields.

      IF FldNo<>0 THEN FldRef := RecRef.FIELD(FldNo);
      IF xFldNo<>0 THEN xFldRef := xRecRef.FIELD(xFldNo);

      //S/P0011
      IF (RecRef.NUMBER = 37) AND (FldNo = 75317) THEN BEGIN
        locUserSetup.GET(Mgt.GetACFUser);
        IF NOT locUserSetup."Change Prevention Amount" THEN BEGIN
          Mgt.MESSAGE1(Error001,FldRef.CAPTION);
          RecRef := xRecRef;
        END;
      END;
      IF (RecRef.NUMBER = 5108) AND (FldNo = 75317) THEN BEGIN
        locUserSetup.GET(Mgt.GetACFUser);
        IF NOT locUserSetup."Change Prevention Amount" THEN BEGIN
          Mgt.MESSAGE1(Error001,FldRef.CAPTION);
          RecRef := xRecRef;
        END;
      END;
      //E/P0011


      //A/P0127
      IF (RecRef.NUMBER = 37) AND (FldNo = 75324) THEN BEGIN
        locUserSetup.GET(Mgt.GetACFUser);
        IF NOT locUserSetup."Change Goodwill Amount" THEN BEGIN
          Mgt.MESSAGE1(Error001,FldRef.CAPTION);
          RecRef := xRecRef;
        END;
      END;
      IF (RecRef.NUMBER = 5108) AND (FldNo = 75324) THEN BEGIN
        locUserSetup.GET(Mgt.GetACFUser());
        IF NOT locUserSetup."Change Goodwill Amount" THEN BEGIN
          Mgt.MESSAGE1(Error001,FldRef.CAPTION);
          RecRef := xRecRef;
        END;
      END;
      //E/P0127
      //A/p0150
      IF (RecRef.NUMBER = 50078) AND (FldNo = 77000) THEN BEGIN
        FldRef := RecRef.FIELD(77005);
        FldRef.VALUE := Mgt.GetACFUser();
      END;
      IF (RecRef.NUMBER = 50078) AND (FldNo = 75300) THEN BEGIN
        FldRef := RecRef.FIELD(75302);
        FldRef.VALUE := Mgt.GetACFUser();
      END;

      //E/p0150

      //A/P0320
      IF RecRef.NUMBER IN [36, 37] THEN BEGIN
        IF AnveoChangeLogSetup_l.GET(0, RecRef.NUMBER, FldNo, '') THEN BEGIN
          CASE RecRef.NUMBER OF
            36: BEGIN
              RecRef.SETTABLE(SalesHeader_l);
              DocumentType_l := SalesHeader_l."Document Type";
              DocumentNo_l := SalesHeader_l."No.";
              DocumentNo_l := SalesHeader_l."No.";
              DocumentLineNo_l := 0;
            END;
            37: BEGIN
              RecRef.SETTABLE(SalesLine_l);
              DocumentType_l := SalesLine_l."Document Type";
              //A/P0543
              //DocumentNo_l := SalesLine_l."No.";
              DocumentNo_l := SalesLine_l."Document No.";
              //E/P0543
              DocumentLineNo_l := SalesLine_l."Line No.";
            END;
          END;

          SalesCommentLine_l.LogFieldChange(DocumentType_l, DocumentNo_l, DocumentLineNo_l, FldRef.CAPTION, FORMAT(xFldRef.VALUE),
            FORMAT(FldRef.VALUE), Mgt.GetACFUser, AnveoChangeLogSetup_l."Update Last Modification");
        END;
      END;
      //E/P0320

      //A/P0655
      IF (RecRef.NUMBER = 44) AND (FldNo = 6) THEN BEGIN
        FldRef := RecRef.FIELD(6);
        xFldRef := xRecRef.FIELD(6);
        IF (FldRef.VALUE <> xFldRef.VALUE) AND (FORMAT(xFldRef.VALUE) <> '') THEN BEGIN
          ERROR(Error008);
          RecRef := xRecRef;
        END;
      END;
      //E/P0655

      //A/P0821
      IF (RecRef.NUMBER = 44) AND (FldNo = 75301) THEN BEGIN
        FldRef := RecRef.FIELD(75301);
        xFldRef := xRecRef.FIELD(75301);
        IF (FldRef.VALUE <> xFldRef.VALUE) AND (FORMAT(xFldRef.VALUE) <> '') THEN BEGIN
          ERROR(Error008);
          RecRef := xRecRef;
        END;
      END;

      //E/P0821
    END;

    PROCEDURE CallOnInsertTrigger@1000000016() CallTableOnInsertTrigger : Boolean;
    VAR
      FieldRef@1000000000 : FieldRef;
    BEGIN
      // OnInsert trigger is called when data is saved back to SQL-Server
      // Return value CallTableOnInsertTrigger (boolean) sets whether to call default OnInsert-trigger of table afterwards.
      // Default value is true, always call OnInsert-Trigger of tables
      CallTableOnInsertTrigger:=TRUE;

      //S/P0011
      IF (RecRef.NUMBER = 44) THEN BEGIN
        FieldRef := RecRef.FIELD(75300);
        FieldRef.VALUE := Mgt.GetACFUser();
        FieldRef := RecRef.FIELD(4);
        FieldRef.VALUE := TODAY;
      END;
      //E/P0011

      //A/P0258
      IF (RecRef.NUMBER = 5126) THEN BEGIN
        FieldRef := RecRef.FIELD(75300);
        FieldRef.VALUE := Mgt.GetACFUser();
        FieldRef := RecRef.FIELD(4);
        FieldRef.VALUE := TODAY;
      END;
      //E/P0258
    END;

    PROCEDURE CallOnModifyTrigger@1000000015() CallTableOnModifyTrigger : Boolean;
    VAR
      locSalesHeader@1000000001 : Record 36;
      FieldRef@1000000000 : FieldRef;
    BEGIN
      // OnModify trigger is called when data is saved back to SQL-Server
      // Return value CallTableOnModifyTrigger (boolean) sets whether to call default OnModify-trigger of table afterwards.
      // Default value is true, always call OnModify-Trigger of tables
      CallTableOnModifyTrigger:=TRUE;

      // Set xRec
      Mgt.SetxRec(xRecRef,0);

      //S/P0011
      IF (RecRef.NUMBER = 36) THEN BEGIN
        FieldRef := RecRef.FIELD(75309);
        FieldRef.VALUE := Mgt.GetACFUser();
        FieldRef := RecRef.FIELD(75308);
        FieldRef.VALUE := TODAY;
        RecRef.MODIFY;
      END;
      //E/P0011
      //A/p0150
      IF (RecRef.NUMBER = 50078) THEN BEGIN
        FieldRef := RecRef.FIELD(77013);
        FieldRef.VALUE := Mgt.GetACFUser();
        FieldRef := RecRef.FIELD(77012);
        FieldRef.VALUE := CURRENTDATETIME;
        RecRef.MODIFY;
      END;
      //E/p0150
    END;

    PROCEDURE CallOnDeleteTrigger@1000000033() CallTableOnDeleteTrigger : Boolean;
    VAR
      WDWebUser@1000000000 : Record 5327140;
    BEGIN
      // CallOnDeleteTrigger is called when data is saved back to SQL-Server
      // Return value CallTableOnDeleteTrigger (boolean) sets whether to call default OnDelete-trigger of table afterwards.
      // Default value is true, always call OnDelete-Trigger of tables
      CallTableOnDeleteTrigger:=TRUE;

      // A/P0242
      IF WDWebUser.GET(Mgt.GetACFUser) THEN
        IF NOT WDWebUser."Delete Datasets" THEN
          ERROR(Error006);
      // E/P0242


      //A/P0011
      CASE RecRef.NUMBER OF
        DATABASE::"Sales Comment Line":
          ERROR(Error002);
      END;
      //E/P0011
    END;

    PROCEDURE OnInsertRecord@1000000025() DoInsert : Boolean;
    VAR
      SalesPrice@1000000000 : Record 7002;
    BEGIN
      // A record is inserted. Return value decides if record is inserted.
      // Table OnInsert()-Trigger is called afterwards.
      // On return value FALSE does not insert record.

      // Default
      DoInsert := TRUE;

      CASE RecRef.NUMBER OF
        //DATABASE::"Sales Price": BEGIN
        //  RecRef.SETTABLE(SalesPrice);
        //  DoInsert := SalesPrice."Unit Price" <> 0;
        //END;
      END;
    END;

    PROCEDURE OnModifyRecord@1000000027() DoModify : Boolean;
    VAR
      SalesPrice@1000000000 : Record 7002;
      xSalesPrice@1000000001 : Record 7002;
    BEGIN
      // A record is modified. Return value decides if record is modified.
      // Table OnModify()-Trigger is called afterwards.
      // On return value FALSE does not modify record.

      // Default
      DoModify := TRUE;

      CASE RecRef.NUMBER OF
        // Example
        //DATABASE::"Sales Price": BEGIN
        //  RecRef.SETTABLE(SalesPrice);
        //  xRecRef.SETTABLE(xSalesPrice);
        //  FieldRef := RecRef.FIELD(5);
        //  xFieldRef := xRecRef.FIELD(5);
        //  Mgt.Log('OnModifyRecord', FORMAT(xFieldRef.VALUE) + ' -> ' + FORMAT(FieldRef.VALUE));
        //END;
      END;
    END;

    PROCEDURE OnRenameRecord@1000000011() DoRename : Boolean;
    BEGIN
      // A record is renamed. Return value decides if record is renamed.
      // OnBeforeValidate and OnValidate is called before.
      // Table OnRename()-Trigger is called afterwards.
      // On return value FALSE does not rename record.

      // Rename Dialog: Long version with primary key fields
      DoRename := Mgt.CONFIRM2(Text007,FALSE,xRecRef.GETFILTERS,RecRef.GETFILTERS);
      // Short version
      //DoRename := Mgt.CONFIRM(Text008, FALSE);
    END;

    PROCEDURE OnDeleteRecord@1000000009() DeleteRecord : Boolean;
    BEGIN
      // OnDeleteRecord is called if a record is to be deleted.
      // It is not called if a new, unsaved record is deleted.

      // Example: Do not show Delete-Confirm-Message in Sales Lines
      // IF RecRef.NUMBER = DATABASE::"Sales Line" THEN EXIT(TRUE);

      // Default message:
      DeleteRecord := Mgt.CONFIRM2(Text006, FALSE,RecRef.CAPTION, RecRef.GETFILTERS);
    END;

    PROCEDURE IsWriteBack@1000000018() WriteRecord : Boolean;
    BEGIN
      // IsWriteBack
      // Usage for return value WriteRecord:
      // Web Page WriteBehaviour is ...
      //  * Direct      - IsWriteBack is ignored. Data is always written back to SQL-Server
      //  * Delayed     - IsWriteBack is ignored. Data is written back to SQL-Server on close web page/modify other record/logout/...
      //  * Defined     - IsWriteBack is used for decision whether to write data back to SQL-Server.
      //  * Primary Key - IsWriteBack is ignored. Data is written back to SQL-Server if non-primay key field is validated.
      // Complete reload of web page is done after validating fields.

      IF xFldNo<>0 THEN xFldRef := xRecRef.FIELD(xFldNo);
    END;

    PROCEDURE OnAfterInsertRecord@1000000028();
    BEGIN
      // Called after a record was successfully inserted.

      CASE RecRef.NUMBER OF
        // DATABASE::"Sales Price": MESSAGE(Text002);
      END;
    END;

    PROCEDURE OnAfterModifyRecord@1000000029();
    VAR
      xContact@1000000002 : Record 5050;
      Contact@1000000003 : Record 5050;
    BEGIN
      // Called after a record was successfully modified.

      CASE RecRef.NUMBER OF
        // Example
        //DATABASE::Contact: BEGIN
        //  RecRef.SETTABLE(Contact);
        //  xRecRef.SETTABLE(xContact);
        //  Mgt.Log('ONAFTERMODIFY', 'Modified Contact ' + xContact.Name + ' to ' + Contact.Name);
        //END;
      END;
    END;

    PROCEDURE OnAfterRenameRecord@1000000030();
    VAR
      Contact@1000000002 : Record 5050;
      xContact@1000000003 : Record 5050;
    BEGIN
      // Called after a record was successfully renamed.

      CASE RecRef.NUMBER OF
        // Example
        //DATABASE::Contact: BEGIN
        //  RecRef.SETTABLE(Contact);
        //  xRecRef.SETTABLE(xContact);
        //  Mgt.Log('ONAFTERRENAME', 'Renamed Contact ' + xContact."No." + ' to ' + Contact."No.");
        //END;
      END;
    END;

    PROCEDURE OnAfterDeleteRecord@1000000031();
    VAR
      Contact@1000000001 : Record 5050;
    BEGIN
      // Called after a record was successfully deleted.

      CASE RecRef.NUMBER OF
        // Example
        //DATABASE::Contact: BEGIN
        //  RecRef.SETTABLE(Contact);
        //  Mgt.Log('ONAFTERDELETE', 'Deleted Contact: ' + Contact."No.");
        //END;
      END;

      IF WebPageElement."Element Type" IN [WebPageElement."Element Type"::Card,
                                           WebPageElement."Element Type"::"Card Mobile"] THEN
       Mgt.CloseWebPage();
    END;

    PROCEDURE OnAction@1000000026() CloseWindow : Boolean;
    VAR
      PrintAs@1000000073 : 'PDF,XLS';
      url1@1000000072 : Text[1024];
      url2@1000000071 : Text[1024];
      lrSalesHeader@1000000070 : Record 36;
      lrSalesLine@1000000069 : Record 37;
      lrPurchHeader@1000000068 : Record 38;
      lcuReleaseSalesDoc@1000000067 : Codeunit 414;
      lcuReleasePurchDoc@1000000066 : Codeunit 415;
      lcuDHLMgt@1000000065 : Codeunit 50020;
      ProcessLog@1000000064 : Record 50015;
      lrPurchSetup@1000000063 : Record 312;
      repCopySalesDoc@1000000062 : Report 292;
      cuNoSeriesMgt@1000000061 : Codeunit 396;
      rSalesSetup@1000000060 : Record 311;
      rSalesHeader@1000000059 : Record 36;
      rSalesLine@1000000058 : Record 37;
      rPurchSetup@1000000057 : Record 312;
      lCode@1000000056 : Code[20];
      RecRef2@1000000055 : RecordRef;
      locAnveoSalesOrder@1000000054 : Record 50065;
      CopyDocMgt@1000000053 : Codeunit 6620;
      locSalesHeader@1000000052 : Record 36;
      locSalesHeaderArch@1000000051 : Record 5107;
      NewRecRef@1000000050 : RecordRef;
      rSalesHeaderArchive@1000000049 : Record 5107;
      FPCManagement@1000000048 : Codeunit 50003;
      ChManagement@1000000047 : Codeunit 50093;
      locReturnType@1000000046 : ' ,Return,Change,Fitting,Cancelation,Amiability,Discount';
      locSalesLineArch@1000000045 : Record 5108;
      locPurchaseLine@1000000044 : Record 39;
      DHLStatus@1000000043 : Record 50028;
      RhenusStatus@1000000042 : Record 50016;
      Purchasing@1000000041 : Record 5721;
      DHLStatusHistory@1000000040 : Record 50021;
      locPurchaseHeaderArch@1000000039 : Record 5109;
      CommentLine@1000000038 : Record 97;
      locPurchaseHeader@1000000037 : Record 38;
      AnveoChangeLogSetup_l@1000000036 : Record 50099;
      SalesCommentLine_l@1000000035 : Record 44;
      DocumentType_l@1000000034 : 'Quote,Order,Invoice,Credit Memo,Blanket Order,Return Order,Shipment,Posted Invoice,Posted Credit Memo,Posted Return Receipt';
      DocumentNo_l@1000000033 : Code[20];
      DocumentLineNo_l@1000000032 : Integer;
      locSalesPost@1000000031 : Codeunit 80;
      BatchPostDoc@1000000030 : Record 50043;
      locUserSetup@1000000029 : Record 5327140;
      locShiptoAddress@1000000028 : Record 222;
      locCancelReturnOrderHistory@1000000027 : Record 50037;
      locReturnOrder@1000000026 : Record 36;
      locReturnOrderArch@1000000025 : Record 5107;
      lSalesHeaderArch@1000000024 : Record 5107;
      SalesCommentLineArch_l@1000000023 : Record 5126;
      Version_l@1000000022 : Integer;
      DocNoOcc@1000000021 : Integer;
      locAnveoAccessPage@1000000020 : Record 50129;
      locCustomer@1000000019 : Record 18;
      locItem@1000000018 : Record 27;
      locVendor@1000000017 : Record 23;
      locURL@1000000016 : Text[1024];
      BillPay@1000000015 : Record 50025;
      SalesLine@1000000014 : Record 37;
      PurchaseLine@1000000013 : Record 39;
      SalesLineArc@1000000012 : Record 5108;
      PurchLineArc@1000000011 : Record 5110;
      "****HME***********************"@1000000010 : Integer;
      OrderBalanceL@1000000087 : Record 50196;
      SalesHeader@1000000009 : Record 36;
      SalesLineL@1000000086 : Record 37;
      ExcelBuffer@1000000008 : Record 370;
      ExcelBuffer2@1000000007 : Record 370;
      FileName@1000000006 : Text[250];
      SheetName@1000000005 : Text[30];
      ImportedDay@1000000004 : Integer;
      ImportedMonth@1000000003 : Integer;
      ImportedYear@1000000002 : Integer;
      CommonDlgMgt@1000000001 : Codeunit 412;
      WDMgt@1000000000 : Codeunit 5327126;
      test@1000000078 : TextConst 'DEU=''';
      LocText001@1000000077 : TextConst 'DEU=Cancel Without Interface %1;ENU=Cancel Without Interface %1';
      LocText002@1000000076 : TextConst 'DEU=Cancel Without Interface, Line %1. %2;ENU=Cancel Without Interface, Line %1. %2';
      LocText003@1000000075 : TextConst 'DEU=Umtauschfolgeauftrag %1 wurde erstellt.;ENU=Change Order %1 created.';
      txt001@1000000074 : TextConst 'ENU=Choose your file . . .';
      AddSHFields@1000000079 : Record 50120;
      Customer_l@1000000080 : Record 18;
      FormCustomerUpdate_l@1000000081 : Form 50260;
      LocText004@1000000083 : TextConst 'DEU=M”chten Sie die Felder Name und Name 2 neu erstellen?;ENU=Do you want to recreate the fields Name and Name 2?';
      AddSHAFields@1000000082 : Record 80007;
      SalesInvoiceHeader@1000000085 : Record 112;
      SIIFillLog@1000000084 : Codeunit 50123;
      DoModifyL@1000000088 : Boolean;
      ExternalDocumentNoL@1000000090 : Code[20];
      ComplaintRequestMgt@1000000089 : Codeunit 50313;
    BEGIN
      // OnAction is called when a button in main menu, web page menu or beside a field is pushed.
      // Or in case of a double click event with a function code defined.

      // ** Default FunctionCodes:
      // CLOSE_WEBPAGE()      The user closes a web page by menu. Event "OnBeforeCloseWebPage" is called afterwards.
      // SAVE_RECORD()        If a temporary record exists, it is saved.
      // NEW_RECORD()         A new record is created. OnInit is called afterwards.
      // NEW_RECORD_WEBPAGE() On opening a new window and creating a new record.
      // DELETE_RECORD()      On Record deletion.
      // RELOAD_WEBPAGE()     On Reloading a Web Page by a function code.
      // DELETE_VIRTUAL_TBL() Deletes the data of the virtual table of the current Web Page Element
      // DELETE_ALL_V_TBLS()  Deletes the data of all virtual tables of the current Web Page

      IF FunctionCode = '' THEN EXIT;

      //A/P0320
      IF RecRef.NUMBER IN [36, 37] THEN BEGIN
        IF AnveoChangeLogSetup_l.GET(1, 0, 0, FunctionCode) THEN BEGIN
          CASE RecRef.NUMBER OF
            36: BEGIN
              RecRef.SETTABLE(lrSalesHeader);
              DocumentType_l := lrSalesHeader."Document Type";
              DocumentNo_l := lrSalesHeader."No.";
              DocumentLineNo_l := 0;
            END;
            37: BEGIN
              RecRef.SETTABLE(lrSalesLine);
              DocumentType_l := lrSalesLine."Document Type";
              DocumentNo_l := lrSalesLine."No.";
              DocumentLineNo_l := lrSalesLine."Line No.";
            END;
          END;

          SalesCommentLine_l.LogFunctionCall(DocumentType_l, DocumentNo_l, DocumentLineNo_l, FunctionCode,
            Mgt.GetACFUser, AnveoChangeLogSetup_l."Update Last Modification");
        END;
      END;
      //E/P0320

      // A/P0834
      IF RecRef.NUMBER IN [5107] THEN BEGIN
        IF AnveoChangeLogSetup_l.GET(1, 0, 0, FunctionCode) THEN BEGIN
          CASE RecRef.NUMBER OF
            5107: BEGIN
              RecRef.SETTABLE(lSalesHeaderArch);
              DocumentType_l := lSalesHeaderArch."Document Type";
              DocumentNo_l := lSalesHeaderArch."No.";
              DocumentLineNo_l := 0;
              Version_l := lSalesHeaderArch."Version No.";
              DocNoOcc := lSalesHeaderArch."Doc. No. Occurrence";
            END;
          END;
          SalesCommentLineArch_l.LogFunctionCall(DocumentType_l, DocumentNo_l, DocumentLineNo_l,DocNoOcc,Version_l, FunctionCode,
            Mgt.GetACFUser, AnveoChangeLogSetup_l."Update Last Modification");
        END;
      END;
      // E/P0834


      CASE FunctionCode OF
        // Default FunctionCodes
        'CLOSE_WEBPAGE()':      Mgt.CloseWebPage();
        'SAVE_RECORD()':        Mgt.ReloadWebPage();
        'NEW_RECORD()':         ; //Mgt.MESSAGE('New record created.');
        'NEW_RECORD_WEBPAGE()','DELETE_RECORD()','RELOAD_WEBPAGE()': ; //Do nothing;
        'DELETE_VIRTUAL_TBL()': OnAction_DELETE_VIRTUAL_TBL(RecRef, WebPageElement,WindowRecRef);
        'DELETE_ALL_V_TBLS()':  OnAction_DELETE_ALL_V_TBLS(RecRef, WebPageElement,WindowRecRef);
        'REC_INFO()':           Mgt.MESSAGE3(Text011,RecRef.COUNT,RecRef.CAPTION,RecRef.GETFILTERS);  //Get Record info
        'PREVREC()':            Mgt.WebPageNextRec(RecRef, -1);
        'NEXTREC()':            Mgt.WebPageNextRec(RecRef, 1);
        'SIGNATUREUPLOAD()':    OnAction_SIGNATUREUPLOAD();

        // Custom Global Function Codes
        'OPENSIGNATUREWP':      Mgt.OpenSignatureWebPage(Text012,500,300,100,Text013,Text014);
        // H0302 >>
        {
        'IMPORTEXTBPDUEDATE': BEGIN
          RecRef.SETTABLE(SalesHeader);
          ExcelBuffer.DELETEALL;
          FPCGeneralSetup.GET;
          FileName  := FPCGeneralSetup."Ext. Billpay Due Date Filename";
          SheetName := 'Sheet1';
          ExcelBuffer.OpenBook(FileName,SheetName);
          ExcelBuffer.ReadSheet;
          ExcelBuffer.SETRANGE("Column No.", 1);
          IF ExcelBuffer.FIND('-') THEN REPEAT
            ExcelBuffer2.SETRANGE("Row No.", ExcelBuffer."Row No.");
            ExcelBuffer2.SETRANGE("Column No.", 2);
            ExcelBuffer2.FINDSET;
            IF SalesHeader.GET(SalesHeader."Document Type"::Order, ExcelBuffer."Cell Value as Text") THEN BEGIN
              EVALUATE(ImportedDay, COPYSTR(ExcelBuffer2."Cell Value as Text", 1, 2));
              IF STRPOS(ExcelBuffer2."Cell Value as Text", '.') > 0 THEN
                EVALUATE(ImportedMonth, COPYSTR(ExcelBuffer2."Cell Value as Text", 4, 2))
              ELSE
                EVALUATE(ImportedMonth, COPYSTR(ExcelBuffer2."Cell Value as Text", 3, 2));
              IF STRPOS(ExcelBuffer2."Cell Value as Text", '.') > 0 THEN
              // Value '20' makes this function valid from 2000 to 2099. Please change for later ages.
                EVALUATE(ImportedYear, '20' + COPYSTR(ExcelBuffer2."Cell Value as Text", 7, 2))
              ELSE
                EVALUATE(ImportedYear, '20' + COPYSTR(ExcelBuffer2."Cell Value as Text", 5, 2));
              SalesHeader."Extended Bill Pay Due Date" := DMY2DATE(ImportedDay, ImportedMonth, ImportedYear);
              SalesHeader.MODIFY;
            END;
          UNTIL ExcelBuffer.NEXT = 0;
        END;
        }
        // H0302 <<

        // H0233 >>
        'SHOWBILLPAYINFO': BEGIN
        RecRef.SETTABLE(lrSalesHeader);
        BillPay.SETCURRENTKEY("Sales Header No.");
        BillPay.SETRANGE("Sales Header No.", lrSalesHeader."No.");
        IF BillPay.FIND('-') THEN
          Mgt.MESSAGE1('Invoice Due Date: ', FORMAT(BillPay."Invoice Due Date"))
        ELSE
          Mgt.MESSAGE('No related BillPay Transaction Status was found!');
        END;

        'SHOWBILLPAYINFOARC': BEGIN
        RecRef.SETTABLE(locSalesHeaderArch);
        BillPay.SETCURRENTKEY("Sales Header No.");
        BillPay.SETRANGE("Sales Header No.", locSalesHeaderArch."No.");
        IF BillPay.FIND('-') THEN
          Mgt.MESSAGE1('Invoice Due Date: ', FORMAT(BillPay."Invoice Due Date"))
        ELSE
          Mgt.MESSAGE('No related BillPay Transaction Status was found!');
        END;

        'SHOWCONFIRMATIONNO': BEGIN
          RecRef.SETTABLE(SalesLine);
          PurchaseLine.SETCURRENTKEY("Order No.","Order Line No.");
          PurchaseLine.SETRANGE("Order No.", SalesLine."Document No.");
          PurchaseLine.SETFILTER("Order Line No.", '%1', SalesLine."Line No.");
          IF PurchaseLine.FIND('-') THEN
            Mgt.MESSAGE1('Confirmation No.: ', FORMAT(PurchaseLine."Confirmation No."))
          ELSE
            Mgt.MESSAGE1('There is no Confirmation No. for ', FORMAT(SalesLine."Document No.") +
                                ', Line ' + FORMAT(SalesLine."Line No."));
         END;

        'SHOWCONFNUMARC': BEGIN
          RecRef.SETTABLE(SalesLineArc);
          PurchLineArc.SETCURRENTKEY("Order No.","Order Line No.");
          PurchLineArc.SETRANGE("Order No.", SalesLineArc."Document No.");
          PurchLineArc.SETFILTER("Order Line No.", '%1', SalesLineArc."Line No.");
          IF PurchLineArc.FIND('-') THEN
            Mgt.MESSAGE1('Confirmation No.: ', FORMAT(PurchLineArc."Confirmation No."))
          ELSE
            Mgt.MESSAGE1('There is no Confirmation No. for ', FORMAT(SalesLineArc."Document No.") +
                                ', Line ' + FORMAT(SalesLineArc."Line No."));
        END;
        // H0233 <<


        //09.11.2011 TMI B
        'MAGENTOCANCEL': BEGIN
          RecRef.SETTABLE(lrSalesHeader);
          IF Mgt.CONFIRM2(Text80002, FALSE, lrSalesHeader."Document Type", lrSalesHeader."No.") THEN BEGIN
            IF NOT ConfirmStatus(lrSalesHeader."No.", 0) THEN
              EXIT;
            lrSalesHeader.MagentoCancel;
            Mgt.ReloadWebPage;
          END;
        END;

        'MAGENTOCANCELLINE': BEGIN
          RecRef.SETTABLE(lrSalesLine);
          IF Mgt.CONFIRM2(Text80002, FALSE, lrSalesLine."Document Type", lrSalesLine."Document No.") THEN BEGIN
            IF NOT ConfirmStatus(lrSalesLine."Document No.", 0) THEN
              EXIT;
           //H0587 22.07.14 HCN +++++++++++++++++++++++++++++
           IF ChManagement.CheckIfDropShipmentOrCrossDock(lrSalesLine) THEN BEGIN
           //H0587 22.07.14 HCN -----------------------------
              ChManagement.CancelDropShipment(lrSalesLine,FALSE);
           END ELSE BEGIN
             lrSalesLine.MagentoCancel(FALSE,FALSE);
           END;
           Mgt.ReloadWebPage;
          END;
        END;

        'RELEASE': BEGIN
          RecRef.SETTABLE(lrSalesHeader);
          IF Mgt.CONFIRM2(Text80000, FALSE, lrSalesHeader."Document Type", lrSalesHeader."No.") THEN BEGIN
            lcuReleaseSalesDoc.PerformManualRelease(lrSalesHeader);
            Mgt.ReloadWebPage;
          END;
        END;

        'REOPEN': BEGIN
          RecRef.SETTABLE(lrSalesHeader);
          IF Mgt.CONFIRM2(Text80001,FALSE, lrSalesHeader."Document Type", lrSalesHeader."No.") THEN BEGIN
            lcuReleaseSalesDoc.PerformManualReopen(lrSalesHeader);
            Mgt.ReloadWebPage();
          END;
        END;

        //T0045, 26.08.14, tec-cs ++++++++++++++++++
        'CALCPREVDISCOUNT': BEGIN
          IF Mgt.CONFIRM(STRSUBSTNO(Text80012), FALSE) THEN BEGIN

            CASE RecRef.NUMBER OF

              DATABASE::"Sales Header Archive":
                BEGIN
                  RecRef.SETTABLE(locSalesHeaderArch);
                  locSalesHeaderArch.CalculatePreventionDiscount;
                  locSalesHeaderArch.MODIFY;
                END;

            DATABASE::"Sales Header":
              BEGIN
                RecRef.SETTABLE(lrSalesHeader);
                lrSalesHeader.CalculatePreventionDiscount;
                lrSalesHeader.MODIFY;
              END;

            ELSE
              BEGIN
                ERROR('Function "%1" is not available for tableid "%2"',
                  FunctionCode,
                  RecRef.NUMBER);
              END;

            END;

            Mgt.ReloadWebPage();
          END;
        END;
        //T0045, 26.08.14, tec-cs ------------------

        'PURCHRELEASE': BEGIN
          RecRef.SETTABLE(lrPurchHeader);
          IF Mgt.CONFIRM2(Text80000, FALSE, lrPurchHeader."Document Type", lrPurchHeader."No.") THEN BEGIN
            lcuReleasePurchDoc.PerformManualRelease(lrPurchHeader);
            Mgt.ReloadWebPage;
          END;
        END;

        'PURCHREOPEN': BEGIN
          RecRef.SETTABLE(lrPurchHeader);
          IF Mgt.CONFIRM2(Text80001, FALSE, lrPurchHeader."Document Type", lrPurchHeader."No.") THEN BEGIN
            lcuReleasePurchDoc.PerformManualReopen(lrPurchHeader);
            Mgt.ReloadWebPage();
          END;
        END;

        'CREATEDHLSHIPMENTS': BEGIN
          RecRef.SETTABLE(lrSalesHeader);
          IF Mgt.CONFIRM2(Text80003, FALSE, lrPurchHeader."Document Type", lrPurchHeader."No.") THEN BEGIN
            CLEAR(lcuDHLMgt);
            lcuDHLMgt.RequestDHLShipment(lrSalesHeader);
            Mgt.ReloadWebPage;
          END;
        END;

        'CANCELDHLSHIPMENTS': BEGIN
          RecRef.SETTABLE(lrSalesHeader);
          IF Mgt.CONFIRM2(Text80003, FALSE, lrPurchHeader."Document Type", lrPurchHeader."No.") THEN BEGIN
            CLEAR(lcuDHLMgt);
            lcuDHLMgt.CancelDHLShipment(lrSalesHeader."No.", '');
            Mgt.ReloadWebPage;
          END;
        END;

        'CREATERETURNORDER': BEGIN
          CASE RecRef.NUMBER OF
            36: BEGIN
              RecRef.SETTABLE(locSalesHeader);
              //H0587 08.07.14 HCN +++++++++++++++++++++++++++++
              IF Mgt.CONFIRM(STRSUBSTNO(TextHME001,locSalesHeader."No."), FALSE) THEN BEGIN
              //H0587 08.07.14 HCN -----------------------------
                // T0080 tec-cs ++++++++++++++++++++++++++
                // FPCManagement.CreateReturnOrder(locSalesHeader."No.",0);
                ComplaintRequestMgt.ProcessComplaintRequestSH(locSalesHeader, TRUE);
                // T0080 tec-cs --------------------------
                Mgt.ReloadWebPage;
              END;
            END;
            5107: BEGIN
              RecRef.SETTABLE(locSalesHeaderArch);
              //H0587 08.07.14 HCN +++++++++++++++++++++++++++++
              IF Mgt.CONFIRM(STRSUBSTNO(TextHME001,locSalesHeaderArch."No."), FALSE) THEN BEGIN
              //H0587 08.07.14 HCN -----------------------------
                // T0080 tec-cs ++++++++++++++++++++++++++
                // FPCManagement.CreateReturnOrder(locSalesHeaderArch."No.",1);
                ComplaintRequestMgt.ProcessComplaintRequestSHA(locSalesHeaderArch, TRUE);
                // T0080 tec-cs --------------------------
                Mgt.ReloadWebPage;
              END;
            END;
          END;
        END;

        'RETOURENLABEL': BEGIN
          RecRef.SETTABLE(rSalesHeader);
          rSalesLine.RESET;
          rSalesLine.SETRANGE("Document Type",rSalesHeader."Document Type");
          rSalesLine.SETRANGE("Document No.",rSalesHeader."No.");
          rSalesLine.SETRANGE(Type,rSalesLine.Type::Item);
          IF rSalesLine.FINDFIRST THEN BEGIN
            FPCManagement.GetReturnOrderLineType(rSalesLine,locReturnType);
            IF (locReturnType = locReturnType::Return) OR (locReturnType = locReturnType::Change) THEN BEGIN
              //T0028 29.07.14 tec-cs +++++++++++++++++++++++++++++
              //FPCManagement.CreateReturnOrderMail(rSalesHeader,1);
              FPCManagement.CreateReturnOrderMail(rSalesHeader, 1, TRUE);
              //T0028 29.07.14 tec-cs -----------------------------
              Mgt.ReloadWebPage;
              Mgt.MESSAGE(Text80010);
            END ELSE BEGIN
              Mgt.MESSAGE(Text80009);
            END;
          END;
        END;

        'RETURNCONFIRMATION': BEGIN
          RecRef.SETTABLE(rSalesHeader);
          //T0028 29.07.14 tec-cs +++++++++++++++++++++++++++++
          //FPCManagement.CreateReturnOrderMail(rSalesHeader,2);
          FPCManagement.CreateReturnOrderMail(rSalesHeader, 2, TRUE);
          //T0028 29.07.14 tec-cs -----------------------------
          Mgt.ReloadWebPage;
          Mgt.MESSAGE(Text80016);
        END;


        'OPENORDERCARD': BEGIN
          RecRef.SETTABLE(locAnveoSalesOrder);
          CASE locAnveoSalesOrder.Herkunft OF
            1: BEGIN
              rSalesHeader.GET(rSalesHeader."Document Type"::Order,locAnveoSalesOrder."No.");
              RecRef2.GETTABLE(rSalesHeader);
              Mgt.OpenWebPage('FP_SO_CARD', FALSE, RecRef2,'');
            END;
            2: BEGIN
              rSalesHeaderArchive.RESET;
              rSalesHeaderArchive.SETRANGE("Document Type",rSalesHeaderArchive."Document Type"::Order);
              rSalesHeaderArchive.SETRANGE("No.",locAnveoSalesOrder."No.");
              IF rSalesHeaderArchive.FINDLAST THEN BEGIN
                RecRef2.GETTABLE(rSalesHeaderArchive);
                Mgt.OpenWebPage('FP_SOA_CARD', FALSE, RecRef2,'');
              END;
            END;
          END;
        END;

        'OPENORDERCARDACT': BEGIN
          Mgt.OpenWebPage('FP_SO_CARD', FALSE, RecRef,'');
        END;

        'OPENORDERCARDARCH': BEGIN
          Mgt.OpenWebPage('FP_SOA_CARD', FALSE, RecRef,'');
        END;

        'OPENLINKEDRETURNCARD': BEGIN
          CASE RecRef.NUMBER OF
            37:
              BEGIN
                RecRef.SETTABLE(rSalesLine);
                //H0584 13.03.14 HCN +++++++++++++++++++++++++++++
                CLEAR(PPM_Functions);
                IF PPM_Functions.GetUnpostedReturnOrder(RecRef,rSalesHeader) THEN BEGIN
                {
                //H0584 13.03.14 HCN -----------------------------
                IF rSalesHeader.GET(rSalesLine."Document Type"::"Return Order",rSalesLine."Return Order No.") THEN BEGIN
                //H0584 13.03.14 HCN +++++++++++++++++++++++++++++
                }
                //H0584 13.03.14 HCN -----------------------------
                  RecRef2.GETTABLE(rSalesHeader);
                  Mgt.OpenWebPage('FP_SRO_CARD', FALSE, RecRef2,'');
                END ELSE BEGIN
                  Mgt.MESSAGE(Error003);
                END;
              END;

            5108:
              BEGIN
                RecRef.SETTABLE(locSalesLineArch);
                //H0584 13.03.14 HCN +++++++++++++++++++++++++++++
                CLEAR(PPM_Functions);
                IF PPM_Functions.GetUnpostedReturnOrder(RecRef,rSalesHeader) THEN BEGIN
                {
                //H0584 13.03.14 HCN -----------------------------
                IF rSalesHeader.GET(locSalesLineArch."Document Type"::"Return Order",locSalesLineArch."Return Order No.") THEN BEGIN
                //H0584 13.03.14 HCN +++++++++++++++++++++++++++++
                }
                //H0584 13.03.14 HCN -----------------------------
                  RecRef2.GETTABLE( rSalesHeader);
                  Mgt.OpenWebPage('FP_SRO_CARD', FALSE, RecRef2,'');
                END ELSE BEGIN
                  Mgt.MESSAGE(Error003);
                END;
              END;
          END;
        END;

        'OPENRETOURNCARD': BEGIN
          RecRef.SETTABLE(rSalesHeader);
          CASE rSalesHeader."Document Type" OF
            rSalesHeader."Document Type"::"Return Order": BEGIN
              Mgt.OpenWebPage('FP_SRO_CARD',FALSE,RecRef,'');
            END;
            rSalesHeader."Document Type"::Order: BEGIN
              Mgt.OpenWebPage('FP_SO_STORNO_CARD',FALSE,RecRef,'');
            END;
          END;
        END;

        'OPENLINESTATUS': BEGIN
          CASE RecRef.NUMBER OF
            37:
              BEGIN
                RecRef.SETTABLE(lrSalesLine);
                Mgt.OpenWebPage('FP_LINESTATUS',FALSE,RecRef,'DHLSTATUS');
              END;
            5108:
              BEGIN
                RecRef.SETTABLE(locSalesLineArch);

                DHLStatusHistory.SETCURRENTKEY("Document No.","Document Line No.","Current Status","Time Stamp");
                DHLStatusHistory.FILTERGROUP(0);
                DHLStatusHistory.SETRANGE("Document No.",lrSalesLine."Document No.");
                DHLStatusHistory.SETRANGE("Document Line No.",lrSalesLine."Line No.");
                DHLStatusHistory.FILTERGROUP(2);
                DHLStatusHistory.SETRANGE("Rhenus Entry",TRUE);
                IF DHLStatusHistory.FINDFIRST THEN BEGIN
                  DHLStatusHistory.SETRANGE("Rhenus Entry");
                END ELSE BEGIN
                  DHLStatusHistory.SETRANGE("DHL Shipment Code",lrSalesLine."DHL Shipment Number");
                  DHLStatusHistory.SETRANGE("Document Type",DHLStatusHistory."Document Type"::Order);
                  DHLStatusHistory.SETRANGE("Rhenus Entry",FALSE);
                END;
                Mgt.OpenWebPage('FP_LINESTATUS',FALSE,RecRef2,'');
              END;
          END;
        END;

        'RESENDDROPMAIL': BEGIN
          RecRef.SETTABLE(locPurchaseLine);
          IF Mgt.CONFIRM(STRSUBSTNO(Text80019), FALSE) THEN BEGIN
            locPurchaseLine.ResendDropshipMail();
          END;
        END;


        'OPENPOORDER': BEGIN
          RecRef.SETTABLE(rSalesLine);
          rSalesLine.ShowPurchaseOrderArch();
        END;

        'OPENDROPSHIP': BEGIN
          CASE RecRef.NUMBER OF
            37:
              BEGIN
                RecRef.SETTABLE(rSalesLine);
                IF rSalesLine."Special Order" THEN BEGIN
                  IF lrPurchHeader.GET(lrPurchHeader."Document Type"::Order,rSalesLine."Special Order Purchase No.") THEN BEGIN
                    RecRef2.GETTABLE(lrPurchHeader);
                    Mgt.OpenWebPage('FP_PO_CARD',FALSE,RecRef2,'');
                  END;
                END;
                IF rSalesLine."Drop Shipment" THEN BEGIN
                  IF lrPurchHeader.GET(lrPurchHeader."Document Type"::Order,rSalesLine."Purchase Order No.") THEN BEGIN
                    RecRef2.GETTABLE(lrPurchHeader);
                    Mgt.OpenWebPage('FP_PO_CARD',FALSE,RecRef2,'');
                  END;
                END;
              END;
            5108:
              BEGIN
                RecRef.SETTABLE(locSalesLineArch);
                IF locSalesLineArch."Special Order" THEN BEGIN
                  locPurchaseHeaderArch.RESET;
                  locPurchaseHeaderArch.SETRANGE("Document Type",locPurchaseHeaderArch."Document Type"::Order);
                  locPurchaseHeaderArch.SETRANGE("No.",locSalesLineArch."Special Order Purchase No.");
                  IF locPurchaseHeaderArch.FINDLAST THEN BEGIN
                    RecRef2.GETTABLE(locPurchaseHeaderArch);
                    Mgt.OpenWebPage('FP_PURACHSE_ARCH',FALSE,RecRef2,'');
                  END ELSE BEGIN
                    locPurchaseHeader.RESET;
                    locPurchaseHeader.SETRANGE("Document Type",locPurchaseHeader."Document Type"::Order);
                    locPurchaseHeader.SETRANGE("No.",locSalesLineArch."Special Order Purchase No.");
                    IF locPurchaseHeader.FINDFIRST THEN BEGIN
                      RecRef2.GETTABLE(locPurchaseHeader);
                      Mgt.OpenWebPage('FP_PO_CARD',FALSE,RecRef2,'');
                    END;
                  END;
                END;
                IF locSalesLineArch."Drop Shipment" THEN BEGIN
                  locPurchaseHeaderArch.RESET;
                  locPurchaseHeaderArch.SETRANGE("Document Type",locPurchaseHeaderArch."Document Type"::Order);
                  locPurchaseHeaderArch.SETRANGE("No.",locSalesLineArch."Purchase Order No.");
                  IF locPurchaseHeaderArch.FINDLAST THEN BEGIN
                    RecRef2.GETTABLE(locPurchaseHeaderArch);
                    Mgt.OpenWebPage('FP_PURACHSE_ARCH',FALSE,RecRef2,'');
                  END ELSE BEGIN
                    locPurchaseHeader.RESET;
                    locPurchaseHeader.SETRANGE("Document Type",locPurchaseHeader."Document Type"::Order);
                    locPurchaseHeader.SETRANGE("No.",locSalesLineArch."Purchase Order No.");
                    IF locPurchaseHeader.FINDFIRST THEN BEGIN
                      RecRef2.GETTABLE(locPurchaseHeader);
                      Mgt.OpenWebPage('FP_PO_CARD',FALSE,RecRef2,'');
                    END;
                  END;
                END;

              END;
            END;
        END;

        'FOLGEAUFTRAGERSTELLE': BEGIN
          RecRef.SETTABLE(rSalesLine);
          IF Mgt.CONFIRM(STRSUBSTNO(Text80015,rSalesLine."Document No."), FALSE) THEN BEGIN
            //H1202 08.07.14 HCN +++++++++++++++++++++++++++++
            SalesHeader.GET(rSalesLine."Document Type",rSalesLine."Document No.");
            FPCManagement.CreateFollowUpSalesOrder(SalesHeader);
            //H1202 08.07.14 HCN -----------------------------
            SalesCommentLine_l.CreateLog(rSalesLine."Document Type",rSalesLine."Document No.",0,
            STRSUBSTNO(LocText003,FPCManagement.GetChangeOrderNo),
            Mgt.GetACFUser,AnveoChangeLogSetup_l."Update Last Modification");
            Mgt.MESSAGE1(Text80020,rSalesLine."Document No.");
          END;
        END;

        'FOLGEAUFTRAGANZEIGEN': BEGIN
          RecRef.SETTABLE(rSalesHeader);
          CLEAR(rSalesLine);
          rSalesLine.RESET;
          rSalesLine.SETCURRENTKEY("Item Change Return No.","Item Change Return Line No.");
          rSalesLine.SETRANGE("Item Change Return No.",rSalesHeader."No.");
          IF rSalesLine.FINDFIRST THEN BEGIN
            locSalesHeader.GET(rSalesLine."Document Type",rSalesLine."Document No.");
            RecRef2.GETTABLE(locSalesHeader);
            Mgt.OpenWebPage('FP_SO_CARD', FALSE, RecRef2,'');
          END;
        END;
        'POSTSHIPMENT': BEGIN
          RecRef.SETTABLE(rSalesHeader);
          locUserSetup.GET(Mgt.GetACFUser());
          IF locUserSetup."Post Shipments" THEN BEGIN
            rSalesHeader.Ship := TRUE;
            rSalesHeader.Invoice := FALSE;
            rSalesHeader.CheckActualDeliveryDate(rSalesHeader);
            locSalesPost.RUN(rSalesHeader);
            Mgt.MESSAGE(Text80021);
            Mgt.ReloadWebPage;
          END ELSE
            ERROR(Error007);
        END;

        'RESENDINVOICEMAIL': BEGIN
          RecRef.SETTABLE(locSalesHeaderArch);
          IF Mgt.CONFIRM1(STRSUBSTNO(Text80022),FALSE,locSalesHeaderArch."Last Posting No.") THEN BEGIN
            //H0651  05.12.13  MBY  +++++++++++++++++++++++++
            IF SalesInvoiceHeader.GET(locSalesHeaderArch."Last Posting No.") THEN BEGIN
              SIIFillLog.Triggered_SetManually(TRUE);
              SIIFillLog.Triggered_Invoice(SalesInvoiceHeader);
            END;
            FPCGeneralSetup.GET;
            IF NOT FPCGeneralSetup."Dont Send Inv. Mails via Batch" THEN
            //H0651  05.12.13  MBY  -------------------------
              BatchPostDoc.CreateSalesEMailBatch(locSalesHeaderArch."Last Posting No.",2);
            Mgt.MESSAGE(Text80023);
          END;
        END;

        'SENDCHANGEORDERMAIL': BEGIN
          RecRef.SETTABLE(rSalesHeader);
          FPCManagement.CreateItemChangeOrderMail(rSalesHeader);
          Mgt.ReloadWebPage;
          Mgt.MESSAGE(Text80024);
        END;

        'OPENARCHORDERCARD': BEGIN
          RecRef.SETTABLE(locSalesHeaderArch);
          RecRef2.GETTABLE(locSalesHeaderArch);
          Mgt.OpenWebPage('FP_ARC_RETURN_CARD', FALSE, RecRef2,'');
        END;

        'OPEN_RETURN_REFERENCE': BEGIN
          RecRef.SETTABLE(locCancelReturnOrderHistory);

          locReturnOrder.RESET;
          locReturnOrder.SETRANGE("Document Type",locCancelReturnOrderHistory."Document Type");
          locReturnOrder.SETRANGE("No.",locCancelReturnOrderHistory."Document No.");
          IF locReturnOrder.FINDFIRST THEN BEGIN
            RecRef2.GETTABLE(locReturnOrder);
            Mgt.OpenWebPage('FP_SRO_CARD', FALSE, RecRef2,'')
          END ELSE BEGIN
            locReturnOrderArch.RESET;
            locReturnOrderArch.SETRANGE("Document Type",locCancelReturnOrderHistory."Document Type");
            locReturnOrderArch.SETRANGE("No.",locCancelReturnOrderHistory."Document No.");
            IF locReturnOrderArch.FINDLAST THEN BEGIN
              RecRef2.GETTABLE(locReturnOrderArch);
              Mgt.OpenWebPage('FP_ARC_RETURN_CARD', FALSE, RecRef2,'');
            END;
          END;
        END;

        'SAVE_SHIPMENT_ADDRES': BEGIN
          RecRef.SETTABLE(locShiptoAddress);
          locSalesHeader.RESET;
          locSalesHeader.SETCURRENTKEY("Sell-to Customer No.");
          locSalesHeader.SETRANGE("Sell-to Customer No.",locShiptoAddress."Customer No.");
          locSalesHeader.SETRANGE("Ship-to Code",locShiptoAddress.Code);
          IF locSalesHeader.FIND('-') THEN BEGIN
            REPEAT
              locSalesHeader.VALIDATE("Ship-to Code");
              locSalesHeader.MODIFY;
            UNTIL locSalesHeader.NEXT = 0;
          END;
          Mgt.ReloadWebPage;
        END;

        'UPDATESHIPADDRESS': BEGIN
          RecRef.SETTABLE(locSalesHeader);
          IF NOT Mgt.CONFIRM(Confirm001,FALSE) THEN
            ERROR(GOBError006);

          locSalesHeader.VALIDATE("Ship-to Code");
          locSalesHeader.MODIFY;
          Mgt.ReloadWebPage;
          Mgt.MESSAGE(Text80025);
        END;

        'AP_OPEN_ORDER': BEGIN
          RecRef.SETTABLE(locAnveoAccessPage);
          locSalesHeader.RESET;
          locSalesHeader.SETRANGE("Document Type",locSalesHeader."Document Type"::Order);
          locSalesHeader.SETRANGE("No.",locAnveoAccessPage."Order No.");
          IF locSalesHeader.FINDFIRST THEN BEGIN
            RecRef2.GETTABLE(locSalesHeader);
            Mgt.OpenWebPage('FP_SO_CARD', FALSE, RecRef2,'');
          END ELSE BEGIN
            locSalesHeaderArch.RESET;
            locSalesHeaderArch.SETRANGE("Document Type",locSalesHeader."Document Type"::Order);
            locSalesHeaderArch.SETRANGE("No.",locAnveoAccessPage."Order No.");
            IF locSalesHeaderArch.FINDLAST THEN BEGIN
              RecRef2.GETTABLE(locSalesHeaderArch);
              Mgt.OpenWebPage('FP_SOA_CARD', FALSE, RecRef2,'');
            END;
          END;
        END;

        'AP_OPEN_RETURNORDER': BEGIN
          RecRef.SETTABLE(locAnveoAccessPage);
          locSalesHeader.RESET;
          locSalesHeader.SETRANGE("Document Type",locSalesHeader."Document Type"::"Return Order");
          locSalesHeader.SETRANGE("No.",locAnveoAccessPage."Return Order No.");
          IF locSalesHeader.FINDFIRST THEN BEGIN
            RecRef2.GETTABLE(locSalesHeader);
            Mgt.OpenWebPage('FP_SRO_CARD', FALSE, RecRef2,'');
          END ELSE BEGIN
            locSalesHeaderArch.RESET;
            locSalesHeaderArch.SETRANGE("Document Type",locSalesHeader."Document Type"::"Return Order");
            locSalesHeaderArch.SETRANGE("No.",locAnveoAccessPage."Return Order No.");
            IF locSalesHeaderArch.FINDLAST THEN BEGIN
              RecRef2.GETTABLE(locSalesHeaderArch);
              Mgt.OpenWebPage('FP_ARC_RETURN_CARD', FALSE, RecRef2,'');
            END;
          END;
        END;

        'AP_OPEN_CUSTOMER': BEGIN
          RecRef.SETTABLE(locAnveoAccessPage);
          locCustomer.RESET;
          locCustomer.SETRANGE("No.",locAnveoAccessPage."Customer No.");
          IF locCustomer.FINDFIRST THEN BEGIN
            RecRef2.GETTABLE(locCustomer);
            Mgt.OpenWebPage('FP_CUST_CARD', FALSE, RecRef2,'');
          END;
          locAnveoAccessPage."Customer No." := '';
          locAnveoAccessPage.MODIFY;
        END;

        'AP_OPEN_ITEM': BEGIN
          RecRef.SETTABLE(locAnveoAccessPage);
          locItem.RESET;
          locItem.SETRANGE("No.",locAnveoAccessPage."Item No.");
          IF locItem.FINDFIRST THEN BEGIN
            RecRef2.GETTABLE(locItem);
            Mgt.OpenWebPage('FP_ITEM_CARD', FALSE, RecRef2,'');
          END;
        END;

        'AP_OPEN_VENDOR': BEGIN
          RecRef.SETTABLE(locAnveoAccessPage);
          locVendor.RESET;
          locVendor.SETRANGE("No.",locAnveoAccessPage."Vendor No.");
          IF locVendor.FINDFIRST THEN BEGIN
            RecRef2.GETTABLE(locVendor);
            Mgt.OpenWebPage('FP_VENDOR_CARD', FALSE, RecRef2,'');
          END;
        END;

        // H0233 >>
        'AP_OPEN_PO': BEGIN
          RecRef.SETTABLE(locAnveoAccessPage);
          locPurchaseHeader.RESET;
          locPurchaseHeader.SETRANGE("Document Type",locPurchaseHeader."Document Type"::Order);
          locPurchaseHeader.SETRANGE("No.",locAnveoAccessPage."Purchase Order No.");
          IF locPurchaseHeader.FINDFIRST THEN BEGIN
            RecRef2.GETTABLE(locPurchaseHeader);
            Mgt.OpenWebPage('FP_PO_CARD', FALSE, RecRef2,'');
          END ELSE BEGIN
            locPurchaseHeaderArch.RESET;
            locPurchaseHeaderArch.SETRANGE("Document Type",locPurchaseHeader."Document Type"::Order);
            locPurchaseHeaderArch.SETRANGE("No.",locAnveoAccessPage."Purchase Order No.");
            IF locPurchaseHeaderArch.FINDLAST THEN BEGIN
              RecRef2.GETTABLE(locPurchaseHeaderArch);
              Mgt.OpenWebPage('FP_PURACHSE_ARCH', FALSE, RecRef2,'');
            END;
          END;
        END;
        // H0233 <<

        'OPENHOME24': BEGIN
          CASE RecRef.NUMBER OF
            37: BEGIN
              RecRef.SETTABLE(rSalesLine);
              locURL := STRSUBSTNO('http://www.home24.de/search?query=%1',rSalesLine."No.");
            END;
            5108: BEGIN
              RecRef.SETTABLE(locSalesLineArch);
              locURL := STRSUBSTNO('http://www.home24.de/search?query=%1',locSalesLineArch."No.");
            END;
            39: BEGIN
              RecRef.SETTABLE(locPurchaseLine);
              locURL := STRSUBSTNO('http://www.home24.de/search?query=%1',locPurchaseLine."No.");
            END;
            27: BEGIN
              RecRef.SETTABLE(locItem);
              locURL := STRSUBSTNO('http://www.home24.de/search?query=%1',locItem."No.");
            END;
          END;
          Mgt.OpenURLExtended(locURL,'','Item search',FALSE,0,0,2);
        END;


        'SHOW_ORIGINAL_ORDER': BEGIN
          RecRef.SETTABLE(lrSalesHeader);
          IF lrSalesHeader."Original Sales Order No." <> '' THEN BEGIN
            rSalesHeader.RESET;
            rSalesHeader.SETRANGE("Document Type",lrSalesHeader."Document Type"::Order);
            rSalesHeader.SETRANGE("No.",lrSalesHeader."Original Sales Order No.");
            IF rSalesHeader.FINDFIRST THEN BEGIN
              RecRef2.GETTABLE(rSalesHeader);
              Mgt.OpenWebPage('FP_SO_CARD', FALSE, RecRef2,'');

            END ELSE BEGIN
              locSalesHeaderArch.RESET;
              locSalesHeaderArch.SETRANGE("Document Type",lrSalesHeader."Document Type"::Order);
              locSalesHeaderArch.SETRANGE("No.",lrSalesHeader."Original Sales Order No.");
              locSalesHeaderArch.SETRANGE("Sell-to Customer No.",lrSalesHeader."Sell-to Customer No.");
              IF locSalesHeaderArch.FINDLAST THEN BEGIN
                RecRef2.GETTABLE(locSalesHeaderArch);
                Mgt.OpenWebPage('FP_SOA_CARD', FALSE, RecRef2,'');
              END;
            END;
        END;

        END;

        'NEW_RECORD_WEBPAGE()','DELETE_RECORD()','RELOAD_WEBPAGE()': ;

        'ORDERCANCEL_W/O_I/O': BEGIN
          RecRef.SETTABLE(rSalesHeader);

          locSalesHeader."Cancel Without Interfaces" := TRUE;
          locSalesHeader.MODIFY;
          COMMIT;
          CLEAR(FPCManagement);
          FPCManagement.InitCancelWithoutInterfaces(rSalesHeader."No.",0);
          CLEARLASTERROR;
          IF NOT FPCManagement.RUN THEN BEGIN
            locSalesHeader.RESET;
            locSalesHeader.GET(rSalesHeader."Document Type",rSalesHeader."No.");
            locSalesHeader."Cancel Without Interfaces" := FALSE;
            locSalesHeader.MODIFY;
            COMMIT;
            Mgt.MESSAGE(GETLASTERRORTEXT);
          END ELSE BEGIN
            locSalesHeader."Cancel Without Interfaces" := FALSE;
            locSalesHeader.MODIFY;
            CommentLine.InsertOrderHistory(locSalesHeader."No.",
                                           'CANCNOINTF',
                                           STRSUBSTNO(LocText001,CURRENTDATETIME));
          END;
          Mgt.ReloadWebPage;

        END;

        'LINECANCEL_W/O_I/O': BEGIN
          RecRef.SETTABLE(lrSalesLine);
          rSalesHeader.GET(lrSalesLine."Document Type", lrSalesLine."Document No.");

          rSalesHeader."Cancel Without Interfaces" := TRUE;
          rSalesHeader.MODIFY;
          COMMIT;
          CLEAR(FPCManagement);
          FPCManagement.InitCancelWithoutInterfaces(rSalesHeader."No.",lrSalesLine."Line No.");
          CLEARLASTERROR;
          IF NOT FPCManagement.RUN THEN BEGIN
            locSalesHeader.RESET;
            locSalesHeader.GET(lrSalesLine."Document Type", lrSalesLine."Document No.");
            locSalesHeader."Cancel Without Interfaces" := FALSE;
            locSalesHeader.MODIFY;
            COMMIT;
            Mgt.MESSAGE(GETLASTERRORTEXT);
          END ELSE BEGIN
            locSalesHeader.RESET;
            locSalesHeader.GET(lrSalesLine."Document Type", lrSalesLine."Document No.");
            locSalesHeader."Cancel Without Interfaces" := FALSE;
            locSalesHeader.MODIFY;
            CommentLine.InsertOrderHistory(lrSalesLine."Document No.",
                                           'CANCNOINTF',
                                           STRSUBSTNO(LocText002,lrSalesLine."Line No.",CURRENTDATETIME));
          END;
          Mgt.ReloadWebPage;

        END;

        // A/P0964
        'OPEN_CHANGENAME_CUST': BEGIN
          Mgt.OpenWebPage('FP_CHANGENAME_CUST', FALSE, RecRef,'');
        END;
        'OPEN_CHANGENAME_SH': BEGIN
          RecRef.SETTABLE(SalesHeader);
          IF NOT AddSHFields.GET(SalesHeader."Document Type",SalesHeader."No.") THEN BEGIN
            AddSHFields.INIT;
            AddSHFields."Document Type" := SalesHeader."Document Type";
            AddSHFields."No." := SalesHeader."No.";
            AddSHFields.INSERT;
          END;
          RecRef2.GETTABLE(AddSHFields);
          Mgt.OpenWebPage('FP_CHANGENAME_SH', FALSE, RecRef2,'');
        END;
        'OPEN_DETAILNAME_SHA': BEGIN
          RecRef.SETTABLE(locSalesHeaderArch);
          IF NOT AddSHAFields.GET(locSalesHeaderArch."Document Type",locSalesHeaderArch."No.",
                                 locSalesHeaderArch."Doc. No. Occurrence",locSalesHeaderArch."Version No.") THEN BEGIN
            AddSHAFields.INIT;
            AddSHAFields."Document Type" := locSalesHeaderArch."Document Type";
            AddSHAFields."No." := locSalesHeaderArch."No.";
            AddSHAFields."Doc. No. Occurrence" := locSalesHeaderArch."Doc. No. Occurrence";
            AddSHAFields."Version No." := locSalesHeaderArch."Version No.";
            AddSHAFields.INSERT;
          END;
          RecRef2.GETTABLE(AddSHAFields);
          Mgt.OpenWebPage('FP_CHANGENAME_SHA', FALSE, RecRef2,'');
        END;
        'ACT_CHANGENAME_CUST': BEGIN
          IF Mgt.CONFIRM(LocText004,FALSE) THEN BEGIN
            RecRef.SETTABLE(Customer_l);
            FormCustomerUpdate_l.SetVarForAnveo(Customer_l."First Name",
                                                Customer_l."Last Name",
                                                Customer_l."Job Title",
                                                Customer_l."Company Name",
                                                RecRef);
            FormCustomerUpdate_l.CreateNameName2;
          END;
        END;
        'ACT_CHANGENAME_SH': BEGIN
          IF Mgt.CONFIRM(LocText004,FALSE) THEN BEGIN
            RecRef.SETTABLE(AddSHFields);
            // Sell-to
            CLEAR(FormCustomerUpdate_l);
            FormCustomerUpdate_l.SetFromSalesHeaderSell(TRUE);
            FormCustomerUpdate_l.SetVarForAnveo(AddSHFields."Sell-to First Name",
                                                AddSHFields."Sell-to Last Name",
                                                AddSHFields."Sell-to Job Title",
                                                AddSHFields."Sell-to Company Name",
                                                RecRef);
            FormCustomerUpdate_l.CreateNameName2;

            // Ship-to
            CLEAR(FormCustomerUpdate_l);
            FormCustomerUpdate_l.SetFromSalesHeaderShip(TRUE);
            FormCustomerUpdate_l.SetVarForAnveo(AddSHFields."Ship-to First Name",
                                                AddSHFields."Ship-to Last Name",
                                                AddSHFields."Ship-to Job Title",
                                                AddSHFields."Ship-to Company Name",
                                                RecRef);
            FormCustomerUpdate_l.CreateNameName2;

            // Bill-to
            CLEAR(FormCustomerUpdate_l);
            FormCustomerUpdate_l.SetFromSalesHeaderBill(TRUE);
            FormCustomerUpdate_l.SetVarForAnveo(AddSHFields."Bill-to First Name",
                                                AddSHFields."Bill-to Last Name",
                                                AddSHFields."Bill-to Job Title",
                                                AddSHFields."Bill-to Company Name",
                                                RecRef);
            FormCustomerUpdate_l.CreateNameName2;

          END;
        END;
        // E/P0964

        //H0587 09.07.14 HCN +++++++++++++++++++++++++++++
        'CALC_ORDER_BALANCE':
          BEGIN
            CASE RecRef.NUMBER OF
              DATABASE::"Sales Header":
                BEGIN
                  RecRef.SETTABLE(SalesHeader);
                  IF (SalesHeader."External Document No." <> '') THEN BEGIN
                    ExternalDocumentNoL := SalesHeader."External Document No.";
                  END ELSE BEGIN
                    ExternalDocumentNoL := SalesHeader."No.";
                  END;
                END;
              DATABASE::"Sales Header Archive":
                BEGIN
                  RecRef.SETTABLE(SalesHeaderArchive);
                  IF (SalesHeaderArchive."External Document No." <> '') THEN BEGIN
                    ExternalDocumentNoL := SalesHeaderArchive."External Document No.";
                  END ELSE BEGIN
                    ExternalDocumentNoL := SalesHeader."No.";
                  END;
                END;
            END;

            IF OrderBalanceL.GET(ExternalDocumentNoL) THEN BEGIN
              DoModifyL := TRUE;
            END;
            OrderBalanceL.INIT;
            OrderBalanceL."External Document No." := ExternalDocumentNoL;
            OrderBalanceL."Original Order Value" := OrderBalanceL.CalcOrigTotalOrderAmount;
            OrderBalanceL."Current Order Value" := OrderBalanceL.CalcCurrTotalOrderAmount;
            OrderBalanceL."Total Amount Invoiced" := OrderBalanceL.CalcTotalAmountInvoiced;
            OrderBalanceL."Total Amount Credited" := OrderBalanceL.CalcTotalAmountCredited;
            OrderBalanceL."Total Amount paid by Customer" := OrderBalanceL.CalcTotalAmountPaidByCustomer;
            OrderBalanceL."Total Amount refunded to Cust." := OrderBalanceL.CalcTotalAmtRefundedToCustomer;
            OrderBalanceL."Order Balance" := OrderBalanceL.CalcOrderBalance;
            IF DoModifyL THEN BEGIN
              OrderBalanceL.MODIFY;
            END ELSE BEGIN
              OrderBalanceL.INSERT;
            END;
            //H1424 30.07.14 HCN +++++++++++++++++++++++++++++
            RecRef2.GETTABLE(OrderBalanceL);
            Mgt.OpenWebPage('ORDER_BALANCE',FALSE,RecRef2,'');
            //H1424 30.07.14 HCN -----------------------------
          END;
        //H0587 09.07.14 HCN -----------------------------

      ELSE
        ERROR(Text004,FunctionCode);
      END;
      EXIT(TRUE);
    END;

    PROCEDURE OnBeforeCloseWebPage@1000000004() CloseWindow : Boolean;
    BEGIN
      // OnCloseWebPage is called before a Web Page is closed.
      // The return value CloseWindow (boolean) decides whether the web page is closed or not.

      CloseWindow := TRUE; //default
      Mgt.ReloadWebPagesTableNo(RecRef.NUMBER,2); //0 = all cards, 1 = all Lists, 2 all

      // A/P0964
      IF RecRef.NUMBER = DATABASE::"Additional Sales Header Fields" THEN
        Mgt.ReloadWebPagesTableNo(DATABASE::"Sales Header",2); //0 = all cards, 1 = all Lists, 2 all
      // E/P0964
    END;

    PROCEDURE CustomWebPageRelation@1000000005();
    VAR
      TableNo@5326065 : Integer;
      FieldRef@1000000004 : FieldRef;
      DHLStatusHistory@1000000003 : Record 50021;
      DHLStatusHistory2@1000000002 : Record 50021;
      locSalesLine@1000000001 : Record 37;
      locArchSalesHeader@1000000000 : Record 5107;
      "****HME***********************"@1000000005 : Integer;
      CustomerLedgerEntryL@1000000007 : Record 21;
      OrderBalanceL@1000000006 : Record 50196;
    BEGIN
      // Sets custom relations between two Web Pages, Web Page Elements or for DropDown-Lists defined by function code

      // Special Custom Web Page Relation Codes TABLENO::18 opens table "Customer"
      IF COPYSTR(RelationCode,1,8) = 'TABLENO:' THEN BEGIN
        EVALUATE(TableNo, COPYSTR(RelationCode,9));
        Mgt.OPENRecRef(TableNo,DestRecRef);
        EXIT;
      END;

      // Optional:
      // Test source of Custom Table Relation
      //CASE CustomTableRelationRef.NUMBER OF
      //  DATABASE::"ACF Web Page Element": ;       //Web Page Element: Call from Web Page to Web Page
      //  DATABASE::"ACF Web Page Element Menu": ;  //Web Page Element Menu: Call from Menu
      //  DATABASE::"ACF Web Page Element Field": ; //Web Page Element Field: Call from Field
      //END;

      CASE RelationCode OF
        'VIRTUALFILTER()': VirtualFilterWebPageRelation(RecRef,DestRecRef,CustomTableRelationRecRef,WebPageElement,DestWebPageElement,
          WindowRecRef);
         {
        'DHLSTATUS': BEGIN
          SrcRecRef.SETTABLE(locSalesLine);
          SetRelationTo(DATABASE::"DHL Parcels Status History",DestRecRef);
          DHLStatusHistory.SETRANGE("Sale Order Code",locSalesLine."Document No.");
          //DHLStatusHistory.SETRANGE("Line No.",DHLStatusHistory2."Line No.");
          DHLStatusHistory.FIND('-');
          DHLStatusHistory.SETRECFILTER;
          DestRecRef.SETVIEW(DHLStatusHistory.GETVIEW);
        END;
         }
        //H0587 09.07.14 HCN +++++++++++++++++++++++++++++
        // SalesHeader to Customer Ledger Entry (only invoices)
        'SH:CLE[INV]':
          BEGIN
            RecRef.SETTABLE(OrderBalanceL);
            Mgt.OPENRecRef(DATABASE::"Cust. Ledger Entry",DestRecRef);
            CLEAR(CustomerLedgerEntryL);
            CustomerLedgerEntryL.SETCURRENTKEY("External Document No.");
            CustomerLedgerEntryL.SETRANGE("External Document No.",OrderBalanceL."External Document No.");
            CustomerLedgerEntryL.SETRANGE("Document Type",CustomerLedgerEntryL."Document Type"::Invoice);
            CustomerLedgerEntryL.SETRANGE(Prepayment,FALSE);
            IF CustomerLedgerEntryL.ISEMPTY THEN BEGIN
              CustomerLedgerEntryL.SETRANGE(Prepayment,TRUE);
              CustomerLedgerEntryL.SETRANGE(Open,TRUE);
            END;
            DestRecRef.SETVIEW(CustomerLedgerEntryL.GETVIEW);
          END;

        // SalesHeader to Customer Ledger Entry (only cr. memos)
        'SH:CLE[CRM]':
          BEGIN
            RecRef.SETTABLE(OrderBalanceL);
            Mgt.OPENRecRef(DATABASE::"Cust. Ledger Entry",DestRecRef);
            CLEAR(CustomerLedgerEntryL);
            CustomerLedgerEntryL.SETCURRENTKEY("External Document No.");
            CustomerLedgerEntryL.SETRANGE("External Document No.",OrderBalanceL."External Document No.");
            CustomerLedgerEntryL.SETRANGE("Document Type",CustomerLedgerEntryL."Document Type"::"Credit Memo");
            CustomerLedgerEntryL.SETRANGE(Prepayment,FALSE);
            IF CustomerLedgerEntryL.ISEMPTY THEN BEGIN
              CustomerLedgerEntryL.SETRANGE(Prepayment,TRUE);
              CustomerLedgerEntryL.SETRANGE(Open,TRUE);
            END;
            DestRecRef.SETVIEW(CustomerLedgerEntryL.GETVIEW);
          END;

        // SalesHeader to Customer Ledger Entry (only payments)
        'SH:CLE[PAYMENT]':
          BEGIN
            RecRef.SETTABLE(OrderBalanceL);
            Mgt.OPENRecRef(DATABASE::"Cust. Ledger Entry",DestRecRef);
            CLEAR(CustomerLedgerEntryL);
            CustomerLedgerEntryL.SETCURRENTKEY("External Document No.");
            CustomerLedgerEntryL.SETRANGE("External Document No.",OrderBalanceL."External Document No.");
            CustomerLedgerEntryL.SETFILTER("Document Type",'%1|%2',
                                           CustomerLedgerEntryL."Document Type"::Payment,
                                           CustomerLedgerEntryL."Document Type"::Refund);
            CustomerLedgerEntryL.SETRANGE("Payment Direction",
                                          CustomerLedgerEntryL."Payment Direction"::inbound);
            DestRecRef.SETVIEW(CustomerLedgerEntryL.GETVIEW);
          END;

        // SalesHeader to Customer Ledger Entry (only refunds)
        'SH:CLE[REFUND]':
          BEGIN
            RecRef.SETTABLE(OrderBalanceL);
            Mgt.OPENRecRef(DATABASE::"Cust. Ledger Entry",DestRecRef);
            CLEAR(CustomerLedgerEntryL);
            CustomerLedgerEntryL.SETCURRENTKEY("External Document No.");
            CustomerLedgerEntryL.SETRANGE("External Document No.",OrderBalanceL."External Document No.");
            CustomerLedgerEntryL.SETFILTER("Document Type",'%1|%2',
                                           CustomerLedgerEntryL."Document Type"::Payment,
                                           CustomerLedgerEntryL."Document Type"::Refund);
            CustomerLedgerEntryL.SETRANGE("Payment Direction",
                                          CustomerLedgerEntryL."Payment Direction"::outbound);
            DestRecRef.SETVIEW(CustomerLedgerEntryL.GETVIEW);
          END;

        // SalesHeader to Customer Ledger Entry (only invoices)
        'SH:CLE[ALL]':
          BEGIN
            RecRef.SETTABLE(OrderBalanceL);
            Mgt.OPENRecRef(DATABASE::"Cust. Ledger Entry",DestRecRef);
            CLEAR(CustomerLedgerEntryL);
            CustomerLedgerEntryL.SETCURRENTKEY("External Document No.");
            CustomerLedgerEntryL.SETRANGE("External Document No.",OrderBalanceL."External Document No.");
            DestRecRef.SETVIEW(CustomerLedgerEntryL.GETVIEW);
          END;
        //H0587 09.07.14 HCN -----------------------------
      END;

      // Test, if destination record ref is found.
      IF DestRecRef.NUMBER=0 THEN ERROR(Text003);
      // Log actual filter value
      Mgt.Log('CustomWebPageRelation',DestRecRef.GETVIEW);
    END;

    PROCEDURE DropDownFieldDefinition@1000000002();
    VAR
      Currency@5326062 : Record 4;
      Item@5326063 : Record 27;
      DimensionValue@5326064 : Record 349;
      ShippingAgentServices@5326065 : Record 5790;
    BEGIN
      // DropDown Fields of tables
      // Set Global Defaults
      "Field#1" := 1;
      "Field#2" := 2;

      // Default values by Table
      CASE TableNumber OF
        DATABASE::Currency: BEGIN
          "Field#1" := Currency.FIELDNO(Code);
          "Field#2" := Currency.FIELDNO(Description);
        END;
        DATABASE::Item, DATABASE::Resource: BEGIN
          "Field#1" := Item.FIELDNO("No.");
          "Field#2" := Item.FIELDNO(Description);
        END;
        DATABASE::"Dimension Value": BEGIN
          "Field#1" := DimensionValue.FIELDNO(Code);
          "Field#2" := DimensionValue.FIELDNO(Name);
        END;
        DATABASE::"Shipping Agent Services": BEGIN
          "Field#1" := ShippingAgentServices.FIELDNO(Code);
          "Field#2" := ShippingAgentServices.FIELDNO(Description);
        END;
        DATABASE::"Item Category": BEGIN
          "Field#1" := 1;
          "Field#2" := 3;
        END;
        DATABASE::"Item Unit of Measure",DATABASE::"Resource Unit of Measure",
          DATABASE::"Ship-to Address",DATABASE::"Product Group": BEGIN
          "Field#1" := 2;
          "Field#2" := 3;
        END;
        //A/P0011
        DATABASE::"Multiple Reason":
          BEGIN
            "Field#1" := 2;
            "Field#2" := 3;
          END;
        //E/P0011

      END;

      // Custom Field Definition on Web Page Element Field
      IF WebPageElementField."DropDown Field 1" <> 0 THEN "Field#1" := WebPageElementField."DropDown Field 1";
      IF WebPageElementField."DropDown Field 2" <> 0 THEN "Field#2" := WebPageElementField."DropDown Field 2";
    END;

    PROCEDURE VirtualFilterWebPageRelation@5326065(VAR SrcRecRef@5326066 : RecordRef;VAR DestRecRef@5326065 : RecordRef;VAR CustomTableRelationRef@5326064 : RecordRef;SrcWebPageElement@5326063 : Record 5327101;DestWebPageElement@5326062 : Record 5327101;WindowRecRef@5326068 : RecordRef);
    VAR
      VirtualData@5326067 : Codeunit 5327127;
    BEGIN
      // Gets filter values from Virtual Table from Source Web Page Element
      VirtualData.OPENbyWPESrcRecRef(SrcWebPageElement."Virtual Table Code",SrcWebPageElement,WindowRecRef);
      // Set filter depending on Virtual Table to Destination-Table (DestRecRef)
      VirtualData.SETFILTERVirtual2RecRef(DestRecRef);
    END;

    LOCAL PROCEDURE "-- OnAction-Functions"@5326063();
    BEGIN
    END;

    PROCEDURE OnAction_TEMPLATE@5326095(RecRef@5326068 : RecordRef;WebPageElement@5326062 : Record 5327101);
    BEGIN
      // Description
    END;

    PROCEDURE OnAction_DELETE_VIRTUAL_TBL@5326096(RecRef@5326068 : RecordRef;WebPageElement@5326062 : Record 5327101;WindowRecRef@5326064 : RecordRef);
    VAR
      VirtualData@5326063 : Codeunit 5327127;
    BEGIN
      // Deletes the virtual table defined in current Web Page Element
      WebPageElement.TESTFIELD("Virtual Table Code");
      VirtualData.OPENbyWPESrcRecRef(WebPageElement."Virtual Table Code",WebPageElement,WindowRecRef);
      VirtualData.DELETE();
      Mgt.ReloadWebPage();
    END;

    PROCEDURE OnAction_DELETE_ALL_V_TBLS@5326071(RecRef@5326068 : RecordRef;WebPageElement@5326062 : Record 5327101;WindowRecRef@5326064 : RecordRef);
    VAR
      VirtualData@5326063 : Codeunit 5327127;
    BEGIN
      // Deletes all virtual tables on current Web Page Element
      WebPageElement.TESTFIELD("Virtual Table Code");
      VirtualData.OPENbyWPESrcRecRef(WebPageElement."Virtual Table Code",WebPageElement,WindowRecRef);
      VirtualData.DELETEAllTablesOnWebPageElem();
      Mgt.ReloadWebPage();
    END;

    PROCEDURE OnAction_SIGNATUREUPLOAD@5326068();
    VAR
      SalesHeader@5326062 : Record 36;
    BEGIN
      CASE RecRef.NUMBER OF
        DATABASE::"Sales Header": BEGIN
          FldRef := RecRef.FIELD(SalesHeader.FIELDNO(Signature));
          Mgt.SaveSignatureToField(FldRef);
          RecRef.MODIFY;
        END;
      END;
    END;

    LOCAL PROCEDURE "-- CustomTableRelation-Func."@5326062();
    BEGIN
    END;

    PROCEDURE CTR_TEMPLATE@5326066();
    BEGIN
      {
      // <Description>
      // Data Source: <Record>
      // Destination: <Record>

      // 1. Set table reference
      RecRef.SETTABLE(<SourceRecord>);
      Mgt.OPENRecRef(DATABASE::<DestRecrod>,DestRecRef);

      // 2. Filter
      <DestRecord>.SETFILTER(<Field>, <SourceRecord>.<Field>);

      // 3. Copy Filters to DestRecRef
      DestRecRef.SETVIEW(<DestRecord>.GETVIEW);
      }
    END;

    PROCEDURE ConfirmStatus@1000000032(DocumentNo_p@1000000000 : Code[20];LineNo_p@1000000002 : Integer) : Boolean;
    VAR
      DDInterfaceOut_l@1000000006 : Codeunit 50051;
      ParcelsStatusHistory_l@1000000001 : Record 50021;
      SalesHeader_l@1000000005 : Record 36;
      SalesLine_l@1000000003 : Record 37;
      Location_l@1000000004 : Record 14;
    BEGIN
      SalesLine_l.RESET;
      SalesLine_l.SETRANGE("Document No.", DocumentNo_p);
      IF LineNo_p <> 0 THEN
        SalesLine_l.SETRANGE("Line No.", LineNo_p);

      WITH SalesLine_l DO BEGIN
        IF FINDSET THEN
          REPEAT
            IF "Drop Shipment" OR "Special Order" THEN BEGIN
              IF NOT Mgt.CONFIRM(STRSUBSTNO(GOBText003, "Line No."), FALSE) THEN
                EXIT(FALSE);
            END ELSE BEGIN
              // Rhenus
              IF IsRhenusLocation("Location Code") THEN
                IF "Status Code" IN ['1', '10', '11', '50'] THEN
                  IF NOT Mgt.CONFIRM(STRSUBSTNO(GOBText001, "Line No."), FALSE) THEN
                    EXIT(FALSE);

              // Docdate
              IF Location_l.GET("Location Code") THEN BEGIN
                IF Location_l."Docdata Location" THEN BEGIN
                  SalesHeader_l.GET(SalesHeader_l."Document Type", DocumentNo_p);

                  IF SalesHeader_l.Kommissionierung THEN BEGIN
                    IF NOT SalesHeader_l."Cancel Without Interfaces" THEN BEGIN
                      IF NOT DDInterfaceOut_l.CheckUpdateAllowed(SalesLine_l) THEN BEGIN
                        IF NOT Mgt.CONFIRM(STRSUBSTNO(GOBText002, "DD Pos No.", "Line No."), FALSE) THEN
                          EXIT(FALSE);
                      END;
                    END;
                  END;
                END;
              END;
            END;
          UNTIL NEXT=0
        ELSE
          EXIT(TRUE);
      END;

      EXIT(TRUE);
    END;

    BEGIN
    {
      ** Events-Codeunit is the main interface between GUI-events and individual C/AL-Code.
      Online documentation: www.NAVwebclient.com/anveo-help-codeunit-acf-events

      Web Page related event-code can be grouped by a module. See codeunit "ACF Module Mapping" for creating a new module.
      Online documentation for module concept: www.NAVwebclient.com/anveo-help-modules
      Events that can be used in a module are marked with a "M".

      ************************************************************************************************************************************
      *** MAIN EVENTS MODULE *************************************************************************************************************
      ************************************************************************************************************************************

      Events-Overview
      ---------------
      * User session
        OnLogin                   Called on user login. Login can be cancelled here.
        OnLogout                  Called on user logout or on browser refresh or close.
        OnLoadEnvironment         Called on browser refresh without new login or after login
        GetLanguageFilter         Defines a filter on Language table for user selection.

      * Security
        ReadSecurityFilter        Sets read filters, called by every Web Page Element and DropDown-Lists
        CheckPassword             Tests password quality. Returns TRUE, if password is ok.
        TestPassword              Uses CheckPassword to test password quality. Calls an ERROR, if password is not ok.

      * Loading data (no asynchronious call, Mgt.-functions like Anveo-MESSAGE etc. is not processed by GUI)
        OnBeforeLoad          (M) Called on loading data once per Web Page Element, Filter to Records is set
        OnAfterGetField       (M) Called once per Web Page Element, Record and Field
        OnAfterGetRecord      (M) Called once per Web Page Element and Record
        OnAfterLoad           (M) Called on loading data once per Web Page Element

      * Data modification
        OnInit                (M) A new record is initialized. Default values can be set here.
        OnBeforeValidate      (M) A value is set to a record, but validation is not done yet. Validation can be cancelled here.
        OnValidate            (M) A value is set to a record and validation is done, if OnBeforeValidate returned true.
        CallOnInsertTrigger   (M) A new record is inserted. Return value decides whether to call INSERT(TRUE) or INSERT(FALSE).
        CallOnModifyTrigger   (M) A record is modified. Return value decides whether to call MODIFY(TRUE) or MODIFY(FALSE).
        CallOnDeleteTrigger   (M) A record is deleted. Return value decides whether to call DELETE(TRUE) or DELETE(FALSE).
        OnInsertRecord        (M) A record is inserted. Return value decides whether record is inserted.
        OnModifyRecord        (M) A record is modified. Return value decides whether record is modified.
        OnRenameRecord        (M) A record is renamed. Return value decides whether record is renamed.
        OnDeleteRecord        (M) A record is deleted. OnAction with Function code "DELETE_RECORD()" is also called.
        OnAfterInsertRecord   (M) Called after a record was successfully inserted.
        OnAfterModifyRecord   (M) Called after a record was successfully modified.
        OnAfterRenameRecord   (M) Called after a record was successfully renamed.
        OnAfterDeleteRecord   (M) Called after a record was successfully deleted.
        IsWriteBack           (M) In case of write behaviour "Defined" IsWriteBack defines if record is physically saved or stays tempor.

      * User events
        OnAction              (M) Button in menu or beside a field is pressed, or double click event on list web page.
                                 "Function Code" identifies C/AL-Code to run.
        OnBeforeCloseWebPage  (M) A Web Page is closed. It can be cancelled with return value false.

      * Relations
        CustomWebPageRelation (M) Defines a custom relation between Web Pages / Web Page Elements

      * Reports
        PrintReport           (M) Is called by OnMenu Action for printing reports as PDF or XML and sending it to GUI.

      * Other
        DropDownFieldDefinition (M) Defines field Nos in DropDown lists.

      09.11.2011  TMI   Anveo New functions for Magento Cancel, Release, Reopen
      08.12.2011  TMI  Anveo New function for Sales Return Order copy Order

      +--------------------------------------------+
      |                                            |
      |                  Home24                    |
      |     Cooperation Tectura & Home24 NAV Team  |
      |                                            |
      +--------------------------------------------+

      Project No. Date      Shortcut  Description
      _____________________________________________

      T0028       26.08.14  tec-cs    inserted a parameter to control handling of errors (show/hide)
      T0045       26.08.14  tec-cs    call "prevention calculation" from Anveo
      T0080       05.11.14  tec-cs    "process somplaint request" is handled by a codeunit now

      +-----------------------------------------------------+
      |               GOB Software & Systeme                |
      +-----------------------------------------------------+
      |                FP Commerce Anpassungen              |
      -------------------------------------------------------

      Version        Bemerkung
      -------------------------------------------------------
      P0011          GOB-MNO  21.06.2012  New Code Funktion "OnAction" um Retourenfunktionen
      P0011          GOB-MNO  29.06.2012  New Code "OnValidate" um Berechtigungsprfungen
      P0011          GOB-MNO  30.07.2012  New Code Function Parameter in OnAction "OPENLINKEDRETURNCARD"
      P0113          GOB-MNO  30.07.2012  New Code Function Parameter in OnAction "RESENDDROPMAIL"
      P0011          GOB-MNO  30.07.2012  New Code Function Parameter in OnAction "OPENLINESTATUS"
      P0127          GOB-MNO  01.08.2012  New Code in OnValidate
      P0128          GOB-MNO  01.08.2012  New Code in "OnBeforeValidate"
      p0150          gob-mab  10.08.12    Anpassungen fr Ausz. Sheet
      P0171          gob-mno  11.08.12    New Code in OnValidate
      p0150          gob-mab  13.08.12    Erw. Auszahlungssheet
      p0182          gob-fve  13.08.12    Lieferverz”gerungsliste
      P0206          gob-mno  16.08.12    Delete Code for AB-Days / AB-Week
      P0219          gob-mno  21.08.12    New Code "OnBeforeValidate"
      p0215          gob-fve  21.08.12    Anpassung zum Anzeigen von Telefon und Email (aus T18/T23, statt aus T36/T38)
                                            und in weiteren Web-Pages
      p0225          gob-fve  23.08.12    Anpassung, um in der Line Status List das Feld Tracking Code kopier- aber nicht
                                            editierbar zu machen.
      P0242          gob-ael  29.08.12    OnDelete: Check permission
      P0258          gob-mno  30.08.12    OnInsert: Insert Comment Archive
      P0283          gob-mno  05.09.12    Neue Action "OPENDROPSHIP"
      P0305          gob-fve  11.09.2012  New Code Function Parameter in OnAction "ORDERCANCEL_W/O_I/O", "LINECANCEL_W/O_I/O"
      P0320          gob-fve  12.09.2012  Logging der Funktionsaufrufe
      P0324          gob-mno  17.09.2012  New Code OnValidate
      P0356          gob-fve  19.09.2012  Ist ein bestimmter Status erreicht, muss der Magentocancel doppelconfirmt werden
      P0378          gob-fve  25.09.2012  Anpassung Anzeige Line Status
      P0403          gob-lku  02.10.12    Line Status Archive
      P0428          gob-mno  10.10.12    Fix bei Cancel ohne Schnittstelle
      P0543          gob-mno  31.10.12    Fix Project P0320
      P0594          gob-mno  16.11.12    New Action Code "POSTSHIPMENT"
      P0597          gob-mno  19.11.12    (Re-) Send Invoice E-Mail
      P0600          gob-mno  29.11.12    New Action Code "SENDCHANGEORDERMAIL"
      P0629          gob-mno  30.11.12    New Action Code "OPENARCHORDERCARD"
      P0654          gob-mno  06.12.12    Fix Projekt P0595
      P0655          gob-mno  06.12.12    Sales Comment Line editable no
      P0760          gob-mno  23.01.13    New Code
      P0821          gob-mno  21.02.13    Sales Comment Line editable no
      P0828          gob-mno  22.02.13    New Function Call "OPEN_RETURN_REFERENCE"
      P0834          gob-ael  27.02.13    Fr Anveo Bemerkungen in Auftragsarchiv
      P0836          gob-ael  28.02.13    Bemerkungen fr Umtauschfolgeauftr„ge
      P0839          gob-ael  01.03.13    Neue Funktionsaufrufe fr Anveo (Performance)
      P0843          gob-mno  04.03.13    New Function Code "AP_OPEN_ORDER"
      P0844          gob-mno  05.03.13    New Code in OnBeforeLoad trigger to set a dynamic order date filter
      P0856          gob-mno  14.03.13    BugFix for project P0843
      P0856          gob-mno  15.03.13    BugFix for project P0843
      P0863          gob-mno  19.03.13    New Action Code 'SHOW_ORIGINAL_ORDER'
      P0890          gob-adb  17.04.13    SETCURRENTKEYs added
      P0898          gob-mno  06.05.13    New Code in Function OPENHOME24
      P0964          gob-ael  03.09.13    Neue Funktionen/Aktionen fr Customer Update


      +--------------------------------------------+
      |                                            |
      |                  Home24                    |
      |       Internal Customizing by NAV-Team     |
      |                                            |
      +--------------------------------------------+

      Project No. Date     Shortcut  Description
      _____________________________________________
      H0233       05.03.13 FX        New Functions & fields available
      H0302       15.05.13 FX        New field Extended Billpay Due Date
      H0651       05.12.13 MBY       Send Invoice Mail SII Trigger
      H0584       13.03.14 HCN       Sales Line field changes incorporated
      H1202       08.07.14 HCN       Creation of follow-up order: new parameter
      H0587       09.07.14 HCN       Various RelationCodes, ActionCodes added, adjusted, disabled
      H1424       31.07.14 HCN       BugFix for OrderBalance
    }
    END.
  }
}

