OBJECT Codeunit 50167 EDI INVOIC Import Service
{
  OBJECT-PROPERTIES
  {
    Date=13.08.15;
    Time=11:56:22;
    Modified=Yes;
    Version List=GOB1.00,P1298,HME4536;
  }
  PROPERTIES
  {
    OnRun=VAR
            Rec@1000000000 : Record 82868;
          BEGIN
            // XXXXX TESTING!!!
            IF Rec.GET(137127) THEN BEGIN
              // Kopie der Programmierung aus CU 82850
              CompareToOrder(Rec);
              IF Rec."No. of Differences" = 0 THEN
                AcceptPurchaseDocument(Rec);
            END;
          END;

  }
  CODE
  {
    VAR
      Text001@1000000021 : TextConst 'DEU="Abweichung der Kred.-Artikelnr. in Zeile ";ENU="Difference with Item Vendor No. in line "';
      Text002@1000000020 : TextConst 'DEU=Kred.-Artikelnr.;ENU="Vendor Item No. "';
      Text003@1000000019 : TextConst 'DEU=''Lieferdatum'';ENU=Delivery Date';
      Text004@1000000018 : TextConst 'DEU=''Abweichung des Gew. Lieferdatums in Zeile '';ENU="Difference in Expected Delivery Date in line "';
      Text005@1000000017 : TextConst 'DEU=''Zeilenstatus'';ENU=Line Status';
      Text006@1000000016 : TextConst 'DEU=''Status '';ENU="Status "';
      Text007@1000000015 : TextConst 'DEU='' in Zeile '';ENU=" in line "';
      Text008@1000000014 : TextConst 'DEU=Bestellposition mehrfach vorhanden;ENU=Order Position is repeated';
      Text009@1000000013 : TextConst 'DEU=" mehrfach zurÅckgemeldet ";ENU=" reported back several times."';
      Text010@1000000012 : TextConst 'DEU=Bestellposition;ENU="Order Position "';
      Text011@1000000011 : TextConst 'DEU=''Mengenabweichung'';ENU=Difference in Quantities';
      Text012@1000000010 : TextConst 'DEU=''Abweichung der Menge in Zeile '';ENU="Difference in quantities in line "';
      Text013@1000000009 : TextConst 'DEU=''Bestellreferenz falsch'';ENU=Wrong Purchase Order No.';
      Text014@1000000008 : TextConst 'DEU=''Bestellreferenz'';ENU="Purchase Order No. "';
      Text015@1000000007 : TextConst 'DEU='' kann nicht gefunden werden.'';ENU=" was not found."';
      Text016@1000000006 : TextConst 'DEU=''Kopfstatus '';ENU="Header status "';
      Text017@1000000005 : TextConst 'DEU=''Belegnummer unbekannt.'';ENU=Purchase Order No. unknown.';
      Text018@1000000004 : TextConst 'ENU=Home24 Item No.';
      Text019@1000000003 : TextConst 'ENU="Difference with Item No. in line "';
      Text101@1000000002 : TextConst 'ENU="Difference with GTIN in line "';
      Text102@1000000001 : TextConst 'ENU=GTIN';
      Text200@1000000000 : TextConst 'ENU=NEW ERROR FOUND!\';
      Text300@1000000022 : TextConst 'ENU=Difference in %1.';
      Text301@1000000024 : TextConst 'ENU=Difference in %1 in Line %2.';
      Text302@1000000023 : TextConst 'ENU=No %1 found.';
      GetReceipts@1000000025 : Codeunit 74;
      Text303@1000000026 : TextConst 'ENU="No %1 found with a) %2 = %3 or b) %4 = %5, %6 = %7 and %8 = %9."';
      Text304@1000000027 : TextConst 'ENU=Line has to be shipped first.';
      TempPurchaseLine@1000000028 : TEMPORARY Record 39;
      TempPurchCommentLine@1000000032 : TEMPORARY Record 43;
      EDIPartnerDocumentType@1000000029 : Record 82852;
      Text305@1000000036 : TextConst 'ENU=%1 %2 does not exist.';
      Text306_H1880@1000000038 : TextConst 'ENU=Line is already invoiced.';
      Text307@1000000039 : TextConst 'ENU="Quantity = 0"';
      Text400@1000000037 : TextConst 'ENU=The Inbound Document %1 is accepted. Do you want to create another Invoice?';
      TextHME500@1000000040 : TextConst 'DEU=Mîglicherweise Set Artikel;ENU=Order contains set item(s) (Check: Not all items can be found and the related PO has less item lines than the EDI Doc.)';
      Error001@1000000030 : TextConst 'ENU=Error releasing EDI %1 %2.';
      Error002@1000000031 : TextConst 'ENU=Error posting EDI %1 %2.';
      Error003@1000000033 : TextConst 'ENU=Amounts are not correct in EDI %1 %2.';
      UpperPriceToleranceFactor@1000000035 : Decimal;
      LowerPriceToleranceFactor@1000000034 : Decimal;
      NoMessage@1000000041 : Boolean;
      TextHME501@1000000042 : TextConst 'ENU="Purchase order %1 = 0"';
      TextHME502@1000000043 : TextConst 'ENU="Purchase order %1 = 0 in line %2"';

    PROCEDURE CompareToOrder@1000000000(VAR pInboundEDIPurchDocHeader@1000000013 : Record 82868);
    VAR
      PurchaseHeader@1000000000 : Record 38;
      PurchaseLine@1000000002 : Record 39;
      PurchaseLine2@1000000015 : Record 39;
      SalesLine@1000000007 : Record 37;
      InboundEDIDocPurchLine@1000000001 : Record 82869;
      InboundEDIDocPurchLine2@1000000010 : Record 82869;
      Item@1000000009 : Record 27;
      Vendor@1000000003 : Record 23;
      Country@1000000004 : Record 9;
    BEGIN
      // S/P1262
      CompareAndCheckDifferences(pInboundEDIPurchDocHeader,FALSE);
      // E/P1262
    END;

    PROCEDURE AcceptPurchaseDocument@1000000014(VAR pInboundEDIPurchDocHeaderV@1000000000 : Record 82868);
    BEGIN
      //P1298 30.11.14 gob-Fuchs +++++++++++++++++
      IF pInboundEDIPurchDocHeaderV."Document Status" = pInboundEDIPurchDocHeaderV."Document Status"::Accepted THEN
        IF NOT CONFIRM(STRSUBSTNO(Text400,pInboundEDIPurchDocHeaderV."No."),FALSE) THEN
          EXIT;
      //P1298 30.11.14 gob-Fuchs -----------------

      //H3877, H1961 11.03.15 gob-Sievet +++++++++++++++++
      IF NOT GUIALLOWED THEN BEGIN
        IF CheckAcceptPostManually(pInboundEDIPurchDocHeaderV) THEN
          EXIT;
      END;
      //H3877, H1961 11.03.15 gob-Sievet -----------------

      // S/P1262
      CompareAndCheckDifferences(pInboundEDIPurchDocHeaderV,TRUE);
      // E/P1262
    END;

    PROCEDURE CompareAndCheckDifferences@1000000021(VAR pInboundEDIPurchDocHeader@1000000013 : Record 82868;pAcceptDocument@1000000005 : Boolean);
    VAR
      PurchaseHeader@1000000000 : Record 38;
      PurchaseHeaderCheckL@1000000011 : Record 38;
      PurchaseLine@1000000002 : Record 39;
      PurchaseLine2@1000000015 : Record 39;
      PurchaseLineCheckL@1000000012 : Record 39;
      SalesLine@1000000007 : Record 37;
      InboundEDIDocPurchLine@1000000001 : Record 82869;
      InboundEDIDocPurchLine2@1000000010 : Record 82869;
      Item@1000000009 : Record 27;
      Vendor@1000000003 : Record 23;
      Country@1000000004 : Record 9;
      ItemCrossReferenceL@1000000008 : Record 5717;
      PurchaseInvoiceNo@1000000006 : Code[20];
    BEGIN
      // S/P1262
      WITH pInboundEDIPurchDocHeader DO BEGIN

        IF "Document Type" <> "Document Type"::Invoice THEN
          EXIT;

        // Unterschiede & Fehler zurÅcksetzen
        "No. of Differences" := 0;
        "Document Difference 1" := '';
        "Document Difference 2" := '';
        "Document Difference 3" := '';

        // Kommentare (Warnungen) lîschen
        DeleteEDIPurchComment(pInboundEDIPurchDocHeader);

        IF NOT EDIPartnerDocumentType.GET(pInboundEDIPurchDocHeader."EDI Sender Partner Code",
          EDIPartnerDocumentType."Document Direction"::Inbound,'INVOIC')
        THEN BEGIN
          // No EDIPartnerDocumentType found
          "No. of Differences" := 1;
          WriteDocDifference(pInboundEDIPurchDocHeader,STRSUBSTNO(Text302,EDIPartnerDocumentType.TABLECAPTION));
          MODIFY;
          EXIT;
        END;

        // Toleranzwerte (fÅr Preisabweichungen) einmalig bestimmen
        DetermineTolerance();

        IF PurchaseHeader.GET(PurchaseHeader."Document Type"::Order, "Purchase Document No.") THEN BEGIN

          // Fill Order-Header-Fields for Comparison
          "Order Buy-from Vendor No." := PurchaseHeader."Buy-from Vendor No.";
          "Order Pay-to Vendor No." := PurchaseHeader."Pay-to Vendor No.";
          "Order Invoice Discount Value" := PurchaseHeader."Invoice Discount Value";

          // HEADER-COMPARISON
          IF "Order Buy-from Vendor No." <> pInboundEDIPurchDocHeader."Buy-from Vendor No." THEN BEGIN
            "No. of Differences" += 1;
            WriteDocDifference(pInboundEDIPurchDocHeader,STRSUBSTNO(Text300,FIELDCAPTION("Buy-from Vendor No.")));
          END;

          IF "Order Pay-to Vendor No." <> pInboundEDIPurchDocHeader."Pay-to Vendor No." THEN BEGIN
            "No. of Differences" += 1;
            WriteDocDifference(pInboundEDIPurchDocHeader,STRSUBSTNO(Text300,FIELDCAPTION("Pay-to Vendor No.")));
          END;

          IF PurchaseHeader."Currency Code" <> "Currency Code" THEN BEGIN
            "No. of Differences" += 1;
            WriteDocDifference(pInboundEDIPurchDocHeader,STRSUBSTNO(Text300,FIELDCAPTION("Currency Code")));
          END;

          IF "Order Invoice Discount Value" <> "Invoice Discount Value" THEN BEGIN
            // S/H1294 - Check Invoice Discount
            IF EDIPartnerDocumentType."Check Invoice Discount" THEN BEGIN
            // E/H1294
              "No. of Differences" += 1;
              WriteDocDifference(pInboundEDIPurchDocHeader,STRSUBSTNO(Text300,FIELDCAPTION("Invoice Discount Value")));
            // S/H1294
            END ELSE BEGIN
              // Create Comment Line
              CreateEDIPurchComment(pInboundEDIPurchDocHeader,STRSUBSTNO(Text300,FIELDCAPTION("Invoice Discount Value")));
            END;
            // E/H1294
          END;

          IF NOT CheckPaymentTerms(pInboundEDIPurchDocHeader,PurchaseHeader) THEN BEGIN
            // S/H1294 - Check Payment Term
            IF EDIPartnerDocumentType."Check Payment Term" THEN BEGIN
            // E/H1294
              "No. of Differences" += 1;
              WriteDocDifference(pInboundEDIPurchDocHeader,STRSUBSTNO(Text300,FIELDCAPTION("Payment Terms Code")));
            // S/H1294
            END ELSE BEGIN
              // Create Comment Line
              CreateEDIPurchComment(pInboundEDIPurchDocHeader,STRSUBSTNO(Text300,FIELDCAPTION("Payment Terms Code")));
            END;
          END;

          // Compare "H24 GLN-No." und "H24 VAT Id No."
          IF pInboundEDIPurchDocHeader."Order Type" = pInboundEDIPurchDocHeader."Order Type"::"Drop Shipment" THEN BEGIN
            IF NOT Vendor.GET(pInboundEDIPurchDocHeader."Buy-from Vendor No.") THEN BEGIN
              "No. of Differences" += 1;
              WriteDocDifference(pInboundEDIPurchDocHeader,
                STRSUBSTNO(Text305,FIELDCAPTION("Buy-from Vendor No."),"Buy-from Vendor No."));
            END ELSE BEGIN
              IF Vendor."Crossborder VAT" THEN BEGIN
                IF NOT Country.GET(pInboundEDIPurchDocHeader."Ship-to Country/Region Code") THEN
                  CLEAR(Country);
                IF pInboundEDIPurchDocHeader."h24 VAT Registration No." <> Country."Our VAT Registration No." THEN BEGIN
                  "No. of Differences" += 1;
                  WriteDocDifference(pInboundEDIPurchDocHeader,STRSUBSTNO(Text300,FIELDCAPTION("h24 VAT Registration No.")));
                END;
                IF pInboundEDIPurchDocHeader."h24 GLN-No." <> Country."Our GLN-No." THEN BEGIN
                  "No. of Differences" += 1;
                  WriteDocDifference(pInboundEDIPurchDocHeader,STRSUBSTNO(Text300,FIELDCAPTION("h24 GLN-No.")));
                END;
              END;
            END;
          END;

          // TemporÑre EK-Bestellzeilen lîschen
          TempPurchaseLine.RESET;
          TempPurchaseLine.DELETEALL;
          // TemporÑre EK-Bemerkungszeilen lîschen
          TempPurchCommentLine.RESET;
          TempPurchCommentLine.DELETEALL;

          // Check Inbound EDI Doc. Purch. Lines
          InboundEDIDocPurchLine.RESET;
          InboundEDIDocPurchLine.SETRANGE("Document No.", "No.");
          // H3877 11.03.15 gob-Sievet +++++++++++++++++
          PurchaseLineCheckL.RESET;
          PurchaseLineCheckL.SETRANGE("Document Type",PurchaseLineCheckL."Document Type"::Order);
          PurchaseLineCheckL.SETRANGE("Document No.","Purchase Document No.");
          IF InboundEDIDocPurchLine.COUNT > PurchaseLineCheckL.COUNT THEN BEGIN
            "No. of Differences" += 1;
            WriteDocDifference(pInboundEDIPurchDocHeader,TextHME500);
          END;
          // H3877 11.03.15 gob-Sievet -----------------
          IF InboundEDIDocPurchLine.FIND('-') THEN BEGIN

            REPEAT

              //P1298 30.11.14 gob-Fuchs +++++++++++++++++
              //Try to find Item No.
              IF InboundEDIDocPurchLine."No." = '' THEN BEGIN
                ItemCrossReferenceL.SETRANGE("Cross-Reference Type",ItemCrossReferenceL."Cross-Reference Type"::"Bar Code");
                ItemCrossReferenceL.SETRANGE("Cross-Reference No.",InboundEDIDocPurchLine.GTIN);
                IF ItemCrossReferenceL.FINDFIRST THEN
                  InboundEDIDocPurchLine."No." := ItemCrossReferenceL."Item No.";
              END;
              //P1298 30.11.14 gob-Fuchs -----------------


              // Unterschiede zurÅcksetzen
              InboundEDIDocPurchLine."Line Differences" := '';

              // Ermittlung der zugehîrigen EK-Bestellzeile anhand der Referenz-Zeilen-Nr. (eindeutig)
              IF PurchaseLine.GET(
                PurchaseLine."Document Type"::Order, PurchaseHeader."No.", InboundEDIDocPurchLine."Reference Line No.")
              THEN BEGIN

                // PrÅfen, ob noch weitere EDI-Zeilen zur aktuellen EK-Bestellzeile existieren
                InboundEDIDocPurchLine2.RESET;
                InboundEDIDocPurchLine2.SETRANGE("Document No.",InboundEDIDocPurchLine."Document No.");
                InboundEDIDocPurchLine2.SETFILTER("Line No.",'<>%1',InboundEDIDocPurchLine."Line No.");
                InboundEDIDocPurchLine2.SETRANGE("Reference Line No.",InboundEDIDocPurchLine."Reference Line No.");
                IF InboundEDIDocPurchLine2.ISEMPTY THEN BEGIN
                  // Eindeutige (1:1) Beziehung zwischen EDI- und EK-Bestellzeile

                  FillOrderFieldsInEDIPurchLine(InboundEDIDocPurchLine,PurchaseLine);

                  CompareSingleEDIPurchLine(pInboundEDIPurchDocHeader,InboundEDIDocPurchLine,PurchaseLine,pAcceptDocument);

                END ELSE BEGIN

                  // Filterung der zugehîrigen EDI-Zeilen (>1)
                  InboundEDIDocPurchLine2.SETRANGE("Line No.");
                  InboundEDIDocPurchLine2.FIND('-');
                  REPEAT
                    // Relevante Informationen aus der EK-Bestellzeile in die jeweilige EDI-Zeile Åbertragen
                    FillOrderFieldsInEDIPurchLine(InboundEDIDocPurchLine2,PurchaseLine);
                  UNTIL InboundEDIDocPurchLine2.NEXT = 0;

                  // Filterung der zugehîrigen EK-Bestellzeile (=1)
                  PurchaseLine.RESET;
                  PurchaseLine.SETRANGE("Document Type",PurchaseLine."Document Type"::Order);
                  PurchaseLine.SETRANGE("Document No.",PurchaseLine."Document No.");
                  PurchaseLine.SETRANGE("Line No.",PurchaseLine."Line No.");

                  // Vergleich der zugehîrigen EDI- und EK-Bestellzeile(n)
                  CompareMultipleEDIPurchLines(pInboundEDIPurchDocHeader,InboundEDIDocPurchLine2,PurchaseLine,pAcceptDocument);

                END;

              END ELSE BEGIN
                // Keine EK-Bestellzeile anhand der Referenz-Zeilen-Nr. gefunden

                // Ermittlung der zugehîrigen EK-Bestellzeile(n) u.a. anhand der Artikelnr.
                PurchaseLine.RESET;
                PurchaseLine.SETRANGE("Document Type",PurchaseLine."Document Type"::Order);
                PurchaseLine.SETRANGE("Document No.", PurchaseHeader."No.");
                PurchaseLine.SETRANGE(Type,PurchaseLine.Type::Item);
                PurchaseLine.SETRANGE("No.",InboundEDIDocPurchLine."No.");
                PurchaseLine.SETRANGE("Variant Code",InboundEDIDocPurchLine."Variant Code");
                PurchaseLine.SETRANGE("Unit of Measure Code",InboundEDIDocPurchLine."Unit of Measure Code");
                IF PurchaseLine.ISEMPTY THEN BEGIN

                  // Keine zugehîrige EK-Bestellzeile gefunden
                  "No. of Differences" += 1;
                  InboundEDIDocPurchLine."Line Differences" := STRSUBSTNO(Text302,PurchaseLine.TABLECAPTION);
                  WriteDocDifference(pInboundEDIPurchDocHeader,
                    STRSUBSTNO(Text303,PurchaseLine.TABLECAPTION,
                    InboundEDIDocPurchLine.FIELDCAPTION("Reference Line No."),InboundEDIDocPurchLine."Reference Line No.",
                    InboundEDIDocPurchLine.FIELDCAPTION("No."),InboundEDIDocPurchLine."No.",
                    InboundEDIDocPurchLine.FIELDCAPTION("Variant Code"),InboundEDIDocPurchLine."Variant Code",
                    InboundEDIDocPurchLine.FIELDCAPTION("Unit of Measure Code"),InboundEDIDocPurchLine."Unit of Measure Code"));
                END ELSE BEGIN
                  // Mindestens 1 EK-Bestellzeile gefunden

                  // PrÅfen, ob noch weitere EDI-Zeilen zur aktuellen EK-Bestellzeile existieren
                  InboundEDIDocPurchLine2.RESET;
                  InboundEDIDocPurchLine2.SETRANGE("Document No.",InboundEDIDocPurchLine."Document No.");
                  InboundEDIDocPurchLine2.SETFILTER("Line No.",'<>%1',InboundEDIDocPurchLine."Line No.");
                  InboundEDIDocPurchLine2.SETRANGE("No.",InboundEDIDocPurchLine."No.");
                  InboundEDIDocPurchLine2.SETRANGE("Variant Code",InboundEDIDocPurchLine."Variant Code");
                  InboundEDIDocPurchLine2.SETRANGE("Unit of Measure Code",InboundEDIDocPurchLine."Unit of Measure Code");
                  IF InboundEDIDocPurchLine2.ISEMPTY THEN BEGIN
                    // Genau 1 EDI-Zeile (=1)

                    IF PurchaseLine.COUNT = 1 THEN BEGIN
                      // Genau 1 EDI-Zeile und genau 1 EK-Bestellzeile => Eindeutige (1:1) Beziehung zwischen EDI- und EK-Bestellzeile
                      PurchaseLine.FINDFIRST;

                      FillOrderFieldsInEDIPurchLine(InboundEDIDocPurchLine,PurchaseLine);

                      CompareSingleEDIPurchLine(pInboundEDIPurchDocHeader,InboundEDIDocPurchLine,PurchaseLine,pAcceptDocument);

                    END ELSE BEGIN
                      // Genau 1 EDI-Zeile, aber mehrere EK-Bestellzeilen

                      // Filterung der zugehîrigen EDI-Zeile
                      InboundEDIDocPurchLine2.SETRANGE("Line No.");

                      // Vergleich der zugehîrigen EDI- und EK-Bestellzeile(n)
                      CompareMultipleEDIPurchLines(pInboundEDIPurchDocHeader,InboundEDIDocPurchLine2,PurchaseLine,pAcceptDocument);

                    END;

                  END ELSE BEGIN
                    // Mehrere EDI-Zeilen (>1)

                    // Filterung der zugehîrigen EDI-Zeilen
                    InboundEDIDocPurchLine2.SETRANGE("Line No.");

                    IF PurchaseLine.COUNT = 1 THEN BEGIN
                      // Mehrere EDI-Zeilen und genau 1 EK-Bestellzeile
                      PurchaseLine.FINDFIRST;

                      InboundEDIDocPurchLine2.FIND('-');
                      REPEAT
                        // Relevante Informationen aus der EK-Bestellzeile in die jeweilige EDI-Zeile Åbertragen
                        FillOrderFieldsInEDIPurchLine(InboundEDIDocPurchLine2,PurchaseLine);
                      UNTIL InboundEDIDocPurchLine2.NEXT = 0;
                    END;

                    // Vergleich der zugehîrigen EDI- und EK-Bestellzeile(n)
                    CompareMultipleEDIPurchLines(pInboundEDIPurchDocHeader,InboundEDIDocPurchLine2,PurchaseLine,pAcceptDocument);

                  END;

                END;

              END;

              InboundEDIDocPurchLine.MODIFY;

            UNTIL InboundEDIDocPurchLine.NEXT = 0;

          END ELSE BEGIN
            // No InboundEDIDocPurchLine found
            "No. of Differences" += 1;
            WriteDocDifference(pInboundEDIPurchDocHeader,STRSUBSTNO(Text302,InboundEDIDocPurchLine.TABLECAPTION));
            MODIFY;
            EXIT;
          END;

        END ELSE BEGIN
          // No PurchaseHeader found
          "No. of Differences" += 1;
          WriteDocDifference(pInboundEDIPurchDocHeader,Text017);
          MODIFY;
          // H3877 07.04.15  gob-sievet +++++++++++++++++++++++++++++++++
          IF GUIALLOWED AND NoMessage THEN BEGIN
            PurchaseHeaderCheckL.RESET;
            CreatePurchInvoiceHeader(pInboundEDIPurchDocHeader,PurchaseHeader,PurchaseHeaderCheckL);
            pInboundEDIPurchDocHeader."Created Document No." := PurchaseHeader."No.";
            pInboundEDIPurchDocHeader."Document Status" := "Document Status"::Accepted;
            pInboundEDIPurchDocHeader.MODIFY;
          END;
          // H3877 07.04.15  gob-sievet ----------------------------------
          EXIT;
        END;

        MODIFY;

        // NEU => nur bei Accept mÅssen temporÑre EK-Bestellzeilen angelegt werden (auch wenn noch Abweichungen vorhanden sind)
        IF pAcceptDocument THEN BEGIN
          // Ungebuchte EK-Rechnung anlegen
          CreatePurchInvoice(pInboundEDIPurchDocHeader,PurchaseHeader,PurchaseInvoiceNo);
          // Status des EDI-Belegs als akzeptiert kennzeichnen und Nr. der erzeugten Rechnung eintragen
          //H1880 06.12.14 gob-fuchsk +++++++++++++++++
          pInboundEDIPurchDocHeader.GET(pInboundEDIPurchDocHeader."No."); //becaus of MODIFY during posting
          IF pInboundEDIPurchDocHeader."Document Status" <> pInboundEDIPurchDocHeader."Document Status"::Posted THEN BEGIN
          //H1880 06.12.14 gob-fuchsk -----------------
            pInboundEDIPurchDocHeader."Created Document No." := PurchaseInvoiceNo;

            // H2165 10.03.15  gob-sievet +++++++++++++++++++++++++++++++++
            IF PurchaseHeaderCheckL.GET(PurchaseHeaderCheckL."Document Type"::Invoice,PurchaseInvoiceNo) THEN
            // H2165 10.03.15  gob-sievet ----------------------------------
              pInboundEDIPurchDocHeader."Document Status" := pInboundEDIPurchDocHeader."Document Status"::Accepted;
            pInboundEDIPurchDocHeader.MODIFY;
          END;
        END;

      END; // WITH pInboundEDIPurchDocHeader DO BEGIN
      // E/P1262
    END;

    PROCEDURE FillOrderFieldsInEDIPurchLine@1000000012(VAR pInboundEDIDocPurchLine@1000000001 : Record 82869;VAR pPurchaseLine@1000000000 : Record 39);
    BEGIN
      // S/P1262
      // Fill Order-Line-Fields for Comparison
      // Item No., Quantities, Unit of Measure, Costs, Discounts and Amounts from original PO Line
      pInboundEDIDocPurchLine."Order Item No." := pPurchaseLine."No.";
      pInboundEDIDocPurchLine."Order Quantity" := pPurchaseLine."Qty. Rcd. Not Invoiced";
      pInboundEDIDocPurchLine."Order Outstanding Quantity" := pPurchaseLine."Outstanding Quantity";
      pInboundEDIDocPurchLine."Order Qty. per Unit of Measure" := pPurchaseLine."Qty. per Unit of Measure";
      pInboundEDIDocPurchLine."Order Unit of Measure Code" := pPurchaseLine."Unit of Measure Code";
      pInboundEDIDocPurchLine."Order Direct Unit Cost" := pPurchaseLine."Direct Unit Cost";
      pInboundEDIDocPurchLine."Order Line Discount %" := pPurchaseLine."Line Discount %";
      // ACHTUNG:
      // Menge 50, Geliefert = 50, Fakturiert = 20, Offen = 30
      // EK-Preis = 20, Rabatt = 50 %, Zeilenrabattbetrag = 500, Zeilenbetrag = 500
      //H1979 08.01.15 gob-dah +++++++++++++++++++++
      IF pPurchaseLine.Quantity <> 0 THEN
        BEGIN
      //H1979 08.01.15 gob-dah ---------------------
          pInboundEDIDocPurchLine."Order Line Discount Amount" :=
            pPurchaseLine."Line Discount Amount" / pPurchaseLine.Quantity * pPurchaseLine."Qty. Rcd. Not Invoiced";
          pInboundEDIDocPurchLine."Order Line Amount" :=
            pPurchaseLine."Line Amount" / pPurchaseLine.Quantity * pPurchaseLine."Qty. Rcd. Not Invoiced";
      //H1979 08.01.15 gob-dah +++++++++++++++++++++
        END;
      //H1979 08.01.15 gob-dah ---------------------

      pInboundEDIDocPurchLine."Order VAT %" := pPurchaseLine."VAT %";
      // E/P1262

      //P1298 30.11.14 gob-Fuchs +++++++++++++++++
      pInboundEDIDocPurchLine."Order Quantity Received" := pPurchaseLine."Quantity Received";
      pInboundEDIDocPurchLine."Order Quantity Invoiced" := pPurchaseLine."Quantity Invoiced";
      //P1298 30.11.14 gob-Fuchs -----------------

      // H2165 10.03.15  gob-sievet +++++++++++++++++++++++++++++++++
      pInboundEDIDocPurchLine."NAV Vendor Item No." := UPPERCASE(pPurchaseLine."Vendor Item No.");
      // H2165 10.03.15  gob-sievet ----------------------------------
    END;

    PROCEDURE CompareSingleEDIPurchLine@1000000005(VAR pInboundEDIPurchDocHeader@1000000000 : Record 82868;VAR pInboundEDIDocPurchLine@1000000001 : Record 82869;VAR pPurchaseLine@1000000003 : Record 39;pAcceptDocument@1000000005 : Boolean);
    VAR
      ItemDiff@1000000002 : Integer;
      EDIPurchCommentLine@1000000004 : Record 43;
      PreCheckItemL@1000000006 : Boolean;
    BEGIN
      // S/P1262
      // Eindeutige (1:1) Beziehung zwischen EDI- und EK-Bestellzeile
      // An diese Funktion mÅssen die DatensÑtze direkt (ungefiltert) Åbergeben werden

      // Compare Item No. // + EAN + Vendor Item No.
      // H2165 10.03.15  gob-sievet +++++++++++++++++++++++++++++++++
      PreCheckItemL := pInboundEDIDocPurchLine."No." = pInboundEDIDocPurchLine."Order Item No.";
      IF NOT PreCheckItemL THEN
        PreCheckItemL := pInboundEDIDocPurchLine."NAV Vendor Item No." = pInboundEDIDocPurchLine."Vendor Item No.";
      // H2165 10.03.15  gob-sievet ----------------------------------

      // H2165 10.03.15  gob-sievet +++++++++++++++++++++++++++++++++
      IF NOT PreCheckItemL THEN BEGIN
      // H2165 10.03.15  gob-sievet ----------------------------------
        IF pInboundEDIDocPurchLine."No." <> pInboundEDIDocPurchLine."Order Item No." THEN BEGIN
          pInboundEDIPurchDocHeader."No. of Differences" += 1;
          WriteLineDifference(pInboundEDIDocPurchLine,
            STRSUBSTNO(Text300,pInboundEDIDocPurchLine.FIELDCAPTION("Order Item No.")));
          WriteDocDifference(pInboundEDIPurchDocHeader,
            STRSUBSTNO(Text301,pInboundEDIDocPurchLine.FIELDCAPTION("Order Item No."),pInboundEDIDocPurchLine."Line No."));
        END;
      // H2165 10.03.15  gob-sievet +++++++++++++++++++++++++++++++++
      END;
      // H2165 10.03.15  gob-sievet ----------------------------------

      IF pInboundEDIDocPurchLine."Unit of Measure Code" <>
        pInboundEDIDocPurchLine."Order Unit of Measure Code"
      THEN BEGIN
        pInboundEDIPurchDocHeader."No. of Differences" += 1;
        WriteLineDifference(pInboundEDIDocPurchLine,
          STRSUBSTNO(Text300,pInboundEDIDocPurchLine.FIELDCAPTION("Unit of Measure Code")));
        WriteDocDifference(pInboundEDIPurchDocHeader,
          STRSUBSTNO(Text301,pInboundEDIDocPurchLine.FIELDCAPTION("Unit of Measure Code"),pInboundEDIDocPurchLine."Line No."));
      END;

      //H1979 22.01.2015 gob-sievet +++++++++++++++++++++
      // Check Quantity = 0
      IF (pPurchaseLine.Quantity = 0) OR (pPurchaseLine."Quantity (Base)" = 0) THEN BEGIN
        pInboundEDIPurchDocHeader."No. of Differences" += 1;
        WriteLineDifference(pInboundEDIDocPurchLine,
          STRSUBSTNO(Text300,pInboundEDIDocPurchLine.FIELDCAPTION("Order Item No.")) + ' ' + Text307);
        WriteDocDifference(pInboundEDIPurchDocHeader,
          STRSUBSTNO(Text301,pInboundEDIDocPurchLine.FIELDCAPTION("Order Item No."),pInboundEDIDocPurchLine."Line No.")
                     + ' ' + Text307);
      END;
      //H1979 22.01.2015 gob-sievet ---------------------

      // Compare Quantity
      // pInboundEDIDocPurchLine."Order Quantity" contains "Qty. Rcd. Not Invoiced"
      IF pInboundEDIDocPurchLine.Quantity <> pInboundEDIDocPurchLine."Order Quantity" THEN BEGIN

        IF (pInboundEDIDocPurchLine.Quantity > pInboundEDIDocPurchLine."Order Quantity") AND
          (pInboundEDIDocPurchLine.Quantity <=
          pInboundEDIDocPurchLine."Order Quantity" + pInboundEDIDocPurchLine."Order Outstanding Quantity")
        THEN BEGIN
          // Menge kann nicht (vollstÑndig) fakturiert werden, Position muss zuerst geliefert werden
          pInboundEDIPurchDocHeader."No. of Differences" += 1;
          WriteLineDifference(pInboundEDIDocPurchLine,
            STRSUBSTNO(Text300,pInboundEDIDocPurchLine.FIELDCAPTION(Quantity)) + ' ' + Text304);
          WriteDocDifference(pInboundEDIPurchDocHeader,
            STRSUBSTNO(Text301,pInboundEDIDocPurchLine.FIELDCAPTION(Quantity),pInboundEDIDocPurchLine."Line No.") + ' ' + Text304);
        END ELSE BEGIN

          //H1880 06.12.14 gob-fuchsk +++++++++++++++++
          IF (pInboundEDIDocPurchLine."Order Item No." <> '') AND (pInboundEDIDocPurchLine."Order Quantity" = 0) THEN BEGIN
            pInboundEDIPurchDocHeader."No. of Differences" += 1;
            WriteLineDifference(pInboundEDIDocPurchLine,
              STRSUBSTNO(Text300,pInboundEDIDocPurchLine.FIELDCAPTION(Quantity)) + ' ' + Text306_H1880);
            WriteDocDifference(pInboundEDIPurchDocHeader,
              STRSUBSTNO(Text301,pInboundEDIDocPurchLine.FIELDCAPTION(Quantity),pInboundEDIDocPurchLine."Line No.") + ' ' +
              Text306_H1880);
          END ELSE BEGIN
          //H1880 06.12.14 gob-fuchsk -----------------

            pInboundEDIPurchDocHeader."No. of Differences" += 1;
            WriteLineDifference(pInboundEDIDocPurchLine,
              STRSUBSTNO(Text300,pInboundEDIDocPurchLine.FIELDCAPTION(Quantity)));
            WriteDocDifference(pInboundEDIPurchDocHeader,
              STRSUBSTNO(Text301,pInboundEDIDocPurchLine.FIELDCAPTION(Quantity),pInboundEDIDocPurchLine."Line No."));
            //END ELSE BEGIN
            // Was ist mit Teilfaktura? Zulassen oder auch herausfiltern?
            //END;
          //H1880 06.12.14 gob-fuchsk +++++++++++++++++
          END;
          //H1880 06.12.14 gob-fuchsk -----------------
        END;
      END;

      // Compare Costs, Discounts and Amounts
      IF NOT CheckPricesInclTolerance(
        pInboundEDIDocPurchLine."Direct Unit Cost",pInboundEDIDocPurchLine."Order Direct Unit Cost")
      THEN BEGIN
        pInboundEDIPurchDocHeader."No. of Differences" += 1;
        //H4152 29.04.15 gob-Sievet +++++++++++++++++++++++++++++
        IF pInboundEDIDocPurchLine."Order Direct Unit Cost" = 0 THEN BEGIN
          WriteLineDifference(pInboundEDIDocPurchLine,
            STRSUBSTNO(TextHME501,pInboundEDIDocPurchLine.FIELDCAPTION("Direct Unit Cost")));
          WriteDocDifference(pInboundEDIPurchDocHeader,
            STRSUBSTNO(TextHME502,pInboundEDIDocPurchLine.FIELDCAPTION("Direct Unit Cost"),pInboundEDIDocPurchLine."Line No."));
        END;
        //H4152 29.04.15 gob-Sievet -----------------------------
        WriteLineDifference(pInboundEDIDocPurchLine,
          STRSUBSTNO(Text300,pInboundEDIDocPurchLine.FIELDCAPTION("Direct Unit Cost")));
        WriteDocDifference(pInboundEDIPurchDocHeader,
          STRSUBSTNO(Text301,pInboundEDIDocPurchLine.FIELDCAPTION("Direct Unit Cost"),pInboundEDIDocPurchLine."Line No."));
      END;
      IF NOT CheckPricesInclTolerance(
        //H4152 29.04.15 gob-Sievet +++++++++++++++++++++++++++++
        //pInboundEDIDocPurchLine."Line Discount %",pInboundEDIDocPurchLine."Order Line Discount %")
        pInboundEDIDocPurchLine."Order Line Discount %",pInboundEDIDocPurchLine."Line Discount %")
        //H4152 29.04.15 gob-Sievet -----------------------------
      THEN BEGIN
        // S/H1294 - Check Line Discount %
        IF EDIPartnerDocumentType."Check Line Discount" THEN BEGIN
        // E/H1294
          pInboundEDIPurchDocHeader."No. of Differences" += 1;
          WriteLineDifference(pInboundEDIDocPurchLine,
            STRSUBSTNO(Text300,pInboundEDIDocPurchLine.FIELDCAPTION("Line Discount %")));
          WriteDocDifference(pInboundEDIPurchDocHeader,
            STRSUBSTNO(Text301,pInboundEDIDocPurchLine.FIELDCAPTION("Line Discount %"),pInboundEDIDocPurchLine."Line No."));
        // S/H1294
        END ELSE BEGIN
          // Create Comment Line
          CreateEDIPurchComment(pInboundEDIPurchDocHeader,STRSUBSTNO(Text301,pInboundEDIDocPurchLine.FIELDCAPTION("Line Discount %"),
                                pInboundEDIDocPurchLine."Line No."));
        END;
        // E/H1294
      END;
      IF NOT CheckPricesInclTolerance(
        pInboundEDIDocPurchLine."Line Discount Amount",pInboundEDIDocPurchLine."Order Line Discount Amount")
      THEN BEGIN
        // S/H1294 - Check Line Discount Amount
        IF EDIPartnerDocumentType."Check Line Discount" THEN BEGIN
        // E/H1294
          pInboundEDIPurchDocHeader."No. of Differences" += 1;
          //H4152 29.04.15 gob-Sievet +++++++++++++++++++++++++++++
          IF pInboundEDIDocPurchLine."Order Line Discount Amount" = 0 THEN BEGIN
            WriteLineDifference(pInboundEDIDocPurchLine,
              STRSUBSTNO(TextHME501,pInboundEDIDocPurchLine.FIELDCAPTION("Order Line Discount Amount")));
            WriteDocDifference(pInboundEDIPurchDocHeader,
              STRSUBSTNO(TextHME502,pInboundEDIDocPurchLine.FIELDCAPTION("Order Line Discount Amount"),
                         pInboundEDIDocPurchLine."Line No."));
          END;
          //H4152 29.04.15 gob-Sievet -----------------------------
          WriteLineDifference(pInboundEDIDocPurchLine,
            STRSUBSTNO(Text300,pInboundEDIDocPurchLine.FIELDCAPTION("Line Discount Amount")));
          WriteDocDifference(pInboundEDIPurchDocHeader,
            STRSUBSTNO(Text301,pInboundEDIDocPurchLine.FIELDCAPTION("Line Discount Amount"),pInboundEDIDocPurchLine."Line No."));
        // S/H1294
        END ELSE BEGIN
          // Create Comment Line
          CreateEDIPurchComment(pInboundEDIPurchDocHeader,STRSUBSTNO(Text301,
            pInboundEDIDocPurchLine.FIELDCAPTION("Line Discount Amount"),
            pInboundEDIDocPurchLine."Line No."));
        END;
        // E/H1294
      END;
      //IF pInboundEDIDocPurchLine."Line Amount" <> pInboundEDIDocPurchLine."Order Line Amount" THEN BEGIN
      IF NOT CheckPricesInclTolerance(
        pInboundEDIDocPurchLine."Line Amount",pInboundEDIDocPurchLine."Order Line Amount")
      THEN BEGIN
        // S/H1294 - Check Line Amount
        //H4152 29.04.15 gob-Sievet +++++++++++++++++++++++++++++
        //IF EDIPartnerDocumentType."Check PO-Price" THEN BEGIN
        //H4152 29.04.15 gob-Sievet -----------------------------
        // E/H1294
          pInboundEDIPurchDocHeader."No. of Differences" += 1;
          //H4152 29.04.15 gob-Sievet +++++++++++++++++++++++++++++
          IF pInboundEDIDocPurchLine."Order Line Amount" = 0 THEN BEGIN
            WriteLineDifference(pInboundEDIDocPurchLine,
              STRSUBSTNO(TextHME501,pInboundEDIDocPurchLine.FIELDCAPTION("Order Line Amount")));
            WriteDocDifference(pInboundEDIPurchDocHeader,
              STRSUBSTNO(TextHME502,pInboundEDIDocPurchLine.FIELDCAPTION("Order Line Amount"),pInboundEDIDocPurchLine."Line No."));
          END;
          //H4152 29.04.15 gob-Sievet -----------------------------
          WriteLineDifference(pInboundEDIDocPurchLine,
            STRSUBSTNO(Text300,pInboundEDIDocPurchLine.FIELDCAPTION("Line Amount")));
          WriteDocDifference(pInboundEDIPurchDocHeader,
            STRSUBSTNO(Text301,pInboundEDIDocPurchLine.FIELDCAPTION("Line Amount"),pInboundEDIDocPurchLine."Line No."));
        // S/H1294
        //H4152 29.04.15 gob-Sievet +++++++++++++++++++++++++++++
        //END ELSE BEGIN
          // Create Comment Line
        //  CreateEDIPurchComment(pInboundEDIPurchDocHeader,STRSUBSTNO(Text301,pInboundEDIDocPurchLine.FIELDCAPTION("Line Amount"),
        //                        pInboundEDIDocPurchLine."Line No."));
        //END;
        //H4152 29.04.15 gob-Sievet -----------------------------
        // E/H1294
      END;
      // Compare VAT %
      IF pInboundEDIDocPurchLine."VAT %" <> pInboundEDIDocPurchLine."Order VAT %" THEN BEGIN
        pInboundEDIPurchDocHeader."No. of Differences" += 1;
        WriteLineDifference(pInboundEDIDocPurchLine,
          STRSUBSTNO(Text300,pInboundEDIDocPurchLine.FIELDCAPTION("VAT %")));
        WriteDocDifference(pInboundEDIPurchDocHeader,
          STRSUBSTNO(Text301,pInboundEDIDocPurchLine.FIELDCAPTION("VAT %"),pInboundEDIDocPurchLine."Line No."));
      END;

      IF pAcceptDocument THEN BEGIN
        // Falls PrÅfung OK => TemporÑre EK-Bestellzeile anlegen
        // NEU => nur bei Accept mÅssen temporÑre EK-Bestellzeilen angelegt werden (auch wenn noch Abweichungen vorhanden sind)
        TempPurchaseLine.INIT;
        TempPurchaseLine := pPurchaseLine;
        TempPurchaseLine."Direct Unit Cost" := pInboundEDIDocPurchLine."Direct Unit Cost";
        TempPurchaseLine."Line Discount %" := pInboundEDIDocPurchLine."Line Discount %";
        IF NOT TempPurchaseLine.INSERT THEN
          TempPurchaseLine.MODIFY;
        // => TemporÑre EK-Bemerkungszeile(n) anlegen
        EDIPurchCommentLine.RESET;
        EDIPurchCommentLine.SETRANGE("Document Type",EDIPurchCommentLine."Document Type"::"EDI INVOIC");
        EDIPurchCommentLine.SETRANGE("No.",FORMAT(pInboundEDIDocPurchLine."Document No."));
        EDIPurchCommentLine.SETRANGE("Document Line No.",pInboundEDIDocPurchLine."Line No.");
        IF EDIPurchCommentLine.FIND('-') THEN
          REPEAT
            TempPurchCommentLine.INIT;
            TempPurchCommentLine := EDIPurchCommentLine;
            TempPurchCommentLine.VALIDATE("Document Type",TempPurchCommentLine."Document Type"::Order);
            TempPurchCommentLine.VALIDATE("No.",pPurchaseLine."Document No.");
            TempPurchCommentLine.VALIDATE("Document Line No.",pPurchaseLine."Line No.");
            IF NOT TempPurchCommentLine.INSERT THEN
              TempPurchCommentLine.MODIFY;
          UNTIL EDIPurchCommentLine.NEXT = 0;
      END;
      // E/P1262
    END;

    PROCEDURE CompareMultipleEDIPurchLines@1000000006(VAR pInboundEDIPurchDocHeader@1000000000 : Record 82868;VAR pInboundEDIDocPurchLine@1000000001 : Record 82869;VAR pPurchaseLine@1000000007 : Record 39;pAcceptDocument@1000000014 : Boolean);
    VAR
      TempEDIQuantity@1000000004 : Decimal;
      TempEDILineDiscountAmount@1000000002 : Decimal;
      TempEDILineAmount@1000000005 : Decimal;
      TempPurchOrderQtyRcdNotInvcd@1000000009 : Decimal;
      TempPurchOrderOutstandingQty@1000000003 : Decimal;
      TempPurchOrderLineDiscAmount@1000000008 : Decimal;
      TempPurchOrderLineAmount@1000000006 : Decimal;
      DifferenceExists@1000000010 : ARRAY [10] OF Boolean;
      EDIPurchCommentLine@1000000011 : Record 43;
      UpperPriceToleranceFactor@1000000012 : Decimal;
      LowerPriceToleranceFactor@1000000013 : Decimal;
      PreCheckItemL@1000000015 : Boolean;
    BEGIN
      // S/P1262
      // Keine eindeutige Beziehung zwischen EDI- und EK-Bestellzeilen
      // An diese Funktion mÅssen die DatensÑtze (EDI- und EK-Bestellzeilen) gefiltert (!!!) Åbergeben werden
      // Vergleich einer oder mehrerer EDI-Zeile(n) mit einer oder mehreren EK-Bestellzeilen

      IF pPurchaseLine.COUNT = 1 THEN BEGIN
        // Eine EK-Bestellzeile (=1) und mehrere EDI-Zeilen (>1)
        // Alle EDI-Zeilen beinhalten die relevanten Informationen aus der EK-Bestellzeile
        pPurchaseLine.FINDFIRST;

        TempEDIQuantity := 0;
        TempEDILineDiscountAmount := 0;
        TempEDILineAmount := 0;

        IF pInboundEDIDocPurchLine.FIND('-') THEN BEGIN
          REPEAT

            // Sum Quantities and Discounts
            TempEDIQuantity += pInboundEDIDocPurchLine.Quantity;
            TempEDILineDiscountAmount += pInboundEDIDocPurchLine."Line Discount Amount";
            TempEDILineAmount += pInboundEDIDocPurchLine."Line Amount";

            // Compare Item No.
            // H2165 10.03.15  gob-sievet +++++++++++++++++++++++++++++++++
            PreCheckItemL := pInboundEDIDocPurchLine."No." = pInboundEDIDocPurchLine."Order Item No.";
            IF NOT PreCheckItemL THEN
              PreCheckItemL := pInboundEDIDocPurchLine."NAV Vendor Item No." = pInboundEDIDocPurchLine."Vendor Item No.";
            // H2165 10.03.15  gob-sievet ----------------------------------

            // H2165 10.03.15  gob-sievet +++++++++++++++++++++++++++++++++
            IF NOT PreCheckItemL THEN BEGIN
            // H2165 10.03.15  gob-sievet ----------------------------------
              IF pInboundEDIDocPurchLine."No." <> pInboundEDIDocPurchLine."Order Item No." THEN BEGIN
                pInboundEDIPurchDocHeader."No. of Differences" += 1;
                WriteLineDifference(pInboundEDIDocPurchLine,
                  STRSUBSTNO(Text300,pInboundEDIDocPurchLine.FIELDCAPTION("Order Item No.")));
                WriteDocDifference(pInboundEDIPurchDocHeader,
                  STRSUBSTNO(Text301,pInboundEDIDocPurchLine.FIELDCAPTION("Order Item No."),pInboundEDIDocPurchLine."Line No."));
              END;
            // H2165 10.03.15  gob-sievet +++++++++++++++++++++++++++++++++
            END;
            // H2165 10.03.15  gob-sievet ----------------------------------

            IF pInboundEDIDocPurchLine."Unit of Measure Code" <>
              pInboundEDIDocPurchLine."Order Unit of Measure Code"
            THEN BEGIN
              pInboundEDIPurchDocHeader."No. of Differences" += 1;
              WriteLineDifference(pInboundEDIDocPurchLine,
                STRSUBSTNO(Text300,pInboundEDIDocPurchLine.FIELDCAPTION("Unit of Measure Code")));
              WriteDocDifference(pInboundEDIPurchDocHeader,
                STRSUBSTNO(Text301,pInboundEDIDocPurchLine.FIELDCAPTION("Unit of Measure Code"),pInboundEDIDocPurchLine."Line No."));
            END;

            // Compare Costs and Discounts
            IF NOT CheckPricesInclTolerance(
              pInboundEDIDocPurchLine."Direct Unit Cost",pInboundEDIDocPurchLine."Order Direct Unit Cost")
            THEN BEGIN
              pInboundEDIPurchDocHeader."No. of Differences" += 1;
              //H4152 29.04.15 gob-Sievet +++++++++++++++++++++++++++++
              IF pInboundEDIDocPurchLine."Order Direct Unit Cost" = 0 THEN BEGIN
                WriteLineDifference(pInboundEDIDocPurchLine,
                  STRSUBSTNO(TextHME501,pInboundEDIDocPurchLine.FIELDCAPTION("Order Direct Unit Cost")));
                WriteDocDifference(pInboundEDIPurchDocHeader,
                  STRSUBSTNO(TextHME502,pInboundEDIDocPurchLine.FIELDCAPTION("Order Direct Unit Cost"),
                                                                             pInboundEDIDocPurchLine."Line No."));
              END;
              //H4152 29.04.15 gob-Sievet -----------------------------
              WriteLineDifference(pInboundEDIDocPurchLine,
                STRSUBSTNO(Text300,pInboundEDIDocPurchLine.FIELDCAPTION("Direct Unit Cost")));
              WriteDocDifference(pInboundEDIPurchDocHeader,
                STRSUBSTNO(Text301,pInboundEDIDocPurchLine.FIELDCAPTION("Direct Unit Cost"),pInboundEDIDocPurchLine."Line No."));
            END;
            IF NOT CheckPricesInclTolerance(
              //H4152 29.04.15 gob-Sievet +++++++++++++++++++++++++++++
              //pInboundEDIDocPurchLine."Line Discount %",pInboundEDIDocPurchLine."Order Line Discount %")
              pInboundEDIDocPurchLine."Order Line Discount %",pInboundEDIDocPurchLine."Line Discount %")
              //H4152 29.04.15 gob-Sievet -----------------------------
            THEN BEGIN
              //H4152 29.04.15 gob-Sievet +++++++++++++++++++++++++++++
              IF EDIPartnerDocumentType."Check Line Discount" THEN BEGIN
              //H4152 29.04.15 gob-Sievet -----------------------------
                pInboundEDIPurchDocHeader."No. of Differences" += 1;
                WriteLineDifference(pInboundEDIDocPurchLine,
                  STRSUBSTNO(Text300,pInboundEDIDocPurchLine.FIELDCAPTION("Line Discount %")));
                WriteDocDifference(pInboundEDIPurchDocHeader,
                  STRSUBSTNO(Text301,pInboundEDIDocPurchLine.FIELDCAPTION("Line Discount %"),pInboundEDIDocPurchLine."Line No."));
              //H4152 29.04.15 gob-Sievet +++++++++++++++++++++++++++++
              END ELSE BEGIN
                // Create Comment Line
                CreateEDIPurchComment(pInboundEDIPurchDocHeader,
                                      STRSUBSTNO(Text301,pInboundEDIDocPurchLine.FIELDCAPTION("Line Discount %"),
                                      pInboundEDIDocPurchLine."Line No."));
              END;
              //H4152 29.04.15 gob-Sievet -----------------------------
            END;
            // Compare VAT %
            IF pInboundEDIDocPurchLine."VAT %" <> pInboundEDIDocPurchLine."Order VAT %" THEN BEGIN
              pInboundEDIPurchDocHeader."No. of Differences" += 1;
              WriteLineDifference(pInboundEDIDocPurchLine,
                STRSUBSTNO(Text300,pInboundEDIDocPurchLine.FIELDCAPTION("VAT %")));
              WriteDocDifference(pInboundEDIPurchDocHeader,
                STRSUBSTNO(Text301,pInboundEDIDocPurchLine.FIELDCAPTION("VAT %"),pInboundEDIDocPurchLine."Line No."));
            END;

          UNTIL pInboundEDIDocPurchLine.NEXT = 0;

          // Compare Quantity
          // pInboundEDIDocPurchLine."Order Quantity" contains "Qty. Rcd. Not Invoiced"
          IF TempEDIQuantity <> pInboundEDIDocPurchLine."Order Quantity" THEN BEGIN
            IF (TempEDIQuantity > pInboundEDIDocPurchLine."Order Quantity") AND
              (TempEDIQuantity <=
              pInboundEDIDocPurchLine."Order Quantity" + pInboundEDIDocPurchLine."Order Outstanding Quantity")
            THEN BEGIN
              // Menge kann nicht (vollstÑndig) fakturiert werden, Position muss zuerst geliefert werden
              pInboundEDIPurchDocHeader."No. of Differences" += 1;
              WriteDocDifference(pInboundEDIPurchDocHeader,
                STRSUBSTNO(Text301,pInboundEDIDocPurchLine.FIELDCAPTION(Quantity),pInboundEDIDocPurchLine."Line No.") + ' ' + Text304);
              pInboundEDIDocPurchLine.FIND('-');
              REPEAT
                WriteLineDifference(pInboundEDIDocPurchLine,
                  STRSUBSTNO(Text300,pInboundEDIDocPurchLine.FIELDCAPTION(Quantity)) + ' ' + Text304);
              UNTIL pInboundEDIDocPurchLine.NEXT = 0;
            END ELSE BEGIN
              pInboundEDIPurchDocHeader."No. of Differences" += 1;
              WriteDocDifference(pInboundEDIPurchDocHeader,
                STRSUBSTNO(Text301,pInboundEDIDocPurchLine.FIELDCAPTION(Quantity),pInboundEDIDocPurchLine."Line No."));
              pInboundEDIDocPurchLine.FIND('-');
              REPEAT
                WriteLineDifference(pInboundEDIDocPurchLine,
                  STRSUBSTNO(Text300,pInboundEDIDocPurchLine.FIELDCAPTION(Quantity)));
              UNTIL pInboundEDIDocPurchLine.NEXT = 0;
              //END ELSE BEGIN
              // Was ist mit Teilfaktura? Zulassen oder auch herausfiltern?
              //END;
            END;
          END;
          // Compare Amounts
          IF NOT CheckPricesInclTolerance(
            TempEDILineDiscountAmount,pInboundEDIDocPurchLine."Order Line Discount Amount")
          THEN BEGIN
            //H4152 29.04.15 gob-Sievet +++++++++++++++++++++++++++++
            IF EDIPartnerDocumentType."Check Line Discount" THEN BEGIN
            //H4152 29.04.15 gob-Sievet -----------------------------
              pInboundEDIPurchDocHeader."No. of Differences" += 1;
              //H4152 29.04.15 gob-Sievet +++++++++++++++++++++++++++++
              IF pInboundEDIDocPurchLine."Order Line Discount Amount" = 0 THEN BEGIN
                WriteDocDifference(pInboundEDIPurchDocHeader,
                  STRSUBSTNO(TextHME502,pInboundEDIDocPurchLine.FIELDCAPTION("Order Line Discount Amount"),
                             pInboundEDIDocPurchLine."Line No."));
              END;
              //H4152 29.04.15 gob-Sievet -----------------------------
              WriteDocDifference(pInboundEDIPurchDocHeader,
                STRSUBSTNO(Text301,pInboundEDIDocPurchLine.FIELDCAPTION("Line Discount Amount"),pInboundEDIDocPurchLine."Line No."));
              pInboundEDIDocPurchLine.FIND('-');
              REPEAT
                //H4152 29.04.15 gob-Sievet +++++++++++++++++++++++++++++
                IF pInboundEDIDocPurchLine."Order Line Discount Amount" = 0 THEN BEGIN
                  WriteLineDifference(pInboundEDIDocPurchLine,
                    STRSUBSTNO(TextHME501,pInboundEDIDocPurchLine.FIELDCAPTION("Order Line Discount Amount")));
                END;
                //H4152 29.04.15 gob-Sievet -----------------------------
                WriteLineDifference(pInboundEDIDocPurchLine,
                  STRSUBSTNO(Text300,pInboundEDIDocPurchLine.FIELDCAPTION("Line Discount Amount")));
              UNTIL pInboundEDIDocPurchLine.NEXT = 0;
            //H4152 29.04.15 gob-Sievet +++++++++++++++++++++++++++++
            END ELSE BEGIN
              // Create Comment Line
              CreateEDIPurchComment(pInboundEDIPurchDocHeader,
                                    STRSUBSTNO(Text301,pInboundEDIDocPurchLine.FIELDCAPTION("Line Amount"),
                                    pInboundEDIDocPurchLine."Line No."));
            END;
            //H4152 29.04.15 gob-Sievet -----------------------------
          END;
          IF NOT CheckPricesInclTolerance(
            TempEDILineAmount,pInboundEDIDocPurchLine."Order Line Amount")
          THEN BEGIN
            pInboundEDIPurchDocHeader."No. of Differences" += 1;
            //H4152 29.04.15 gob-Sievet +++++++++++++++++++++++++++++
            IF pInboundEDIDocPurchLine."Order Line Amount" = 0 THEN BEGIN
              WriteDocDifference(pInboundEDIPurchDocHeader,
                STRSUBSTNO(TextHME502,pInboundEDIDocPurchLine.FIELDCAPTION("Order Line Amount"),pInboundEDIDocPurchLine."Line No."));
            END;
            //H4152 29.04.15 gob-Sievet -----------------------------
            WriteDocDifference(pInboundEDIPurchDocHeader,
              STRSUBSTNO(Text301,pInboundEDIDocPurchLine.FIELDCAPTION("Line Amount"),pInboundEDIDocPurchLine."Line No."));
            pInboundEDIDocPurchLine.FIND('-');
            REPEAT
              //H4152 29.04.15 gob-Sievet +++++++++++++++++++++++++++++
              IF pInboundEDIDocPurchLine."Order Line Amount" = 0 THEN BEGIN
                WriteLineDifference(pInboundEDIDocPurchLine,
                  STRSUBSTNO(TextHME501,pInboundEDIDocPurchLine.FIELDCAPTION("Order Line Amount")));
              END;
              //H4152 29.04.15 gob-Sievet -----------------------------
              WriteLineDifference(pInboundEDIDocPurchLine,
                STRSUBSTNO(Text300,pInboundEDIDocPurchLine.FIELDCAPTION("Line Amount")));
            UNTIL pInboundEDIDocPurchLine.NEXT = 0;
          END;

        END;

      END ELSE BEGIN
        // Mehrere EK-Bestellzeilen (>1) und eine oder mehrere EDI-Zeilen (>=1)

        TempPurchOrderQtyRcdNotInvcd := 0;
        TempPurchOrderOutstandingQty := 0;
        TempPurchOrderLineDiscAmount := 0;
        TempPurchOrderLineAmount := 0;

        TempEDIQuantity := 0;
        TempEDILineDiscountAmount := 0;
        TempEDILineAmount := 0;

        IF pInboundEDIDocPurchLine.FIND('-') THEN BEGIN

          CLEAR(DifferenceExists);

          // 1. EDI-Zeile mit allen EK-Bestellzeilen vergleichen
          // Sich wiederholende Unterschiede werden nur 1 mal aufgezeichnet
          pPurchaseLine.FIND('-');
          REPEAT

            //H1979 08.01.15 gob-dah +++++++++++++++++++++
            // Check Quantity = 0
            IF (pPurchaseLine.Quantity = 0) OR (pPurchaseLine."Quantity (Base)" = 0) THEN BEGIN
              pInboundEDIPurchDocHeader."No. of Differences" += 1;
              WriteLineDifference(pInboundEDIDocPurchLine,
                STRSUBSTNO(Text300,pInboundEDIDocPurchLine.FIELDCAPTION("Order Item No.")) + ' ' + Text307);
              WriteDocDifference(pInboundEDIPurchDocHeader,
                STRSUBSTNO(Text301,pInboundEDIDocPurchLine.FIELDCAPTION("Order Item No."),pInboundEDIDocPurchLine."Line No.")
                           + ' ' + Text307);
            END;
            //H1979 08.01.15 gob-Sievet +++++++++++++++++++++

            IF (pPurchaseLine."Qty. Rcd. Not Invoiced" <> 0) OR (pPurchaseLine."Outstanding Quantity" <> 0) THEN BEGIN

              // Sum Quantities and Discounts
              TempPurchOrderQtyRcdNotInvcd += pPurchaseLine."Qty. Rcd. Not Invoiced";
              TempPurchOrderOutstandingQty += pPurchaseLine."Outstanding Quantity";
              TempPurchOrderLineDiscAmount +=
                pPurchaseLine."Line Discount Amount" / pPurchaseLine.Quantity * pPurchaseLine."Qty. Rcd. Not Invoiced";
              TempPurchOrderLineAmount +=
                pPurchaseLine."Line Amount" / pPurchaseLine.Quantity * pPurchaseLine."Qty. Rcd. Not Invoiced";

              // Compare Item No.
              // H2165 10.03.15  gob-sievet +++++++++++++++++++++++++++++++++
              PreCheckItemL := pInboundEDIDocPurchLine."No." = pInboundEDIDocPurchLine."Order Item No.";
              IF NOT PreCheckItemL THEN
                PreCheckItemL := pInboundEDIDocPurchLine."NAV Vendor Item No." = pInboundEDIDocPurchLine."Vendor Item No.";
              // H2165 10.03.15  gob-sievet ----------------------------------

              // H2165 10.03.15  gob-sievet +++++++++++++++++++++++++++++++++
              IF NOT PreCheckItemL THEN BEGIN
              // H2165 10.03.15  gob-sievet ----------------------------------
                IF NOT DifferenceExists[1] THEN BEGIN
                  IF pInboundEDIDocPurchLine."No." <> pPurchaseLine."No." THEN BEGIN
                    DifferenceExists[1] := TRUE;
                    pInboundEDIPurchDocHeader."No. of Differences" += 1;
                    WriteLineDifference(pInboundEDIDocPurchLine,
                      STRSUBSTNO(Text300,pInboundEDIDocPurchLine.FIELDCAPTION("Order Item No.")));
                    WriteDocDifference(pInboundEDIPurchDocHeader,
                      STRSUBSTNO(Text301,pInboundEDIDocPurchLine.FIELDCAPTION("Order Item No."),pInboundEDIDocPurchLine."Line No."));
                  END;
                END;
              // H2165 10.03.15  gob-sievet +++++++++++++++++++++++++++++++++
              END;
              // H2165 10.03.15  gob-sievet ----------------------------------

              IF NOT DifferenceExists[3] THEN BEGIN
                IF pInboundEDIDocPurchLine."Unit of Measure Code" <> pPurchaseLine."Unit of Measure Code" THEN BEGIN
                  DifferenceExists[3] := TRUE;
                  pInboundEDIPurchDocHeader."No. of Differences" += 1;
                  WriteLineDifference(pInboundEDIDocPurchLine,
                    STRSUBSTNO(Text300,pInboundEDIDocPurchLine.FIELDCAPTION("Unit of Measure Code")));
                  WriteDocDifference(pInboundEDIPurchDocHeader,
                    STRSUBSTNO(Text301,pInboundEDIDocPurchLine.FIELDCAPTION("Unit of Measure Code"),
                    pInboundEDIDocPurchLine."Line No."));
                END;
              END;

              // Compare Costs and Discounts
              IF NOT DifferenceExists[4] THEN BEGIN
                IF NOT CheckPricesInclTolerance(
                  pInboundEDIDocPurchLine."Direct Unit Cost",pPurchaseLine."Direct Unit Cost")
                THEN BEGIN
                  DifferenceExists[4] := TRUE;
                  pInboundEDIPurchDocHeader."No. of Differences" += 1;
                  //H4152 29.04.15 gob-Sievet +++++++++++++++++++++++++++++
                  IF pPurchaseLine."Direct Unit Cost" = 0 THEN BEGIN
                    WriteLineDifference(pInboundEDIDocPurchLine,
                      STRSUBSTNO(TextHME501,pPurchaseLine.FIELDCAPTION("Direct Unit Cost")));
                    WriteDocDifference(pInboundEDIPurchDocHeader,
                      STRSUBSTNO(TextHME502,pPurchaseLine.FIELDCAPTION("Direct Unit Cost"),pInboundEDIDocPurchLine."Line No."));
                  END;
                  //H4152 29.04.15 gob-Sievet -----------------------------
                  WriteLineDifference(pInboundEDIDocPurchLine,
                    STRSUBSTNO(Text300,pInboundEDIDocPurchLine.FIELDCAPTION("Direct Unit Cost")));
                  WriteDocDifference(pInboundEDIPurchDocHeader,
                    STRSUBSTNO(Text301,pInboundEDIDocPurchLine.FIELDCAPTION("Direct Unit Cost"),pInboundEDIDocPurchLine."Line No."));
                END;
              END;
              IF NOT DifferenceExists[5] THEN BEGIN
                IF NOT CheckPricesInclTolerance(
                  //H4152 29.04.15 gob-Sievet +++++++++++++++++++++++++++++
                  //pInboundEDIDocPurchLine."Line Discount %",pPurchaseLine."Line Discount %")
                  pPurchaseLine."Line Discount %",pInboundEDIDocPurchLine."Line Discount %")
                  //H4152 29.04.15 gob-Sievet -----------------------------
                THEN BEGIN
                  DifferenceExists[5] := TRUE;
                  //H4152 29.04.15 gob-Sievet +++++++++++++++++++++++++++++
                  IF EDIPartnerDocumentType."Check Line Discount" THEN BEGIN
                  //H4152 29.04.15 gob-Sievet -----------------------------
                    pInboundEDIPurchDocHeader."No. of Differences" += 1;
                    WriteLineDifference(pInboundEDIDocPurchLine,
                      STRSUBSTNO(Text300,pInboundEDIDocPurchLine.FIELDCAPTION("Line Discount %")));
                    WriteDocDifference(pInboundEDIPurchDocHeader,
                      STRSUBSTNO(Text301,pInboundEDIDocPurchLine.FIELDCAPTION("Line Discount %"),pInboundEDIDocPurchLine."Line No."));
                  //H4152 29.04.15 gob-Sievet +++++++++++++++++++++++++++++
                  END ELSE BEGIN
                    // Create Comment Line
                    CreateEDIPurchComment(pInboundEDIPurchDocHeader,
                                          STRSUBSTNO(Text301,pInboundEDIDocPurchLine.FIELDCAPTION("Line Discount %"),
                                          pInboundEDIDocPurchLine."Line No."));
                  END;
                  //H4152 29.04.15 gob-Sievet -----------------------------
                END;
              END;
              // Compare VAT %
              IF NOT DifferenceExists[6] THEN BEGIN
                IF pInboundEDIDocPurchLine."VAT %" <> pPurchaseLine."VAT %" THEN BEGIN
                  DifferenceExists[6] := TRUE;
                  pInboundEDIPurchDocHeader."No. of Differences" += 1;
                  WriteLineDifference(pInboundEDIDocPurchLine,
                    STRSUBSTNO(Text300,pInboundEDIDocPurchLine.FIELDCAPTION("VAT %")));
                  WriteDocDifference(pInboundEDIPurchDocHeader,
                    STRSUBSTNO(Text301,pInboundEDIDocPurchLine.FIELDCAPTION("VAT %"),pInboundEDIDocPurchLine."Line No."));
                END;
              END;

            END;

          UNTIL pPurchaseLine.NEXT = 0;

          // Sum Quantities and Discounts
          TempEDIQuantity := pInboundEDIDocPurchLine.Quantity;
          TempEDILineDiscountAmount := pInboundEDIDocPurchLine."Line Discount Amount";
          TempEDILineAmount := pInboundEDIDocPurchLine."Line Amount";

          IF pInboundEDIDocPurchLine.NEXT <> 0 THEN BEGIN
            // Falls es mehrere EDI-Zeilen gibt
            // a) Mengen und BetrÑge aufsummieren
            // b) PrÅfung immer nur noch gegen die letzte EK-Bestellzeile
            REPEAT

              // Sum Quantities and Discounts
              TempEDIQuantity += pInboundEDIDocPurchLine.Quantity;
              TempEDILineDiscountAmount += pInboundEDIDocPurchLine."Line Discount Amount";
              TempEDILineAmount += pInboundEDIDocPurchLine."Line Amount";

              // Compare Item No.
              // H2165 10.03.15  gob-sievet +++++++++++++++++++++++++++++++++
              PreCheckItemL := pInboundEDIDocPurchLine."No." = pInboundEDIDocPurchLine."Order Item No.";
              IF NOT PreCheckItemL THEN
                PreCheckItemL := pInboundEDIDocPurchLine."NAV Vendor Item No." = pInboundEDIDocPurchLine."Vendor Item No.";
              // H2165 10.03.15  gob-sievet ----------------------------------

              // H2165 10.03.15  gob-sievet +++++++++++++++++++++++++++++++++
              IF NOT PreCheckItemL THEN BEGIN
              // H2165 10.03.15  gob-sievet ----------------------------------
                IF pInboundEDIDocPurchLine."No." <> pPurchaseLine."No." THEN BEGIN
                  pInboundEDIPurchDocHeader."No. of Differences" += 1;
                  WriteLineDifference(pInboundEDIDocPurchLine,
                    STRSUBSTNO(Text300,pInboundEDIDocPurchLine.FIELDCAPTION("Order Item No.")));
                  WriteDocDifference(pInboundEDIPurchDocHeader,
                    STRSUBSTNO(Text301,pInboundEDIDocPurchLine.FIELDCAPTION("Order Item No."),pInboundEDIDocPurchLine."Line No."));
                END;
              // H2165 10.03.15  gob-sievet +++++++++++++++++++++++++++++++++
              END;
              // H2165 10.03.15  gob-sievet ----------------------------------

              IF pInboundEDIDocPurchLine."Unit of Measure Code" <> pPurchaseLine."Unit of Measure Code" THEN BEGIN
                pInboundEDIPurchDocHeader."No. of Differences" += 1;
                WriteLineDifference(pInboundEDIDocPurchLine,
                  STRSUBSTNO(Text300,pInboundEDIDocPurchLine.FIELDCAPTION("Unit of Measure Code")));
                WriteDocDifference(pInboundEDIPurchDocHeader,
                  STRSUBSTNO(Text301,pInboundEDIDocPurchLine.FIELDCAPTION("Unit of Measure Code"),pInboundEDIDocPurchLine."Line No."));
              END;

              // Compare Costs and Discounts
              IF NOT CheckPricesInclTolerance(
                pInboundEDIDocPurchLine."Direct Unit Cost",pPurchaseLine."Direct Unit Cost")
              THEN BEGIN
                pInboundEDIPurchDocHeader."No. of Differences" += 1;
                //H4152 29.04.15 gob-Sievet +++++++++++++++++++++++++++++
                IF pPurchaseLine."Direct Unit Cost" = 0 THEN BEGIN
                  WriteLineDifference(pInboundEDIDocPurchLine,
                    STRSUBSTNO(TextHME501,pPurchaseLine.FIELDCAPTION("Direct Unit Cost")));
                  WriteDocDifference(pInboundEDIPurchDocHeader,
                    STRSUBSTNO(TextHME502,pPurchaseLine.FIELDCAPTION("Direct Unit Cost"),pInboundEDIDocPurchLine."Line No."));
                END;
                //H4152 29.04.15 gob-Sievet -----------------------------
                WriteLineDifference(pInboundEDIDocPurchLine,
                  STRSUBSTNO(Text300,pInboundEDIDocPurchLine.FIELDCAPTION("Direct Unit Cost")));
                WriteDocDifference(pInboundEDIPurchDocHeader,
                  STRSUBSTNO(Text301,pInboundEDIDocPurchLine.FIELDCAPTION("Direct Unit Cost"),pInboundEDIDocPurchLine."Line No."));
              END;
              IF NOT CheckPricesInclTolerance(
                //H4152 29.04.15 gob-Sievet +++++++++++++++++++++++++++++
                //pInboundEDIDocPurchLine."Line Discount %",pPurchaseLine."Line Discount %")
                pPurchaseLine."Line Discount %",pInboundEDIDocPurchLine."Line Discount %")
                //H4152 29.04.15 gob-Sievet -----------------------------
              THEN BEGIN
                //H4152 29.04.15 gob-Sievet +++++++++++++++++++++++++++++
                IF EDIPartnerDocumentType."Check Line Discount" THEN BEGIN
                //H4152 29.04.15 gob-Sievet -----------------------------
                  pInboundEDIPurchDocHeader."No. of Differences" += 1;
                  WriteLineDifference(pInboundEDIDocPurchLine,
                    STRSUBSTNO(Text300,pInboundEDIDocPurchLine.FIELDCAPTION("Line Discount %")));
                  WriteDocDifference(pInboundEDIPurchDocHeader,
                    STRSUBSTNO(Text301,pInboundEDIDocPurchLine.FIELDCAPTION("Line Discount %"),pInboundEDIDocPurchLine."Line No."));
                //H4152 29.04.15 gob-Sievet +++++++++++++++++++++++++++++
                END ELSE BEGIN
                  // Create Comment Line
                  CreateEDIPurchComment(pInboundEDIPurchDocHeader,
                                        STRSUBSTNO(Text301,pInboundEDIDocPurchLine.FIELDCAPTION("Line Discount %"),
                                        pInboundEDIDocPurchLine."Line No."));
                END;
                //H4152 29.04.15 gob-Sievet -----------------------------
              END;
              // Compare VAT %
              IF pInboundEDIDocPurchLine."VAT %" <> pPurchaseLine."VAT %" THEN BEGIN
                pInboundEDIPurchDocHeader."No. of Differences" += 1;
                WriteLineDifference(pInboundEDIDocPurchLine,
                  STRSUBSTNO(Text300,pInboundEDIDocPurchLine.FIELDCAPTION("VAT %")));
                WriteDocDifference(pInboundEDIPurchDocHeader,
                  STRSUBSTNO(Text301,pInboundEDIDocPurchLine.FIELDCAPTION("VAT %"),pInboundEDIDocPurchLine."Line No."));
              END;

            UNTIL pInboundEDIDocPurchLine.NEXT = 0;
          END;

        END;

        // Compare Quantity
        IF TempEDIQuantity <> TempPurchOrderQtyRcdNotInvcd THEN BEGIN
          IF (TempEDIQuantity > TempPurchOrderQtyRcdNotInvcd) AND
            (TempEDIQuantity <= TempPurchOrderQtyRcdNotInvcd + TempPurchOrderOutstandingQty)
          THEN BEGIN
            // Menge kann nicht (vollstÑndig) fakturiert werden, Position muss zuerst geliefert werden
            pInboundEDIPurchDocHeader."No. of Differences" += 1;
            WriteDocDifference(pInboundEDIPurchDocHeader,
              STRSUBSTNO(Text301,pInboundEDIDocPurchLine.FIELDCAPTION(Quantity),pInboundEDIDocPurchLine."Line No.") + ' ' + Text304);
            pInboundEDIDocPurchLine.FIND('-');
            REPEAT
              WriteLineDifference(pInboundEDIDocPurchLine,
                STRSUBSTNO(Text300,pInboundEDIDocPurchLine.FIELDCAPTION(Quantity)) + ' ' + Text304);
            UNTIL pInboundEDIDocPurchLine.NEXT = 0;
          END ELSE BEGIN
            pInboundEDIPurchDocHeader."No. of Differences" += 1;
            WriteDocDifference(pInboundEDIPurchDocHeader,
              STRSUBSTNO(Text301,pInboundEDIDocPurchLine.FIELDCAPTION(Quantity),pInboundEDIDocPurchLine."Line No."));
            pInboundEDIDocPurchLine.FIND('-');
            REPEAT
              WriteLineDifference(pInboundEDIDocPurchLine,
                STRSUBSTNO(Text300,pInboundEDIDocPurchLine.FIELDCAPTION(Quantity)));
            UNTIL pInboundEDIDocPurchLine.NEXT = 0;
            //END ELSE BEGIN
            // Was ist mit Teilfaktura? Zulassen oder auch herausfiltern?
            //END;
          END;
        END;
        // Compare Amounts
        IF NOT CheckPricesInclTolerance(
          TempEDILineDiscountAmount,TempPurchOrderLineDiscAmount)
        THEN BEGIN
          //H4152 29.04.15 gob-Sievet +++++++++++++++++++++++++++++
          IF EDIPartnerDocumentType."Check Line Discount" THEN BEGIN
          //H4152 29.04.15 gob-Sievet -----------------------------
            pInboundEDIPurchDocHeader."No. of Differences" += 1;
            //H4152 29.04.15 gob-Sievet +++++++++++++++++++++++++++++
            IF TempPurchOrderLineDiscAmount = 0 THEN BEGIN
              WriteDocDifference(pInboundEDIPurchDocHeader,
                STRSUBSTNO(TextHME502,pInboundEDIDocPurchLine.FIELDCAPTION("Order Line Discount Amount"),
                           pInboundEDIDocPurchLine."Line No."));
            END;
            //H4152 29.04.15 gob-Sievet -----------------------------
            WriteDocDifference(pInboundEDIPurchDocHeader,
              STRSUBSTNO(Text301,pInboundEDIDocPurchLine.FIELDCAPTION("Line Discount Amount"),pInboundEDIDocPurchLine."Line No."));
            pInboundEDIDocPurchLine.FIND('-');
            REPEAT
              //H4152 29.04.15 gob-Sievet +++++++++++++++++++++++++++++
              IF TempPurchOrderLineDiscAmount = 0 THEN BEGIN
                WriteLineDifference(pInboundEDIDocPurchLine,
                  STRSUBSTNO(TextHME501,pInboundEDIDocPurchLine.FIELDCAPTION("Order Line Discount Amount")));
              END;
              //H4152 29.04.15 gob-Sievet -----------------------------
              WriteLineDifference(pInboundEDIDocPurchLine,
                STRSUBSTNO(Text300,pInboundEDIDocPurchLine.FIELDCAPTION("Line Discount Amount")));
            UNTIL pInboundEDIDocPurchLine.NEXT = 0;
          //H4152 29.04.15 gob-Sievet +++++++++++++++++++++++++++++
          END ELSE BEGIN
            // Create Comment Line
            CreateEDIPurchComment(pInboundEDIPurchDocHeader,
                                  STRSUBSTNO(Text301,pInboundEDIDocPurchLine.FIELDCAPTION("Line Amount"),
                                  pInboundEDIDocPurchLine."Line No."));
          END;
          //H4152 29.04.15 gob-Sievet -----------------------------
        END;
        IF NOT CheckPricesInclTolerance(
          TempEDILineAmount,TempPurchOrderLineAmount)
        THEN BEGIN
          pInboundEDIPurchDocHeader."No. of Differences" += 1;
          //H4152 29.04.15 gob-Sievet +++++++++++++++++++++++++++++
          IF TempPurchOrderLineAmount = 0 THEN BEGIN
            WriteDocDifference(pInboundEDIPurchDocHeader,
              STRSUBSTNO(TextHME502,pInboundEDIDocPurchLine.FIELDCAPTION("Order Line Amount"),pInboundEDIDocPurchLine."Line No."));
          END;
          //H4152 29.04.15 gob-Sievet -----------------------------
          WriteDocDifference(pInboundEDIPurchDocHeader,
            STRSUBSTNO(Text301,pInboundEDIDocPurchLine.FIELDCAPTION("Line Amount"),pInboundEDIDocPurchLine."Line No."));
          pInboundEDIDocPurchLine.FIND('-');
          REPEAT
            //H4152 29.04.15 gob-Sievet +++++++++++++++++++++++++++++
            IF pInboundEDIDocPurchLine."Order Line Amount" = 0 THEN BEGIN
              WriteLineDifference(pInboundEDIDocPurchLine,
                STRSUBSTNO(TextHME501,pInboundEDIDocPurchLine.FIELDCAPTION("Order Line Amount")));
            END;
            //H4152 29.04.15 gob-Sievet -----------------------------
            WriteLineDifference(pInboundEDIDocPurchLine,
              STRSUBSTNO(Text300,pInboundEDIDocPurchLine.FIELDCAPTION("Line Amount")));
          UNTIL pInboundEDIDocPurchLine.NEXT = 0;
        END;

      END;

      IF pAcceptDocument THEN BEGIN
        // Falls PrÅfung OK => TemporÑre EK-Bestellzeile(n) anlegen
        // NEU => nur bei Accept mÅssen temporÑre EK-Bestellzeilen angelegt werden (auch wenn noch Abweichungen vorhanden sind)
        pPurchaseLine.FIND('-');
        REPEAT
          TempPurchaseLine.INIT;
          TempPurchaseLine := pPurchaseLine;
          TempPurchaseLine."Direct Unit Cost" := pInboundEDIDocPurchLine."Direct Unit Cost";
          TempPurchaseLine."Line Discount %" := pInboundEDIDocPurchLine."Line Discount %";
          IF NOT TempPurchaseLine.INSERT THEN
            TempPurchaseLine.MODIFY;
        UNTIL pPurchaseLine.NEXT = 0;
        // => TemporÑre EK-Bemerkungszeile(n) anlegen
        // Mîgliche Sonderkonstellation: z.B. 3 EDI-Zeilen zu 2 EK-Bestellzeilen
        // => Bemerkungen zu allen 3 EDI-Zeilen jeweils beiden EK-Bestellzeilen zuordnen
        IF pInboundEDIDocPurchLine.FIND('-') THEN
          REPEAT
            EDIPurchCommentLine.RESET;
            EDIPurchCommentLine.SETRANGE("Document Type",EDIPurchCommentLine."Document Type"::"EDI INVOIC");
            EDIPurchCommentLine.SETRANGE("No.",FORMAT(pInboundEDIDocPurchLine."Document No."));
            EDIPurchCommentLine.SETRANGE("Document Line No.",pInboundEDIDocPurchLine."Line No.");
            IF NOT EDIPurchCommentLine.ISEMPTY THEN BEGIN
              pPurchaseLine.FIND('-');
              REPEAT
                EDIPurchCommentLine.FIND('-');
                REPEAT
                  TempPurchCommentLine.INIT;
                  TempPurchCommentLine := EDIPurchCommentLine;
                  TempPurchCommentLine.VALIDATE("Document Type",TempPurchCommentLine."Document Type"::Order);
                  TempPurchCommentLine.VALIDATE("No.",pPurchaseLine."Document No.");
                  TempPurchCommentLine.VALIDATE("Document Line No.",pPurchaseLine."Line No.");
                  IF NOT TempPurchCommentLine.INSERT THEN
                    TempPurchCommentLine.MODIFY;
                UNTIL EDIPurchCommentLine.NEXT = 0;
              UNTIL pPurchaseLine.NEXT = 0;
            END;
          UNTIL pInboundEDIDocPurchLine.NEXT = 0;
      END;
      // E/P1262
    END;

    PROCEDURE CreatePurchInvoice@1000000003(VAR pInboundEDIPurchDocHeader@1000000000 : Record 82868;pPurchOrderHeader@1000000003 : Record 38;VAR pPurchInvoicNo@1000000004 : Code[20]);
    VAR
      NewPurchInvHeader@1000000001 : Record 38;
      ItemCharge@1000000002 : Record 5800;
    BEGIN
      // S/P1262
      // Anhand der temporÑren EK-Bestellzeilen ungebuchte EK-Rechnungszeilen anlegen
      TempPurchaseLine.RESET;
      TempPurchaseLine.SETRANGE("Document Type",TempPurchaseLine."Document Type"::Order);
      TempPurchaseLine.SETRANGE("Document No.",pPurchOrderHeader."No.");
      IF TempPurchaseLine.FIND('-') THEN BEGIN
        // Ungebuchten EK-Rechnungskopf anlegen
        CLEAR(NewPurchInvHeader);
        CreatePurchInvoiceHeader(pInboundEDIPurchDocHeader,NewPurchInvHeader,pPurchOrderHeader);
        pPurchInvoicNo := NewPurchInvHeader."No.";

        REPEAT
          // Ungebuchte EK-Rechnungszeilen anlegen
          CreatePurchInvoiceLine(NewPurchInvHeader,TempPurchaseLine);
        UNTIL TempPurchaseLine.NEXT = 0;

        // Zusatzzeilen anlegen
        IF pInboundEDIPurchDocHeader."Freight Amount" <> 0 THEN BEGIN
          EDIPartnerDocumentType.TESTFIELD("Charge Freight");
          ItemCharge.GET(EDIPartnerDocumentType."Charge Freight");
          CreatePurchInvoiceLineCharge(NewPurchInvHeader,
            EDIPartnerDocumentType."Charge Freight",pInboundEDIPurchDocHeader."Freight Amount");
        END;

        IF pInboundEDIPurchDocHeader."Bonus Amount" <> 0 THEN BEGIN
          EDIPartnerDocumentType.TESTFIELD("Charge Bonus");
          ItemCharge.GET(EDIPartnerDocumentType."Charge Bonus");
          CreatePurchInvoiceLineCharge(NewPurchInvHeader,
            EDIPartnerDocumentType."Charge Bonus",-pInboundEDIPurchDocHeader."Bonus Amount");
        END;

        IF pInboundEDIPurchDocHeader."Additional Cost Amount" <> 0 THEN BEGIN
          EDIPartnerDocumentType.TESTFIELD("Charge Additional Costs");
          ItemCharge.GET(EDIPartnerDocumentType."Charge Additional Costs");
          CreatePurchInvoiceLineCharge(NewPurchInvHeader,
            EDIPartnerDocumentType."Charge Additional Costs",pInboundEDIPurchDocHeader."Additional Cost Amount");
        END;

        //H1867 30.11.14 gob-Fuchs +++++++++++++++++
        NewPurchInvHeader."Ship-to Code" := '';
        NewPurchInvHeader."Ship-to Name" := '';
        NewPurchInvHeader."Ship-to Name 2" := '';
        NewPurchInvHeader."Ship-to Address" := '';
        NewPurchInvHeader."Ship-to Address 2" := '';
        NewPurchInvHeader."Ship-to City" := '';
        NewPurchInvHeader."Ship-to Contact" := '';
        NewPurchInvHeader."Ship-to Post Code" := '';
        NewPurchInvHeader."Ship-to County" := '';
        NewPurchInvHeader."Ship-to Country/Region Code" := '';
        //H1867 30.11.14 gob-Fuchs -----------------

        // H2165 10.03.15  gob-sievet +++++++++++++++++++++++++++++++++
        NewPurchInvHeader.MODIFY(TRUE);
        // H2165 10.03.15  gob-sievet ----------------------------------

        COMMIT;

        // Gesamtbetrag der ungebuchten EK-Rechnung prÅfen
        IF NOT CheckTotalInvoiceAmount(pInboundEDIPurchDocHeader,NewPurchInvHeader) THEN BEGIN
          // Ungebuchte EK-Rechnung kennzeichnen
          IF NewPurchInvHeader."EDI INVOIC Status" <> NewPurchInvHeader."EDI INVOIC Status"::"EDI-Differences" THEN BEGIN
            NewPurchInvHeader."EDI INVOIC Status" := NewPurchInvHeader."EDI INVOIC Status"::"EDI-Differences";
            NewPurchInvHeader.MODIFY;
          END;
          // Bemerkung
          WriteErrorComment(NewPurchInvHeader,STRSUBSTNO(Error003,NewPurchInvHeader."Document Type",NewPurchInvHeader."No."));
          // Meldung
          //H3877 07.04.15 gob-Sievet +++++++++++++++++
          //IF GUIALLOWED THEN
          IF GUIALLOWED AND (NOT NoMessage) THEN
          //H3877 07.04.15 gob-Sievet -----------------
            MESSAGE(Error003,NewPurchInvHeader."Document Type",NewPurchInvHeader."No.");
          EXIT;
        END;

        // Ungebuchte EK-Rechnung freigeben und buchen
        IF NewPurchInvHeader."EDI INVOIC Status" <> NewPurchInvHeader."EDI INVOIC Status"::"EDI-Differences" THEN BEGIN
          //H1880 06.12.14 gob-fuchsk +++++++++++++++++
          pInboundEDIPurchDocHeader."Created Document No." := pPurchInvoicNo;
          pInboundEDIPurchDocHeader.MODIFY;
          //H1880 06.12.14 gob-fuchsk -----------------

          //H3877 11.03.15 gob-Sievet +++++++++++++++++
          IF GUIALLOWED THEN BEGIN
            IF NOT CheckAcceptPostManually(pInboundEDIPurchDocHeader) THEN
              EXIT;
          END;
          //H3877 11.03.15 gob-Sievet -----------------
          ReleaseAndPostPurchInvoice(NewPurchInvHeader);
        END;
      // H3877 11.03.15 gob-Sievet +++++++++++++++++
      //END;
      END ELSE BEGIN
        IF GUIALLOWED AND NoMessage THEN BEGIN
          // Ungebuchten EK-Rechnungskopf anlegen
          CLEAR(NewPurchInvHeader);
          CreatePurchInvoiceHeader(pInboundEDIPurchDocHeader,NewPurchInvHeader,pPurchOrderHeader);
          pPurchInvoicNo := NewPurchInvHeader."No.";
        END;
      END;
      // H3877 11.03.15 gob-Sievet -----------------

      // E/P1262
    END;

    PROCEDURE CreatePurchInvoiceHeader@1000000001(VAR pInboundEDIPurchDocHeader@1000000001 : Record 82868;VAR pNewPurchInvHeader@1000000002 : Record 38;pPurchOrderHeader@1000000005 : Record 38);
    VAR
      EDIPurchCommentLine@1000000000 : Record 43;
      PurchCommentLine@1000000003 : Record 43;
      NextLineNo@1000000004 : Integer;
      REBTextL@1000000008 : Text[30];
      REBValueL@1000000007 : Decimal;
      DotPosL@1000000006 : Integer;
    BEGIN
      // S/P1262
      // Neuen ungebuchten EK-Rechnungskopf anlegen
      CLEAR(pNewPurchInvHeader);
      pNewPurchInvHeader.INIT;
      pNewPurchInvHeader."Document Type" := pNewPurchInvHeader."Document Type"::Invoice;
      pNewPurchInvHeader."No." := '';
      pNewPurchInvHeader.INSERT(TRUE);
      // Buchungs- und Belegdatum eintragen
      pNewPurchInvHeader.VALIDATE("Posting Date",pInboundEDIPurchDocHeader."Date Received");
      //H1869 12.12.14 gob-gaidar+++++++++++++++++
      //pNewPurchInvHeader.VALIDATE("Document Date",pInboundEDIPurchDocHeader."Date Received");
      pNewPurchInvHeader.VALIDATE("Document Date",pInboundEDIPurchDocHeader."Document Date");
      //H1869 12.12.14 gob-gaidar-----------------
      // Kreditor eintragen
      pNewPurchInvHeader.VALIDATE("Buy-from Vendor No.",pInboundEDIPurchDocHeader."Buy-from Vendor No.");
      pNewPurchInvHeader.VALIDATE("Pay-to Vendor No.",pInboundEDIPurchDocHeader."Pay-to Vendor No.");
      // "VAT Bus. Posting Group" aus der urspr. EK-Bestellung Åbernehmen
      pNewPurchInvHeader.VALIDATE("VAT Bus. Posting Group",pPurchOrderHeader."VAT Bus. Posting Group");
      // "REB Gross Invoice Amount" fÅllen
      //H4060 14.04.15 TST +++++++++++++++++++++++++++++
      REBTextL := FORMAT(pInboundEDIPurchDocHeader."Amount Including VAT");
      DotPosL := STRPOS(REBTextL,',');
      IF DotPosL <> 0 THEN
        REBTextL := COPYSTR(REBTextL,1,DotPosL+2);
      EVALUATE(REBValueL, REBTextL);

      pNewPurchInvHeader.VALIDATE("REB Gross Invoice Amount", REBValueL);
      //H4060 14.04.15 TST -----------------------------
      pNewPurchInvHeader.VALIDATE("Vendor Invoice No.",pInboundEDIPurchDocHeader."Vendor Invoice No.");
      // Ungebuchte EK-Rechnung kennzeichnen
      pNewPurchInvHeader.Import := TRUE;
      IF pInboundEDIPurchDocHeader."No. of Differences" > 0 THEN
        pNewPurchInvHeader."EDI INVOIC Status" := pNewPurchInvHeader."EDI INVOIC Status"::"EDI-Differences";

      // S/H1294
      pNewPurchInvHeader."Vendor Document Date" := pInboundEDIPurchDocHeader."Vendor Document Date";
      // E/H1294

      // S/P1290
      pNewPurchInvHeader."Posting Description" := pInboundEDIPurchDocHeader."Purchase Document No.";
      // E/P1290

      pNewPurchInvHeader.MODIFY(TRUE);

      // Bemerkungen zur ungeb. EK-Rechnung anlegen
      NextLineNo := GetLastPurchCommentLineNo(
        pNewPurchInvHeader."Document Type",pNewPurchInvHeader."No.",0) + 10000;

      EDIPurchCommentLine.RESET;
      EDIPurchCommentLine.SETRANGE("Document Type",EDIPurchCommentLine."Document Type"::"EDI INVOIC");
      EDIPurchCommentLine.SETRANGE("No.",FORMAT(pInboundEDIPurchDocHeader."No."));
      EDIPurchCommentLine.SETRANGE("Document Line No.",0);
      IF EDIPurchCommentLine.FIND('-') THEN
        REPEAT
          PurchCommentLine.INIT;
          PurchCommentLine.VALIDATE("Document Type",pNewPurchInvHeader."Document Type");
          PurchCommentLine.VALIDATE("No.",pNewPurchInvHeader."No.");
          PurchCommentLine.VALIDATE("Document Line No.",0);
          PurchCommentLine.VALIDATE("Line No.",NextLineNo);
          PurchCommentLine.VALIDATE(Date,EDIPurchCommentLine.Date);
          PurchCommentLine.VALIDATE(Code,EDIPurchCommentLine.Code);
          PurchCommentLine.VALIDATE(Comment,EDIPurchCommentLine.Comment);
          PurchCommentLine.INSERT(TRUE);
          NextLineNo += 10000;
        UNTIL EDIPurchCommentLine.NEXT = 0;
      // E/P1262
    END;

    PROCEDURE CreatePurchInvoiceLine@1000000010(VAR pNewPurchInvHeader@1000000001 : Record 38;pTempPurchOrderLine@1000000003 : Record 39);
    VAR
      PurchLine@1000000000 : Record 39;
      PurchRcptLine@1000000002 : Record 121;
      PurchRcptHeader@1000000006 : Record 120;
      PurchCommentLine@1000000005 : Record 43;
      LastLineNo@1000000004 : Integer;
    BEGIN
      // S/P1262
      // Zeilennr. der letzten ungeb. EK-Rechnungszeile merken
      PurchLine.RESET;
      PurchLine.SETRANGE("Document Type",pNewPurchInvHeader."Document Type");
      PurchLine.SETRANGE("Document No.",pNewPurchInvHeader."No.");
      IF PurchLine.FINDLAST THEN
        LastLineNo := PurchLine."Line No."
      ELSE
        LastLineNo := 0;

      // Ungebuchte EK-Rechnungszeilen mittels der Funktion "Wareneingangszeilen abrufen..." anlegen
      PurchRcptLine.RESET;
      PurchRcptLine.SETCURRENTKEY("Order No.","Order Line No.","Posting Date");
      PurchRcptLine.SETRANGE("Order No.",pTempPurchOrderLine."Document No.");
      PurchRcptLine.SETRANGE("Order Line No.",pTempPurchOrderLine."Line No.");
      PurchRcptLine.SETFILTER("Qty. Rcd. Not Invoiced",'<>0');
      PurchRcptLine.SETRANGE("Pay-to Vendor No.",pNewPurchInvHeader."Pay-to Vendor No.");
      PurchRcptLine.SETRANGE("Buy-from Vendor No.",pNewPurchInvHeader."Buy-from Vendor No.");
      PurchRcptLine.SETRANGE("Currency Code",pNewPurchInvHeader."Currency Code");
      IF NOT PurchRcptLine.ISEMPTY THEN BEGIN
        // Ggfs. Buchungs- und Belegdatum aktualisieren
        PurchRcptLine.FIND('-');
        REPEAT
          PurchRcptHeader.GET(PurchRcptLine."Document No.");
          IF pNewPurchInvHeader."Posting Date" < PurchRcptHeader."Posting Date" THEN BEGIN
            pNewPurchInvHeader.SetHideValidationDialog(TRUE);
            //H2175 20.02.15 gob-Sievet +++++++++++++++++
            pNewPurchInvHeader.SetDontChangeDocdateOnValidate(TRUE);
            //H2175 20.02.15 gob-Sievet -----------------
            pNewPurchInvHeader.VALIDATE("Posting Date",PurchRcptHeader."Posting Date");
            pNewPurchInvHeader.MODIFY();
          END;
        //H2175 20.02.15 gob-Sievet +++++++++++++++++
        //  IF pNewPurchInvHeader."Document Date" < PurchRcptHeader."Document Date" THEN BEGIN
        //    pNewPurchInvHeader.SetHideValidationDialog(TRUE);
        //    pNewPurchInvHeader.VALIDATE("Document Date",PurchRcptHeader."Document Date");
        //    pNewPurchInvHeader.MODIFY();
        //  END;
        //H2175 20.02.15 gob-Sievet -----------------
        UNTIL PurchRcptLine.NEXT = 0;


        // Ungebuchte EK-Rechnungszeilen anlegen
        GetReceipts.SetPurchHeader(pNewPurchInvHeader);
        // S/P1290
        GetReceipts.SetEDIMark;
        // E/P1290
        GetReceipts.CreateInvLines(PurchRcptLine);
        // Ungebuchte EK-Rechnungszeilen aktualisieren ("Direct Unit Cost" & "Line Discount %")
        PurchLine.SETRANGE(Type,pTempPurchOrderLine.Type);
        PurchLine.SETRANGE("No.",pTempPurchOrderLine."No.");
        PurchLine.SETRANGE("Variant Code",pTempPurchOrderLine."Variant Code");
        PurchLine.SETFILTER("Line No.",'>%1',LastLineNo);
        IF PurchLine.FIND('-') THEN
          REPEAT
            PurchLine.VALIDATE("Direct Unit Cost",pTempPurchOrderLine."Direct Unit Cost");
            PurchLine.VALIDATE("Line Discount %",pTempPurchOrderLine."Line Discount %");
            PurchLine.MODIFY;
          UNTIL PurchLine.NEXT = 0;
      END;

      // Sofern zu der jeweiligen EK-Bestellzeile Bemerkungen existieren,
      // mÅssen diese jeweils in alle abgerufenen Wareneingangszeilen Åbernommen werden
      TempPurchCommentLine.RESET;
      TempPurchCommentLine.SETRANGE("Document Type",pTempPurchOrderLine."Document Type");
      TempPurchCommentLine.SETRANGE("No.",pTempPurchOrderLine."Document No.");
      TempPurchCommentLine.SETRANGE("Document Line No.",pTempPurchOrderLine."Line No.");
      IF NOT TempPurchCommentLine.ISEMPTY THEN BEGIN
        PurchLine.RESET;
        PurchLine.SETRANGE("Document Type",pNewPurchInvHeader."Document Type");
        PurchLine.SETRANGE("Document No.",pNewPurchInvHeader."No.");
        PurchLine.SETFILTER("Line No.",'>%1',LastLineNo);
        IF PurchLine.FIND('-') THEN
          REPEAT
            TempPurchCommentLine.FIND('-');
            REPEAT
              PurchCommentLine.INIT;
              PurchCommentLine.VALIDATE("Document Type",PurchLine."Document Type");
              PurchCommentLine.VALIDATE("No.",PurchLine."Document No.");
              PurchCommentLine.VALIDATE("Document Line No.",PurchLine."Line No.");
              PurchCommentLine.VALIDATE("Line No.",
                GetLastPurchCommentLineNo(PurchLine."Document Type",PurchLine."Document No.",PurchLine."Line No.")+10000);
              PurchCommentLine.VALIDATE(Date,TempPurchCommentLine.Date);
              PurchCommentLine.VALIDATE(Code,TempPurchCommentLine.Code);
              PurchCommentLine.VALIDATE(Comment,TempPurchCommentLine.Comment);
              PurchCommentLine.INSERT(TRUE);
            UNTIL TempPurchCommentLine.NEXT = 0;
          UNTIL PurchLine.NEXT = 0;
      END;
      // E/P1262
    END;

    PROCEDURE CreatePurchInvoiceLineCharge@1000000015(VAR pNewPurchInvHeader@1000000000 : Record 38;ItemChargeCode@1000000001 : Code[20];ChargeAmount@1000000002 : Decimal);
    VAR
      PurchaseLine@1000000003 : Record 39;
      NextLineNo@1000000004 : Integer;
    BEGIN
      // S/P1262
      PurchaseLine.RESET;
      PurchaseLine.SETRANGE("Document Type",pNewPurchInvHeader."Document Type");
      PurchaseLine.SETRANGE("Document No.",pNewPurchInvHeader."No.");
      IF PurchaseLine.FINDLAST THEN
        NextLineNo := PurchaseLine."Line No." + 10000
      ELSE
        NextLineNo := 10000;

      PurchaseLine.INIT;
      PurchaseLine.VALIDATE("Document Type",pNewPurchInvHeader."Document Type");
      PurchaseLine.VALIDATE("Document No.",pNewPurchInvHeader."No.");
      PurchaseLine.VALIDATE("Line No.",NextLineNo);
      PurchaseLine.VALIDATE(Type,PurchaseLine.Type::"Charge (Item)");
      PurchaseLine.VALIDATE("No.",ItemChargeCode);
      PurchaseLine.VALIDATE(Quantity,1);
      PurchaseLine.VALIDATE("Direct Unit Cost",ChargeAmount);
      PurchaseLine.INSERT(TRUE);

      AssignPurchInvoiceLineCharge(pNewPurchInvHeader,PurchaseLine);
      // E/P1262
    END;

    PROCEDURE AssignPurchInvoiceLineCharge@1000000013(VAR pNewPurchInvHeader@1000000002 : Record 38;VAR pNewPurchInvLine@1000000000 : Record 39);
    VAR
      ItemChargeAssgntPurch@1000000006 : Record 5805;
      Currency@1000000005 : Record 4;
      AssignItemChargePurch@1000000001 : Codeunit 5805;
    BEGIN
      // S/P1262
      WITH pNewPurchInvLine DO BEGIN

        TESTFIELD(Type,Type::"Charge (Item)");
        TESTFIELD("No.");
        TESTFIELD(Quantity);

        ItemChargeAssgntPurch.RESET;
        ItemChargeAssgntPurch.SETRANGE("Document Type","Document Type");
        ItemChargeAssgntPurch.SETRANGE("Document No.","Document No.");
        ItemChargeAssgntPurch.SETRANGE("Document Line No.","Line No.");
        ItemChargeAssgntPurch.SETRANGE("Item Charge No.","No.");
        IF NOT ItemChargeAssgntPurch.FINDLAST THEN BEGIN
          ItemChargeAssgntPurch."Document Type" := "Document Type";
          ItemChargeAssgntPurch."Document No." := "Document No.";
          ItemChargeAssgntPurch."Document Line No." := "Line No.";
          ItemChargeAssgntPurch."Item Charge No." := "No.";

          IF pNewPurchInvHeader."Currency Code" = '' THEN
            Currency.InitRoundingPrecision
          ELSE BEGIN
            pNewPurchInvHeader.TESTFIELD("Currency Factor");
            Currency.GET(pNewPurchInvHeader."Currency Code");
            Currency.TESTFIELD("Amount Rounding Precision");
          END;
          IF ("Inv. Discount Amount" = 0) AND (NOT pNewPurchInvHeader."Prices Including VAT") THEN
            ItemChargeAssgntPurch."Unit Cost" := "Unit Cost"
          ELSE
            IF pNewPurchInvHeader."Prices Including VAT" THEN
              ItemChargeAssgntPurch."Unit Cost" :=
                ROUND(
                  ("Line Amount" - "Inv. Discount Amount") / Quantity / (1 + "VAT %" / 100),
                  Currency."Unit-Amount Rounding Precision")
            ELSE
              ItemChargeAssgntPurch."Unit Cost" :=
                ROUND(
                  ("Line Amount" - "Inv. Discount Amount") / Quantity,
                  Currency."Unit-Amount Rounding Precision");
        END;

        AssignItemChargePurch.CreateDocChargeAssgnt(ItemChargeAssgntPurch,"Receipt No.");
        CLEAR(AssignItemChargePurch);

        // Assign Item Charge per Amount (= Option 2)
        AssignItemChargePurch.SuggestAssgnt2(pNewPurchInvLine,pNewPurchInvLine."Qty. to Invoice",2);

      END; // WITH
      // E/P1262
    END;

    PROCEDURE ReleaseAndPostPurchInvoice@1000000002(VAR pNewPurchInvHeader@1000000000 : Record 38);
    VAR
      SalesHeader@1000000005 : Record 36;
      ReleasePurchaseDocument@1000000001 : Codeunit 415;
      PurchPost@1000000003 : Codeunit 90;
      ApprovalMgt@1000000004 : Codeunit 439;
      REB_Verwaltung@1000000002 : Codeunit 50034;
    BEGIN
      // S/P1262
      IF NOT EDIPartnerDocumentType."Auto. INVOIC Posting" THEN
        EXIT;

      // Ungebuchte EK-Rechnung freigeben
      COMMIT;
      CLEARLASTERROR;
      IF NOT ReleasePurchaseDocument.RUN(pNewPurchInvHeader) THEN BEGIN
        //H4536 13.08.15 TST +++++++++++++++++++++++++++++
        pNewPurchInvHeader.GET(pNewPurchInvHeader."Document Type",pNewPurchInvHeader."No.");
        //H4536 13.08.15 TST -----------------------------

        // Ungebuchte EK-Rechnung kennzeichnen
        IF pNewPurchInvHeader."EDI INVOIC Status" <> pNewPurchInvHeader."EDI INVOIC Status"::PostingErrors THEN BEGIN
          pNewPurchInvHeader."EDI INVOIC Status" := pNewPurchInvHeader."EDI INVOIC Status"::PostingErrors;
          pNewPurchInvHeader.MODIFY;
        END;
        // Bemerkung
        WriteErrorComment(pNewPurchInvHeader,
          STRSUBSTNO(Error001,pNewPurchInvHeader."Document Type",pNewPurchInvHeader."No.") + ' ' + GETLASTERRORTEXT);
        // Meldung
        //H3877 07.04.15 gob-Sievet +++++++++++++++++
        //IF GUIALLOWED THEN
        IF GUIALLOWED AND (NOT NoMessage) THEN
        //H3877 07.04.15 gob-Sievet -----------------
          MESSAGE(STRSUBSTNO(Error001,pNewPurchInvHeader."Document Type",pNewPurchInvHeader."No.") + ' ' +
            GETLASTERRORTEXT);
        EXIT;
      END;

      //H4536 13.08.15 TST +++++++++++++++++++++++++++++
      pNewPurchInvHeader.GET(pNewPurchInvHeader."Document Type",pNewPurchInvHeader."No.");
      //H4536 13.08.15 TST -----------------------------

      // Ungebuchte EK-Rechnung buchen
      CLEAR(REB_Verwaltung);
      REB_Verwaltung."betrÑge prÅfen"(pNewPurchInvHeader);

      IF ApprovalMgt.PrePostApprovalCheck(SalesHeader,pNewPurchInvHeader) THEN BEGIN
        COMMIT;
        CLEARLASTERROR;
        IF PurchPost.RUN(pNewPurchInvHeader) THEN BEGIN
          REB_Verwaltung.Buchung_Setzen(pNewPurchInvHeader);
        END ELSE BEGIN
          //H4536 13.08.15 TST +++++++++++++++++++++++++++++
          pNewPurchInvHeader.GET(pNewPurchInvHeader."Document Type",pNewPurchInvHeader."No.");
          //H4536 13.08.15 TST -----------------------------
          // Ungebuchte EK-Rechnung kennzeichnen
          IF pNewPurchInvHeader."EDI INVOIC Status" <> pNewPurchInvHeader."EDI INVOIC Status"::PostingErrors THEN BEGIN
            pNewPurchInvHeader."EDI INVOIC Status" := pNewPurchInvHeader."EDI INVOIC Status"::PostingErrors;
            pNewPurchInvHeader.MODIFY;
          END;
          // Bemerkung
          WriteErrorComment(pNewPurchInvHeader,
            STRSUBSTNO(Error002,pNewPurchInvHeader."Document Type",pNewPurchInvHeader."No.") + ' ' + GETLASTERRORTEXT);
          // Meldung
          //H3877 07.04.15 gob-Sievet +++++++++++++++++
          //IF GUIALLOWED THEN
          IF GUIALLOWED AND (NOT NoMessage) THEN
          //H3877 07.04.15 gob-Sievet -----------------
            MESSAGE(STRSUBSTNO(Error002,pNewPurchInvHeader."Document Type",pNewPurchInvHeader."No.") + ' ' +
              GETLASTERRORTEXT);
          EXIT;
        END;
      END;
      // E/P1262
    END;

    PROCEDURE CheckTotalInvoiceAmount@1000000011(VAR pInboundEDIPurchDocHeader@1000000002 : Record 82868;VAR pNewPurchInvHeader@1000000001 : Record 38) : Boolean;
    VAR
      PurchLine@1000000000 : Record 39;
    BEGIN
      // S/P1262
      // Gesamtbetrag der Rechnung ermitteln:
      // a) Anhand von Amount bzw. "Amount incl. VAT" oder b) anhand der Statistik

      // a) Calc Amount and "Amount Including VAT"
      PurchLine.RESET;
      PurchLine.SETCURRENTKEY("Document Type","Document No.","Line No.");
      PurchLine.SETRANGE("Document Type",pNewPurchInvHeader."Document Type");
      PurchLine.SETRANGE("Document No.",pNewPurchInvHeader."No.");
      PurchLine.SETFILTER(Type,'<>%1',PurchLine.Type::" ");
      IF PurchLine.FIND('-') THEN
        REPEAT
          IF (PurchLine.Amount = 0) OR (PurchLine."Amount Including VAT" = 0) THEN BEGIN
            PurchLine.UpdateAmounts(); // BetrÑge werden nur bei freigegebenen EK-Bestellungen aktualisiert
            PurchLine.GlobUpdateVATAmounts();
            PurchLine.MODIFY();
          END;
        UNTIL PurchLine.NEXT = 0;

      pNewPurchInvHeader.CALCFIELDS(Amount,"Amount Including VAT");

      IF (pInboundEDIPurchDocHeader.Amount = pNewPurchInvHeader.Amount) AND
        (pInboundEDIPurchDocHeader."Amount Including VAT" = pNewPurchInvHeader."Amount Including VAT")
      THEN BEGIN
        IF pNewPurchInvHeader."REB Gross Invoice Amount" <> pNewPurchInvHeader."Amount Including VAT" THEN BEGIN
          pNewPurchInvHeader.VALIDATE("REB Gross Invoice Amount",pNewPurchInvHeader."Amount Including VAT");
          pNewPurchInvHeader.MODIFY(TRUE);
        END;
        EXIT(TRUE);
      END;

      EXIT(FALSE);
      // E/P1262
    END;

    PROCEDURE CheckPaymentTerms@1000000007(VAR pInboundEDIPurchDocHeader@1000000000 : Record 82868;VAR pPurchaseHeader@1000000001 : Record 38) : Boolean;
    VAR
      PaymentTerms@1000000003 : Record 3;
      DateFormulaVar@1000000002 : DateFormula;
      ComparisonDate@1000000004 : Date;
    BEGIN
      // S/P1262
      // Zahlungsbedingung (anhand von Anzahl an FÑlligkeitstagen und Skontotagen sowie Skonto%) prÅfen/vergleichen

      PaymentTerms.GET(pPurchaseHeader."Payment Terms Code");

      ComparisonDate := TODAY;
      //P1298 30.11.14 gob-Fuchs +++++++++++++++++
      pInboundEDIPurchDocHeader."Calc. Due Date" := CALCDATE(PaymentTerms."Due Date Calculation",ComparisonDate);
      pInboundEDIPurchDocHeader."Calc. Discount Date" := CALCDATE(PaymentTerms."Discount Date Calculation",ComparisonDate);
      //P1298 30.11.14 gob-Fuchs -----------------

      IF pInboundEDIPurchDocHeader."Payment Discount %" <> pPurchaseHeader."Payment Discount %" THEN
        EXIT(FALSE); //H1880 Changed position of source code

      EVALUATE(DateFormulaVar,STRSUBSTNO('<%1D>',pInboundEDIPurchDocHeader."Payment Discount Days"));
      IF CALCDATE(DateFormulaVar,ComparisonDate) <> CALCDATE(PaymentTerms."Discount Date Calculation",ComparisonDate) THEN
        EXIT(FALSE);

      EVALUATE(DateFormulaVar,STRSUBSTNO('<%1D>',pInboundEDIPurchDocHeader."Due Days"));
      IF CALCDATE(DateFormulaVar,ComparisonDate) <> CALCDATE(PaymentTerms."Due Date Calculation",ComparisonDate) THEN
        EXIT(FALSE);

      EXIT(TRUE);
      // E/P1262
    END;

    PROCEDURE DetermineTolerance@1000000019();
    BEGIN
      // S/P1262
      UpperPriceToleranceFactor := 1;
      LowerPriceToleranceFactor := 1;
      // H2165 10.03.15  gob-sievet +++++++++++++++++++++++++++++++++
      //IF EDIPartnerDocumentType."Price Tolerance %" > 0 THEN BEGIN
      IF EDIPartnerDocumentType."Price Tolerance %" >= 0 THEN BEGIN
      // H2165 10.03.15  gob-sievet ----------------------------------
        UpperPriceToleranceFactor := 1 + EDIPartnerDocumentType."Price Tolerance %" / 100;
        // H2165 10.03.15  gob-sievet +++++++++++++++++++++++++++++++++
        //IF EDIPartnerDocumentType."Price Tolerance %" < 100 THEN
        IF EDIPartnerDocumentType."Price Tolerance %" <= 100 THEN
        // H2165 10.03.15  gob-sievet ----------------------------------
          LowerPriceToleranceFactor := 1 - EDIPartnerDocumentType."Price Tolerance %" / 100;
      END;
      // E/P1262
    END;

    PROCEDURE CheckPricesInclTolerance@1000000017(pDecimalValueEDIR@1000000000 : Decimal;pDecimalValuePOR@1000000001 : Decimal) : Boolean;
    BEGIN
      //H4152 29.04.15 gob-Sievet +++++++++++++++++++++++++++++
      // S/P1262
      //IF (pDecimalValue1 * UpperPriceToleranceFactor < pDecimalValue2) OR
      //  (pDecimalValue1 * LowerPriceToleranceFactor > pDecimalValue2)
      IF (pDecimalValueEDIR > pDecimalValuePOR * UpperPriceToleranceFactor) OR
        (pDecimalValueEDIR < pDecimalValuePOR * LowerPriceToleranceFactor)
      //H4152 29.04.15 gob-Sievet -----------------------------
      THEN
        EXIT(FALSE);

      EXIT(TRUE);
      // E/P1262
    END;

    PROCEDURE GetLastPurchCommentLineNo@1000000018(pPurchDocType@1000000000 : Integer;pPurchDocNo@1000000002 : Code[20];pPurchLineNo@1000000003 : Integer) : Integer;
    VAR
      PurchCommentLine@1000000001 : Record 43;
    BEGIN
      // S/P1262
      PurchCommentLine.RESET;
      PurchCommentLine.SETRANGE("Document Type",pPurchDocType);
      PurchCommentLine.SETRANGE("No.",pPurchDocNo);
      PurchCommentLine.SETRANGE("Document Line No.",pPurchLineNo);
      IF PurchCommentLine.FINDLAST THEN
        EXIT(PurchCommentLine."Line No.");

      EXIT(0);
      // E/P1262
    END;

    PROCEDURE WriteDocDifference@1000000004(VAR pInboundEDIPurchDocHeader@1000000001 : Record 82868;pText@1000000000 : Text[1024]);
    BEGIN
      // S/P1262
      WITH pInboundEDIPurchDocHeader DO BEGIN

        IF "Document Difference 1" = '' THEN BEGIN
          "Document Difference 1" := pText;
        END ELSE BEGIN
          IF "Document Difference 2" = '' THEN BEGIN
            "Document Difference 2" := pText;
          END ELSE BEGIN
            IF "Document Difference 3" = '' THEN
              "Document Difference 3" := pText
            ELSE
              //H3877 07.04.15 gob-Sievet +++++++++++++++++
              //IF GUIALLOWED THEN
              IF GUIALLOWED AND (NOT NoMessage) THEN
              //H3877 07.04.15 gob-Sievet -----------------
                MESSAGE(Text200 + pText);
          END;
        END;

      END; // WITH
      // E/P1262
    END;

    PROCEDURE WriteLineDifference@1000000008(VAR pInboundEDIDocPurchLine@1000000001 : Record 82869;pAddText@1000000000 : Text[1024]);
    VAR
      StringVar@1000000002 : Text[1024];
    BEGIN
      // S/P1262
      WITH pInboundEDIDocPurchLine DO BEGIN

        // "Line Differences" ggfs. kÅrzen
        StringVar := "Line Differences";

        IF StringVar <> '' THEN
          StringVar += ' | ';
        StringVar += pAddText;

        IF STRLEN(StringVar) > MAXSTRLEN("Line Differences") THEN
          StringVar := COPYSTR(StringVar,1,MAXSTRLEN("Line Differences")-3) + '...';
        "Line Differences" := StringVar;

      END; // WITH
      // E/P1262
    END;

    PROCEDURE SendErrorMail@1000000016(pPurchHeader@1000000005 : Record 38;pErrorText@1000000002 : Text[250];pLastErrorText@1000000004 : Text[1024]);
    VAR
      rAdminMailQueueSetup@1000000001 : Record 50092;
      rEDIIntegratorSetup@1000000003 : Record 82850;
      cAdminMailQueueFunctions@1000000000 : Codeunit 50019;
      Text001@1000000006 : TextConst 'ENU=Error processing EDI-INVOIC';
      Text002@1000000007 : TextConst 'ENU=Error in %1 %2';
    BEGIN
      // S/P1262
      // Function copied from CU 50099

      rEDIIntegratorSetup.GET;
      rAdminMailQueueSetup.GET;
      COMMIT;

      // H0531       27.08.13  FX +++++++++++++++++++++++++++++++++++++++++++++++
      cAdminMailQueueFunctions.InitMail(rAdminMailQueueSetup."EDI Mail Code",'erp-edi@home24.de');
      IF rEDIIntegratorSetup."Error CC Mail Address" <> '' THEN
        cAdminMailQueueFunctions.AddRecipientCC(rEDIIntegratorSetup."Error CC Mail Address");

      cAdminMailQueueFunctions.AddSubject(Text001);
      cAdminMailQueueFunctions.AddText(pErrorText);
      cAdminMailQueueFunctions.AddText(STRSUBSTNO(Text002,pPurchHeader."Document Type",pPurchHeader."No."));
      // H0531       27.08.13  FX ------------------------------------------------

      IF STRLEN(pLastErrorText) > 250 THEN
        cAdminMailQueueFunctions.AddText(COPYSTR(pLastErrorText,1,250));
      IF STRLEN(pLastErrorText) > 500 THEN
        cAdminMailQueueFunctions.AddText(COPYSTR(pLastErrorText,251,250));
      IF STRLEN(pLastErrorText) > 750 THEN
        cAdminMailQueueFunctions.AddText(COPYSTR(pLastErrorText,501,250));
      IF STRLEN(pLastErrorText) > 1000 THEN
        cAdminMailQueueFunctions.AddText(COPYSTR(pLastErrorText,751,250));

      cAdminMailQueueFunctions.FinishMail;
      // E/P1262
    END;

    PROCEDURE WriteErrorComment@1000000009(pPurchHeader@1000000002 : Record 38;pErrorText@1000000001 : Text[1024]);
    VAR
      PurchCommentLine@1000000003 : Record 43;
      i@1000000000 : Integer;
    BEGIN
      // S/P1262
      i := 1;
      REPEAT
        PurchCommentLine.INIT;
        PurchCommentLine.VALIDATE("Document Type",pPurchHeader."Document Type");
        PurchCommentLine.VALIDATE("No.",pPurchHeader."No.");
        PurchCommentLine.VALIDATE("Document Line No.",0);
        PurchCommentLine.VALIDATE("Line No.",
          GetLastPurchCommentLineNo(pPurchHeader."Document Type",pPurchHeader."No.",0) + 10000);
        PurchCommentLine.VALIDATE(Date,WORKDATE);
        PurchCommentLine.VALIDATE(Code,'');
        PurchCommentLine.VALIDATE(Comment,COPYSTR(pErrorText,i,MAXSTRLEN(PurchCommentLine.Comment)));
        PurchCommentLine.INSERT(TRUE);
        i := i + MAXSTRLEN(PurchCommentLine.Comment);
      UNTIL (i-1 >= STRLEN(pErrorText));
      // E/P1262
    END;

    PROCEDURE "H1294---"@1000000020();
    BEGIN
    END;

    PROCEDURE CreateEDIPurchComment@1000000022(VAR pInboundEDIPurchDocHeader@1000000001 : Record 82868;pComment@1000000003 : Text[250]);
    VAR
      PurchCommentLine@1000000000 : Record 43;
      NextLineNo@1000000002 : Integer;
    BEGIN
      // S/H1294
      NextLineNo := GetLastPurchCommentLineNo(
        PurchCommentLine."Document Type"::"EDI INVOIC",FORMAT(pInboundEDIPurchDocHeader."No."),0) + 10000;

      PurchCommentLine.INIT;
      PurchCommentLine.VALIDATE("Document Type",PurchCommentLine."Document Type"::"EDI INVOIC");
      PurchCommentLine.VALIDATE("No.",FORMAT(pInboundEDIPurchDocHeader."No."));
      PurchCommentLine.VALIDATE("Document Line No.",0);
      PurchCommentLine.VALIDATE("Line No.",NextLineNo);
      PurchCommentLine.VALIDATE(Date,TODAY);
      PurchCommentLine.VALIDATE(Comment,pComment);
      PurchCommentLine."EDI Warning" := TRUE;
      PurchCommentLine.INSERT(TRUE);
      // E/H1294
    END;

    PROCEDURE DeleteEDIPurchComment@1000000024(VAR pInboundEDIPurchDocHeader@1000000001 : Record 82868);
    VAR
      PurchCommentLine@1000000000 : Record 43;
      NextLineNo@1000000002 : Integer;
    BEGIN
      // S/H1294
      PurchCommentLine.SETRANGE("Document Type",PurchCommentLine."Document Type"::"EDI INVOIC");
      PurchCommentLine.SETRANGE("No.",FORMAT(pInboundEDIPurchDocHeader."No."));
      PurchCommentLine.SETRANGE("Document Line No.",0);
      PurchCommentLine.SETRANGE("EDI Warning",TRUE);
      PurchCommentLine.DELETEALL;
      // E/H1294
    END;

    PROCEDURE "---H1294"@1000000023();
    BEGIN
    END;

    PROCEDURE "H1880---"@1000000025();
    BEGIN
    END;

    PROCEDURE SetInboundDocStatus@1000000026(PurchInvHeaderP@1000000000 : Record 122);
    VAR
      InboundEDIPurchDocHeaderL@1000000001 : Record 82868;
    BEGIN
      IF PurchInvHeaderP."No." = '' THEN
        EXIT;

      InboundEDIPurchDocHeaderL.SETCURRENTKEY("Created Document No.");
      InboundEDIPurchDocHeaderL.SETRANGE("Created Document No.",PurchInvHeaderP."No.");
      IF InboundEDIPurchDocHeaderL.ISEMPTY THEN
        EXIT;

      InboundEDIPurchDocHeaderL.FINDLAST;
      InboundEDIPurchDocHeaderL."Document Status" := InboundEDIPurchDocHeaderL."Document Status"::Posted;
      InboundEDIPurchDocHeaderL.MODIFY;
    END;

    PROCEDURE "---H1880"@1000000027();
    BEGIN
    END;

    PROCEDURE "H3877--"@1000000029();
    BEGIN
    END;

    PROCEDURE CheckAcceptPostManually@1000000030(VAR pInboundEDIPurchDocHeaderV@1000000000 : Record 82868) : Boolean;
    BEGIN
      //H3877 11.03.15 gob-Sievet +++++++++++++++++
      EDIPartnerDocumentType.RESET;
      IF EDIPartnerDocumentType.GET(pInboundEDIPurchDocHeaderV."EDI Sender Partner Code",
                                    EDIPartnerDocumentType."Document Direction"::Inbound,
                                    'INVOIC') THEN BEGIN

        CASE pInboundEDIPurchDocHeaderV."Order Type" OF
          pInboundEDIPurchDocHeaderV."Order Type"::"Stock Order":
            IF EDIPartnerDocumentType."Stock Order accept manually" THEN
              EXIT(TRUE);
          pInboundEDIPurchDocHeaderV."Order Type"::"Drop Shipment":
            IF EDIPartnerDocumentType."Drop Shipment accept manually" THEN
              EXIT(TRUE);
          ELSE
            IF EDIPartnerDocumentType."Cross Docking accept manually" THEN
              EXIT(TRUE);
        END;
      END;
      EXIT(FALSE);
      //H3877 11.03.15 gob-Sievet -----------------
    END;

    PROCEDURE SetNoMESSAGE@1000000031(NoMessageL@1000000000 : Boolean);
    BEGIN
      //H3877 07.04.15 gob-Sievet +++++++++++++++++
      NoMessage := NoMessageL;
      //H3877 07.04.15 gob-Sievet -----------------
    END;

    PROCEDURE "---H3877"@1000000028();
    BEGIN
    END;

    BEGIN
    {
      P1262   23.06.2014   gob-sem     New Codeunit to create (and post) EDI Purchase Invoices
      P1262   31.07.2014   gob-sem     2 separated functions for a) Comparing and b) Accepting
      P1290   17.10.2014   gob-ael     Changes (Mail von Prodoehl 16.10.2014)

      P1298   30.11.2014   gob-FUCHSK  Added Calculation of fields: "Calc. Payment Terms Due Date", "Calc. Payment Terms Discount Date"
                                       Added Assignment for fields: "Order Quantity Received", "Order Quantity Invoiced"
                                       Check if document is already accepted
                                       Try to find Item No. if No. = ''

      +---------------------------------------------+
      |                                             |
      |                  Home24                     |
      |       Internal Customizing by NAV-Team      |
      |                                             |
      +---------------------------------------------+

      Project No. Date     Shortcut    Description
      ______________________________________________

      H1294   17.09.2014   gob-ael     Checks per Setup

      H1880   03.12.2014   gob-FUCHSK  Changed position of source code
              06.12.2014   gob-FUCHSK  Added Function SetInboundDocStatus
                                       Added Text306_H1880 if purchase order is already invoiced
      H1869   12.12.2014   gob-gaidar  Use the document date of the EDI file (instead of receipt date of EDI file)
      H1867   30.11.2014   gob-FUCHSK  Delete Ship-to Address inside Purchase Invoice
      H1979   08.01.2015   gob-dah     fix "divided by zero"-error
      H1979   22.01.2015   gob-Sievet  fix "divided by zero"-error
      H1961   27.01.2015   gob-Sievet  Split EDI  Invoice processing by order type
      H2175   20.02.2015   gob-Sievet  Split EDI  BUG: EDI INVOIC: Change document date
      H2165   10.03.2015   gob-Sievet  INVOICE optimizing ITEM No. Precheck
                                       fill pInboundEDIDocPurchLine."NAV Vendor Item No."
                                       PriceToleranceFactor
                                       Check Purch. Invoice before Accepting
      H3877   11.03.2015   gob-Sievet  INVOICE optimizing II
                                       No posting for flagged order type also when manually accepted
                                       Check Set-Article
      H4060   15.04.15     TST         Cut REB Values
      H4152   11.03.2015   gob-Sievet  EDI INVOIC price check tolerance based on purchase price value
      H4536   13.08.15     TST         Get Purchheader after release

      XXXXX
      - Ermittlung der zugehîrigen EK-Bestellzeile anhand von:
        a) Zeilenreferenznummer oder
        b) Artikel-Nr.

      - Was ist mit Bestellzeilen, welche nicht in der EDI-Datei enthalten sind?
        => Kein Fehler, sondern restliche EDI-Zeilen fakturieren!

      - Was tun, wenn die GesamtbetrÑge der ungeb. EK-Rechnung und der EDI-Datei nicht Åbereinstimmen?
        => Bemerkung und E-Mail!

      - Kommentarzeilen-Logik prÅfen
    }
    END.
  }
}

