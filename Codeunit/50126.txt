OBJECT Codeunit 50126 SII Monitoring Services
{
  OBJECT-PROPERTIES
  {
    Date=31.07.13;
    Time=09:27:53;
    Modified=Yes;
    Version List=SII;
  }
  PROPERTIES
  {
    OnRun=VAR
            SIIMonitoring@1000000000 : Record 50151;
            SIIMessage@1000000001 : Record 50141;
          BEGIN
            CASE GlobalRunType_glob OF
              GlobalRunType_glob::"Start Periodic Statistic": InitCountPeriodic(SIIMessageOnRun);
            END;
          END;

  }
  CODE
  {
    VAR
      SIISetup_glob@1000000000 : Record 50140;
      GlobalRunType_glob@1000000001 : ' ,Start Periodic Statistic';
      SIIMessageOnRun@1000000002 : Record 50141;

    PROCEDURE InitOnRunTrigger@1000000020(p_SIIMessage@1000000000 : Record 50141);
    BEGIN
      GlobalRunType_glob := GlobalRunType_glob::"Start Periodic Statistic";
      SIIMessageOnRun := p_SIIMessage;
    END;

    PROCEDURE "-----------Seperator_01"@1000000019();
    BEGIN
    END;

    PROCEDURE CreateMonitoringEntry@1000000003(p_SIIMessage@1000000002 : Record 50141;p_TableNoSource@1000000001 : Integer;p_LogEntryNoStart@1000000000 : Integer) : Integer;
    VAR
      SIIMonitoring@1000000003 : Record 50151;
    BEGIN
      SIISetup_glob.GET;

      SIIMonitoring."Entry No." := SIIMonitoring.GetNextEntryNo(TRUE);
      SIIMonitoring."Log Entry No. Start" := p_LogEntryNoStart;
      SIIMonitoring.INSERT;

      EXIT(SIIMonitoring."Entry No.");
    END;

    PROCEDURE CreateErrorEntry@1000000021(p_SIIMessage@1000000001 : Record 50141;p_ErrorText1@1000000003 : Text[250];p_ErrorText2@1000000004 : Text[250];p_ErrorText3@1000000005 : Text[250];p_ErrorText4@1000000006 : Text[250]);
    VAR
      SIIMonitoring@1000000000 : Record 50151;
      EntryNo@1000000002 : Integer;
    BEGIN
      WITH SIIMonitoring DO BEGIN
        "Entry No." := GetNextEntryNo(TRUE);
        INSERT;
        "Website No." := p_SIIMessage."Website No.";
        "Message Code NAV" := p_SIIMessage."Message Code NAV";
        "Message Code Shop" := p_SIIMessage."Message Code Shop";
        "Created At" := CREATEDATETIME(WORKDATE,0T);
        "Filled by" := "Filled by"::Periodical;
        Comment := 'Check Error Text';
        "Error Text 1" := p_ErrorText1;
        "Error Text 2" := p_ErrorText2;
        "Error Text 3" := p_ErrorText3;
        "Error Text 4" := p_ErrorText4;
        MODIFY;
      END;
    END;

    PROCEDURE CreateTriggeredMonitoringEntry@1000000027(p_NoOfEntries@1000000001 : Integer;p_LogEntryStartNo@1000000002 : Integer;p_LogEntryEndNo@1000000003 : Integer);
    VAR
      SIIMonitoring@1000000000 : Record 50151;
    BEGIN
      //S/P1055
      CLEAR(SIIMonitoring);
      WITH SIIMonitoring DO BEGIN
        INIT;
        "Entry No." := GetNextEntryNo(TRUE);
        INSERT;
        "Created At" := CURRENTDATETIME;
        Comment := STRSUBSTNO(
          'Transfered From Triggered Log (#: %1,Start: %2, End: %3)',
          p_NoOfEntries,
          p_LogEntryStartNo,
          p_LogEntryEndNo);
        "No. of Line Log Entries" := p_NoOfEntries;
        "Log Entry No. Start" := p_LogEntryStartNo;
        "Log Entry No. End" := p_LogEntryEndNo;
        "Filled by" := SIIMonitoring."Filled by"::"Manual Trigger";
        MODIFY;
      END;
      //E/P1055
    END;

    PROCEDURE "-----------Seperator_02"@1000000018();
    BEGIN
    END;

    PROCEDURE UpdateMonitoringEntryByJQ@1000000007(p_SIIMessage@1000000008 : Record 50141;p_EntryNo@1000000007 : Integer;p_TableNoSII@1000000006 : Integer;p_TableNoSource@1000000005 : Integer;p_NoOfUnprocessed@1000000004 : Integer;p_NoOfLineLogEntries@1000000001 : Integer);
    VAR
      SIIMonitoring@1000000000 : Record 50151;
    BEGIN
      WITH SIIMonitoring DO BEGIN
        IF GET(p_EntryNo) THEN BEGIN
          IF "Website No." = 0 THEN
            "Website No." := p_SIIMessage."Website No.";
          IF "Created At" = 0DT THEN
            "Created At" := CREATEDATETIME(WORKDATE,0T);
          IF "Message Code NAV" = '' THEN
            "Message Code NAV" := p_SIIMessage."Message Code NAV";
          IF "Message Code Shop" = '' THEN
            "Message Code Shop" := p_SIIMessage."Message Code Shop";
          IF "SII Table" = 0 THEN
            "SII Table" := p_TableNoSII;
          IF "Source Table" = 0 THEN
            "Source Table" := p_TableNoSource;
          IF "Filled by" = "Filled by"::" " THEN
            "Filled by" := SIIMonitoring."Filled by"::"Job Queue";
          IF p_NoOfUnprocessed = 1 THEN
            Comment := 'Processing Message started...'
          ELSE
            Comment := 'Update while processing message...';
          IF "Filled by" = "Filled by"::" " THEN
            "Filled by" := "Filled by"::"In Progress";
          "No. of Unprocessed" := p_NoOfUnprocessed;
          "No. of Line Log Entries" := p_NoOfLineLogEntries;
          MODIFY;
        END;
      END;
    END;

    PROCEDURE FinalizeMonitorAndArchiveByJQ@1000000010(p_SIIMessage@1000000000 : Record 50141;p_EntryNo@1000000014 : Integer;p_TableNoSII@1000000007 : Integer;p_TableNoSource@1000000013 : Integer;p_NoOfUnprocessed@1000000001 : Integer;p_NoOfLineLogEntries@1000000016 : Integer;p_NoOfCanceled@1000000002 : Integer;p_NoOfError@1000000003 : Integer;p_NoOfProcesses@1000000004 : Integer;p_DurationJobQueue@1000000012 : Duration;p_NoOfCreatedLogEntries@1000000015 : Integer);
    VAR
      SIIMonitoring@1000000005 : Record 50151;
      SIIMonitoringArchive@1000000006 : Record 50133;
      TrendUnprocessed@1000000008 : Decimal;
      TrendCanceled@1000000009 : Decimal;
      TrendError@1000000010 : Decimal;
      TrendProcessed@1000000011 : Decimal;
      CommandSendMail@1000000017 : ' ,Highlight,Warning,Deactivation';
    BEGIN
      //S/P0923
      CLEAR(CommandSendMail);
      //E/P0923

      SIISetup_glob.GET;

      IF SIIMonitoring.GET(p_EntryNo) THEN BEGIN
        ProcessLastEntries(p_SIIMessage,p_TableNoSource,SIIMonitoring."Filled by"::"Job Queue",p_EntryNo);
        // Fill General Informations
        SIIMonitoring."Website No." := p_SIIMessage."Website No.";
        SIIMonitoring."Message Code NAV" := p_SIIMessage."Message Code NAV";
        SIIMonitoring."Message Code Shop" := p_SIIMessage."Message Code Shop";
        SIIMonitoring."Created At" := CURRENTDATETIME;
        SIIMonitoring."SII Table" := p_TableNoSII;
        SIIMonitoring."Source Table" := p_TableNoSource;
        SIIMonitoring."Is Last Entry" := TRUE;
        SIIMonitoring."Filled by" := SIIMonitoring."Filled by"::"Job Queue";
        SIIMonitoring.Comment := '';
        //S/P0923
        SIIMonitoring."Limit Trend For Deactivation" := p_SIIMessage."Limit Trend For Deactivation";
        SIIMonitoring."Log Entries per Day" := CreatedEntriesPerDay(SIIMonitoring);
        //E/P0923

        SIIMonitoring."Duration JobQueue per Message" := FORMAT(000000T + p_DurationJobQueue);
        IF p_NoOfCreatedLogEntries = 0 THEN BEGIN
          SIIMonitoring."Log Entry No. Start" := 0;
          SIIMonitoring."Log Entry No. End" := 0;
        END ELSE
          SIIMonitoring."Log Entry No. End" := SIIMonitoring."Log Entry No. Start" + p_NoOfCreatedLogEntries - 1;

        SIIMonitoring."Highlight Threshold %" := SIISetup_glob."Highlight Diff. % Tr. Monitor";
        SIIMonitoring."Warning Threshold %" := SIISetup_glob."Warning Diff. % Tr. Monitor";

        SIIMonitoring."No. of Unprocessed" := p_NoOfUnprocessed;
        SIIMonitoring."No. of Line Log Entries" := p_NoOfLineLogEntries;
        SIIMonitoring."No. of Canceled" := p_NoOfCanceled;
        SIIMonitoring."No. of Error" := p_NoOfError;
        SIIMonitoring."No. of Processed" := p_NoOfProcesses;

        // Get Compare Values of the Past
        CompareValues(
          SIIMonitoring,SIIMonitoring."Filled by"::"Job Queue",p_TableNoSource,
          TrendUnprocessed,TrendCanceled,TrendError,TrendProcessed);

        // Get Absolute Average of Past
        SIIMonitoring."Avg. of Past Unprocessed" := TrendUnprocessed;
        SIIMonitoring."Avg. of Past Canceled" := TrendCanceled;
        SIIMonitoring."Avg. of Past Error" := TrendError;
        SIIMonitoring."Avg. of Past Processed" := TrendProcessed;

        // Get %
        IF TrendUnprocessed <> 0 THEN
          SIIMonitoring."Trend of Unprocessed %" := ROUND(p_NoOfUnprocessed / TrendUnprocessed * 100,0.01,'=');
        IF TrendCanceled <> 0 THEN
          SIIMonitoring."Trend of Canceled %" := ROUND(p_NoOfCanceled / TrendCanceled * 100,0.01,'=');
        IF TrendError <> 0 THEN
          SIIMonitoring."Trend of Error %" := ROUND(p_NoOfError / TrendError * 100,0.01,'=');
        IF TrendProcessed <> 0 THEN
          SIIMonitoring."Trend of Processed %" := ROUND(p_NoOfProcesses / TrendProcessed * 100,0.01,'=');

        // Get General Trend
        SIIMonitoring."General Trend" :=
          GetMaxValue(
            SIIMonitoring."Trend of Unprocessed %",
            SIIMonitoring."Trend of Canceled %",
            SIIMonitoring."Trend of Error %",
            SIIMonitoring."Trend of Processed %");

        //S/P0972
        SIIMonitoring.MODIFY;

        // Update Archive
        SIIMonitoringArchive.INIT;
        SIIMonitoringArchive.TRANSFERFIELDS(SIIMonitoring,TRUE);
        SIIMonitoringArchive.INSERT;
        //E/P0972

        //P0923
        // E-Mails
        IF (SIIMonitoring."No. of Unprocessed" <> 0) AND SIISetup_glob."Send E-Mails JQ Fill Log" THEN BEGIN
          // Warning
          IF ABS(SIIMonitoring."General Trend" - 100) >= SIISetup_glob."Warning Diff. % Tr. Monitor" THEN BEGIN
            CommandSendMail := CommandSendMail::Warning;
            SendJQMail(CommandSendMail,p_SIIMessage,SIIMonitoring);
          END ELSE BEGIN
            // Highlighted
            IF ABS(SIIMonitoring."General Trend" - 100) >= SIISetup_glob."Highlight Diff. % Tr. Monitor" THEN BEGIN
              CommandSendMail := CommandSendMail::Highlight;
              SendJQMail(CommandSendMail,p_SIIMessage,SIIMonitoring);
            END;
          END;
        END;
        //E/P0923

        // Msg. Deactivation
        IF p_SIIMessage."Deactivate Message by Trend" AND (p_SIIMessage."Limit Trend For Deactivation" <> 0) THEN BEGIN
          IF SIIMonitoring."No. of Unprocessed" <> 0 THEN BEGIN
            IF SIIMonitoring."General Trend" >= p_SIIMessage."Limit Trend For Deactivation" THEN BEGIN
              IF DeactivateMessage(p_SIIMessage) THEN BEGIN
                SIIMonitoring.Comment :=
                  'Message was deactivated (Trend: ' +
                  FORMAT(SIIMonitoring."General Trend") + '%, Limit of Message: ' +
                  FORMAT(p_SIIMessage."Limit Trend For Deactivation") + '%)';
                IF SIISetup_glob."Send E-Mails JQ Fill Log" THEN BEGIN
                  CommandSendMail := CommandSendMail::Deactivation;
                  SendJQMail(CommandSendMail,p_SIIMessage,SIIMonitoring);
                END;
              END;
            END;
          END;
        END;

        //S/P0972
        //SIIMonitoring.MODIFY;

        //// Update Archive
        //SIIMonitoringArchive.INIT;
        //SIIMonitoringArchive.TRANSFERFIELDS(SIIMonitoring,TRUE);
        //SIIMonitoringArchive.INSERT;
        //E/P0972
      END;
    END;

    PROCEDURE "-----------Seperator_03"@1000000005();
    BEGIN
    END;

    PROCEDURE InitCountPeriodic@1000000013(p_SIIMessage@1000000001 : Record 50141);
    VAR
      SIIMessage@1000000000 : Record 50141;
    BEGIN
      // Start Monitoring Service
      SIISetup_glob.GET;
      SIISetup_glob.TESTFIELD("Days to Compare Trend Monitor");
      FilterSIILogPeriodic(p_SIIMessage);
    END;

    PROCEDURE FilterSIILogPeriodic@1000000017(VAR p_SIIMessage_Var@1000000000 : Record 50141);
    VAR
      SIILog@1000000001 : Record 50146;
    BEGIN
      SIILog.RESET;
      SIILog.SETCURRENTKEY(
        AppDomain,"Message Code NAV","Message Code Shop","Attached to Table","Attached to Document Type","Attached to Document No.");

      SIILog.SETRANGE(AppDomain,p_SIIMessage_Var."Website No.");
      SIILog.SETRANGE("Message Code NAV",p_SIIMessage_Var."Message Code NAV");
      SIILog.SETRANGE("Message Code Shop",p_SIIMessage_Var."Message Code Shop");
      IF NOT SIILog.ISEMPTY THEN BEGIN
        // Sales Header
        SIILog.SETRANGE("Attached to Table",36);
        IF NOT SIILog.ISEMPTY THEN
          CountEntriesPeriodic(SIILog,p_SIIMessage_Var,36);
        // Sales Header Archive
        SIILog.SETRANGE("Attached to Table",5107);
        IF NOT SIILog.ISEMPTY THEN
          CountEntriesPeriodic(SIILog,p_SIIMessage_Var,5107);
      END;
    END;

    PROCEDURE CountEntriesPeriodic@1000000012(VAR p_SIILog_Var@1000000000 : Record 50146;VAR p_SIIMessage_Var@1000000001 : Record 50141;p_SourceTblNo@1000000007 : Integer);
    VAR
      SIILogArchive@1000000009 : Record 50147;
      SIITableNo@1000000006 : Integer;
      SourceTableNo@1000000008 : Integer;
      IntUnrpocessed@1000000002 : Integer;
      IntCanceled@1000000003 : Integer;
      IntError@1000000004 : Integer;
      IntProcessed@1000000005 : Integer;
    BEGIN
      //Count Entries for different States
      CLEAR(IntUnrpocessed);
      CLEAR(IntCanceled);
      CLEAR(IntError);
      CLEAR(IntProcessed);

      // Get Table Nos.
      CASE p_SIIMessage_Var."Belongs to" OF
        p_SIIMessage_Var."Belongs to"::Header:  SIITableNo := 50146;
        p_SIIMessage_Var."Belongs to"::Lines:   SIITableNo := 50154;
      END;
      SourceTableNo := p_SourceTblNo;

      // Count Unprocessed
      p_SIILog_Var.SETRANGE(Status,p_SIILog_Var.Status::Unprocessed);
      IF NOT p_SIILog_Var.ISEMPTY THEN
        IntUnrpocessed += p_SIILog_Var.COUNT;

      // Count Canceled
      p_SIILog_Var.SETRANGE(Status,p_SIILog_Var.Status::Canceled);
      IF NOT p_SIILog_Var.ISEMPTY THEN
        IntCanceled += p_SIILog_Var.COUNT;

      // Count Error
      p_SIILog_Var.SETRANGE(Status,p_SIILog_Var.Status::Error);
      IF NOT p_SIILog_Var.ISEMPTY THEN
        IntError += p_SIILog_Var.COUNT;

      // Count Processed
      p_SIILog_Var.SETRANGE(Status,p_SIILog_Var.Status::Processed);
      IF NOT p_SIILog_Var.ISEMPTY THEN
        IntProcessed += p_SIILog_Var.COUNT;
      CLEAR(SIILogArchive);
      SIILogArchive.SETVIEW(p_SIILog_Var.GETVIEW);
      IF NOT SIILogArchive.ISEMPTY THEN
        IntProcessed += SIILogArchive.COUNT;

      p_SIILog_Var.SETRANGE(Status);

      // Write Entry in Monitoring Table
      IF SIISetup_glob."Insert No Empty Lines" THEN BEGIN
        IF (IntUnrpocessed <> 0) OR (IntCanceled <> 0) OR (IntError <> 0) OR (IntProcessed <> 0) THEN
          UpdateMonitorAndArchivPeriodic(p_SIIMessage_Var,SIITableNo,SourceTableNo,IntUnrpocessed,IntCanceled,IntError,IntProcessed);
      END ELSE
        UpdateMonitorAndArchivPeriodic(p_SIIMessage_Var,SIITableNo,SourceTableNo,IntUnrpocessed,IntCanceled,IntError,IntProcessed);
    END;

    PROCEDURE UpdateMonitorAndArchivPeriodic@1000000009(VAR p_SIIMessage_Var@1000000000 : Record 50141;p_SIITableNo@1000000007 : Integer;p_SourceTableNo@1000000012 : Integer;p_NoOfUnprocessed@1000000001 : Integer;p_NoOfCanceled@1000000002 : Integer;p_NoOfError@1000000003 : Integer;p_NoOfProcesses@1000000004 : Integer);
    VAR
      SIIMonitoring@1000000005 : Record 50151;
      SIIMonitoringArchive@1000000006 : Record 50133;
      TrendUnprocessed@1000000008 : Decimal;
      TrendCanceled@1000000009 : Decimal;
      TrendError@1000000010 : Decimal;
      TrendProcessed@1000000011 : Decimal;
    BEGIN
      SIIMonitoring."Entry No." := SIIMonitoring.GetNextEntryNo(TRUE);
      SIIMonitoring.INSERT;

      ProcessLastEntries(p_SIIMessage_Var,p_SourceTableNo,SIIMonitoring."Filled by"::Periodical,SIIMonitoring."Entry No.");

      // Fill General Informations
      SIIMonitoring."Website No." := p_SIIMessage_Var."Website No.";
      SIIMonitoring."Message Code NAV" := p_SIIMessage_Var."Message Code NAV";
      SIIMonitoring."Message Code Shop" := p_SIIMessage_Var."Message Code Shop";
      SIIMonitoring."Created At" := CURRENTDATETIME;
      SIIMonitoring."Filled by" := SIIMonitoring."Filled by"::Periodical;
      SIIMonitoring."SII Table" := p_SIITableNo;
      SIIMonitoring."Source Table" := p_SourceTableNo;
      SIIMonitoring."Is Last Entry" := TRUE;

      // SII Setup
      SIIMonitoring."Highlight Threshold %" := SIISetup_glob."Highlight Diff. % Tr. Monitor";
      SIIMonitoring."Warning Threshold %" := SIISetup_glob."Warning Diff. % Tr. Monitor";

      // Counts
      SIIMonitoring."No. of Unprocessed" := p_NoOfUnprocessed;
      SIIMonitoring."No. of Canceled" := p_NoOfCanceled;
      SIIMonitoring."No. of Error" := p_NoOfError;
      SIIMonitoring."No. of Processed" := p_NoOfProcesses;

      // Get Compare Values of the Past
      CompareValues(
        SIIMonitoring,SIIMonitoring."Filled by"::Periodical,p_SourceTableNo,
        TrendUnprocessed,TrendCanceled,TrendError,TrendProcessed);

      // Get Absolute Average of Past
      SIIMonitoring."Avg. of Past Unprocessed" := TrendUnprocessed;
      SIIMonitoring."Avg. of Past Canceled" := TrendCanceled;
      SIIMonitoring."Avg. of Past Error" := TrendError;
      SIIMonitoring."Avg. of Past Processed" := TrendProcessed;

      // Get %
      IF TrendUnprocessed <> 0 THEN
        SIIMonitoring."Trend of Unprocessed %" := ROUND(p_NoOfUnprocessed / TrendUnprocessed * 100,0.01,'=');
      IF TrendCanceled <> 0 THEN
        SIIMonitoring."Trend of Canceled %" := ROUND(p_NoOfCanceled / TrendCanceled * 100,0.01,'=');
      IF TrendError <> 0 THEN
        SIIMonitoring."Trend of Error %" := ROUND(p_NoOfError / TrendError * 100,0.01,'=');
      IF TrendProcessed <> 0 THEN
        SIIMonitoring."Trend of Processed %" := ROUND(p_NoOfProcesses / TrendProcessed * 100,0.01,'=');

      // Get General Trend
      SIIMonitoring."General Trend" :=
        GetMaxValue(
          SIIMonitoring."Trend of Unprocessed %",
          SIIMonitoring."Trend of Canceled %",
          SIIMonitoring."Trend of Error %",
          SIIMonitoring."Trend of Processed %");

      //S/P0975
      SIIMonitoring."No. of Days last Log Entry" := GetDaysOfMessageInactivity(p_SIIMessage_Var,p_SourceTableNo);
      //E/P0975

      SIIMonitoring.MODIFY;

      //Update Archive
      SIIMonitoringArchive.INIT;
      SIIMonitoringArchive.TRANSFERFIELDS(SIIMonitoring,TRUE);
      SIIMonitoringArchive.INSERT;
    END;

    PROCEDURE "-----------Seperator_04"@1000000006();
    BEGIN
    END;

    PROCEDURE CompareValues@1000000011(p_SIIMonitoring@1000000004 : Record 50151;p_FilledBy@1000000011 : ' ,Job Queue,Periodical,In Progress';p_TableNoSource@1000000009 : Integer;VAR p_TrendUnprocessed_Var@1000000003 : Decimal;VAR p_TrendCanceled_Var@1000000002 : Decimal;VAR p_TrendError_Var@1000000001 : Decimal;VAR p_TrendProcessed_Var@1000000000 : Decimal);
    VAR
      SIIMonitoring@1000000005 : Record 50151;
      CreatedAtFilterString@1000000006 : Text[50];
      DaysToCompareString@1000000007 : Text[30];
      IntCount@1000000008 : Integer;
    BEGIN
      IF SIISetup_glob."Days to Compare Trend Monitor" <> 0 THEN BEGIN
        DaysToCompareString :=
          '-' + FORMAT(SIISetup_glob."Days to Compare Trend Monitor") + 'D';
        CreatedAtFilterString :=
          FORMAT(CALCDATE(DaysToCompareString,WORKDATE)) + '..' +
          FORMAT(CALCDATE('+1D',WORKDATE));

        WITH SIIMonitoring DO BEGIN
          RESET;
          SETCURRENTKEY("Website No.","Message Code NAV","Message Code Shop","Source Table","Filled by","Created At");
          SETRANGE("Website No.",p_SIIMonitoring."Website No.");
          SETRANGE("Message Code NAV",p_SIIMonitoring."Message Code NAV");
          SETFILTER("Message Code Shop",p_SIIMonitoring."Message Code Shop");
          SETRANGE("Source Table",p_TableNoSource);
          SETRANGE("Filled by",p_FilledBy);
          SETFILTER("Created At",CreatedAtFilterString);
          SETFILTER("Entry No.",'<>%1',p_SIIMonitoring."Entry No.");
          IF FIND('-') THEN BEGIN
            // Count
            IntCount := COUNT;
            // Get Total
            REPEAT
              p_TrendUnprocessed_Var += "No. of Unprocessed";
              p_TrendCanceled_Var += "No. of Canceled";
              p_TrendError_Var += "No. of Error";
              p_TrendProcessed_Var += "No. of Processed";
            UNTIL NEXT = 0;
            // Get Average
            p_TrendUnprocessed_Var := ROUND(p_TrendUnprocessed_Var / IntCount,1,'=');
            p_TrendCanceled_Var := ROUND(p_TrendCanceled_Var / IntCount,1,'=');
            p_TrendError_Var := ROUND(p_TrendError_Var / IntCount,1,'=');
            p_TrendProcessed_Var := ROUND(p_TrendProcessed_Var / IntCount,1,'=');
          END;
        END;
      END;
    END;

    PROCEDURE GetMaxValue@1000000000(p_Value_1@1000000003 : Decimal;p_Value_2@1000000002 : Decimal;p_Value_3@1000000001 : Decimal;p_Value_4@1000000000 : Decimal) : Decimal;
    VAR
      CriticalValue@1000000004 : Decimal;
    BEGIN
      CriticalValue := p_Value_1;

      IF p_Value_2 <> 0 THEN
        IF ABS(p_Value_2 - 100) > CriticalValue THEN
          CriticalValue := p_Value_2;

      IF p_Value_3 <> 0 THEN
        IF ABS(p_Value_3 - 100) > CriticalValue THEN
          CriticalValue := p_Value_3;

      IF p_Value_4 <> 0 THEN
        IF ABS(p_Value_4 - 100) > CriticalValue THEN
          CriticalValue := p_Value_4;

      EXIT(CriticalValue);
    END;

    PROCEDURE GetDaysOfMessageInactivity@1000000026(VAR p_SIIMessage_Var@1000000001 : Record 50141;p_SourceTableNo@1000000003 : Integer) : Integer;
    VAR
      SIILog@1000000000 : Record 50146;
      SIILogArchive@1000000002 : Record 50147;
    BEGIN
      //S/P0975
      CLEAR(SIILog);

      // Check SII Log
      SIILog.SETCURRENTKEY(
        AppDomain,"Message Code NAV","Message Code Shop","Attached to Table","Attached to Document Type","Attached to Document No.");
      SIILog.SETRANGE(AppDomain,p_SIIMessage_Var."Website No.");
      SIILog.SETRANGE("Message Code NAV",p_SIIMessage_Var."Message Code NAV");
      SIILog.SETRANGE("Message Code Shop",p_SIIMessage_Var."Message Code Shop");
      SIILog.SETRANGE("Attached to Table",p_SourceTableNo);
      IF SIILog.FIND('+') THEN BEGIN
        EXIT(TODAY - DT2DATE(SIILog."Created At"))
      END ELSE BEGIN
        // Check SII Log Archive
        CLEAR(SIILogArchive);
        SIILogArchive.SETCURRENTKEY(
          AppDomain,"Message Code NAV","Message Code Shop","Attached to Table","Attached to Document Type","Attached to Document No.");
        SIILogArchive.SETRANGE(AppDomain,p_SIIMessage_Var."Website No.");
        SIILogArchive.SETRANGE("Message Code NAV",p_SIIMessage_Var."Message Code NAV");
        SIILogArchive.SETRANGE("Message Code Shop",p_SIIMessage_Var."Message Code Shop");
        SIILogArchive.SETRANGE("Attached to Table",p_SourceTableNo);
        IF SIILogArchive.FIND('+') THEN BEGIN
          EXIT(TODAY - DT2DATE(SIILogArchive."Created At"))
        END;
      END;

      EXIT(0);
      //E/P0975
    END;

    PROCEDURE CreatedEntriesPerDay@1000000024(p_SIIMonitoring@1000000000 : Record 50151) : Integer;
    VAR
      SIIMonitoring@1000000001 : Record 50151;
      EntryCounter@1000000002 : Integer;
    BEGIN
      //S/P0923
      CLEAR(SIIMonitoring);
      CLEAR(EntryCounter);

      SIIMonitoring.SETCURRENTKEY(
        "Website No.","Message Code NAV","Message Code Shop","Source Table","Filled by","Created At");

      SIIMonitoring.SETRANGE("Website No.",p_SIIMonitoring."Website No.");
      SIIMonitoring.SETRANGE("Message Code NAV",p_SIIMonitoring."Message Code NAV");
      SIIMonitoring.SETRANGE("Message Code Shop",p_SIIMonitoring."Message Code Shop");
      SIIMonitoring.SETRANGE("Source Table",p_SIIMonitoring."Source Table");
      SIIMonitoring.SETRANGE("Filled by",p_SIIMonitoring."Filled by");
      SIIMonitoring.SETFILTER("Created At",'>=%1',CREATEDATETIME(WORKDATE,0T));

      IF SIIMonitoring.FIND('-') THEN BEGIN
        REPEAT
          EntryCounter += SIIMonitoring."No. of Unprocessed";
        UNTIL SIIMonitoring.NEXT = 0;
        EXIT(EntryCounter);
      END;

      EXIT(0);
      //E/P0923
    END;

    PROCEDURE "-----------Seperator_05"@1000000014();
    BEGIN
    END;

    PROCEDURE DeleteOldEntriesMonitor@1000000015();
    VAR
      SIIMonitoringArchive@1000000000 : Record 50133;
      SIIMonitoring@1000000001 : Record 50151;
      DaysString@1000000003 : Text[30];
      DateFilterString@1000000002 : Text[30];
    BEGIN
      // Archive Monitoring-Entries
      SIISetup_glob.GET;
      SIISetup_glob.TESTFIELD("Delete Monitor older n days");

      // Older then n days
      DaysString := '-' + FORMAT(SIISetup_glob."Delete Monitor older n days") + 'D';
      DateFilterString := '<' + FORMAT(CALCDATE(DaysString,WORKDATE));

      // Find Entries
      SIIMonitoring.RESET;
      SIIMonitoring.SETCURRENTKEY("Created At");
      SIIMonitoring.SETFILTER("Created At",DateFilterString);
      IF SIIMonitoring.FIND('-') THEN
        SIIMonitoring.DELETEALL;
    END;

    PROCEDURE ProcessLastEntries@1000000001(p_SIImessage@1000000000 : Record 50141;p_TableNoSource@1000000002 : Integer;p_FilledBy@1000000003 : ' ,Job Queue,Periodical,In Progress';p_EntryNo@1000000004 : Integer);
    VAR
      SIIMonitoring@1000000001 : Record 50151;
    BEGIN
      CLEAR(SIIMonitoring);
      SIIMonitoring.SETRANGE("Website No.",p_SIImessage."Website No.");
      SIIMonitoring.SETRANGE("Message Code NAV",p_SIImessage."Message Code NAV");
      SIIMonitoring.SETRANGE("Message Code Shop",p_SIImessage."Message Code Shop");
      SIIMonitoring.SETRANGE("Source Table",p_TableNoSource);
      SIIMonitoring.SETFILTER("Filled by",'%1',p_FilledBy);
      SIIMonitoring.SETFILTER("Entry No.",'<>%1',p_EntryNo);
      IF NOT SIIMonitoring.ISEMPTY THEN
        SIIMonitoring.MODIFYALL("Is Last Entry",FALSE);
    END;

    PROCEDURE DeactivateMessage@1000000002(p_SIIMessage@1000000000 : Record 50141) : Boolean;
    VAR
      SIIMessage@1000000001 : Record 50141;
    BEGIN
      SIIMessage := p_SIIMessage;
      SIIMessage.Mode := SIIMessage.Mode::Inactive;
      EXIT(SIIMessage.MODIFY);
    END;

    PROCEDURE "-----------Seperator_06"@1000000016();
    BEGIN
    END;

    PROCEDURE InitGetDurationProcess@1000000023();
    VAR
      SIIMessage@1000000002 : Record 50141;
      DateTimeOfLastLog@1000000000 : DateTime;
      i@1000000001 : Integer;
      ArrayText@1000000003 : ARRAY [100] OF Text[1024];
    BEGIN
      //S/P0975
      SIISetup_glob.GET;
      SIISetup_glob.TESTFIELD("Send E-Mail Duration");

      i := 0;

      CLEAR(SIIMessage);
      SIIMessage.SETRANGE("E-Mail Dur. Activ for SO",TRUE);
      IF SIIMessage.FIND('-') THEN BEGIN
        REPEAT
          CLEAR(DateTimeOfLastLog);
          IF SIIMessage."E-Mail Duration Log-Inactivity" <> 0 THEN BEGIN
            DateTimeOfLastLog := GetDateTimeOfInactivity(SIIMessage,36);
            IF DateTimeOfLastLog <> 0DT THEN BEGIN
              IF SIIMessage."E-Mail Duration Log-Inactivity" < (CURRENTDATETIME - DateTimeOfLastLog) THEN BEGIN
                i += 1;
                ArrayText[i] :=
                  'Message was too long inactive: "' +
                    FORMAT(SIIMessage."Website No.") + ' | ' +
                    SIIMessage."Message Code NAV" + ' | ' +
                    SIIMessage."Message Code Shop" + ' | ' +
                    'Table 36", ' +
                    'Datetime now: ' + FORMAT(CURRENTDATETIME) + ', ' +
                    'Last created Log Entry at: ' +
                    FORMAT(DateTimeOfLastLog) + ', ' +
                    'Max. Duration of no Activities in SII Log for this Message: ' +
                    FORMAT(SIIMessage."E-Mail Duration Log-Inactivity");
              END;
            END;
          END;
        UNTIL SIIMessage.NEXT = 0;
      END;

      SIIMessage.SETRANGE("E-Mail Dur. Activ for SO Arch.",TRUE);
      IF SIIMessage.FIND('-') THEN BEGIN
        REPEAT
          CLEAR(DateTimeOfLastLog);
          IF SIIMessage."E-Mail Duration Log-Inactivity" <> 0 THEN BEGIN
            DateTimeOfLastLog := GetDateTimeOfInactivity(SIIMessage,5107);
            IF DateTimeOfLastLog <> 0DT THEN BEGIN
              IF SIIMessage."E-Mail Duration Log-Inactivity" < (CURRENTDATETIME - DateTimeOfLastLog) THEN BEGIN
                i += 1;
                ArrayText[i] :=
                  'Message was too long inactive: "' +
                    FORMAT(SIIMessage."Website No.") + ' | ' +
                    SIIMessage."Message Code NAV" + ' | ' +
                    SIIMessage."Message Code Shop" + ' | ' +
                    'Table 5107", ' +
                    'Datetime now: ' + FORMAT(CURRENTDATETIME) + ', ' +
                    'Last created Log Entry at: ' +
                    FORMAT(DateTimeOfLastLog) + ', ' +
                    'Max. Duration of no Activities in SII Log for this Message: ' +
                    FORMAT(SIIMessage."E-Mail Duration Log-Inactivity");
              END;
            END;
          END;
        UNTIL SIIMessage.NEXT = 0;
      END;

      IF i <> 0 THEN
        SendDurationMail(ArrayText);
      //E/P0975
    END;

    PROCEDURE GetDateTimeOfInactivity@1000000031(p_SIIMessage@1000000000 : Record 50141;p_TableNo@1000000001 : Integer) : DateTime;
    VAR
      SIILog@1000000003 : Record 50146;
      SIILogArchive@1000000002 : Record 50147;
    BEGIN
      //S/P0975
      CLEAR(SIILog);
      SIILog.SETCURRENTKEY(
        AppDomain,"Message Code NAV","Message Code Shop","Attached to Table",
        "Attached to Document Type","Attached to Document No.");
      SIILog.SETRANGE(AppDomain,p_SIIMessage."Website No.");
      SIILog.SETRANGE("Message Code NAV",p_SIIMessage."Message Code NAV");
      SIILog.SETRANGE("Message Code Shop",p_SIIMessage."Message Code Shop");
      SIILog.SETRANGE("Attached to Table",p_TableNo);
      IF SIILog.FIND('+') THEN BEGIN
        EXIT(SIILog."Created At");
      END ELSE BEGIN
        CLEAR(SIILogArchive);
        SIILogArchive.SETCURRENTKEY(
          AppDomain,"Message Code NAV","Message Code Shop","Attached to Table",
          "Attached to Document Type","Attached to Document No.");
        SIILogArchive.SETRANGE(AppDomain,p_SIIMessage."Website No.");
        SIILogArchive.SETRANGE("Message Code NAV",p_SIIMessage."Message Code NAV");
        SIILogArchive.SETRANGE("Message Code Shop",p_SIIMessage."Message Code Shop");
        SIILogArchive.SETRANGE("Attached to Table",p_TableNo);
        IF SIILogArchive.FIND('+') THEN BEGIN
          EXIT(SIILogArchive."Created At");
        END;
      END;
      //E/P0975
    END;

    PROCEDURE "-----------Seperator_07"@1000000030();
    BEGIN
    END;

    PROCEDURE SendJQMail@1000000004(p_Command@1000000009 : ' ,Highlight,Warning,Deactivation';p_SIIMessage@1000000008 : Record 50141;p_SIIMonitoring@1000000001 : Record 50151);
    VAR
      AdminMailQueueSetup@1000000010 : Record 50092;
      MailITSetup@1000000007 : Record 75402;
      SIIEMailRecipients@1000000011 : Record 50137;
      MailIT@1000000006 : OCX "{C8C4804C-89BA-4291-AB58-4C6050B65175}:'ExpandIT.MailIT2'";
      Port@1000000005 : Integer;
      LastTextLine@1000000004 : Integer;
      CurrReturn@1000000003 : Char;
      IgnoreLineBreak@1000000002 : Boolean;
      "---"@1000000000 : Integer;
    BEGIN
      SIISetup_glob.GET;
      CLEAR(SIIEMailRecipients);
      IF SIISetup_glob."Send E-Mails JQ Fill Log" THEN BEGIN
        SIISetup_glob.TESTFIELD("E-Mail Sent From");

        AdminMailQueueSetup.GET;
        AdminMailQueueSetup.TESTFIELD("Mail Account Adress");
        AdminMailQueueSetup.TESTFIELD("Mail Account Password");

        MailITSetup.GET;
        MailITSetup.TESTFIELD("Mail Server");
        MailIT.SetService('SMTP');
        MailIT.SetFrom(SIISetup_glob."E-Mail Sent From");
        SIIEMailRecipients.SETCURRENTKEY("Get Message Deactivation");

        // Add Recipients To
        SIIEMailRecipients.SETRANGE("Get Message Deactivation",SIIEMailRecipients."Get Message Deactivation"::"To");
        IF SIIEMailRecipients.FIND('-') THEN
          REPEAT
            MailIT.AddRecipient(SIIEMailRecipients."E-Mail",SIIEMailRecipients.Name);
          UNTIL SIIEMailRecipients.NEXT = 0;

        // Add Recipients CC
        SIIEMailRecipients.SETRANGE("Get Message Deactivation",SIIEMailRecipients."Get Message Deactivation"::CC);
        IF SIIEMailRecipients.FIND('-') THEN
          REPEAT
            MailIT.AddRecipientCC(SIIEMailRecipients."E-Mail",SIIEMailRecipients.Name);
          UNTIL SIIEMailRecipients.NEXT = 0;

        // Add Recipients BCC
        SIIEMailRecipients.SETRANGE("Get Message Deactivation",SIIEMailRecipients."Get Message Deactivation"::BCC);
        IF SIIEMailRecipients.FIND('-') THEN
          REPEAT
            MailIT.AddRecipientBCC(SIIEMailRecipients."E-Mail",SIIEMailRecipients.Name);
          UNTIL SIIEMailRecipients.NEXT = 0;

        //S/P0923
        CASE p_Command OF
          p_Command::Highlight:
            BEGIN
              MailIT.SetSubject(
                'SII | Highlighted Message | ' + '"' +
                p_SIIMessage."Message Code NAV" + ',' + p_SIIMessage."Message Code Shop" + '"');
              CurrReturn := 13;
              // Set Body of E-Mail
              MailIT.AppendText(
                'Message "' + p_SIIMessage."Message Code NAV" + '|' + p_SIIMessage."Message Code Shop" +
                '" reached an highlighted level. Check Entry No. ' + FORMAT(p_SIIMonitoring."Entry No.") + '.' + FORMAT(CurrReturn) +
                '--------------------------------------' + FORMAT(CurrReturn) +
                'DB: ' + GetDatabaseName + ',Company: ' + COMPANYNAME + FORMAT(CurrReturn) +
                '--------------------------------------' + FORMAT(CurrReturn) +
                'Highlight Threshold %: ' + FORMAT(SIISetup_glob."Highlight Diff. % Tr. Monitor") + FORMAT(CurrReturn) +
                'Warning Threshold %: ' + FORMAT(SIISetup_glob."Warning Diff. % Tr. Monitor") + FORMAT(CurrReturn) +
                'Limit Trend of Message for Deactivation %: ' + FORMAT(p_SIIMessage."Limit Trend For Deactivation") + FORMAT(CurrReturn)
      +
                'Filled Log/Line Log Entries: ' + FORMAT(p_SIIMonitoring."No. of Unprocessed") + FORMAT(CurrReturn) +
                'Trend of Entries: ' + FORMAT(p_SIIMonitoring."Trend of Unprocessed %") + '%');
            END;
          p_Command::Warning:
            BEGIN
              MailIT.SetSubject(
                'SII | Warning for Message | ' + '"' +
                p_SIIMessage."Message Code NAV" + ',' + p_SIIMessage."Message Code Shop" + '"');
              CurrReturn := 13;
              // Set Body of E-Mail
              MailIT.AppendText(
                'Message "' + p_SIIMessage."Message Code NAV" + '|' + p_SIIMessage."Message Code Shop" +
                '" reached a warning level. Check Entry No. ' + FORMAT(p_SIIMonitoring."Entry No.") + '.' + FORMAT(CurrReturn) +
                '--------------------------------------' + FORMAT(CurrReturn) +
                'DB: ' + GetDatabaseName + ',Company: ' + COMPANYNAME + FORMAT(CurrReturn) +
                '--------------------------------------' + FORMAT(CurrReturn) +
                'Highlight Threshold %: ' + FORMAT(SIISetup_glob."Highlight Diff. % Tr. Monitor") + FORMAT(CurrReturn) +
                'Warning Threshold %: ' + FORMAT(SIISetup_glob."Warning Diff. % Tr. Monitor") + FORMAT(CurrReturn) +
                'Limit Trend of Message for Deactivation %: ' + FORMAT(p_SIIMessage."Limit Trend For Deactivation") + FORMAT(CurrReturn)
      +
                'Filled Log/Line Log Entries: ' + FORMAT(p_SIIMonitoring."No. of Unprocessed") + FORMAT(CurrReturn) +
                'Trend of Entries: ' + FORMAT(p_SIIMonitoring."Trend of Unprocessed %") + '%');
            END;
          p_Command::Deactivation:
            BEGIN
        //E/P0923
              // Set Subject of E-Mail
              MailIT.SetSubject(
                'SII | Deactivation of Message | ' + '"' +
                p_SIIMessage."Message Code NAV" + ',' + p_SIIMessage."Message Code Shop" + '"');
              CurrReturn := 13;
              // Set Body of E-Mail
              MailIT.AppendText(
                'Message "' + p_SIIMessage."Message Code NAV" + '|' + p_SIIMessage."Message Code Shop" +
                '" was deactivated, because of Monitoring Entry No. ' + FORMAT(p_SIIMonitoring."Entry No.") + '.' + FORMAT(CurrReturn) +
                '--------------------------------------' + FORMAT(CurrReturn) +
                'DB: ' + GetDatabaseName + ',Company: ' + COMPANYNAME + FORMAT(CurrReturn) +
                '--------------------------------------' + FORMAT(CurrReturn) +
                'Limit Trend of Message for Deactivation: ' + FORMAT(p_SIIMessage."Limit Trend For Deactivation") + '%'
                + FORMAT(CurrReturn) +
                'Filled Log/Line Log Entries: ' + FORMAT(p_SIIMonitoring."No. of Unprocessed") + FORMAT(CurrReturn) +
                'Trend of Entries: ' + FORMAT(p_SIIMonitoring."Trend of Unprocessed %") + '%');
        //S/P0923
            END;
        END;
        //E/P0923

        MailIT.SetServer(MailITSetup."Mail Server");
        IF MailITSetup."Server Port" = '' THEN
          Port := 25
        ELSE
          EVALUATE(Port,MailITSetup."Server Port");
        MailIT.SetPort(Port);
        MailIT.SetLogin(AdminMailQueueSetup."Mail Account Adress");
        MailIT.SetPassword(AdminMailQueueSetup."Mail Account Password");
        MailIT.Send;
      END;
    END;

    PROCEDURE SendStatisticMail@1000000022();
    VAR
      SIIMonitoring@1000000001 : Record 50151;
      AdminMailQueueSetup@1000000010 : Record 50092;
      MailITSetup@1000000007 : Record 75402;
      SIIEMailRecipients@1000000011 : Record 50137;
      MailIT@1000000006 : OCX "{C8C4804C-89BA-4291-AB58-4C6050B65175}:'ExpandIT.MailIT2'";
      Port@1000000005 : Integer;
      LastTextLine@1000000004 : Integer;
      CurrReturn@1000000003 : Char;
      IgnoreLineBreak@1000000002 : Boolean;
      SubjectText@1000000000 : Text[50];
      TblText@1000000008 : Text[50];
    BEGIN
      //S/P0923
      CLEAR(SIIMonitoring);

      SIISetup_glob.GET;
      IF SIISetup_glob."Send E-Mails Statistic" THEN BEGIN
        SIISetup_glob.TESTFIELD("E-Mail Sent From");
        SIIMonitoring.SETRANGE("Filled by",SIIMonitoring."Filled by"::Periodical);
        SIIMonitoring.SETRANGE("Is Last Entry",TRUE);
        IF SIIMonitoring.FIND('-') THEN BEGIN
          CLEAR(SIIEMailRecipients);
          AdminMailQueueSetup.GET;
          AdminMailQueueSetup.TESTFIELD("Mail Account Adress");
          AdminMailQueueSetup.TESTFIELD("Mail Account Password");

          MailITSetup.GET;
          MailITSetup.TESTFIELD("Mail Server");
          MailIT.SetService('SMTP');
          MailIT.SetFrom(SIISetup_glob."E-Mail Sent From");
          SIIEMailRecipients.SETCURRENTKEY("Get Statistic");

          // Add Recipients To
          SIIEMailRecipients.SETRANGE("Get Statistic",SIIEMailRecipients."Get Statistic"::"To");
          IF SIIEMailRecipients.FIND('-') THEN
            REPEAT
              MailIT.AddRecipient(SIIEMailRecipients."E-Mail",SIIEMailRecipients.Name);
            UNTIL SIIEMailRecipients.NEXT = 0;

          // Add Recipients CC
          SIIEMailRecipients.SETRANGE("Get Statistic",SIIEMailRecipients."Get Statistic"::CC);
          IF SIIEMailRecipients.FIND('-') THEN
            REPEAT
              MailIT.AddRecipientCC(SIIEMailRecipients."E-Mail",SIIEMailRecipients.Name);
            UNTIL SIIEMailRecipients.NEXT = 0;

          // Add Recipients BCC
          SIIEMailRecipients.SETRANGE("Get Statistic",SIIEMailRecipients."Get Statistic"::BCC);
          IF SIIEMailRecipients.FIND('-') THEN
            REPEAT
              MailIT.AddRecipientBCC(SIIEMailRecipients."E-Mail",SIIEMailRecipients.Name);
            UNTIL SIIEMailRecipients.NEXT = 0;

          // Set Subject of E-Mail
          SubjectText := 'SII | Monitoring Statistic | ' + FORMAT(WORKDATE);
          MailIT.SetSubject(SubjectText);
          CurrReturn := 13;

          // Set Body of E-Mail
          MailIT.AppendHTML(
            'DB: ' + GetDatabaseName + ', Company: ' + COMPANYNAME + '<br>' +
            '********************************************************' + '<br>' +
            '********************************************************' + '<br><br>');

          REPEAT
            CASE SIIMonitoring."Source Table" OF
              36:   TblText := ' | SO';
              5107: TblText := ' | SO Archive';
            END;

            MailIT.AppendHTML(
              'Website No. ' + FORMAT(SIIMonitoring."Website No.") + ' | ' + SIIMonitoring."Message Code NAV" + ' | ' +
              SIIMonitoring."Message Code Shop" + TblText + '<br>');

            // Comment
            IF SIIMonitoring.Comment <> '' THEN
              MailIT.AppendHTML(
                SIIMonitoring.FIELDCAPTION(Comment) + ': ' +
                SIIMonitoring.Comment + '<br>');

            // Values of Monitoring
            MailIT.AppendHTML(
              '<table border="1" cellpadding="2" cellspacing="0">' +
                //S/P0975
                '<tr>' +
                  '<td>' + SIIMonitoring.FIELDCAPTION("No. of Days last Log Entry") + '</td>' +
                  '<td>' + FORMAT(SIIMonitoring."No. of Days last Log Entry") + '</td>' +
                '</tr>' +
                //E/P0975
                '<tr>' +
                  '<td>' + SIIMonitoring.FIELDCAPTION("General Trend") + '</td>' +
                  '<td>' + FORMAT(SIIMonitoring."General Trend") + '</td>' +
                '</tr>' +
                '<tr>' +
                  '<td>' + SIIMonitoring.FIELDCAPTION("No. of Unprocessed") + '</td>' +
                  '<td>' + FORMAT(SIIMonitoring."No. of Unprocessed") + '</td>' +
                '</tr>' +
                '<tr>' +
                  '<td>' + SIIMonitoring.FIELDCAPTION("Trend of Unprocessed %") + '</td>' +
                  '<td>' + FORMAT(SIIMonitoring."Trend of Unprocessed %") + '</td>' +
                '</tr>' +
                '<tr>' +
                  '<td>' + SIIMonitoring.FIELDCAPTION("Avg. of Past Unprocessed") + '</td>' +
                  '<td>' + FORMAT(SIIMonitoring."Avg. of Past Unprocessed") + '</td>' +
                '</tr>' +
                '<tr>' +
                  '<td>' + SIIMonitoring.FIELDCAPTION("No. of Canceled") + '</td>' +
                  '<td>' + FORMAT(SIIMonitoring."No. of Canceled") + '</td>' +
                '</tr>' +
                '<tr>' +
                  '<td>' + SIIMonitoring.FIELDCAPTION("Trend of Canceled %") + '</td>' +
                  '<td>' + FORMAT(SIIMonitoring."Trend of Canceled %") + '</td>' +
                '</tr>' +
                '<tr>' +
                  '<td>' + SIIMonitoring.FIELDCAPTION("Avg. of Past Canceled") + '</td>' +
                  '<td>' + FORMAT(SIIMonitoring."Avg. of Past Canceled") + '</td>' +
                '</tr>' +
                '<tr>' +
                  '<td>' + SIIMonitoring.FIELDCAPTION("No. of Error") + '</td>' +
                  '<td>' + FORMAT(SIIMonitoring."No. of Error") + '</td>' +
                '</tr>' +
                '<tr>' +
                  '<td>' + SIIMonitoring.FIELDCAPTION("Trend of Error %") + '</td>' +
                  '<td>' + FORMAT(SIIMonitoring."Trend of Error %") + '</td>' +
                '</tr>' +
                '<tr>' +
                  '<td>' + SIIMonitoring.FIELDCAPTION("Avg. of Past Error") + '</td>' +
                  '<td>' + FORMAT(SIIMonitoring."Avg. of Past Error") + '</td>' +
                '</tr>' +
                '<tr>' +
                  '<td>' + SIIMonitoring.FIELDCAPTION("No. of Processed") + '</td>' +
                  '<td>' + FORMAT(SIIMonitoring."No. of Processed") + '</td>' +
                '</tr>' +
                '<tr>' +
                  '<td>' + SIIMonitoring.FIELDCAPTION("Trend of Processed %") + '</td>' +
                  '<td>' + FORMAT(SIIMonitoring."Trend of Processed %") + '</td>' +
                '</tr>' +
                '<tr>' +
                  '<td>' + SIIMonitoring.FIELDCAPTION("Avg. of Past Processed") + '</td>' +
                  '<td>' + FORMAT(SIIMonitoring."Avg. of Past Processed") + '</td>' +
                '</tr>' +
              '</table>' +
              '<br>');
          UNTIL SIIMonitoring.NEXT = 0;

          MailIT.SetServer(MailITSetup."Mail Server");
          IF MailITSetup."Server Port" = '' THEN
            Port := 25
          ELSE
            EVALUATE(Port,MailITSetup."Server Port");
          MailIT.SetPort(Port);
          MailIT.SetLogin(AdminMailQueueSetup."Mail Account Adress");
          MailIT.SetPassword(AdminMailQueueSetup."Mail Account Password");
          MailIT.Send;
        END;
      END;
      //E/P0923
    END;

    PROCEDURE SendDurationMail@1000000034(p_ArrayText@1000000009 : ARRAY [100] OF Text[1024]);
    VAR
      AdminMailQueueSetup@1000000010 : Record 50092;
      MailITSetup@1000000007 : Record 75402;
      SIIEMailRecipients@1000000011 : Record 50137;
      MailIT@1000000006 : OCX "{C8C4804C-89BA-4291-AB58-4C6050B65175}:'ExpandIT.MailIT2'";
      Port@1000000005 : Integer;
      LastTextLine@1000000004 : Integer;
      CurrReturn@1000000003 : Char;
      IgnoreLineBreak@1000000002 : Boolean;
      SubjectText@1000000000 : Text[50];
      i@1000000001 : Integer;
    BEGIN
      //S/P0975
      IF SIISetup_glob."Send E-Mail Duration" THEN BEGIN
        SIISetup_glob.TESTFIELD("E-Mail Sent From");

        AdminMailQueueSetup.GET;
        AdminMailQueueSetup.TESTFIELD("Mail Account Adress");
        AdminMailQueueSetup.TESTFIELD("Mail Account Password");

        MailITSetup.GET;
        MailITSetup.TESTFIELD("Mail Server");
        MailIT.SetService('SMTP');
        MailIT.SetFrom(SIISetup_glob."E-Mail Sent From");

        CLEAR(SIIEMailRecipients);
        SIIEMailRecipients.SETCURRENTKEY("Get Message Log-Inactive");

        // Add Recipients To
        SIIEMailRecipients.SETRANGE("Get Message Log-Inactive",SIIEMailRecipients."Get Message Log-Inactive"::"To");
        IF SIIEMailRecipients.FIND('-') THEN
          REPEAT
            MailIT.AddRecipient(SIIEMailRecipients."E-Mail",SIIEMailRecipients.Name);
          UNTIL SIIEMailRecipients.NEXT = 0;

        // Add Recipients CC
        SIIEMailRecipients.SETRANGE("Get Message Log-Inactive",SIIEMailRecipients."Get Message Log-Inactive"::CC);
        IF SIIEMailRecipients.FIND('-') THEN
          REPEAT
            MailIT.AddRecipientCC(SIIEMailRecipients."E-Mail",SIIEMailRecipients.Name);
          UNTIL SIIEMailRecipients.NEXT = 0;

        // Add Recipients BCC
        SIIEMailRecipients.SETRANGE("Get Message Log-Inactive",SIIEMailRecipients."Get Message Log-Inactive"::BCC);
        IF SIIEMailRecipients.FIND('-') THEN
          REPEAT
            MailIT.AddRecipientBCC(SIIEMailRecipients."E-Mail",SIIEMailRecipients.Name);
          UNTIL SIIEMailRecipients.NEXT = 0;

        // Set Subject of E-Mail
        SubjectText := 'SII | Inactive Messages | ' + FORMAT(WORKDATE);
        MailIT.SetSubject(SubjectText);
        CurrReturn := 13;

        // Set Body of E-Mail
        FOR i := 1 TO ARRAYLEN(p_ArrayText) DO BEGIN
          MailIT.AppendText(p_ArrayText[i] + FORMAT(CurrReturn) + FORMAT(CurrReturn));
        END;

        MailIT.SetServer(MailITSetup."Mail Server");
        IF MailITSetup."Server Port" = '' THEN
          Port := 25
        ELSE
          EVALUATE(Port,MailITSetup."Server Port");
        MailIT.SetPort(Port);
        MailIT.SetLogin(AdminMailQueueSetup."Mail Account Adress");
        MailIT.SetPassword(AdminMailQueueSetup."Mail Account Password");
        MailIT.Send;
      END;
      //E/P0975
    END;

    PROCEDURE "-----------Seperator_08"@1000000008();
    BEGIN
    END;

    PROCEDURE GetDatabaseName@1112400000() : Text[1024];
    BEGIN
      EXIT(GetParameterValue('database'));
    END;

    PROCEDURE GetParameterValue@1112400003(Parameter@1112400000 : Text[30]) Value : Text[1024];
    BEGIN
      Parameter := DELCHR(Parameter,'>','=') + '=';
      IF STRPOS(CONTEXTURL,Parameter) = 0 THEN
        EXIT('<empty>');
      Value := COPYSTR(CONTEXTURL,STRPOS(CONTEXTURL,Parameter) + STRLEN(Parameter));
      IF STRPOS(Value,'&') <> 0 THEN
        EXIT(COPYSTR(Value,1,STRPOS(Value,'&') - 1));
      EXIT(Value);
    END;

    BEGIN
    {
      +--------------------------------------------+
      |                                            |
      |                  Home24                    |
      |     Cooperation GOB & Home24 NAV Team      |
      |                                            |
      +--------------------------------------------+

      Project No. Date      Shortcut  Description
      _____________________________________________

      *** Module: SII Shop Interaction Interface ***
      P0879       08.04.13  gob-mlan  Object Created

      *** Module: FTTC Face to the Customer ***
      P0923       22.05.13  gob-mlan  "Limit Trend for Deactivation" from Message to Monitoring
                                      Highlighted/Warning/Deactivation Mail for JQ
                                      Statistic Mail
                  23.05.13  gob-mlan  CreatedEntriesPerDay()
      P0972       18.06.13  gob-mlan  FinalizeMonitorAndArchiveByJQ()
      P0975       18.06.13  gob-mlan  E-Mail for SII Log-Inactive Messages
      P1055       30.07.13  gob-mlan  FTTC Phase 2: Triggered Msg.
    }
    END.
  }
}

