OBJECT Codeunit 50206 Library - Utility
{
  OBJECT-PROPERTIES
  {
    Date=02.09.13;
    Time=14:59:54;
    Version List=HME0513;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      KeyNotFoundError@1000 : TextConst 'ENU=Field "%1" must be part of the primary key in the Table "%2".';

    PROCEDURE CreateNoSeries@30(VAR NoSeries@1003 : Record 308;Default@1002 : Boolean;Manual@1001 : Boolean;DateOrder@1000 : Boolean);
    BEGIN
      NoSeries.INIT;
      NoSeries.VALIDATE(Code,GenerateRandomCode(NoSeries.FIELDNO(Code),DATABASE::"No. Series"));
      NoSeries.VALIDATE("Default Nos.",Default);
      NoSeries.VALIDATE("Manual Nos.",Manual);
      NoSeries.VALIDATE("Date Order",DateOrder);
      NoSeries.INSERT(TRUE);
    END;

    PROCEDURE CreateNoSeriesLine@29(VAR NoSeriesLine@1003 : Record 309;SeriesCode@1002 : Code[10];StartingNo@1001 : Code[20];EndingNo@1000 : Code[20]);
    VAR
      RecRef@1004 : RecordRef;
    BEGIN
      NoSeriesLine.INIT;
      NoSeriesLine.VALIDATE("Series Code",SeriesCode);
      RecRef.GETTABLE(NoSeriesLine);
      NoSeriesLine.VALIDATE("Line No.",GetNewLineNo(RecRef,NoSeriesLine.FIELDNO("Line No.")));
      IF StartingNo = '' THEN
        NoSeriesLine.VALIDATE("Starting No.",SeriesCode + FORMAT(1)) // Assumed to be No. Series Code followed by 1.
      ELSE
        NoSeriesLine.VALIDATE("Starting No.",StartingNo);
      IF EndingNo <> '' THEN
        NoSeriesLine.VALIDATE("Ending No.",EndingNo);
      NoSeriesLine.INSERT(TRUE);
    END;

    PROCEDURE CheckFileNotEmpty@24(FileName@1001 : Text[1024]) : Boolean;
    VAR
      File@1000 : File;
    BEGIN
      // The parameter FileName should contain the full File Name including path.
      IF FileName = '' THEN
        EXIT(FALSE);
      IF File.OPEN(FileName) THEN
        IF File.LEN > 0 THEN
          EXIT(TRUE);
      EXIT(FALSE);
    END;

    PROCEDURE ConvertHoursToMilliSec@26(TimePeriod@1000 : Decimal) : Decimal;
    BEGIN
      EXIT(TimePeriod * 3600000);
    END;

    PROCEDURE GetNewLineNo@10(RecRef@1001 : RecordRef;FieldNo@1009 : Integer) : Integer;
    VAR
      RecRef2@1006 : RecordRef;
      FieldRef@1004 : FieldRef;
      FieldRef2@1005 : FieldRef;
      KeyRef@1002 : KeyRef;
      FieldCount@1003 : Integer;
      LineNumberFound@1007 : Boolean;
    BEGIN
      // Find the value of Line No. for a new line in the Record passed as Record Ref.
      // 1. It is assumed that the field passed is part of the primary key.
      // 2. It is assumed that all the primary key fields except Line No. field are already validated on the record.
      RecRef2.OPEN(RecRef.NUMBER,FALSE,COMPANYNAME);
      KeyRef := RecRef.KEYINDEX(1);  // The Primary Key always has index as 1.
      FOR FieldCount := 1 TO KeyRef.FIELDCOUNT DO BEGIN
        FieldRef := KeyRef.FIELDINDEX(FieldCount);
        IF FieldRef.NUMBER <> FieldNo THEN BEGIN
          FieldRef2 := RecRef2.FIELD(FieldRef.NUMBER);
          FieldRef2.SETRANGE(FieldRef.VALUE);  // Set filter on fields other than Line No with value as filled in on RecRef.
        END ELSE
          LineNumberFound := TRUE;
      END;

      IF NOT LineNumberFound THEN BEGIN
        FieldRef := RecRef2.FIELD(FieldNo);
        ERROR(STRSUBSTNO(KeyNotFoundError,FieldRef.NAME,RecRef2.NAME));
      END;

      IF RecRef2.FINDLAST THEN BEGIN
        FieldRef := RecRef2.FIELD(FieldNo);
        FieldCount := FieldRef.VALUE;
      END ELSE
        FieldCount := 0;
      EXIT(FieldCount + 10000);  // Add 10000 to the last Line No.
    END;

    PROCEDURE GetNoSeriesCode@44() : Code[10];
    VAR
      NoSeries@1001 : Record 308;
      NoSeriesLine@1000 : Record 309;
    BEGIN
      // Create Number Series and Number Series Line and return the No. Series Code.
      CreateNoSeries(NoSeries,TRUE,TRUE,FALSE);
      CreateNoSeriesLine(NoSeriesLine,NoSeries.Code,'','');
      EXIT(NoSeries.Code);
    END;

    PROCEDURE GenerateRandomCode@36(FieldNo@1001 : Integer;TableNo@1000 : Integer) : Code[1024];
    VAR
      RecRef@1005 : RecordRef;
      FieldRef@1004 : FieldRef;
      RandomCode@1003 : Code[1024];
      CodeGenerated@1002 : Boolean;
    BEGIN
      // Create a random and unique code for the any code field.
      REPEAT
        RecRef.OPEN(TableNo,TRUE,COMPANYNAME);
        CLEAR(FieldRef);
        FieldRef := RecRef.FIELD(FieldNo);
        RandomCode := COPYSTR(CREATEGUID,2,FieldRef.LENGTH);
        FieldRef.SETRANGE(RandomCode);
        IF NOT RecRef.FINDFIRST THEN BEGIN
          CodeGenerated := TRUE;
          EXIT(RandomCode);
        END;
      UNTIL CodeGenerated;
    END;

    PROCEDURE ValidateField@1102601000(VAR RecordRef@1102601000 : RecordRef;FieldName@1102601001 : Text[30];Value@1102601002 : Variant);
    VAR
      Field@1102601004 : Record 2000000041;
      FieldRef@1102601003 : FieldRef;
    BEGIN
      Field.SETRANGE(TableNo,RecordRef.NUMBER);
      Field.SETRANGE(FieldName,FieldName);
      IF Field.FINDFIRST THEN BEGIN
        FieldRef := RecordRef.FIELD(Field."No.");
        FieldRef.VALUE(Value)
      END
    END;

    BEGIN
    {
      Contains all generic utility functions.
    }
    END.
  }
}

