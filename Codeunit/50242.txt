OBJECT Codeunit 50242 Unapply custledgentries
{
  OBJECT-PROPERTIES
  {
    Date=26.03.15;
    Time=08:56:36;
    Version List=;
  }
  PROPERTIES
  {
    TableNo=98;
    OnRun=BEGIN
            //A/gob-ko/13.11.13/P1150
            FirstPostingDate := CheckFirstPostingDate;
            PostingDate := "Posting Date for Application";
            IF FirstPostingDate > PostingDate THEN
               PostingDate := FirstPostingDate;
            IF "Filter Transaction No. Unapply" = '' THEN BEGIN
              DetailedCustEntry.RESET;

              DetailedCustEntry.SETCURRENTKEY("Transaction No.");

              IF DetailedCustEntry.FIND('+') THEN
                LastTransaction := DetailedCustEntry."Transaction No.";
              //A/gob-ko/23062014/P1261
              "Detailed Cust. Ledg. Entry".SETCURRENTKEY("Transaction No.");
              "Detailed Cust. Ledg. Entry".ASCENDING(FALSE);
              "Detailed Cust. Ledg. Entry".SETFILTER("Detailed Cust. Ledg. Entry"."Posting Date",'..%1',PostingDate);
              "Detailed Cust. Ledg. Entry".SETFILTER("Transaction No.",'%1..%2',"Last Transaction No. Unapplied",LastTransaction);
              //E/gob-ko/23062014/P1261

            END ELSE BEGIN
              "Detailed Cust. Ledg. Entry".SETCURRENTKEY("Transaction No.");
              "Detailed Cust. Ledg. Entry".ASCENDING(FALSE);
              "Detailed Cust. Ledg. Entry".SETFILTER("Transaction No.","Filter Transaction No. Unapply");
              "Detailed Cust. Ledg. Entry".SETFILTER("Detailed Cust. Ledg. Entry"."Posting Date",'..%1',PostingDate);
              //"Detailed Cust. Ledg. Entry".SETFILTER("Transaction No.",'%1..%2',"Last Transaction No. Unapplied",LastTransaction);



            END;


            //E/gob-ko/13.11.13/P1150
            //IF GUIALLOWED THEN
            //  Window.OPEN('Transaktion Nr.: #1#########');
            UPdateGLSetup := TRUE;

            IF GUIALLOWED THEN BEGIN
              Errorlog1.SETRANGE(Status,Errorlog1.Status::Skip);
              Errorlog1.SETRANGE(Errorlog1."Report No.",50143);
              IF Errorlog1.FINDLAST THEN BEGIN
                 //"Detailed Cust. Ledg. Entry".SETFILTER("Transaction No.",'..%1',Errorlog1."Transaction No."-1);
                 UPdateGLSetup := FALSE;
              END;
            END;


            Errorlog1.RESET;
            IF Errorlog1.FINDLAST THEN
               zÑhler := Errorlog1."Entry No.";



            "Detailed Cust. Ledg. Entry".SETRANGE("Entry Type","Detailed Cust. Ledg. Entry"."Entry Type"::Application);
            "Detailed Cust. Ledg. Entry".SETRANGE(Unapplied,FALSE);

            IF "Detailed Cust. Ledg. Entry".FINDFIRST THEN BEGIN
               //REPEAT
                //IF GUIALLOWED THEN
                //  Window.UPDATE(1,"Detailed Cust. Ledg. Entry"."Transaction No.");
                GOBCustledgEntry.LOCKTABLE;
                GOBCustledgEntry.GET("Detailed Cust. Ledg. Entry"."Cust. Ledger Entry No.");
                CustPostGroup := GOBCustledgEntry."Customer Posting Group";
                PrÅfungUmbuchung;
                IF Postenumbuchen = TRUE THEN BEGIN

                  zÑhler := zÑhler +1;
                  ErrorLog.INIT;
                  ErrorLog."Entry No." := zÑhler;
                  ErrorLog."Report No." := 50143;
                  ErrorLog."Customer No." := "Detailed Cust. Ledg. Entry"."Customer No.";
                  ErrorLog."Customer Ledger Entry" := "Detailed Cust. Ledg. Entry"."Cust. Ledger Entry No.";
                  ErrorLog."Det. Cust. Ledger Entry" := "Detailed Cust. Ledg. Entry"."Entry No.";
                  ErrorLog.Status := ErrorLog.Status::Skip;
                  ErrorLog."Transaction No." := "Detailed Cust. Ledg. Entry"."Transaction No.";
                  ErrorLog.Date := TODAY;
                  ErrorLog.Time := TIME;
                  ErrorLog.INSERT;
                  COMMIT;

                  GOBDetPost.SETCURRENTKEY("Transaction No.","Customer No.","Entry Type");
                  GOBDetPost.SETRANGE("Transaction No.","Detailed Cust. Ledg. Entry"."Transaction No.");
                  GOBDetPost.SETRANGE("Customer No.","Detailed Cust. Ledg. Entry"."Customer No.");
                  GOBDetPost.SETRANGE(GOBDetPost."Entry Type",GOBDetPost."Entry Type"::Application);
                  GOBDetPost.SETRANGE(GOBDetPost.Unapplied,FALSE);
                  //GOBDetPost.ASCENDING(FALSE);
                  IF GOBDetPost.FIND('-') THEN
                    REPEAT
                    IF (GOBDetPost."Cust. Ledger Entry No." <> GOBDetPost."Applied Cust. Ledger Entry No.") AND
                       (GOBDetPost."Applied Cust. Ledger Entry No." <> 0) THEN BEGIN
                       NoAusgleich := GOBDetPost."Entry No.";
                       GOBCustledgEntry2.GET(GOBDetPost."Applied Cust. Ledger Entry No.");

                    END;
                    IF (GOBDetPost."Entry Type" <> GOBDetPost."Entry Type"::"Initial Entry") AND
                         NOT GOBDetPost.Unapplied
                      THEN BEGIN
                        //CheckReversal(DtldCustLedgEntry."Cust. Ledger Entry No.");
                      IF GOBDetPost."Entry Type" = GOBDetPost."Entry Type"::Application THEN BEGIN
                        ApplicationEntryNo :=
                        FindLastApplEntry(GOBDetPost."Cust. Ledger Entry No.");
                        IF (ApplicationEntryNo <> 0) AND (ApplicationEntryNo <> GOBDetPost."Entry No.") THEN BEGIN
                             //ERROR(Text012,CustLedgEntry.TABLECAPTION,GOBDetPost."Cust. Ledger Entry No.");
                              //IF (CustPostGroup <> GOBCustledgEntry2."Customer Posting Group") AND
                              //   (GOBDetPost."Applied Cust. Ledger Entry No." <> 0) THEN BEGIN
                             ReopenEntry2;
                             {
                            IF Postenumbuchen = TRUE THEN BEGIN
                              ReopenEntry;
                              DtldCustLedgEntry4.GET(NoAusgleich);
                              PostApplication2(DtldCustLedgEntry4);

                            END;
                              }
                            //DtldCustLedgEntry4.GET(GOBDetPost."Entry No.");
                                  //PostApplication(DtldCustLedgEntry4);
                              //END;
                        END ELSE BEGIN

                        END;
                      END;
                      LastTransactionNo := FindLastTransactionNo(GOBDetPost."Cust. Ledger Entry No.");
                      IF (LastTransactionNo <> 0) AND (LastTransactionNo <> GOBDetPost."Transaction No.") THEN BEGIN
                           //Postenumbuchen := FALSE;
                      END ELSE BEGIN

                      END;
                    END;


                    UNTIL GOBDetPost.NEXT = 0;

                  IF Postenumbuchen = TRUE THEN BEGIN
                    ReopenEntry;
                    DtldCustLedgEntry4.GET(NoAusgleich);
                    PostApplication2(DtldCustLedgEntry4);

                  END;

                  errorlogDelete.GET(zÑhler);
                  errorlogDelete.DELETE;
                  COMMIT;
                END;
              //UNTIL "Detailed Cust. Ledg. Entry".NEXT = 0;
            END;
            IF UPdateGLSetup THEN
              "Last Transaction No. Unapplied" := LastTransaction;
            MODIFY;
            COMMIT;
          END;

  }
  CODE
  {
    VAR
      Text001@1000000010 : TextConst 'DEU="Belegnr. %1 , Zeile %2. Bei RÅcklastbuchungen muss die Kontoart Debitor sein. ";ENU=You cannot unapply %1 No. %2 because the account type has to be customer.';
      Text002@1000000009 : TextConst 'DEU="Belegnr. %1 , Zeile %2. Bei RÅcklastbuchungen muss ein Betrag angegeben sein. ";ENU=You cannot unapply %1 No. %2 because you have to specify an amount.';
      Text003@1000000008 : TextConst 'DEU="Belegnr. %1 , Zeile %2. RÅcklastbuchung: Der Betrag der Buchungszeile %3 passt nicht zu den BetrÑgen der zu îffnenden Posten %4. ";ENU=You cannot unapply %1 No. %2 because the amount of the booking line does not match to the amounts of the entries.';
      Text004@1000000007 : TextConst 'DEU=Belegnr. %1 , Zeile %2. RÅcklastbuchung: Sie kînnen den Ausgleich fÅr %3 Nr. %4 nicht aufheben, weil der Posten bereits Gegenstand einer Stornierung war.;ENU=You cannot unapply %1 No. %2 because the entry has been involved in a reversal.';
      Text005@1000000006 : TextConst 'DEU=Belegnr. %1 , Zeile %2. RÅcklastbuchung: %3 Nr. %4 verfÅgt Åber keinen Ausgleichsposten.;ENU=%1 No. %2 does not have an application entry.';
      Text006@1000000005 : TextConst 'DEU=Belegnr. %1 , Zeile %2. RÅcklastbuchung: %3 Nr. %4 ist verfÅgt bereits Åber einen Ausgleichstorno.;ENU=%1 No. %2 does not have an application entry.';
      Text007@1000000004 : TextConst 'DEU=Verarbeite Belegnr. #1###########;ENU=Processing Document No. #1###########';
      Text10000@1000000003 : TextConst 'DEU=Die Einrichtungsdaten wurden erstellt.;ENU=The setup data have been created.';
      Text012@1000000002 : TextConst 'DEU=Bevor Sie den Ausgleich fÅr diesen Posten aufheben kînnen, mÅssen Sie den Ausgleich fÅr alle Ausgleichsposten in %1 Nr. %2 aufheben, die nach diesem Posten gebucht wurden.;ENU=Before you can unapply this entry, you must first unapply all application entries in %1 No. %2 that were posted after this entry.';
      Text015@1000000001 : TextConst 'DEU=Das aktuellste %3 muss ein Ausgleich in %1 Nr. %2 sein.;ENU=The latest %3 must be an application in %1 No. %2.';
      GOBTEXT001@1000000000 : TextConst 'DEU=Sie mÅssen das Buchungsdatum angeben.;ENU=Please enter Posting Date';
      OPPSetup@1000000052 : Record 5157802;
      CLEntry@1000000051 : Record 21;
      Customer@1000000050 : Record 18;
      CustLedgEntry@1000000049 : Record 21;
      DtldCustLedgEntry2@1000000048 : Record 379;
      DtldCustLedgEntryBuf@1000000047 : TEMPORARY Record 379;
      GenJnlLine2@1000000046 : Record 81;
      GenJnlLine@1000000045 : Record 81;
      BankAccount@1000000044 : Record 270;
      CEEdit@1000000043 : Codeunit 103;
      CEApp@1000000042 : Codeunit 226;
      CESetAppId@1000000041 : Codeunit 101;
      Dlg@1000000040 : Dialog;
      TestAmt@1000000039 : Decimal;
      DateTo@1000000038 : Date;
      CustPostGroup@1000000037 : Code[10];
      CustLedgEntry2@1000000036 : Record 21;
      DtldCustLedgEntry3@1000000035 : Record 379;
      DtldCustLedgEntry4@1000000034 : Record 379;
      Window@1000000033 : Dialog;
      Factor@1000000032 : Decimal;
      Counter@1000000031 : Decimal;
      ApplyCEPayMethod@1000000030 : Codeunit 50088;
      HighestCustLedgEntryNo@1000000029 : Integer;
      LastCustLedgEntry@1000000028 : Record 21;
      Tempjnllinedim@1000000027 : Record 356;
      LedgEntryDim@1000000026 : Record 355;
      GOBDetPost@1000000025 : Record 379;
      GOBCustledgEntry@1000000024 : Record 21;
      Postenumbuchen@1000000023 : Boolean;
      GOBCustledgEntry2@1000000022 : Record 21;
      NoAusgleich@1000000021 : Integer;
      ApplicationEntryNo@1000000020 : Integer;
      LastTransactionNo@1000000019 : Integer;
      Betrag1@1000000018 : Decimal;
      Betrag2@1000000017 : Decimal;
      PostingDate@1000000016 : Date;
      ErrorLog@1000000015 : Record 50244;
      Errorlog1@1000000014 : Record 50244;
      zÑhler@1000000013 : Integer;
      errorlogDelete@1000000012 : Record 50244;
      ErrorlogberÅcksichtigen@1000000011 : Boolean;
      "Detailed Cust. Ledg. Entry"@1000000053 : Record 379;
      DetailedCustEntry@1000000054 : Record 379;
      LastTransaction@1000000055 : Integer;
      UPdateGLSetup@1000000056 : Boolean;
      glsetup@1000000057 : Record 98;
      FirstPostingDate@1000000058 : Date;

    PROCEDURE ReopenEntry@5157819();
    VAR
      ApplicationEntryNo@1000000000 : Integer;
    BEGIN

      ApplicationEntryNo := FindLastApplEntry(GOBCustledgEntry."Entry No.");
      IF ApplicationEntryNo <> 0 THEN BEGIN //
        //ERROR(Text005,GenJnlLine."Document No.",GenJnlLine."Line No.",CustLedgEntry.TABLECAPTION,CustLedgEntry."Entry No.");   //
        //IF NOT CustLedgEntry.Open THEN BEGIN
          DtldCustLedgEntry2.GET(ApplicationEntryNo);
          IF DtldCustLedgEntry2.Unapplied THEN BEGIN
            Dlg.CLOSE;
            ERROR(Text006,GenJnlLine."Document No.",GenJnlLine."Line No.",
              DtldCustLedgEntry2.TABLECAPTION,DtldCustLedgEntry2."Entry No.");
          END;
          InsertEntries;
          //A/060813/gob-czi/P1069
          //CEApp.PostUnApplyCustomerBatch(DtldCustLedgEntryBuf,DtldCustLedgEntry2,
          //  DtldCustLedgEntry2."Document No.",311212D);
          //A/gob-ko/26.08.13/P1085
          {
          CEApp.PostUnApplyCustomerBatch(DtldCustLedgEntryBuf,DtldCustLedgEntry2,
            DtldCustLedgEntry2."Document No.",DtldCustLedgEntry2."Posting Date");
          }
      //A/gob-ko/P1150/131113
      {
          IF DtldCustLedgEntry2."Posting Date" >311212D THEN
              CEApp.PostUnApplyCustomerBatch(DtldCustLedgEntryBuf,DtldCustLedgEntry2,
                DtldCustLedgEntry2."Document No.",DtldCustLedgEntry2."Posting Date")
           ELSE
              CEApp.PostUnApplyCustomerBatch(DtldCustLedgEntryBuf,DtldCustLedgEntry2,
                DtldCustLedgEntry2."Document No.",WORKDATE);

       }
              CEApp.PostUnApplyCustomerBatch(DtldCustLedgEntryBuf,DtldCustLedgEntry2,
                DtldCustLedgEntry2."Document No.",PostingDate);
      //E/gob-ko/P1150/131113

          //E/gob-ko/26.08.13/P1085
          //E/060813/gob-czi/P1069


          COMMIT;
        //END;
      END;
    END;

    LOCAL PROCEDURE FindLastApplEntry@5157818(CustLedgEntryNo@1002 : Integer) : Integer;
    VAR
      DtldCustLedgEntry@1001 : Record 379;
      ApplicationEntryNo@1000 : Integer;
    BEGIN
      DtldCustLedgEntry.SETCURRENTKEY("Cust. Ledger Entry No.","Entry Type");
      DtldCustLedgEntry.SETRANGE("Cust. Ledger Entry No.",CustLedgEntryNo);
      //DtldCustLedgEntry.SETRANGE("Cust. Ledger Entry No.","Cust. Ledger Entry"."Entry No.");
      DtldCustLedgEntry.SETRANGE("Entry Type",DtldCustLedgEntry."Entry Type"::Application);
      ApplicationEntryNo := 0;
      IF DtldCustLedgEntry.FIND('-') THEN
        REPEAT
          IF (DtldCustLedgEntry."Entry No." > ApplicationEntryNo) AND NOT DtldCustLedgEntry.Unapplied THEN
            ApplicationEntryNo := DtldCustLedgEntry."Entry No.";
        UNTIL DtldCustLedgEntry.NEXT = 0;
      EXIT(ApplicationEntryNo);
    END;

    PROCEDURE InsertEntries@5157817();
    VAR
      DtldCustLedgEntry@1005 : Record 379;
    BEGIN
      DtldCustLedgEntry.SETCURRENTKEY("Transaction No.","Customer No.","Entry Type");
      DtldCustLedgEntry.SETRANGE("Transaction No.",DtldCustLedgEntry2."Transaction No.");
      DtldCustLedgEntry.SETRANGE("Customer No.",DtldCustLedgEntry2."Customer No.");
      DtldCustLedgEntryBuf.DELETEALL;
      IF DtldCustLedgEntry.FIND('-') THEN
        REPEAT
          IF (DtldCustLedgEntry."Entry Type" <> DtldCustLedgEntry."Entry Type"::"Initial Entry") AND
             NOT DtldCustLedgEntry.Unapplied
          THEN BEGIN
            DtldCustLedgEntryBuf := DtldCustLedgEntry;
            DtldCustLedgEntryBuf.INSERT;
          END;
        UNTIL DtldCustLedgEntry.NEXT = 0;
    END;

    PROCEDURE PostApplication@1000000000(AusgleichEntry@1000000000 : Record 379);
    VAR
      GenJnlLine@1000000001 : Record 81;
      Debposten1@1000000002 : Record 21;
      Debposten2@1000000003 : Record 21;
      SourceCodeSetup@1000000004 : Record 242;
      GenJnlPostLine@1000000005 : Codeunit 12;
    BEGIN
      Debposten1.GET(AusgleichEntry."Cust. Ledger Entry No.");
      Debposten2.GET(AusgleichEntry."Applied Cust. Ledger Entry No.");

      //A/060813/gob-czi/P1069
      //DatumsprÅfung 080213
      //IF (Debposten1."Posting Date" > 311212D) OR (Debposten2."Posting Date" > 311212D) THEN
      //  EXIT;
      //DatumsprÅfung 080213
      //A/gob-ko/P1150/131113
      {
      IF (Debposten1."Posting Date" < 010113D) OR (Debposten2."Posting Date" < 010113D) THEN
        EXIT;
       }
      //E/gob-ko/P1150/131113

      //E/060813/gob-czi/P1069

      //BetragsprÅfung 080213
      Debposten1.CALCFIELDS("Remaining Amount");
      Debposten2.CALCFIELDS("Remaining Amount");
      IF Debposten1."Remaining Amount" + Debposten2."Remaining Amount" <> 0 THEN
        EXIT;
      //BetragsprÅfung 080213


      //Buchen Debitorposten
      GenJnlLine.INIT;
      GenJnlLine."Document Date" := Debposten2."Document Date";
      //A/gob-ko/P1150/131113
      //GenJnlLine."Posting Date" := Debposten2."Posting Date";
      GenJnlLine."Posting Date" := PostingDate;
      //E/gob-ko/P1150/131113

      GenJnlLine."Document No." := Debposten2."Document No.";

      GenJnlLine."Account Type" := GenJnlLine."Account Type"::Customer;
      GenJnlLine.VALIDATE("Account No.",AusgleichEntry."Customer No.");
      GenJnlLine.Description := 'Automatik Ausgleich';
      {
      IF Debposten1.Positive THEN BEGIN
         IF AusgleichEntry.Amount < 0 THEN
            GenJnlLine.VALIDATE(Amount,AusgleichEntry.Amount)
          ELSE
            GenJnlLine.VALIDATE(Amount,-AusgleichEntry.Amount);
      END ELSE BEGIN
         IF AusgleichEntry.Amount < 0 THEN
            GenJnlLine.VALIDATE(Amount,-AusgleichEntry.Amount)
          ELSE
            GenJnlLine.VALIDATE(Amount,AusgleichEntry.Amount);
      END;
      }

      GenJnlLine.VALIDATE(Amount,AusgleichEntry.Amount);
      GenJnlLine.VALIDATE("Payment Method Code",Debposten1."Payment Method Code"); //WURDE GEéNDERT!!!
      GenJnlLine."Shortcut Dimension 1 Code" := Debposten1."Global Dimension 1 Code";
      GenJnlLine."Shortcut Dimension 2 Code" := Debposten1."Global Dimension 2 Code";


      Tempjnllinedim.DELETEALL;

      LedgEntryDim.SETRANGE("Table ID",21);
      LedgEntryDim.SETRANGE("Entry No.",Debposten1."Entry No.");



      IF LedgEntryDim.FIND('-') THEN REPEAT
         Tempjnllinedim."Table ID" := DATABASE::"Gen. Journal Line";
         Tempjnllinedim."Journal Template Name" := GenJnlLine."Journal Template Name";
         Tempjnllinedim."Journal Batch Name" := GenJnlLine."Journal Batch Name";
         Tempjnllinedim."Journal Line No." := GenJnlLine."Line No.";
         Tempjnllinedim."Dimension Code" := LedgEntryDim."Dimension Code";
         Tempjnllinedim."Dimension Value Code" := LedgEntryDim."Dimension Value Code";
         Tempjnllinedim.INSERT;
      UNTIL LedgEntryDim.NEXT = 0;


      GenJnlLine."Posting Group" := Debposten1."Customer Posting Group";              //???
      GenJnlLine."Source Type" := GenJnlLine."Source Type"::Customer;
      GenJnlLine."Source No." := Debposten1."Customer No.";
      GenJnlLine."Source Code" := SourceCodeSetup."Sales Entry Application";
      GenJnlLine."Applies-to Doc. Type" := Debposten1."Document Type";
      GenJnlLine."Applies-to Doc. No." := Debposten1."Document No.";
      //    GenJnlLine."System-Created Entry" := TRUE;

          //externe Belegnr.?
      GenJnlLine."External Document No." := Debposten1."External Document No.";
      //    EntryNoBeforeApplication := FindLastApplDtldCustLedgEntry;

          //GenJnlPostLine.CustPostApplyCustLedgEntry(GenJnlLine,EntriesToApply);
      GenJnlPostLine.RunWithCheck(GenJnlLine,Tempjnllinedim);

      //Buchen 2. Posten
      GenJnlLine.INIT;
      GenJnlLine."Document Date" := Debposten2."Document Date";
      //A/gob-ko/P1150/131113
      //GenJnlLine."Posting Date" := Debposten2."Posting Date";
      GenJnlLine."Posting Date" := PostingDate;
      //E/gob-ko/P1150/131113

      GenJnlLine."Document No." := Debposten2."Document No.";
      GenJnlLine."Account Type" := GenJnlLine."Account Type"::Customer;
      GenJnlLine.VALIDATE("Account No.",AusgleichEntry."Customer No.");
      GenJnlLine.Description := 'Automatik Ausgleich';
      {
      IF Debposten2.Positive THEN BEGIN
         IF AusgleichEntry.Amount < 0 THEN
            GenJnlLine.VALIDATE(Amount,AusgleichEntry.Amount)
          ELSE
            GenJnlLine.VALIDATE(Amount,-AusgleichEntry.Amount);
      END ELSE BEGIN
         IF AusgleichEntry.Amount < 0 THEN
            GenJnlLine.VALIDATE(Amount,-AusgleichEntry.Amount)
          ELSE
            GenJnlLine.VALIDATE(Amount,AusgleichEntry.Amount);
      END;
      }
      GenJnlLine.VALIDATE(Amount,-AusgleichEntry.Amount);
      GenJnlLine.VALIDATE("Payment Method Code",Debposten2."Payment Method Code"); //WURDE GEéNDERT!!!
      GenJnlLine."Shortcut Dimension 1 Code" := Debposten2."Global Dimension 1 Code";
      GenJnlLine."Shortcut Dimension 2 Code" := Debposten2."Global Dimension 2 Code";


      Tempjnllinedim.DELETEALL;

      LedgEntryDim.SETRANGE("Table ID",21);
      LedgEntryDim.SETRANGE("Entry No.",Debposten2."Entry No.");



      IF LedgEntryDim.FIND('-') THEN REPEAT
         Tempjnllinedim."Table ID" := DATABASE::"Gen. Journal Line";
         Tempjnllinedim."Journal Template Name" := GenJnlLine."Journal Template Name";
         Tempjnllinedim."Journal Batch Name" := GenJnlLine."Journal Batch Name";
         Tempjnllinedim."Journal Line No." := GenJnlLine."Line No.";
         Tempjnllinedim."Dimension Code" := LedgEntryDim."Dimension Code";
         Tempjnllinedim."Dimension Value Code" := LedgEntryDim."Dimension Value Code";
         Tempjnllinedim.INSERT;
      UNTIL LedgEntryDim.NEXT = 0;


      GenJnlLine."Posting Group" := Debposten2."Customer Posting Group";              //???
      GenJnlLine."Source Type" := GenJnlLine."Source Type"::Customer;
      GenJnlLine."Source No." := Debposten2."Customer No.";
      GenJnlLine."Source Code" := SourceCodeSetup."Sales Entry Application";
      GenJnlLine."Applies-to Doc. Type" := Debposten2."Document Type";
      GenJnlLine."Applies-to Doc. No." := Debposten2."Document No.";
      //    GenJnlLine."System-Created Entry" := TRUE;

          //externe Belegnr.?
      GenJnlLine."External Document No." := Debposten2."External Document No.";
      //    EntryNoBeforeApplication := FindLastApplDtldCustLedgEntry;

          //GenJnlPostLine.CustPostApplyCustLedgEntry(GenJnlLine,EntriesToApply);
      GenJnlPostLine.RunWithCheck(GenJnlLine,Tempjnllinedim);
    END;

    PROCEDURE FindLastTransactionNo@11(CustLedgEntryNo@1000 : Integer) : Integer;
    VAR
      DtldCustLedgEntry@1001 : Record 379;
      LastTransactionNo@1002 : Integer;
    BEGIN
      DtldCustLedgEntry.SETCURRENTKEY("Cust. Ledger Entry No.","Entry Type");
      DtldCustLedgEntry.SETRANGE("Cust. Ledger Entry No.",CustLedgEntryNo);
      DtldCustLedgEntry.SETRANGE("Entry Type",DtldCustLedgEntry."Entry Type"::Application);
      LastTransactionNo :=0;
      IF DtldCustLedgEntry.FIND('-') THEN
        REPEAT
          IF (DtldCustLedgEntry."Transaction No." > LastTransactionNo) AND NOT DtldCustLedgEntry.Unapplied THEN
            LastTransactionNo := DtldCustLedgEntry."Transaction No.";
        UNTIL DtldCustLedgEntry.NEXT = 0;
      EXIT(LastTransactionNo);
    END;

    PROCEDURE ReopenEntry2@1000000001();
    VAR
      ApplicationEntryNo@1000000000 : Integer;
    BEGIN

      ApplicationEntryNo := FindLastApplEntry(GOBDetPost."Cust. Ledger Entry No.");
      IF ApplicationEntryNo <> 0 THEN BEGIN //
        //ERROR(Text005,GenJnlLine."Document No.",GenJnlLine."Line No.",CustLedgEntry.TABLECAPTION,CustLedgEntry."Entry No.");   //
        //IF NOT CustLedgEntry.Open THEN BEGIN
          DtldCustLedgEntry2.GET(ApplicationEntryNo);
          IF DtldCustLedgEntry2.Unapplied THEN BEGIN
            Dlg.CLOSE;
            ERROR(Text006,GenJnlLine."Document No.",GenJnlLine."Line No.",
              DtldCustLedgEntry2.TABLECAPTION,DtldCustLedgEntry2."Entry No.");
          END;
          InsertEntries;
          {
          CEApp.PostUnApplyCustomerBatch(DtldCustLedgEntryBuf,DtldCustLedgEntry2,
            DtldCustLedgEntry2."Document No.",311212D);   //alternativ: DtldCustLedgEntry2."Posting Date"

          }
      //A/gob-ko/P1150/131113
      {
          IF DtldCustLedgEntry2."Posting Date" >311212D THEN
              CEApp.PostUnApplyCustomerBatch(DtldCustLedgEntryBuf,DtldCustLedgEntry2,
                DtldCustLedgEntry2."Document No.",DtldCustLedgEntry2."Posting Date")
           ELSE
              CEApp.PostUnApplyCustomerBatch(DtldCustLedgEntryBuf,DtldCustLedgEntry2,
                DtldCustLedgEntry2."Document No.",WORKDATE);
       }
              CEApp.PostUnApplyCustomerBatch(DtldCustLedgEntryBuf,DtldCustLedgEntry2,
                DtldCustLedgEntry2."Document No.",PostingDate);

      //E/gob-ko/P1150/131113


          //E/gob-ko/26.08.13/P1085

          COMMIT;
        //END;
      END;
    END;

    PROCEDURE PrÅfungUmbuchung@1000000002();
    VAR
      PrÅfposten1@1000000001 : Record 21;
      PrÅfposten2@1000000000 : Record 21;
      PrÅfdet@1000000002 : Record 379;
    BEGIN
      Betrag2 := 0;
      Postenumbuchen := FALSE;
      PrÅfdet.RESET;
      PrÅfdet.SETCURRENTKEY("Transaction No.","Customer No.","Entry Type");
      PrÅfdet.SETRANGE("Transaction No.","Detailed Cust. Ledg. Entry"."Transaction No.");
      PrÅfdet.SETRANGE("Customer No.","Detailed Cust. Ledg. Entry"."Customer No.");
      PrÅfdet.SETRANGE(PrÅfdet."Entry Type",PrÅfdet."Entry Type"::Application);
      PrÅfdet.SETRANGE(PrÅfdet.Unapplied,FALSE);
      IF PrÅfdet.FINDFIRST THEN BEGIN
         REPEAT

         PrÅfposten1.GET(PrÅfdet."Cust. Ledger Entry No.");
         IF PrÅfposten1."Customer Posting Group" <> CustPostGroup THEN BEGIN
            Betrag2 := Betrag2 + PrÅfdet.Amount;
         END;
         UNTIL PrÅfdet.NEXT = 0;
      END;
       IF Betrag2 <> 0 THEN
          Postenumbuchen := TRUE;
    END;

    PROCEDURE PostApplication2@1000000003(AusgleichEntry@1000000000 : Record 379);
    VAR
      GenJnlLine@1000000001 : Record 81;
      Detposten1@1000000002 : Record 379;
      Detposten2@1000000003 : Record 379;
      SourceCodeSetup@1000000004 : Record 242;
      GenJnlPostLine@1000000005 : Codeunit 12;
      DebPosten@1000000006 : Record 21;
    BEGIN
      Detposten1.RESET;
      Detposten1.SETCURRENTKEY("Transaction No.","Customer No.","Entry Type");
      Detposten1.SETRANGE("Customer No.",AusgleichEntry."Customer No.");
      IF Detposten1.FINDLAST THEN BEGIN
        Detposten2.RESET;
        Detposten2.SETCURRENTKEY("Transaction No.","Customer No.","Entry Type");
        Detposten2.SETRANGE("Transaction No.",Detposten1."Transaction No.");
        Detposten2.SETRANGE("Entry Type",Detposten2."Entry Type"::Application);
        IF Detposten2.FIND('-') THEN BEGIN
           REPEAT
           DebPosten.GET(Detposten2."Cust. Ledger Entry No.");
            GenJnlLine.INIT;
            GenJnlLine."Document Date" := GOBCustledgEntry."Document Date";
            //A/GOB-ko/26.08.2013/P1085
            //GenJnlLine."Posting Date" := GOBCustledgEntry."Posting Date";
            //A/gob-ko/P1150/131113
            {
            IF GOBCustledgEntry."Posting Date" > 311212D THEN
               GenJnlLine."Posting Date" := GOBCustledgEntry."Posting Date"
            ELSE
               GenJnlLine."Posting Date" := WORKDATE;

            }
            GenJnlLine."Posting Date" := PostingDate;
            //e/gob-ko/P1150/131113

            //E/GOB-ko/26.08.2013/P1085
            GenJnlLine."Document No." := GOBCustledgEntry."Document No.";

            GenJnlLine."Account Type" := GenJnlLine."Account Type"::Customer;
            GenJnlLine.VALIDATE("Account No.",Detposten2."Customer No.");
            GenJnlLine.Description := 'Automatik Ausgleich';
            GenJnlLine."Currency Code" := Detposten2."Currency Code";
            GenJnlLine.VALIDATE(Amount,-Detposten2.Amount);
            GenJnlLine.VALIDATE("Amount (LCY)",-Detposten2."Amount (LCY)");
            IF DebPosten.Positive = FALSE THEN BEGIN
               IF GenJnlLine.Amount < 0 THEN
                  GenJnlLine.VALIDATE(Amount, GenJnlLine.Amount * -1);
            END ELSE BEGIN
               IF GenJnlLine.Amount > 0 THEN
                  GenJnlLine.VALIDATE(Amount, GenJnlLine.Amount * -1);

            END;
            GenJnlLine.VALIDATE("Payment Method Code",DebPosten."Payment Method Code"); //WURDE GEéNDERT!!!
            GenJnlLine."Shortcut Dimension 1 Code" := DebPosten."Global Dimension 1 Code";
            GenJnlLine."Shortcut Dimension 2 Code" := DebPosten."Global Dimension 2 Code";


            Tempjnllinedim.DELETEALL;

            LedgEntryDim.SETRANGE("Table ID",21);
            LedgEntryDim.SETRANGE("Entry No.",DebPosten."Entry No.");



            IF LedgEntryDim.FIND('-') THEN REPEAT
               Tempjnllinedim."Table ID" := DATABASE::"Gen. Journal Line";
               Tempjnllinedim."Journal Template Name" := GenJnlLine."Journal Template Name";
               Tempjnllinedim."Journal Batch Name" := GenJnlLine."Journal Batch Name";
               Tempjnllinedim."Journal Line No." := GenJnlLine."Line No.";
               Tempjnllinedim."Dimension Code" := LedgEntryDim."Dimension Code";
               Tempjnllinedim."Dimension Value Code" := LedgEntryDim."Dimension Value Code";
               Tempjnllinedim.INSERT;
            UNTIL LedgEntryDim.NEXT = 0;


            GenJnlLine."Posting Group" := DebPosten."Customer Posting Group";              //???
            GenJnlLine."Source Type" := GenJnlLine."Source Type"::Customer;
            GenJnlLine."Source No." := DebPosten."Customer No.";
            GenJnlLine."Source Code" := SourceCodeSetup."Sales Entry Application";
            GenJnlLine."Applies-to Doc. Type" := DebPosten."Document Type";
            GenJnlLine."Applies-to Doc. No." := DebPosten."Document No.";
            DebPosten."Amount to Apply" := -GenJnlLine.Amount;
            CEEdit.RUN(DebPosten);
            //    GenJnlLine."System-Created Entry" := TRUE;

                //externe Belegnr.?
            GenJnlLine."External Document No." := DebPosten."External Document No.";
            //    EntryNoBeforeApplication := FindLastApplDtldCustLedgEntry;

                //GenJnlPostLine.CustPostApplyCustLedgEntry(GenJnlLine,EntriesToApply);
            GenJnlPostLine.RunWithCheck(GenJnlLine,Tempjnllinedim);

           UNTIL Detposten2.NEXT = 0;
        END;
      END;
    END;

    PROCEDURE CheckFirstPostingDate@1000000004() : Date;
    VAR
      usersetup@1000000000 : Record 91;
    BEGIN
      glsetup.GET('');
      IF NOT usersetup.GET(USERID) THEN
        EXIT(glsetup."Allow Posting From")
      ELSE BEGIN
        IF (usersetup."Allow Posting From" = 0D) AND (usersetup."Allow Posting To" = 0D) THEN
          EXIT(glsetup."Allow Posting From")
        ELSE
           EXIT(usersetup."Allow Posting From");
      END;
    END;

    BEGIN
    {
      +----------------------------------------------+
      | Copyright GOB Software & Systeme             |
      +----------------------------------------------+
      | FP Commerce                                  |
      |                                              |
      +----------------------------------------------+

      Version    Datum       Berater    PSP-Code   Bemerkung
      ---------------------------------------------------------------------------
      V1.00      05.09.14    gob-ko     P1274      codeunit created
    }
    END.
  }
}

