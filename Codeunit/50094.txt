OBJECT Codeunit 50094 Autom. EMail Processes 2
{
  OBJECT-PROPERTIES
  {
    Date=13.07.15;
    Time=17:08:18;
    Modified=Yes;
    Version List=HME4320,T0014;
  }
  PROPERTIES
  {
    TableNo=50043;
    OnRun=VAR
            SentInvoices@1108200000 : Record 80020;
            SalesInvLine@1000000001 : Record 113;
            TotalAmount@1000000000 : Decimal;
          BEGIN
            IF "Action Type" = "Action Type"::"Purch. EMail" THEN BEGIN
              PurchHeader.GET("Document Type","Document No.");
              IF NOT "Splitted Purch Order" THEN
                RealizeOrderEMail(PurchHeader,'')
              ELSE
                CreateSplittedPurchOrderMail(PurchHeader."No.");

            END ELSE
              IF "Action Type" = "Action Type"::"Sales EMail" THEN
                CASE "Document Type" OF
                  "Document Type"::Invoice:
                    BEGIN
                      SalesInvHeader.GET("Posted Document No.");
            // H0370       31.05.13  FX ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            // H0510       16.08.13  FX +++++++++++++++++++++++++++++++++++
                      {
                      TotalAmount := 0;
                      SalesInvLine.SETRANGE("Document No.", SalesInvHeader."No.");
                      SalesInvLine.SETFILTER(Type, '%1|%2', SalesInvLine.Type::Item, SalesInvLine.Type::Resource);
                      IF SalesInvLine.FIND('-') THEN REPEAT
                        TotalAmount += (SalesInvLine."Line Amount" + SalesInvLine."Line Discount Amount");
                      UNTIL SalesInvLine.NEXT = 0;
                      IF TotalAmount > 0 THEN
                      }
            // H0510       16.08.13  FX ---------------------------------------
            // H0370       31.05.13  FX ----------------------------------------------------------------------------------------------
                      IF NOT SentInvoices.GET(SalesInvHeader."External Document No.") THEN
                        CreateSalesInvMail(SalesInvHeader);
                    END;
                  //H1783 19.11.14 MIK +++++++++++++++++++++++++++++
                  // Case ("Document Type"::"Return Order") removed.
                  // Return confirmation email is created in codeunit 50169-SII Fill Log - Create. Function CreateReturnOrderInstruction
                  // Return Label is created in codeunit 50169-SII Fill Log - Create. Function CreateReturnOrderLabel
                  //H1783 19.11.14 MIK -----------------------------
                  "Document Type"::"Credit Memo":
                    BEGIN
                      SalesCrMemoHeader.GET("Posted Document No.");
                      CreateSalesCrMemoMail(SalesCrMemoHeader);
                    END;
                END;
            //T0014 30.06.14 MSL +++++++++++++++++++++++++++++++
            {
            IF "Action Type" = "Action Type"::WhseReturnConfirmation THEN
              BEGIN
                //H0916 04.03.14 ARU ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                //IF SalesReturnHeader.GET(SalesReturnHeader."Document Type"::"Return Order","Document No.") THEN
                IF SalesReturnHeader.GET("Document Type","Document No.") THEN
                //H0916 04.03.14 ARU ----------------------------------------------------------------------------
                  CreateSalesWhseReturnConfirm(SalesReturnHeader)
                ELSE BEGIN
                  SalesReturnHeaderArch.SETRANGE("Document Type","Document Type");
                  SalesReturnHeaderArch.SETRANGE("No.","Document No.");
                  IF SalesReturnHeaderArch.FINDFIRST THEN
                    CreateSalesWhseReturnConfirmAr(SalesReturnHeaderArch);
                END;
              END;
            }
            //T0014 30.06.14 MSL -------------------------------
            IF "Action Type" = "Action Type"::RefundConfirmation THEN
              BEGIN
                //H0916 04.03.14 ARU ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                //IF SalesReturnHeader.GET(SalesReturnHeader."Document Type"::"Return Order","Document No.") THEN
                IF SalesReturnHeader.GET("Document Type","Document No.") THEN
                //H0916 04.03.14 ARU ----------------------------------------------------------------------------
                  CreateSalesRefundConfirm(SalesReturnHeader)
                ELSE BEGIN
                  SalesReturnHeaderArch.SETRANGE("Document Type","Document Type");
                  SalesReturnHeaderArch.SETRANGE("No.","Document No.");
                  IF SalesReturnHeaderArch.FINDFIRST THEN
                    CreateSalesRefundConfirmAr(SalesReturnHeaderArch);
                END;
              END;

            //H0609 14.10.13 HCN +++++++++++++++++++++++++++++
            IF "Action Type" = "Action Type"::POCancInquiryMail THEN BEGIN
              BEGIN
                CreatePOCancInquiryMail(Rec);
              END;
            END;
            //H0609 14.10.13 HCN -----------------------------
          END;

  }
  CODE
  {
    VAR
      CompanyInfo@1000000016 : Record 79;
      PurchSetup@1000000004 : Record 312;
      PurchHeader@1000000018 : Record 38;
      PurchLine@1000000001 : Record 39;
      SalesHeader@1000000003 : Record 36;
      SalesLine@1000000005 : Record 37;
      SalesInvHeader@1000000019 : Record 112;
      SalesReturnHeader@1000000020 : Record 36;
      TempSalesHeader@1000000002 : TEMPORARY Record 36;
      SalesCrMemoHeader@1108200000 : Record 114;
      Item@1000000007 : Record 27;
      Cust@1000000015 : Record 18;
      Vend@1000000013 : Record 23;
      Cont@1000000014 : Record 5050;
      UserSetup@1000000012 : Record 91;
      BatchPostDoc@1000000010 : Record 50043;
      DHLMgt@1000000000 : Codeunit 50020;
      GeneralMgt@1000000009 : Codeunit 11501;
      GeneralMgt2@1000000017 : Codeunit 50040;
      ExpFile@1000000008 : File;
      SendMailDirect@1000000011 : Boolean;
      i@1000000006 : Integer;
      RecipientName@1000000021 : Text[50];
      OrderUpdateMail@1000000022 : Boolean;
      "*HME**************************"@1000000023 : Integer;
      SalesReturnHeaderArch@1000000024 : Record 5107;
      PurchOrderEmtpyNo@1000000025 : Code[20];
      TextHME001@1000000036 : TextConst 'DEU=Zu stornierende Artikel:;ENU=Items to be cancelled:';
      TextHME002@1000000035 : TextConst 'DEU=Bestellnr.;ENU=Purchase Order No.';
      TextHME003@1000000034 : TextConst 'DEU=Auftragsnr.;ENU=Sales Order No.';
      TextHME004@1000000033 : TextConst 'DEU=Kundenname;ENU=Customer Name';
      TextHME005@1000000032 : TextConst 'DEU=Kreditor Artikelnr.;ENU=Vendor Item No.';
      TextHME006@1000000031 : TextConst 'DEU=Kreditor Artikelbeschreibung;ENU=Vendor Item Description';
      TextHME007@1000000030 : TextConst 'DEU=Menge;ENU=Quantity';
      TextHME008@1000000029 : TextConst 'DEU=Einheit;ENU=Unit of Measure';
      TextHME009@1000000028 : TextConst 'DEU=Referenzinformationen:;ENU=Reference Information:';
      TextHME011@1000000027 : TextConst 'ENU="<font face=""Arial"",""sans-serif""><table width=590 border=0></span><span style=''font-size:9.0pt; font-family:""Arial"",""sans-serif""; mso-fareast-font-family:""Times New Roman""; color:black''>"';
      TextHME012@1000000026 : TextConst 'ENU="<font face=""Arial"",""sans-serif"" size=2 font color=black>"';
      TextHME013@1000000040 : TextConst 'DEU=" KOPIE";ENU=" COPY"';
      ConditionalText@1000000041 : Text[30];
      TextHME014@1000000037 : TextConst 'ENU=anbei erhalten Sie eine Bestellung aufgrund eines GewÑhrleistungsfalles';

    PROCEDURE RealizeOrderRequest@1000000000(_PurchOrderHeader@1000000000 : Record 38);
    VAR
      L_OldStatus@1000000001 : Integer;
    BEGIN
      CLEAR(TempSalesHeader);
      TempSalesHeader.DELETEALL;
      PurchLine.RESET;
      PurchLine.SETRANGE("Document Type",_PurchOrderHeader."Document Type");
      PurchLine.SETRANGE("Document No.",_PurchOrderHeader."No.");
      IF PurchLine.FINDSET THEN REPEAT
        IF PurchLine."Drop Shipment" AND (PurchLine."Sales Order No." <> '') THEN BEGIN
          SalesHeader.GET(SalesHeader."Document Type"::Order,PurchLine."Sales Order No.");
          SalesLine.GET(SalesLine."Document Type"::Order,PurchLine."Sales Order No.",PurchLine."Sales Order Line No.");

          IF (SalesLine.Type = SalesLine.Type::Item) AND Item.GET(SalesLine."No.") THEN BEGIN
            IF SalesHeader.Status <> SalesHeader.Status::Open THEN BEGIN
              L_OldStatus := SalesHeader.Status;
              SalesHeader.Status := SalesHeader.Status::Open;
              SalesHeader.MODIFY;
            END;
            SalesLine.VALIDATE("Shipment Date",WORKDATE);
            SalesLine.VALIDATE("Planned Shipment Date",CALCDATE(Item."Lead Time Calculation (max.)",WORKDATE));
            IF GeneralMgt2.CheckMP(PurchLine."No.",_PurchOrderHeader."Buy-from Vendor No.") <> 0 THEN BEGIN
              IF GeneralMgt2.CheckMP(PurchLine."No.",_PurchOrderHeader."Buy-from Vendor No.") = 1 THEN
                PurchLine.VALIDATE("Direct Unit Cost",SalesLine."Unit Price")  //wÑhrung und VAT prÅfen############
              ELSE
                PurchLine.VALIDATE("Direct Unit Cost",0);
              PurchLine.MODIFY;
            END;
            SalesLine.MODIFY;
            IF SalesHeader.Status <> L_OldStatus THEN BEGIN
              SalesHeader.Status := L_OldStatus;
              SalesHeader.MODIFY;
            END;
          END;
          TempSalesHeader := SalesHeader;
          IF TempSalesHeader.INSERT THEN;
        END;
      UNTIL PurchLine.NEXT = 0;

      IF TempSalesHeader.FIND('-') THEN REPEAT
        IF TempSalesHeader.Kommissionierung THEN BEGIN
          CLEAR(DHLMgt);
          DHLMgt.SetParameters;
          DHLMgt.RUN(TempSalesHeader);
        END;
      UNTIL TempSalesHeader.NEXT = 0;
    END;

    PROCEDURE RealizeOrderEMail@1000000001(_PurchOrderHeader@1000000002 : Record 38;ChangeChannelCaseV@1000000003 : Code[10]);
    VAR
      L_DropShip@1000000000 : Boolean;
      L_MP@1000000001 : Boolean;
      IsSpecialOrder@1108200000 : Boolean;
      AutomEMailProcessesHOME24@1000000004 : Codeunit 50094;
    BEGIN
      CLEAR(TempSalesHeader);
      TempSalesHeader.DELETEALL;
      L_DropShip := FALSE;
      L_MP := FALSE;
      //A/gob-rste/28.06.12/GOB1.07
      IsSpecialOrder := FALSE;
      //E/gob-rste/28.06.12/GOB1.07
      PurchLine.RESET;
      PurchLine.SETRANGE("Document Type",_PurchOrderHeader."Document Type");
      PurchLine.SETRANGE("Document No.",_PurchOrderHeader."No.");
      IF PurchLine.FINDSET THEN
        REPEAT
          IF PurchLine."Drop Shipment" AND (PurchLine."Sales Order No." <> '') THEN BEGIN
            L_DropShip := TRUE;
            IF GeneralMgt2.CheckMP(PurchLine."No.",_PurchOrderHeader."Buy-from Vendor No.") = 2 THEN
              L_MP := TRUE;
            SalesHeader.GET(SalesHeader."Document Type"::Order,PurchLine."Sales Order No.");
            TempSalesHeader := SalesHeader;
            IF TempSalesHeader.INSERT THEN;
          END;
          //A/gob-rste/28.06.12/GOB1.07
          IF PurchLine."Special Order" AND (PurchLine."Special Order Sales No." <> '') THEN BEGIN
            IsSpecialOrder := TRUE;
            SalesHeader.GET(SalesHeader."Document Type"::Order,PurchLine."Special Order Sales No.");
            TempSalesHeader := SalesHeader;
            IF TempSalesHeader.INSERT THEN;
          END;
          //E/gob-rste/28.06.12/GOB1.07
        UNTIL PurchLine.NEXT = 0;
        //A/gob-rste/28.06.12/GOB1.07

      IF NOT IsSpecialOrder THEN BEGIN
      //E/gob-rste/28.06.12/GOB1.07
        IF TempSalesHeader.FIND('-') THEN BEGIN
          REPEAT
            CreateOrderMail(_PurchOrderHeader,TempSalesHeader,L_MP,L_DropShip); //### nur zeilen zu bestellung drucken
          UNTIL TempSalesHeader.NEXT = 0;
        END ELSE
          CreateOrderMail(_PurchOrderHeader,TempSalesHeader,FALSE,FALSE);
      //A/gob-rste/28.06.12/GOB1.07
      END ELSE BEGIN
        IF TempSalesHeader.FIND('-') THEN
          REPEAT
            CreateSpecialOrderMail(_PurchOrderHeader,TempSalesHeader);
          UNTIL TempSalesHeader.NEXT = 0;
      END;
      //E/gob-rste/28.06.12/GOB1.07
    END;

    PROCEDURE CreateOrderMail@1000000002(_PurchOrderHeader@1000000029 : Record 38;_SalesOrderHeader@1000000030 : Record 36;_MP@1000000018 : Boolean;_Dropship@1000000020 : Boolean);
    VAR
      LT_MailITSetup@1000000028 : Record 75402;
      LT_WebSiteTransfer@1000000034 : Record 50033;
      LT_WebSource@1000000026 : Record 5059;
      LT_Location@1000000044 : Record 14;
      LT_LabelDHL@1000000045 : Record 50020;
      LT_ExtTextLine@1000000065 : Record 280;
      LR_SalesOrder@1000000050 : Report 50020;
      FormatAddr@1000000023 : Codeunit 365;
      ClientFso@1000000005 : Automation "{420B2830-E718-11CF-893D-00A0C9054228} 1.0:{0D43FE01-F093-11CF-8940-00A0C9054228}:'Microsoft Scripting Runtime'.FileSystemObject";
      ClientUtil@1000000003 : Automation "{1639594D-2135-4248-BE9B-FB55210F8AD8} 1.0:{D7CD856D-3889-4F19-BBBA-7608CF34EFB6}:'ExpandIT Dynamics Role Tailored Client Utility'.Utility";
      DivUtil@1000000054 : Automation "{2CD8D481-009C-4685-98EA-BC16452327B2} 1.0:{F1BBE10B-6E48-41B0-9EF6-F428C7A48655}:'Dynovus_SHA1Encryption'.SHA1EncryptAutomation";
      MailIT@1000000006 : OCX "{C8C4804C-89BA-4291-AB58-4C6050B65175}:'ExpandIT.MailIT2'";
      ShipAddr@1000000012 : ARRAY [8] OF Text[80];
      MailText@1000000032 : Text[250];
      DocName@1000000016 : Text[250];
      DocName2@1000000021 : Text[250];
      JobID@1000000007 : Text[50];
      ClientTempFolder@1000000004 : Text[250];
      ClientPdfFileName@1000000015 : Text[250];
      ClientFileName@1000000022 : Text[250];
      OldDefaultPrinter@1000000013 : Text[250];
      DefaultPrinterChanged@1000000014 : Boolean;
      ReportID@1000000001 : Integer;
      L_Text001@1000000002 : TextConst 'DEU=Bestellung Nr.:;ENU=Order No.:';
      L_Text002@1000000017 : TextConst 'DEU=Kunde:;ENU=Seller:';
      L_Text010@1000000010 : TextConst 'DEU=Sehr geehrte(r) %1,';
      L_Text010a@1000000063 : TextConst 'DEU=Sehr geehrte Damen und Herren,';
      L_Text011@1000000009 : TextConst 'DEU=anbei erhalten Sie eine Bestellung auf Rechnung %1';
      L_Text012@1000000000 : TextConst 'DEU=Anbei der Lieferschein, der der Sendung beigefÅgt werden kann.';
      L_Text013@1000000008 : TextConst 'DEU=Unsere Bestellnummer: %1';
      L_Text014@1000000011 : TextConst 'DEU=Versandadresse:';
      L_Text015@1000000064 : TextConst 'DEU=Bitte schicken Sie uns eine AuftragsbestÑtigung innerhalb von 24h mit dem geplanten Liefertermin und der bestÑtigten Anzahl als Antwort auf diese E-Mail.';
      L_Text016@1000000025 : TextConst 'DEU=Vielen Dank fÅr die Zusammenarbeit mit %1 !';
      L_Text017@1000000027 : TextConst 'DEU=Mit freundlichen GrÅ·en';
      L_Text018@1000000033 : TextConst 'DEU=Tel: %1 | Fax: %2';
      L_Text019@1000000037 : TextConst 'DEU="anbei erhalten Sie eine Bestellung von Lagerartikeln fÅr unser Lager. "';
      L_Text020@1000000041 : TextConst 'DEU=Bitte beachten Sie die Lieferanschrift, da wir mehrere Lager haben.';
      L_Text021@1000000042 : TextConst 'DEU=Bitte beachten Sie auch, dass Sie spÑtestens %1 vor Anlieferung Ihre Anlieferung avisieren.';
      L_Text022@1000000031 : TextConst 'DEU=Die neue Lieferadresse ist:';
      L_Text023@1000000046 : TextConst 'DEU=Entladezeit: %1';
      L_Text024@1000000047 : TextConst 'DEU=Ansprechpartner fÅr die Lieferavisierung ist %1.';
      L_Text025@1000000048 : TextConst 'DEU=Bitte folgenden Verteiler wÑhlen, wenn es um die Avisierung geht:';
      L_Text026@1000000049 : TextConst 'DEU=Bitte stellen Sie sicher, dass unsere Bestell-Referenz und die Bestellnummer auf dem Lieferschein hinterlegt sind.';
      L_Text027@1000000051 : TextConst 'DEU=anbei eine Bestellung aus dem %1 Marketplace, welche Sie bitte auf eigene Rechnung versenden.';
      L_Text028@1000000052 : TextConst 'DEU=Den vollen Bruttobetrag haben wir bereits eingezogen/reserviert und sichern Ihnen hiermit verbindlich die Auszahlung zu vereinbarten Konditionen zu.';
      L_Text029@1000000053 : TextConst 'DEU=Bitte beachten Sie, dass Sie mindestens die Liefer-KW eintragen und auf Aktualisieren klicken mÅssen, damit der Lieferschein erzeugt wird. Sie brauchen dafÅr fortan keine AuftragsbestÑtigungen mehr auf anderem Wege zusenden.';
      L_Text030@1000000060 : TextConst 'DEU=Kunde:';
      L_TextT001@1000000058 : TextConst 'DEU=Menge;ENU=Quantity';
      L_TextT002@1000000057 : TextConst 'DEU=Beschreibung (Artikelnr.);ENU=Description';
      L_TextT003@1000000056 : TextConst 'DEU=VK-Preis;ENU=Sales Price';
      L_TextT004@1000000055 : TextConst 'DAN=Enhed;DEU=Ihre SKU;ENU=Unit;ESP=Unidad;FRA=UnitÇ;SVE=Enhet';
      L_TextT005@1000000059 : TextConst 'DEU=Max. Liefer-KW';
      L_TextI001@1000000035 : TextConst 'DEU=Impressum';
      L_TextI002@1000000036 : TextConst 'DEU=Eingetragen beim %1';
      L_TextI004@1000000038 : TextConst 'DEU=USt-ID: %1';
      L_TextI005@1000000039 : TextConst 'DEU=GeschÑftsfÅhrer %1, %2';
      L_TextI006@1000000040 : TextConst 'DEU=(Montag - Freitag 09:00 - 18:00 Uhr)';
      Text040@1000000019 : TextConst 'DAN=Der blev ikke dannet et PDF-dokument.;DEU=Es wurde kein PDF Dokument erzeugt.;ENU=No PDF Document was generated.;ESP=No se gener¢ ning£n documento PDF.;FRA=Aucun document PDF n''a ÇtÇ crÇÇ.;SVE=Inget PDF-dokument skapades.';
      LinkID@1000000043 : Code[10];
      L_MaxKW@1000000061 : Text[10];
      L_Hash@1000000062 : Text[250];
      L_Port@1000000024 : Integer;
      PurchLineLoc@1108200000 : Record 39;
      DHLPaketLabelReport@1108200001 : Report 50009;
      VendLoc@1108200002 : Record 23;
      SKUOK@1108200003 : Boolean;
      LabelCounter@1108200004 : Integer;
      Purchlineloc2@1108200005 : Record 39;
      L_Text031@1108200012 : TextConst 'ENU="Artikel-Bezeichnung: "';
      L_Text032@1108200011 : TextConst 'ENU="Unsere Artikelnr.: "';
      L_Text033@1108200010 : TextConst 'ENU="Ihre Artikelnr.: "';
      L_Text034@1108200009 : TextConst 'ENU="Menge: "';
      L_Text035@1108200008 : TextConst 'ENU=Unsere Kundennr.: %1';
      L_Text036@1108200007 : TextConst 'ENU="Versandart: "';
      L_Text037@1108200006 : TextConst 'ENU=Auftragsdatum: %1';
      SalesLineLoc@1108200013 : Record 37;
      SparPartMgtL@1000000066 : Codeunit 50322;
      VendorContactTypeL@1000000067 : Record 50189;
      MailITSetupL@1100000066 : Record 75402;
      PurchaseMailHTMLPathL@1100000068 : Record 50339;
    BEGIN
      LT_MailITSetup.GET;
      LT_MailITSetup.TESTFIELD("Purchase E-Mail BCC (Direct)");
      LT_MailITSetup.TESTFIELD("Purchase E-Mail BCC (Location)");
      UserSetup.GET(USERID);
      UserSetup.TESTFIELD("PDF Creator");

      _PurchOrderHeader.SETRECFILTER;
      _SalesOrderHeader.SETRECFILTER;
      IF _Dropship THEN BEGIN
        //A/gob-rste/12.09.12/P0316
        //_SalesOrderHeader.CALCFIELDS("Website No.");
        //E/gob-rste/12.09.12/P0316
        LT_WebSiteTransfer.SETRANGE("Website No.",_SalesOrderHeader."Website No.");
        LT_WebSiteTransfer.FINDLAST;
        LT_WebSiteTransfer.CALCFIELDS("Website Name");
        //A/gob-rste/26.06.12/GOB1.06
        //MailText := LT_WebSiteTransfer."Website Name" +': '+ L_Text001 +' '+ _PurchOrderHeader."No." +' '+
          //L_Text002 +' '+ _SalesOrderHeader."Sell-to Customer Name";
        MailText :=
          LT_WebSiteTransfer."Website Name" + ': '+ L_Text001 + ' ' + _PurchOrderHeader."No." + ' ' +
          L_Text002 + ' ' + _SalesOrderHeader."Ship-to Name";

        // H0773 22.01.14 FX +++++++++++++++++++++++++++++++++++++++++++++++++
        IF (PurchHeader.CheckSecondEMail(_PurchOrderHeader) <> '') AND
          (PurchHeader.CheckSecondEMail(_PurchOrderHeader) <> '!')
        THEN
          MailText += TextHME013;
        // H0773 22.01.14 FX -----------------------------------------------

        //E/gob-rste/26.06.12/GOB1.06
        DocName := LT_WebSiteTransfer."Website Name" +'_Labels_'+  _PurchOrderHeader."No.";
        DocName2 := LT_WebSiteTransfer."Website Name" +'_Packzettel_'+  _PurchOrderHeader."No.";
        ReportID := 50020
      END ELSE BEGIN
        MailText := L_Text001 +' '+ _PurchOrderHeader."No.";

        // H0773 22.01.14 FX +++++++++++++++++++++++++++++++++++++++++++++++++
        IF (PurchHeader.CheckSecondEMail(_PurchOrderHeader) <> '') AND
          (PurchHeader.CheckSecondEMail(_PurchOrderHeader) <> '!')
        THEN
          MailText += TextHME013;
        // H0773 22.01.14 FX -----------------------------------------------

        DocName2 := 'Bestellung_'+  _PurchOrderHeader."No.";
        ReportID := 405;
      END;

      CREATE(ClientFso,TRUE,TRUE);
      CREATE(ClientUtil,TRUE,TRUE);
      CREATE(DivUtil,TRUE,TRUE);
      JobID := MailIT.CreateGUID();

      // Get folder for temporary files on the client
      ClientTempFolder := ClientUtil.GetTempPath();
      IF ClientTempFolder = '' THEN
        ERROR('Unable to create the path of the temporary folder.');
      ClientTempFolder := ClientTempFolder + 'ExpMail';
      IF NOT ClientFso.FolderExists(ClientTempFolder) THEN
        ClientFso.CreateFolder(ClientTempFolder);
      ClientTempFolder := ClientTempFolder + '\' + JobID;
      IF NOT ClientFso.FolderExists(ClientTempFolder) THEN
        ClientFso.CreateFolder(ClientTempFolder);

      // Locate bill to customer
      Vend.GET(_PurchOrderHeader."Buy-from Vendor No.");
      CompanyInfo.GET;

      // Initialize the email
      IF SendMailDirect THEN
        MailIT.SetService('SMTP')
      ELSE
        MailIT.SetService(FORMAT(UserSetup."Mail Client"));

      IF _Dropship THEN BEGIN
        MailIT.SetFrom(LT_MailITSetup."User Name (Direct)");
        IF NOT LT_MailITSetup."Test Mode" THEN
          MailIT.AddRecipientBCC(LT_MailITSetup."Purchase E-Mail BCC (Direct)",LT_MailITSetup."Purchase E-Mail BCC (Direct)")
        ELSE
          MailIT.AddRecipientBCC(LT_MailITSetup."Test E-Mail BCC",LT_MailITSetup."Test E-Mail BCC");
      END ELSE BEGIN
        MailIT.SetFrom(LT_MailITSetup."Purchase E-Mail BCC (Location)");
        IF NOT LT_MailITSetup."Test Mode" THEN
          MailIT.AddRecipientBCC(LT_MailITSetup."Purchase E-Mail BCC (Location)",LT_MailITSetup."Purchase E-Mail BCC (Location)")
        ELSE
          MailIT.AddRecipientBCC(LT_MailITSetup."Test E-Mail BCC",LT_MailITSetup."Test E-Mail BCC");
      END;

      // 1.00 B >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
      IF _Dropship THEN BEGIN
        IF (Vend."Primary Contact No. (Direct)" <> '') AND Cont.GET(Vend."Primary Contact No. (Direct)") AND (Cont."E-Mail" <> '') THEN
          Vend."E-Mail" := Cont."E-Mail";
      END ELSE
      // 1.00 E <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

        IF (Vend."Primary Contact No. (Order)" <> '') AND Cont.GET(Vend."Primary Contact No. (Order)") AND (Cont."E-Mail" <> '') THEN
          Vend."E-Mail" := Cont."E-Mail";

      //H1534 26.01.15 RST +++++++++++++++++++++++++
      IF SparPartMgtL.IsSparePartOrderFromPOrder(_PurchOrderHeader) THEN BEGIN
        SparPartMgtL.RetrieveVendPOSparePaEmailAddr(Vend,VendorContactTypeL);
        IF VendorContactTypeL."Contact Medium" <> '' THEN
          Vend."E-Mail" := VendorContactTypeL."Contact Medium";
      END;
      //H1534 26.01.15 RST --------------------------

      Vend.TESTFIELD("E-Mail");
      IF Vend."E-Mail" <> '' THEN
        IF LT_MailITSetup."Test Mode" THEN
          MailIT.AddRecipient(LT_MailITSetup."Test E-Mail",LT_MailITSetup."Test E-Mail")
        ELSE
          MailIT.AddRecipient(Vend."E-Mail",Vend."E-Mail");

      MailIT.SetSubject(MailText);

      // Add some HTML to the mail body
      IF NOT _Dropship THEN
        _PurchOrderHeader."Ship-to Contact" := '';
      _PurchOrderHeader."Ship-to Country/Region Code" := '';
      FormatAddr.PurchHeaderShipTo(ShipAddr,_PurchOrderHeader);
      IF _Dropship THEN
      //H1671 14.01.15 ++++++++++++++++++++++++++++++++++++++
        //MailIT.LoadHTMLBody('C:\Mailhtml\header.html');
        IF MailITSetupL.GET THEN BEGIN
          IF PurchaseMailHTMLPathL.GET(MailITSetupL."Dropship Order Mail Code",_SalesOrderHeader."Language Code",
                                         PurchaseMailHTMLPathL.Type::header) THEN
            MailIT.LoadHTMLBody(PurchaseMailHTMLPathL.Path)
          ELSE
            IF PurchaseMailHTMLPathL.GET(MailITSetupL."Dropship Order Mail Code",'DEU',PurchaseMailHTMLPathL.Type::header) THEN
              MailIT.LoadHTMLBody(PurchaseMailHTMLPathL.Path)
        END;
      //H1671 14.01.15 --------------------------------------

      MailIT.AppendHTML('<font face="Arial","sans-serif">');
      //A/P0305
      //MailIT.AppendHTML('<table width=744 border=0>');
      MailIT.AppendHTML('<table width=590 border=0>');
      //E/P0305
      IF _PurchOrderHeader."Buy-from Contact" <> '' THEN
        MailIT.AppendHTML(STRSUBSTNO(L_Text010,_PurchOrderHeader."Buy-from Contact") + '<br /><br />')
      ELSE
        MailIT.AppendHTML(STRSUBSTNO(L_Text010a) + '<br /><br />');
      IF _Dropship THEN BEGIN
        IF _MP THEN BEGIN
          MailIT.AppendHTML(STRSUBSTNO(L_Text027,LT_WebSiteTransfer."Website Name") +' '+ L_Text028 + '<br /><br />');
        END ELSE
          MailIT.AppendHTML('<b>'+ STRSUBSTNO(L_Text011,CompanyInfo.Name) + '</b><br /><br />');
      //A/gob-rste/30.07.12/GOB1.14
        IF CheckAlternativeEMail(_PurchOrderHeader) AND NOT(_MP) THEN BEGIN

        // H0773 23.01.14 FX +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
          // MailIT.AppendHTML('<font size="5">' + STRSUBSTNO(L_Text013,_PurchOrderHeader."No.") + '</font>'  + '<br /><br />');
          IF (PurchHeader.CheckSecondEMail(_PurchOrderHeader) <> '') AND
            (PurchHeader.CheckSecondEMail(_PurchOrderHeader) <> '!')
          THEN
            ConditionalText := TextHME013
          ELSE
            ConditionalText := '';
          MailIT.AppendHTML(
            '<font size="5">' + STRSUBSTNO(L_Text013,_PurchOrderHeader."No." + ConditionalText) + '</font>'  + '<br /><br />');
        // H0773 23.01.14 FX -----------------------------------------------------------------------------------

          IF Vend."Our Account No."<>'' THEN
            MailIT.AppendHTML(STRSUBSTNO(L_Text035,Vend."Our Account No.") + '<br />');
          MailIT.AppendHTML(STRSUBSTNO(L_Text037,_PurchOrderHeader."Order Date") + '<br /><br />');
          Purchlineloc2.RESET;
          Purchlineloc2.SETRANGE("Document Type",_PurchOrderHeader."Document Type");
          Purchlineloc2.SETRANGE("Document No.",_PurchOrderHeader."No.");
          Purchlineloc2.SETRANGE(Type,Purchlineloc2.Type::Item);
          IF Purchlineloc2.FINDSET THEN
            REPEAT
              Item.GET(Purchlineloc2."No.");
              //H3847 07.04.15 DMO +++++++++++++++++++++++++++++
              IF Item."Vendor Description" <> '' THEN
                MailIT.AppendHTML(L_Text031 + Item."Vendor Description" +'<br />')
              ELSE
              //H3847 07.04.15 DMO -----------------------------
                MailIT.AppendHTML(L_Text031 + Purchlineloc2.Description + Purchlineloc2."Description 2" +'<br />');
              MailIT.AppendHTML(L_Text032 + Purchlineloc2."No." +'<br />');
              MailIT.AppendHTML(L_Text033 + Item."Vendor Item No." + Item."Vendor Item No. Add." +'<br />');
              MailIT.AppendHTML(L_Text034 + FORMAT(Purchlineloc2.Quantity) +'<br />');
              IF SalesLineLoc.GET(
                   Purchlineloc2."Document Type"::Order,
                   Purchlineloc2."Sales Order No.",Purchlineloc2."Sales Order Line No.")
              THEN
                MailIT.AppendHTML(L_Text036 + FORMAT(SalesLineLoc."Transp. Type") +'<br /><br />');
            UNTIL Purchlineloc2.NEXT=0;

          MailIT.AppendHTML(L_Text014 + '<br />');  //Versandaddresse
          MailIT.AppendHTML(_PurchOrderHeader."Ship-to Name" + '<br />');
          MailIT.AppendHTML(_PurchOrderHeader."Ship-to Address" + '<br />');
          MailIT.AppendHTML(_PurchOrderHeader."Ship-to Post Code" + ' ');
          MailIT.AppendHTML(_PurchOrderHeader."Ship-to City" + '<br />');

        END ELSE BEGIN
        //E/gob-rste/30.07.12/GOB1.14

          // H0773 23.01.14 FX ++++++++++++++++++++++++++++++++++++++++
          IF (PurchHeader.CheckSecondEMail(_PurchOrderHeader) <> '') AND
            (PurchHeader.CheckSecondEMail(_PurchOrderHeader) <> '!')
          THEN
            ConditionalText := TextHME013
          ELSE
            ConditionalText := '';
          // MailIT.AppendHTML(STRSUBSTNO(L_Text013,_PurchOrderHeader."No.") + '<br /><br />');
          MailIT.AppendHTML(STRSUBSTNO(L_Text013,_PurchOrderHeader."No.") + ConditionalText + '<br /><br />');
          // H0773 23.01.14 FX ---------------------------------------------------------------------------------

          IF _MP THEN
            MailIT.AppendHTML(L_Text030 + '<br />')
          ELSE
            MailIT.AppendHTML(L_Text014 + '<br />');
        //A/gob-rste/30.07.12/GOB1.14
        END;
        //E/gob-rste/30.07.12/GOB1.14
      END ELSE BEGIN
        IF NOT LT_Location.GET(_PurchOrderHeader."Location Code") THEN
          LT_Location.INIT;
        MailIT.AppendHTML(L_Text019 + '<br />');
        //a/p0072
        MailIT.AppendHTML('<b>'+ L_Text020 + '</b><br /><br />');
        //e/p0072
        MailIT.AppendHTML(L_Text022 + '<br />'); //gob-sfe/P0099
      END;
      IF _MP THEN BEGIN
        MailIT.AppendHTML(
          _PurchOrderHeader."Ship-to Name" +', '+
          _PurchOrderHeader."Ship-to Post Code" +' '+ _PurchOrderHeader."Ship-to City" +'<br />');
      END ELSE BEGIN
        FOR i := 1 TO 8 DO
          IF ShipAddr[i] <> '' THEN
            MailIT.AppendHTML(ShipAddr[i] + '<br />');
        IF _Dropship AND Cust.GET(_PurchOrderHeader."Sell-to Customer No.") AND (Cust."Phone No." <> '') THEN
          MailIT.AppendHTML('T: '+ Cust."Phone No.");
      END;

      IF NOT _Dropship THEN BEGIN
        MailIT.AppendHTML(STRSUBSTNO(L_Text023,LT_Location."Discharge Time") + '<br /><br />');
        //a/gob-sfe/P0099
        //MailIT.AppendHTML(STRSUBSTNO(L_Text024,LT_Location.Contact) + '<br />');
        //MailIT.AppendHTML(L_Text025 + '<br /><br />');
        //MailIT.AppendHTML(STRSUBSTNO(L_Text018,LT_Location."Phone No. 2",LT_Location."Fax No.") + '<br />');
        //MailIT.AppendHTML('E-Mail: ' + LT_Location."E-Mail" + '<br /><br />');
        //MailIT.AppendHTML('<br /><br />');
        LT_ExtTextLine.SETRANGE("Table Name",LT_ExtTextLine."Table Name"::"Standard Text");
        LT_ExtTextLine.SETRANGE("No.",'BESTAB');
        IF LT_ExtTextLine.FINDSET THEN
          REPEAT
            MailIT.AppendHTML(LT_ExtTextLine."Text (Long)" + '<br />');
          UNTIL LT_ExtTextLine.NEXT = 0;
        MailIT.AppendHTML('<br /><br />');
        LT_ExtTextLine.SETRANGE("Table Name",LT_ExtTextLine."Table Name"::"Standard Text");
        LT_ExtTextLine.SETRANGE("No.",'BESTAVI');
        IF LT_ExtTextLine.FINDSET THEN
          REPEAT
            MailIT.AppendHTML(LT_ExtTextLine."Text (Long)" + '<br />');
          UNTIL LT_ExtTextLine.NEXT = 0;
        MailIT.AppendHTML('<br /><br />');
        //e/gob-sfe/P0099

        LT_ExtTextLine.SETRANGE("Table Name",LT_ExtTextLine."Table Name"::"Standard Text");
        LT_ExtTextLine.SETRANGE("No.",'BESTTEXT');
        IF LT_ExtTextLine.FINDSET THEN
          REPEAT
            MailIT.AppendHTML(LT_ExtTextLine."Text (Long)" + '<br />');
          UNTIL LT_ExtTextLine.NEXT = 0;
      END;
      MailIT.AppendHTML('</table>');
      IF _MP THEN BEGIN
        //A/P0305
        //MailIT.AppendHTML('<table width=744 border=1><tr>' +
        MailIT.AppendHTML(
          '<table width=590 border=1><tr>' +
        //E/P0305
          '<th>' + L_TextT001 + '</th>' +
          '<th>' + L_TextT002 + '</th>' +
          '<th>' + L_TextT004 + '</th>' +
          '<th align="right">' + L_TextT003 + '</th>' +
          '<th>' + L_TextT005 + '</th></tr>');
        PurchLine.RESET;
        PurchLine.SETRANGE("Document Type",_PurchOrderHeader."Document Type");
        PurchLine.SETRANGE("Document No.",_PurchOrderHeader."No.");
        PurchLine.SETRANGE(Type,PurchLine.Type::Item);
        PurchLine.SETFILTER("No.",'<>%1','');
        PurchLine.SETFILTER("Sales Order No.",'<>%1','');
        IF PurchLine.FINDSET THEN
          REPEAT
            Item.GET(PurchLine."No.");
            L_MaxKW := FORMAT(DATE2DWY(PurchLine."Max. Delivery Date",2)) +'.'+ FORMAT(DATE2DMY(PurchLine."Max. Delivery Date",3));
            SalesLine.GET(SalesLine."Document Type"::Order,PurchLine."Sales Order No.",PurchLine."Sales Order Line No.");
            MailIT.AppendHTML(
              '<tr>' +
              '<td width="9%" align="center">' + FORMAT(PurchLine.Quantity) + '</td>'+
              '<td width="40%">' + MailIT.HTMLEncode(SalesLine.Description) +' ('+ MailIT.HTMLEncode(SalesLine."No.") +')'+ '</td>' +
              '<td width="25%">' + Item."Vendor Item No." + Item."Vendor Item No. Add." + '</td>' +
              '<td width="13%" align="right">' + FORMAT(SalesLine."Unit Price",0,'<Precision,2><Standard Format,0>') + '</td>' +
              '<td width="10%" align="center">' + L_MaxKW + '</td></tr>');
          UNTIL PurchLine.NEXT = 0;
        MailIT.AppendHTML('</table>');
        MailIT.AppendHTML('<table><border=0');
        MailIT.AppendHTML(L_Text029 + '<br /><br />');
        MailIT.AppendHTML('</table>');
      END ELSE BEGIN
        IF _Dropship THEN
          MailIT.AppendHTML(L_Text015 + '<br /><br />');
      END;

      IF _MP THEN BEGIN
        L_Hash := DivUtil.GetSHA1HashData(_PurchOrderHeader."No." + _PurchOrderHeader."Ship-to Post Code" +'jrlewu3j54');
        //A/P0305
        //MailIT.AppendHTML('<table width=744 border=0>');
        MailIT.AppendHTML('<table width=590 border=0>');
        //E/P0305
        LT_WebSource.GET('MP01');
        MailIT.AppendHTML('<td style=''background:#009E0E;width="60%";padding:12.0pt''><p align=center>');
        MailIT.AppendHTML(
          '<a href="'+ LT_WebSource.URL + _PurchOrderHeader."No." +'&amp;hash='+ L_Hash +'">'+
          'Auftrag bestÑtigen und Dokumente <br> herunterladen </a></p></td>');
        LT_WebSource.GET('MP02');
        MailIT.AppendHTML('<td style=''background:#CC0000;padding:12.0pt''><p align=center>');
        MailIT.AppendHTML(
          '<a href="'+ LT_WebSource.URL + _PurchOrderHeader."No." +'&amp;hash='+ L_Hash +'">'+
          'Auftrag <br> ablehnen </a></p>');
        MailIT.AppendHTML('</td></tr></table>');
        //A/P0305
        //MailIT.AppendHTML('<table width=744 border=0>');
        MailIT.AppendHTML('<table width=590 border=0>');
        //E/P0305
        LT_WebSource.GET('MP03');
        MailIT.AppendHTML('<td style=''background:#FFE599;padding:12.0pt''><p align=center>');
        MailIT.AppendHTML(
          '<a href="'+ LT_WebSource.URL + _PurchOrderHeader."No." +'&amp;hash='+ L_Hash + '">'+
          'Auftrag aktualisieren/Lieferstatus/<br> Trackingnr. einpflegen </a></p></td>');
        MailIT.AppendHTML('</td></tr></table>');
      END;

      // Fusszeilen
      //A/P0305
      //MailIT.AppendHTML('<table width=744 border=0>');
      MailIT.AppendHTML('<table width=590 border=0>');
      //A/P0305
      IF _Dropship AND (NOT _MP) THEN
         MailIT.AppendHTML(L_Text012 + '<br /><br />');
      MailIT.AppendHTML('<br />');
      MailIT.AppendHTML('<p style=''background:#B3C5C5''>');
      IF _Dropship THEN BEGIN
        MailIT.AppendHTML(STRSUBSTNO(L_Text016,LT_WebSiteTransfer."Website Name") + '<br /><br />');
        MailIT.AppendHTML(L_Text017 + '<br />');
        MailIT.AppendHTML(LT_MailITSetup."Purchase Group (Direct)" + '<br />');
        MailIT.AppendHTML(
          STRSUBSTNO(
            L_Text018,LT_MailITSetup."Purchase Phone No. (Direct)",
            LT_MailITSetup."Purchase Fax No. (Direct)")
          + '<br />');
        MailIT.AppendHTML('E-Mail: ' + LT_MailITSetup."Purchase E-Mail BCC (Direct)" + '<br /><br />');
      END ELSE BEGIN
        MailIT.AppendHTML(L_Text017 + '<br />');
        MailIT.AppendHTML(LT_MailITSetup."Purchase Group (Direct)" + '<br />');
        MailIT.AppendHTML(
          STRSUBSTNO(
            L_Text018,LT_MailITSetup."Purchase Phone No. (Location)",
            LT_MailITSetup."Purchase Fax No. (Location)")
          + '<br />');
        MailIT.AppendHTML('E-Mail: ' + LT_MailITSetup."Purchase E-Mail BCC (Location)" + '<br />');
      END;
      MailIT.AppendHTML('</p>');

      // read footer file
      //H1671 11.03.15 ++++++++++++++++++++++++++++++++++++++
      //MailIT.LoadHTMLBody('C:\Mailhtml\footer.html');
      IF MailITSetupL.GET THEN BEGIN
        IF PurchaseMailHTMLPathL.GET(MailITSetupL."Purchase Order Mail Code",_PurchOrderHeader."Language Code",
                                       PurchaseMailHTMLPathL.Type::footer) THEN
          MailIT.LoadHTMLBody(PurchaseMailHTMLPathL.Path)
        ELSE
          IF PurchaseMailHTMLPathL.GET(MailITSetupL."Purchase Order Mail Code",'DEU',PurchaseMailHTMLPathL.Type::footer) THEN
            MailIT.LoadHTMLBody(PurchaseMailHTMLPathL.Path)
      END;
      //H1671 11.03.15 --------------------------------------

      // Prepare to print it to PDF
      IF NOT _MP THEN BEGIN
        ClientPdfFileName := ClientTempFolder + '\' + DocName2 + '.pdf';
        IF ClientFso.FileExists(ClientPdfFileName) THEN
          ClientFso.DeleteFile(ClientPdfFileName);
        MailIT.PDFParameter('Output',ClientPdfFileName);
        MailIT.PDFParameter('ShowPDF','no');
        MailIT.PDFParameter('Title',DocName2);
        MailIT.PDFParameter('Author',USERID);
        MailIT.PDFPreparePrinter();
        IF NOT DefaultPrinterChanged THEN BEGIN
          IF OldDefaultPrinter = '' THEN
            OldDefaultPrinter := MailIT.GetDefaultPrinter();
          IF OldDefaultPrinter <> UserSetup."PDF Creator" THEN BEGIN
            MailIT.SetDefaultPrinter(UserSetup."PDF Creator");
            DefaultPrinterChanged := TRUE;
          END;
        END;
        IF _Dropship THEN BEGIN
          LR_SalesOrder.SetParameters(_PurchOrderHeader."No.");
          LR_SalesOrder.SETTABLEVIEW(_SalesOrderHeader);
          LR_SalesOrder.USEREQUESTFORM(FALSE);
          LR_SalesOrder.RUNMODAL;
        END ELSE
          REPORT.RUNMODAL(ReportID,FALSE,TRUE,_PurchOrderHeader);
        IF (MailIT.WaitForFile(ClientPdfFileName,20000) = 0) THEN
          ERROR(Text040);
        MailIT.AddAttachment(ClientPdfFileName);
      END;
      //A/gob-rste/09.05.12/GOB1.00
      //IF _Dropship AND (NOT _MP) THEN BEGIN
        //LT_LabelDHL.RESET;
        //LT_LabelDHL.SETRANGE("SO No.",TempSalesHeader."No.");
        //LT_LabelDHL.SETRANGE("Shipment Canceled",FALSE);
        //LT_LabelDHL.SETFILTER("Label URL",'<>%1','');
        //IF LT_LabelDHL.FINDSET THEN REPEAT
          //ClientPdfFileName := ClientTempFolder + '\' + DocName + '.pdf';
          //IF ClientFso.FileExists(ClientPdfFileName) THEN
            //ClientFso.DeleteFile(ClientPdfFileName);
          //DivUtil.DownloadFileFromURL(LT_LabelDHL."Label URL",DELCHR(ClientTempFolder,'>','\') +'\',DocName + '.pdf');
          //IF (MailIT.WaitForFile(ClientPdfFileName,20000) = 0) THEN
            //ERROR(Text040);
          //MailIT.AddAttachment(ClientPdfFileName);
        //UNTIL LT_LabelDHL.NEXT = 0;
      //END;
      //E/gob-rste/09.05.12/GOB1.00

      //A/gob-rste/09.05.12/GOB1.00
      //A/gob-rste/14.05.12/GOB1.01
      LabelCounter := 0;
      //E/gob-rste/14.05.12/GOB1.01
      //A/gob-rste/29.05.12/GOB1.02
      IF _PurchOrderHeader.Kommissionierung THEN BEGIN
      //E/gob-rste/29.05.12/GOB1.02
        IF VendLoc.GET(_PurchOrderHeader."Buy-from Vendor No.") THEN
          IF VendLoc."Create DS Label" THEN BEGIN
            PurchLineLoc.SETRANGE("Document Type",_PurchOrderHeader."Document Type");
            PurchLineLoc.SETRANGE("Document No.",_PurchOrderHeader."No.");
            PurchLineLoc.SETRANGE(Type,PurchLineLoc.Type::Item);
            //A/gob-rste/29.05.12/GOB1.02
            //PurchLineLoc.SETRANGE("Purchasing Code",'PAKET-DIR');
            PurchLineLoc.SETRANGE("Purchasing Code",'GER-7');
            //E/gob-rste/29.05.12/GOB1.02
            PurchLineLoc.SETFILTER("No.",'<>%1','');
            // Flag auf richtigen Kanal umbauen nahc NAV Connector anpassung
            IF PurchLineLoc.FIND('-') THEN
              //A/gob-rste/30.07.12/GOB1.13
              //REPEAT
              BEGIN
              //E/gob-rste/30.07.12/GOB1.13
                //A/gob-rste/14.05.12/GOB1.01
                LabelCounter +=1;
                //E/gob-rste/14.05.12/GOB1.01
                //A/gob-rste/29.05.12/GOB1.02
                //SKUOK := TRUE;
                //IF ((UPPERCASE(COPYSTR(PurchLineLoc."No.",1,1)) = 'X') OR (UPPERCASE(COPYSTR(PurchLineLoc."No.",1,1)) = 'Y')) THEN
                  //SKUOK := FALSE;
                //IF SKUOK THEN BEGIN
                  ClientPdfFileName := ClientTempFolder + '\' + DocName + '_' + FORMAT(LabelCounter) + '.pdf';
                  IF ClientFso.FileExists(ClientPdfFileName) THEN
                    ClientFso.DeleteFile(ClientPdfFileName);
                  MailIT.PDFParameter('Output',ClientPdfFileName);
                  MailIT.PDFParameter('ShowPDF','no');
                  MailIT.PDFParameter('Title',DocName2);
                  MailIT.PDFParameter('Author',USERID);
                  MailIT.PDFPreparePrinter();
                  IF NOT DefaultPrinterChanged THEN BEGIN
                    IF OldDefaultPrinter = '' THEN
                      OldDefaultPrinter := MailIT.GetDefaultPrinter();
                    IF OldDefaultPrinter <> UserSetup."PDF Creator" THEN BEGIN
                      MailIT.SetDefaultPrinter(UserSetup."PDF Creator");
                      DefaultPrinterChanged := TRUE;
                    END;
                  END;
                  //ClientPdfFileName := ClientTempFolder + '\' + DocName + '_' + FORMAT(LabelCounter) + '.pdf';
                  //A/gob-rste/13.06.12/GOB1.03
                  Purchlineloc2.RESET;
                  Purchlineloc2.SETRANGE("Document Type",PurchLineLoc."Document Type");
                  Purchlineloc2.SETRANGE("Document No.",PurchLineLoc."Document No.");
                  //A/gob-rste/30.07.12/GOB1.13
                  //Purchlineloc2.SETRANGE("Line No.",PurchLineLoc."Line No.");
                  //E/gob-rste/30.07.12/GOB1.13
                  IF Purchlineloc2.FINDFIRST THEN
                  //E/gob-rste/13.06.12/GOB1.03
                    IF _Dropship THEN BEGIN
                      CLEAR(DHLPaketLabelReport);
                      //A/gob-rste/13.06.12/GOB1.03
                      //DHLPaketLabelReport.SETTABLEVIEW(PurchLineLoc);
                      DHLPaketLabelReport.SETTABLEVIEW(Purchlineloc2);
                      //E/gob-rste/13.06.12/GOB1.03
                      DHLPaketLabelReport.USEREQUESTFORM(FALSE);
                      DHLPaketLabelReport.RUNMODAL;
                    END ELSE BEGIN
                      //A/gob-rste/13.06.12/GOB1.03
                      //REPORT.RUNMODAL(50009,FALSE,TRUE,PurchLineLoc);
                      REPORT.RUNMODAL(50009,FALSE,TRUE,Purchlineloc2);
                      //E/gob-rste/13.06.12/GOB1.03
                    END;
                  IF (MailIT.WaitForFile(ClientPdfFileName,20000) = 0) THEN
                    ERROR(Text040,ClientPdfFileName);
                  MailIT.AddAttachment(ClientPdfFileName);
                //END;
             //A/gob-rste/30.07.12/GOB1.13
             //UNTIL PurchLineLoc.NEXT = 0;
             END;
             //E/gob-rste/30.07.12/GOB1.13
        END;
      END;
      //E/gob-rste/09.05.12/GOB1.00


      CreateOrderCSV(_PurchOrderHeader,TempSalesHeader,ClientTempFolder,_MP,_Dropship);
      MailIT.AddAttachment(ClientTempFolder + '\order.csv');

      //###
      IF NOT _Dropship THEN
        //A/gob-rste/14.06.12/GOB1.04
        //MailIT.AddAttachment('D:\Lagerbestellungen\Anhang\20120112_FPCommerce_Avisierungsrichtlinien.pdf');
        MailIT.AddAttachment('D:\Lagerbestellungen\Anhang\20120413_FPCommerce_Avisierungsrichtlinien.pdf');
        //Egob-rste/14.06.12/GOB1.04
      //###

      // Restore the user's default printer selection
      IF DefaultPrinterChanged THEN
        MailIT.SetDefaultPrinter(OldDefaultPrinter);

      IF SendMailDirect THEN BEGIN
        MailIT.SetServer(LT_MailITSetup."Mail Server");
        IF LT_MailITSetup."Server Port" = '' THEN
          L_Port := 25
        ELSE
          EVALUATE(L_Port,LT_MailITSetup."Server Port");
        MailIT.SetPort(L_Port);
        IF _Dropship THEN BEGIN
          MailIT.SetLogin(LT_MailITSetup."User Name (Direct)");
          MailIT.SetPassword(LT_MailITSetup."Password (Direct)");
        END ELSE BEGIN
          MailIT.SetLogin(LT_MailITSetup."User Name (Location)");
          MailIT.SetPassword(LT_MailITSetup."Password (Location)");
        END;
        MailIT.Send;
      END ELSE
        MailIT.Display;
      //H2108 10.02.15 DMO +++++++++++++++++++++++++++++++++++
      PurchHeader.GET(_PurchOrderHeader."Document Type",_PurchOrderHeader."No.");
      PurchHeader."No. of Sent POs" += 1;
      PurchHeader.MODIFY;
      //H2108 10.02.15 DMO -----------------------------------
      // Remove the temporary folder and it's content.
      // If you use MAPI and Thunderbird or other MAPI email clints the they may require that
      // the image files remain on the disk until the mail is sent.
      IF FORMAT(UserSetup."Mail Client") <> 'MAPI' THEN
        IF ClientFso.FolderExists(ClientTempFolder) THEN
          ClientFso.DeleteFolder(ClientTempFolder, FALSE);
      CLEAR(ClientFso);
      CLEAR(ClientUtil);
      CLEAR(DivUtil);
    END;

    PROCEDURE CreateSalesInvMail@1000000003(_SalesInvHeader@1000000030 : Record 112);
    VAR
      LT_MailITSetup@1000000028 : Record 75402;
      LT_WebSiteTransfer@1000000034 : Record 50033;
      LT_WebSource@1000000026 : Record 5059;
      LT_Location@1000000044 : Record 14;
      LT_LabelDHL@1000000045 : Record 50020;
      LR_SalesOrder@1000000050 : Report 50020;
      FormatAddr@1000000023 : Codeunit 365;
      ClientFso@1000000005 : Automation "{420B2830-E718-11CF-893D-00A0C9054228} 1.0:{0D43FE01-F093-11CF-8940-00A0C9054228}:'Microsoft Scripting Runtime'.FileSystemObject";
      ClientUtil@1000000003 : Automation "{1639594D-2135-4248-BE9B-FB55210F8AD8} 1.0:{D7CD856D-3889-4F19-BBBA-7608CF34EFB6}:'ExpandIT Dynamics Role Tailored Client Utility'.Utility";
      DivUtil@1000000054 : Automation "{2CD8D481-009C-4685-98EA-BC16452327B2} 1.0:{F1BBE10B-6E48-41B0-9EF6-F428C7A48655}:'Dynovus_SHA1Encryption'.SHA1EncryptAutomation";
      MailIT@1000000006 : OCX "{C8C4804C-89BA-4291-AB58-4C6050B65175}:'ExpandIT.MailIT2'";
      ShipAddr@1000000012 : ARRAY [8] OF Text[80];
      MailText@1000000032 : Text[250];
      DocName@1000000016 : Text[250];
      DocName2@1000000021 : Text[250];
      JobID@1000000007 : Text[50];
      ClientTempFolder@1000000004 : Text[250];
      ClientPdfFileName@1000000015 : Text[250];
      ClientFileName@1000000022 : Text[250];
      OldDefaultPrinter@1000000013 : Text[250];
      DefaultPrinterChanged@1000000014 : Boolean;
      ReportID@1000000001 : Integer;
      L_Text001@1000000002 : TextConst 'DEU=Vielen Dank fÅr Ihre Bestellung Nr.:;ENU=Order No.:;FRA=Merci pour votre commande n¯:;NLD=Bedankt voor uw bestelling nummer:';
      L_Text010@1000000010 : TextConst 'DEU=Sehr geehrte(r) %1,';
      L_Text010a@1000000063 : TextConst 'DEU=Sehr geehrte Damen und Herren,';
      L_Text016@1000000025 : TextConst 'DEU=Vielen Dank fÅr die Zusammenarbeit mit %1 !';
      L_Text017@1000000027 : TextConst 'DEU=Mit freundlichen GrÅ·en;FRA=Cordialement,;NLD=Met vriendelijke groet,';
      L_Text018@1000000033 : TextConst 'DEU=Tel: %1 | Fax: %2';
      L_TextI001@1000000035 : TextConst 'DEU=Impressum';
      L_TextI002@1000000036 : TextConst 'DEU=Eingetragen beim %1';
      L_TextI004@1000000038 : TextConst 'DEU=USt-ID: %1';
      L_TextI005@1000000039 : TextConst 'DEU=GeschÑftsfÅhrer %1, %2';
      L_TextI006@1000000040 : TextConst 'DEU=(Montag - Freitag 09:00 - 18:00 Uhr)';
      Text040@1000000019 : TextConst 'DAN=Der blev ikke dannet et PDF-dokument.;DEU=Es wurde kein PDF Dokument erzeugt.;ENU=No PDF Document was generated.;ESP=No se gener¢ ning£n documento PDF.;FRA=Aucun document PDF n''a ÇtÇ crÇÇ.;SVE=Inget PDF-dokument skapades.';
      LinkID@1000000043 : Code[10];
      L_MaxKW@1000000061 : Text[10];
      L_Hash@1000000062 : Text[250];
      L_Text011@1108200000 : TextConst 'DEU=anbei erhalten Sie Ihre Rechnung %1.';
      port@1108200001 : Integer;
      L_Port@1108200002 : Integer;
      GOBTextLoc001@1108200003 : TextConst 'DEU=Liebe/r Kunde/in,;FRA=Cher client / Chäre cliente,;NLD=Geachte klant,';
      GOBTextLoc002@1108200004 : TextConst 'DEU=herzlichen Dank fÅr Ihre Bestellung.;FRA=Nous vous remercions pour votre commande et vous transmettons la facture pour celle-ci;NLD=Bedankt voor uw bestelling.';
      GOBTextLoc003@1108200005 : TextConst 'DEU=Anbei erhalten Sie Ihre Rechnung Nr. %1.;FRA=(facture n¯ %1).;NLD=Hierbij ontvangt u uw rekening, nummer %1.';
      GOBTextLoc004@1108200006 : TextConst 'DEU=Vielen Dank fÅr Ihren Einkauf bei uns und viel Spa· mit den Produkten von home24.de!;FRA=Nous espÇrons que vous avez ÇtÇ satisfait du service de Home24 ainsi que de l''article commandÇ et espÇrons vous revoir bientìt sur hom24.fr !;NLD=Nogmaals dank voor uw aankoop bij ons en veel plezier met de produkten van home24.nl!';
      oldgloballang@1000000000 : Integer;
      GOBTextLoc005@1000000008 : TextConst 'DEU=_Rechnung_;FRA=_facture_;NLD=_rekening_';
    BEGIN
      //A/temp
      SendMailDirect := TRUE;
      //E/temp

      LT_MailITSetup.GET;
      //A/gob-rste/26.06.12/P0044
      //LT_MailITSetup.TESTFIELD("Sales E-Mail");
      LT_MailITSetup.TESTFIELD("User Name Home24 (Invoice)");
      LT_MailITSetup.TESTFIELD("Password Home24 (Invoice)");
      LT_MailITSetup.TESTFIELD("Invoice E-Mail Home24");
      LT_MailITSetup.TESTFIELD("Invoice E-Mail Home24 BCC");
      //A/p0237
      LT_MailITSetup.TESTFIELD("Invoice EMail Sender FR");
      LT_MailITSetup.TESTFIELD("Invoice EMail Sender NL");
      LT_MailITSetup.TESTFIELD("HTML Path Footer DEU");
      LT_MailITSetup.TESTFIELD("HTML Path Header DEU");
      LT_MailITSetup.TESTFIELD("HTML Path Header FR");
      LT_MailITSetup.TESTFIELD("HTML Path Footer FR");
      LT_MailITSetup.TESTFIELD("HTML Path Footer NL");
      LT_MailITSetup.TESTFIELD("HTML Path Header NL");
      //E/p0237
      //E/gob-rste/26.06.12/P0044
      //A/gob-mab/29.06.12/gob1.06/p0039
      LT_MailITSetup.TESTFIELD("Mail Server Home24");
      LT_MailITSetup.TESTFIELD("Server Port Home24");
      //E/gob-mab/29.06.12/gob1.06/p0039

      //A/p0237
      //Sprache merken
      oldgloballang := GLOBALLANGUAGE;
      //E/p0237

      UserSetup.GET(USERID);
      UserSetup.TESTFIELD("PDF Creator");

      _SalesInvHeader.SETRECFILTER;
      //_SalesInvHeader.CALCFIELDS("Website No.");
      LT_WebSiteTransfer.SETRANGE("Website No.",_SalesInvHeader."Website No.");
      LT_WebSiteTransfer.FINDLAST;
      LT_WebSiteTransfer.CALCFIELDS("Website Name");

      //A/p0237
      //Sprache setzen fÅr Textvariablen
      IF (_SalesInvHeader."Language Code" = 'DEU') OR (_SalesInvHeader."Language Code" = '') THEN
        GLOBALLANGUAGE(1031);
      IF _SalesInvHeader."Language Code" = 'NLD' THEN
        GLOBALLANGUAGE(1043);
      IF _SalesInvHeader."Language Code" = 'FRA' THEN
        GLOBALLANGUAGE(1036);
      //E/p0237

      MailText := LT_WebSiteTransfer."Website Name" +': '+ L_Text001 +' '+ _SalesInvHeader."External Document No.";
      // _SalesInvHeader."No.";
      //A/p0237
      //DocName := LT_WebSiteTransfer."Website Name" + '_Rechnung_' +  _SalesInvHeader."No.";
      DocName := LT_WebSiteTransfer."Website Name" + GOBTextLoc005 +  _SalesInvHeader."No.";
      //E/p0237
      ReportID := 50021;

      CREATE(ClientFso,TRUE,TRUE);
      CREATE(ClientUtil,TRUE,TRUE);
      CREATE(DivUtil,TRUE,TRUE);
      JobID := MailIT.CreateGUID();

      // Get folder for temporary files on the client
      ClientTempFolder := ClientUtil.GetTempPath();
      IF ClientTempFolder = '' THEN
        ERROR('Unable to create the path of the temporary folder.');
      ClientTempFolder := ClientTempFolder + 'ExpMail';
      IF NOT ClientFso.FolderExists(ClientTempFolder) THEN
        ClientFso.CreateFolder(ClientTempFolder);
      ClientTempFolder := ClientTempFolder + '\' + JobID;
      IF NOT ClientFso.FolderExists(ClientTempFolder) THEN
        ClientFso.CreateFolder(ClientTempFolder);

      // Locate bill to customer
      Cust.GET(_SalesInvHeader."Sell-to Customer No.");
      CompanyInfo.GET;

      // Initialize the email
      IF SendMailDirect THEN
        MailIT.SetService('SMTP')
      ELSE
        MailIT.SetService(FORMAT(UserSetup."Mail Client"));
      //A/gob-rste/26.06.12/P0044
      //MailIT.SetFrom(LT_MailITSetup."Accounting E-Mail");
      //A/p0237
      IF (_SalesInvHeader."Language Code" = 'DEU') OR (_SalesInvHeader."Language Code" = '') THEN
        MailIT.SetFrom(LT_MailITSetup."Invoice E-Mail Home24");
      IF _SalesInvHeader."Language Code" = 'NLD' THEN
        MailIT.SetFrom(LT_MailITSetup."Invoice EMail Sender NL");
      IF _SalesInvHeader."Language Code" = 'FRA' THEN
        MailIT.SetFrom(LT_MailITSetup."Invoice EMail Sender FR");
      //E/p0237

      //E/gob-rste/26.06.12/P0044

      IF NOT LT_MailITSetup."Test Mode" THEN
        //A/gob-rste/26.06.12/P0044
        //MailIT.AddRecipientBCC(LT_MailITSetup."Accounting E-Mail",LT_MailITSetup."Accounting E-Mail")
        MailIT.AddRecipientBCC(LT_MailITSetup."Invoice E-Mail Home24 BCC",LT_MailITSetup."Invoice E-Mail Home24 BCC")
        //E/gob-rste/26.06.12/P0044
      ELSE
        MailIT.AddRecipientBCC(LT_MailITSetup."Test E-Mail BCC",LT_MailITSetup."Test E-Mail BCC");
      IF NOT LT_MailITSetup."Test Mode" THEN BEGIN
        Cust.TESTFIELD("E-Mail");
        IF Cust."E-Mail" <> '' THEN
          MailIT.AddRecipient(Cust."E-Mail",Cust."E-Mail");
      END ELSE
        MailIT.AddRecipient(LT_MailITSetup."Test E-Mail",LT_MailITSetup."Test E-Mail");

      MailIT.SetSubject(MailText);

      // Add some HTML to the mail body

      //A/p0237
      IF (_SalesInvHeader."Language Code" = 'DEU') OR (_SalesInvHeader."Language Code" = '') THEN
      //MailIT.LoadHTMLBody('C:\Mailhtml\header.html');
        MailIT.LoadHTMLBody(LT_MailITSetup."HTML Path Header DEU");

      IF _SalesInvHeader."Language Code" = 'NLD' THEN
        MailIT.LoadHTMLBody(LT_MailITSetup."HTML Path Header NL");

      IF _SalesInvHeader."Language Code" = 'FRA' THEN
        MailIT.LoadHTMLBody(LT_MailITSetup."HTML Path Header FR");
      //E/p0237

      MailIT.AppendHTML('<br /><br />');

      //A/P0305
      //MailIT.AppendHTML('<table width=744 border=0>');
      MailIT.AppendHTML('<table width=590 border=0>');
      //E/P0305
      //A/gob-rste/24.07.12/GOB1.09
      //IF _SalesInvHeader."Sell-to Contact" <> '' THEN
        //MailIT.AppendHTML(STRSUBSTNO(L_Text010,_SalesInvHeader."Sell-to Contact") + '<br /><br />')
      //ELSE
        //MailIT.AppendHTML(STRSUBSTNO(L_Text010a) + '<br /><br />');
      MailIT.AppendHTML(STRSUBSTNO(GOBTextLoc001) + '<br /><br />');
      MailIT.AppendHTML(STRSUBSTNO(GOBTextLoc002) + '<br /><br />');
      //MailIT.AppendHTML(STRSUBSTNO(L_Text011,_SalesInvHeader."No.") + '<br /><br />');
      MailIT.AppendHTML(STRSUBSTNO(GOBTextLoc003,_SalesInvHeader."No.") + '<br /><br />');
      MailIT.AppendHTML(STRSUBSTNO(GOBTextLoc004) + '<br /><br />');

      //MailIT.AppendHTML(STRSUBSTNO(L_Text016,'Home24.de') + '<br />');
      MailIT.AppendHTML(L_Text017 + '<br /><br />');
      //E/gob-rste/24.07.12/GOB1.09

      // read footer file
      //A/p0237
      IF (_SalesInvHeader."Language Code" = 'DEU') OR (_SalesInvHeader."Language Code" = '') THEN
      //MailIT.LoadHTMLBody('C:\Mailhtml\footer.html');
        MailIT.LoadHTMLBody(LT_MailITSetup."HTML Path Footer DEU");

      IF _SalesInvHeader."Language Code" = 'NLD' THEN
        MailIT.LoadHTMLBody(LT_MailITSetup."HTML Path Footer NL");

      IF _SalesInvHeader."Language Code" = 'FRA' THEN
        MailIT.LoadHTMLBody(LT_MailITSetup."HTML Path Footer FR");
      //E/p0237

      // Prepare to print it to PDF
      ClientPdfFileName := ClientTempFolder + '\' + DocName + '.pdf';
      IF ClientFso.FileExists(ClientPdfFileName) THEN
        ClientFso.DeleteFile(ClientPdfFileName);
      MailIT.PDFParameter('Output',ClientPdfFileName);
      MailIT.PDFParameter('ShowPDF','no');
      MailIT.PDFParameter('Title',DocName);
      MailIT.PDFParameter('Author',USERID);
      MailIT.PDFPreparePrinter();
      IF NOT DefaultPrinterChanged THEN BEGIN
        IF OldDefaultPrinter = '' THEN
          OldDefaultPrinter := MailIT.GetDefaultPrinter();
        IF OldDefaultPrinter <> UserSetup."PDF Creator" THEN BEGIN
          MailIT.SetDefaultPrinter(UserSetup."PDF Creator");
          DefaultPrinterChanged := TRUE;
        END;
      END;
      REPORT.RUNMODAL(ReportID,FALSE,TRUE,_SalesInvHeader);
      IF (MailIT.WaitForFile(ClientPdfFileName,20000) = 0) THEN
        ERROR(Text040 + '2');
      MailIT.AddAttachment(ClientPdfFileName);

      // Restore the user's default printer selection
      IF DefaultPrinterChanged THEN
        MailIT.SetDefaultPrinter(OldDefaultPrinter);

      // chrmu MailIT.Display();
      SendMailDirect := TRUE;
      // chrmu
      IF SendMailDirect THEN BEGIN
        //A/gob-mab/29.06.12/gob1.06/p0039
        //MailIT.SetServer(LT_MailITSetup."Mail Server");
        MailIT.SetServer(LT_MailITSetup."Mail Server Home24");
        //E/gob-mab/29.06.12/gob1.06/p0039

        //A/gob-mab/29.06.12/gob1.06/p0039
        //IF LT_MailITSetup."Server Port" = '' THEN
        IF LT_MailITSetup."Server Port Home24" = '' THEN
        //E/gob-mab/29.06.12/gob1.06/p0039
          L_Port := 25
        ELSE
          //A/gob-mab/29.06.12/gob1.06/p0039
          //EVALUATE(L_Port,LT_MailITSetup."Server Port");
          EVALUATE(L_Port,LT_MailITSetup."Server Port Home24");
          //E/gob-mab/29.06.12/gob1.06/p0039

        MailIT.SetPort(L_Port);
        //A/gob-rste/26.06.12/P0044
        //MailIT.SetLogin(LT_MailITSetup."User Name (General)");
        //MailIT.SetPassword(LT_MailITSetup."Password (General)");
        //A/gob-mab/03.07.12/gob1.07
        MailIT.UseSSL(1);
        //E/gob-mab/03.07.12/gob1.07
        //A/p0237
        IF (_SalesInvHeader."Language Code" = 'DEU') OR (_SalesInvHeader."Language Code" = '') THEN BEGIN
          MailIT.SetLogin(LT_MailITSetup."User Name Home24 (Invoice)");
          MailIT.SetPassword(LT_MailITSetup."Password Home24 (Invoice)");
        END;
        IF _SalesInvHeader."Language Code" = 'NLD' THEN BEGIN
          MailIT.SetLogin(LT_MailITSetup."Invoice EMail Sender NL");
          MailIT.SetPassword(LT_MailITSetup."Invoice EMail Password NL");
        END;
        IF _SalesInvHeader."Language Code" = 'FRA' THEN BEGIN
          MailIT.SetLogin(LT_MailITSetup."Invoice EMail Sender FR");
          MailIT.SetPassword(LT_MailITSetup."Invoice EMail Password FR");
        END;
        //E/P0237
        //E/gob-rste/26.06.12/P0044


        MailIT.Send();
      END ELSE
        MailIT.Display();

      //A/p0237
      //SPrache wieder zurÅcksetzen
      GLOBALLANGUAGE(oldgloballang);
      //E/p0237
      // Remove the temporary folder and it's content.
      // If you use MAPI and Thunderbird or other MAPI email clints the they may require that
      // the image files remain on the disk until the mail is sent.
      IF FORMAT(UserSetup."Mail Client") <> 'MAPI' THEN
        IF ClientFso.FolderExists(ClientTempFolder) THEN
          ClientFso.DeleteFolder(ClientTempFolder, FALSE);
      CLEAR(ClientFso);
      CLEAR(ClientUtil);
      CLEAR(DivUtil);
    END;

    PROCEDURE CreateSalesCrMemoMail@1000000005(_SalesCrMemoHeader@1000000030 : Record 114);
    VAR
      LT_MailITSetup@1000000028 : Record 75402;
      LT_WebSiteTransfer@1000000034 : Record 50033;
      LT_WebSource@1000000026 : Record 5059;
      LT_Location@1000000044 : Record 14;
      LT_LabelDHL@1000000045 : Record 50020;
      LR_SalesOrder@1000000050 : Report 50020;
      FormatAddr@1000000023 : Codeunit 365;
      ClientFso@1000000005 : Automation "{420B2830-E718-11CF-893D-00A0C9054228} 1.0:{0D43FE01-F093-11CF-8940-00A0C9054228}:'Microsoft Scripting Runtime'.FileSystemObject";
      ClientUtil@1000000003 : Automation "{1639594D-2135-4248-BE9B-FB55210F8AD8} 1.0:{D7CD856D-3889-4F19-BBBA-7608CF34EFB6}:'ExpandIT Dynamics Role Tailored Client Utility'.Utility";
      DivUtil@1000000054 : Automation "{2CD8D481-009C-4685-98EA-BC16452327B2} 1.0:{F1BBE10B-6E48-41B0-9EF6-F428C7A48655}:'Dynovus_SHA1Encryption'.SHA1EncryptAutomation";
      MailIT@1000000006 : OCX "{C8C4804C-89BA-4291-AB58-4C6050B65175}:'ExpandIT.MailIT2'";
      ShipAddr@1000000012 : ARRAY [8] OF Text[80];
      MailText@1000000032 : Text[250];
      DocName@1000000016 : Text[250];
      DocName2@1000000021 : Text[250];
      JobID@1000000007 : Text[50];
      ClientTempFolder@1000000004 : Text[250];
      ClientPdfFileName@1000000015 : Text[250];
      ClientFileName@1000000022 : Text[250];
      OldDefaultPrinter@1000000013 : Text[250];
      DefaultPrinterChanged@1000000014 : Boolean;
      ReportID@1000000001 : Integer;
      L_Text001@1000000002 : TextConst 'DEU=Vielen Dank fÅr Ihre Bestellung Nr.:;ENU=Order No.:';
      L_Text010@1000000010 : TextConst 'DEU=Sehr geehrte(r) %1,';
      L_Text010a@1000000063 : TextConst 'DEU=Sehr geehrte Damen und Herren,';
      L_Text016@1000000025 : TextConst 'DEU=Vielen Dank fÅr die Zusammenarbeit mit %1 !';
      L_Text017@1000000027 : TextConst 'DEU=Mit freundlichen GrÅ·en';
      L_Text018@1000000033 : TextConst 'DEU=Tel: %1 | Fax: %2';
      L_TextI001@1000000035 : TextConst 'DEU=Impressum';
      L_TextI002@1000000036 : TextConst 'DEU=Eingetragen beim %1';
      L_TextI004@1000000038 : TextConst 'DEU=USt-ID: %1';
      L_TextI005@1000000039 : TextConst 'DEU=GeschÑftsfÅhrer %1, %2';
      L_TextI006@1000000040 : TextConst 'DEU=(Montag - Freitag 09:00 - 18:00 Uhr)';
      Text040@1000000019 : TextConst 'DAN=Der blev ikke dannet et PDF-dokument.;DEU=Es wurde kein PDF Dokument erzeugt.;ENU=No PDF Document was generated.;ESP=No se gener¢ ning£n documento PDF.;FRA=Aucun document PDF n''a ÇtÇ crÇÇ.;SVE=Inget PDF-dokument skapades.';
      LinkID@1000000043 : Code[10];
      L_MaxKW@1000000061 : Text[10];
      L_Hash@1000000062 : Text[250];
    BEGIN
      LT_MailITSetup.GET;
      LT_MailITSetup.TESTFIELD("Sales E-Mail");
      UserSetup.GET(USERID);
      UserSetup.TESTFIELD("PDF Creator");

      _SalesCrMemoHeader.SETRECFILTER;
      //A/P0316
      //_SalesCrMemoHeader.CALCFIELDS("Website No.");
      //E/P0316
      LT_WebSiteTransfer.SETRANGE("Website No.",_SalesCrMemoHeader."Website No.");
      LT_WebSiteTransfer.FINDLAST;
      LT_WebSiteTransfer.CALCFIELDS("Website Name");
      MailText := LT_WebSiteTransfer."Website Name" +': '+ L_Text001 +' '+ _SalesCrMemoHeader."No.";
      DocName := LT_WebSiteTransfer."Website Name" +'_Rechnung_'+  _SalesCrMemoHeader."No.";
      ReportID := 50021;

      CREATE(ClientFso,TRUE,TRUE);
      CREATE(ClientUtil,TRUE,TRUE);
      CREATE(DivUtil,TRUE,TRUE);
      JobID := MailIT.CreateGUID();

      // Get folder for temporary files on the client
      ClientTempFolder := ClientUtil.GetTempPath();
      IF ClientTempFolder = '' THEN
        ERROR('Unable to create the path of the temporary folder.');
      ClientTempFolder := ClientTempFolder + 'ExpMail';
      IF NOT ClientFso.FolderExists(ClientTempFolder) THEN
        ClientFso.CreateFolder(ClientTempFolder);
      ClientTempFolder := ClientTempFolder + '\' + JobID;
      IF NOT ClientFso.FolderExists(ClientTempFolder) THEN
        ClientFso.CreateFolder(ClientTempFolder);

      // Locate bill to customer
      Cust.GET(_SalesCrMemoHeader."Sell-to Customer No.");
      CompanyInfo.GET;

      // Initialize the email
      SendMailDirect := TRUE;
      IF SendMailDirect THEN
        MailIT.SetService('SMTP')
      ELSE
        MailIT.SetService(FORMAT(UserSetup."Mail Client"));
      MailIT.SetFrom(LT_MailITSetup."Sales E-Mail");
      IF NOT LT_MailITSetup."Test Mode" THEN
        MailIT.AddRecipientBCC(LT_MailITSetup."Sales E-Mail",LT_MailITSetup."Sales E-Mail")
      ELSE
        MailIT.AddRecipientBCC(LT_MailITSetup."Test E-Mail BCC",LT_MailITSetup."Test E-Mail BCC");
      IF NOT LT_MailITSetup."Test Mode" THEN BEGIN
        Vend.TESTFIELD("E-Mail");
        IF Vend."E-Mail" <> '' THEN
          MailIT.AddRecipient(Vend."E-Mail",Vend."E-Mail");
      END ELSE
        MailIT.AddRecipient(LT_MailITSetup."Test E-Mail",LT_MailITSetup."Test E-Mail");

      MailIT.SetSubject(MailText);

      // Add some HTML to the mail body
      LT_WebSource.GET(FORMAT(_SalesCrMemoHeader."Website No.") + '_POH00');
      MailIT.AppendHTML('<img src="' + LT_WebSource.URL + '"><br />');
      LinkID := '00';
      FOR i := 1 TO 6 DO BEGIN
        MailIT.AppendHTML('<td style=''padding:0cm 0cm 0cm 0cm''>');
        LinkID := INCSTR(LinkID);
        LT_WebSource.GET(FORMAT(_SalesCrMemoHeader."Website No.") +'_POL'+ LinkID);
        MailIT.AppendHTML('<a href="' + LT_WebSource.URL + '"');
        LT_WebSource.GET(FORMAT(_SalesCrMemoHeader."Website No.") +'_POH'+ LinkID);
        MailIT.AppendHTML('<img src="' + LT_WebSource.URL + '"></a>');
      END;
      MailIT.AppendHTML('<br /><br />');

      //A/P0305
      //MailIT.AppendHTML('<table width=744 border=0>');
      MailIT.AppendHTML('<table width=590 border=0>');
      //E/P0305
      IF _SalesCrMemoHeader."Sell-to Contact" <> '' THEN
        MailIT.AppendHTML(STRSUBSTNO(L_Text010,_SalesCrMemoHeader."Sell-to Contact") + '<br /><br />')
      ELSE
        MailIT.AppendHTML(STRSUBSTNO(L_Text010a) + '<br /><br />');

      // Fusszeilen
      MailIT.AppendHTML('<br />');
      MailIT.AppendHTML('<p style=''background:#B3C5C5''>');
      MailIT.AppendHTML(STRSUBSTNO(L_Text016,LT_WebSiteTransfer."Website Name") + '<br /><br />');
      MailIT.AppendHTML(L_Text017 + '<br />');
      MailIT.AppendHTML(LT_MailITSetup."Purchase Group (Direct)" + '<br />');
      MailIT.AppendHTML(STRSUBSTNO(L_Text018,LT_MailITSetup."Purchase Phone No. (Direct)",
        LT_MailITSetup."Purchase Fax No. (Direct)") + '<br />');
      MailIT.AppendHTML('E-Mail: ' + LT_MailITSetup."Purchase E-Mail BCC (Direct)" + '<br /><br />');
      MailIT.AppendHTML('</p><br />');

      MailIT.AppendHTML('<p style=''background:#B3C5C5''>');
      MailIT.AppendHTML(L_TextI001 + '<br />');
      MailIT.AppendHTML(CompanyInfo.Name +', '+ CompanyInfo.Address +', '+ CompanyInfo."Post Code" +', '+ CompanyInfo.City + '<br />');
      MailIT.AppendHTML(STRSUBSTNO(L_TextI002,CompanyInfo."Text 1") + '<br />');
      MailIT.AppendHTML(STRSUBSTNO(L_TextI004,CompanyInfo."VAT Registration No.") + '<br />');
      MailIT.AppendHTML(CompanyInfo."Text 2" + '<br />');
      MailIT.AppendHTML(LT_WebSiteTransfer."E-Mail" + '<br />');
      MailIT.AppendHTML(LT_WebSiteTransfer."Phone No." +' '+ L_TextI006);

      // Prepare to print it to PDF
      ClientPdfFileName := ClientTempFolder + '\' + DocName + '.pdf';
      IF ClientFso.FileExists(ClientPdfFileName) THEN
        ClientFso.DeleteFile(ClientPdfFileName);
      MailIT.PDFParameter('Output',ClientPdfFileName);
      MailIT.PDFParameter('ShowPDF','no');
      MailIT.PDFParameter('Title',DocName);
      MailIT.PDFParameter('Author',USERID);
      MailIT.PDFPreparePrinter();
      IF NOT DefaultPrinterChanged THEN BEGIN
        IF OldDefaultPrinter = '' THEN
          OldDefaultPrinter := MailIT.GetDefaultPrinter();
        IF OldDefaultPrinter <> UserSetup."PDF Creator" THEN BEGIN
          MailIT.SetDefaultPrinter(UserSetup."PDF Creator");
          DefaultPrinterChanged := TRUE;
        END;
      END;
      REPORT.RUNMODAL(ReportID,FALSE,TRUE,_SalesCrMemoHeader);
      IF (MailIT.WaitForFile(ClientPdfFileName,20000) = 0) THEN
        ERROR(Text040);
      MailIT.AddAttachment(ClientPdfFileName);

      // Restore the user's default printer selection
      IF DefaultPrinterChanged THEN
        MailIT.SetDefaultPrinter(OldDefaultPrinter);

      // MailIT.Display(); chrmu
      SendMailDirect := TRUE;

      IF SendMailDirect THEN BEGIN
        MailIT.SetServer(LT_MailITSetup."Mail Server");
        MailIT.SetLogin(LT_MailITSetup."User Name (General)");
        MailIT.SetPassword(LT_MailITSetup."Password (General)");
      //  IF MailITSetup."Server Port" = '' THEN port := 25 ELSE EVALUATE(port, MailITSetup."Server Port");
      //  MailIT.SetPort(port);
        MailIT.Send();
      END ELSE
        MailIT.Display();

      // Remove the temporary folder and it's content.
      // If you use MAPI and Thunderbird or other MAPI email clints the they may require that
      // the image files remain on the disk until the mail is sent.
      IF FORMAT(UserSetup."Mail Client") <> 'MAPI' THEN
        IF ClientFso.FolderExists(ClientTempFolder) THEN
          ClientFso.DeleteFolder(ClientTempFolder, FALSE);
      CLEAR(ClientFso);
      CLEAR(ClientUtil);
      CLEAR(DivUtil);
    END;

    LOCAL PROCEDURE CreateOrderCSV@1000000007(_PurchOrderHeader@1000000002 : Record 38;_SalesOrderHeader@1000000004 : Record 36;_ExpFilePath@1000000016 : Text[250];_MP@1000000014 : Boolean;_DropShip@1000000005 : Boolean);
    VAR
      LT_NavCSalesHeader@1000000009 : Record 5251571;
      LT_PaymMethode@1000000001 : Record 289;
      LT_BankAcc@1000000000 : Record 270;
      LT_Cust@1000000013 : Record 18;
      LT_Location@1000000015 : Record 14;
      LC_DHLMgt@1000000012 : Codeunit 50020;
      L_ShipAddr@1000000011 : ARRAY [11] OF Text[80];
      L_InvAddr@1000000010 : ARRAY [8] OF Text[80];
      L_DropShip@1000000017 : Boolean;
      L_Factoring@1000000003 : Text[1];
      L_SalesPrice@1000000006 : Decimal;
      L_FS@1000000007 : Text[1];
      L_TS@1000000008 : Text[1];
      ItemDescrL@1000000018 : Text[250];
    BEGIN
      _ExpFilePath := _ExpFilePath + '\order.csv';
      ExpFile.CREATE(_ExpFilePath);
      ExpFile.WRITEMODE(TRUE);
      ExpFile.TEXTMODE(TRUE);
      ExpFile.OPEN(_ExpFilePath);
      IF _MP THEN BEGIN
        ExpFile.WRITE(
          '"Kommissionsnr.","Menge","Artikelnr_MP","SKU","Beschreibung","Brutto-VK","Gesamtpreis","Versand_Anrede","Versand_Vorname",' +
          '"Versand_Nachname","Versand_Strasse","Versand_Hausnummer","Versand Strasse 2","Versand_PLZ","Versand_Stadt","Versand_Land",'
      +
          '"Versand_Kontakt","Versand_Telefon","Rechnung_Anrede","Rechnung_Vorname","Rechnung_Nachname","Rechnung_Strasse 1",' +
      '"Rechnung_PLZ","Rechnung_Stadt","Rechnung_Land","Rechnung_Telefon","Rechnung_Firma","Billpay_Boolean","Billpay_Kontoinhaber",'+
          '"Billpay_Bank","Billpay_BLZ","Billpay_Kontonummer","Billpay_VerwZweck"');
      END ELSE BEGIN
        ExpFile.WRITE(
          '"Kommissionsnr.","Menge","Artikelnr_MP","SKU","Beschreibung","Versand_Anrede","Versand_Vorname","Versand_Nachname",' +
          '"Versand_Strasse","Versand_Hausnummer","Versand Strasse 2","Versand_PLZ",' +
          '"Versand_Stadt","Versand_Land","Versand_Kontakt","Versand_Telefon"');
      END;

      L_Factoring := '0';
      CLEAR(LT_BankAcc);
      IF _MP THEN BEGIN
        LT_PaymMethode.GET(_SalesOrderHeader."Payment Method Code");
        IF LT_PaymMethode.Factoring THEN BEGIN
          LT_BankAcc.SETRANGE("Payment Method Code",LT_PaymMethode.Code);
          LT_BankAcc.FINDFIRST;
          L_Factoring := '1';
        END;
      END;

      CLEAR(L_ShipAddr);
      CLEAR(L_InvAddr);
      IF _DropShip THEN BEGIN
        LT_NavCSalesHeader.RESET;
        LT_NavCSalesHeader.SETCURRENTKEY("Sales Document No.");
        LT_NavCSalesHeader.SETRANGE("Sales Document No.",_SalesOrderHeader."No.");
        IF LT_NavCSalesHeader.FINDFIRST THEN BEGIN
          IF (_SalesOrderHeader."Ship-to Name" = LT_NavCSalesHeader."Ship-to Name") AND
             (_SalesOrderHeader."Ship-to Name 2" = LT_NavCSalesHeader."Ship-to Name 2") AND
             (LT_NavCSalesHeader."Ship-to Company Name" = '') THEN BEGIN
            L_ShipAddr[1] := LT_NavCSalesHeader."Ship-to Job Title";
            L_ShipAddr[2] := LT_NavCSalesHeader."Ship-to First Name";
            L_ShipAddr[3] := LT_NavCSalesHeader."Ship-to Surname";
          END ELSE BEGIN
            IF _SalesOrderHeader."Ship-to Name 2" <> '' THEN BEGIN
              L_ShipAddr[2] := _SalesOrderHeader."Ship-to Name";
              L_ShipAddr[3] := _SalesOrderHeader."Ship-to Name 2";
            END ELSE
              L_ShipAddr[3] := _SalesOrderHeader."Ship-to Name";
          END;
          IF LT_NavCSalesHeader."Ship-to Company Name" <> '' THEN
            L_ShipAddr[6] := _SalesOrderHeader."Ship-to Contact"
          ELSE
            L_ShipAddr[6] := LT_NavCSalesHeader."Ship-to Name";
          L_ShipAddr[7] := LT_NavCSalesHeader."Ship-to Phone No.";
          IF _MP THEN BEGIN
            IF (_SalesOrderHeader."Bill-to Name" = LT_NavCSalesHeader."Bill-to Name") AND
               (_SalesOrderHeader."Bill-to Name 2" = LT_NavCSalesHeader."Bill-to Name 2") AND
               (LT_NavCSalesHeader."Bill-to Company Name" = '') THEN BEGIN
              L_InvAddr[1] := LT_NavCSalesHeader."Bill-to Job Title";
              L_InvAddr[2] := LT_NavCSalesHeader."Bill-to First Name";
              L_InvAddr[3] := LT_NavCSalesHeader."Bill-to Surname";
            END ELSE BEGIN
              IF _SalesOrderHeader."Bill-to Name 2" <> '' THEN BEGIN
                L_InvAddr[2] := _SalesOrderHeader."Bill-to Name";
                L_InvAddr[3] := _SalesOrderHeader."Bill-to Name 2";
              END ELSE
                L_InvAddr[3] := _SalesOrderHeader."Bill-to Name";
            END;
            IF LT_NavCSalesHeader."Bill-to Company Name" <> '' THEN
              L_InvAddr[6] := _SalesOrderHeader."Bill-to Contact"
            ELSE
              L_InvAddr[6] := LT_NavCSalesHeader."Bill-to Name";
            L_InvAddr[7] := LT_NavCSalesHeader."Bill-to Phone No.";
            L_InvAddr[8] := LT_NavCSalesHeader."Bill-to Company Name";
          END;
        END ELSE BEGIN
          IF _SalesOrderHeader."Ship-to Name 2" <> '' THEN BEGIN
            L_ShipAddr[2] := _SalesOrderHeader."Ship-to Name";
            L_ShipAddr[3] := _SalesOrderHeader."Ship-to Name 2";
          END ELSE
            L_ShipAddr[3] := _SalesOrderHeader."Ship-to Name";
          IF LT_Cust.GET(_SalesOrderHeader."Sell-to Customer No.") THEN
            L_ShipAddr[7] := LT_Cust."Phone No.";
          IF _SalesOrderHeader."Ship-to Contact" = '' THEN
            L_ShipAddr[6] := _SalesOrderHeader."Ship-to Contact"
          ELSE
            L_ShipAddr[6] := _SalesOrderHeader."Ship-to Name";
          IF _MP THEN BEGIN
            IF _SalesOrderHeader."Bill-to Name 2" <> '' THEN BEGIN
              L_InvAddr[2] := _SalesOrderHeader."Bill-to Name";
              L_InvAddr[3] := _SalesOrderHeader."Bill-to Name 2";
            END ELSE
              L_InvAddr[3] := _SalesOrderHeader."Bill-to Name";
            IF LT_Cust.GET(_SalesOrderHeader."Bill-to Customer No.") THEN
              L_InvAddr[7] := LT_Cust."Phone No.";
            IF _SalesOrderHeader."Bill-to Contact" = '' THEN
              L_InvAddr[6] := _SalesOrderHeader."Bill-to Contact"
            ELSE
              L_InvAddr[6] := _SalesOrderHeader."Bill-to Name";
            END;
        END;
        LC_DHLMgt.ParseAddress(_SalesOrderHeader."Ship-to Address",L_ShipAddr[4],L_ShipAddr[5]);
        IF _MP THEN
          LC_DHLMgt.ParseAddress(_SalesOrderHeader."Bill-to Address",L_InvAddr[4],L_InvAddr[5]);
      END ELSE BEGIN
        IF _PurchOrderHeader."Ship-to Name 2" <> '' THEN BEGIN
          L_ShipAddr[2] := _PurchOrderHeader."Ship-to Name";
          L_ShipAddr[3] := _PurchOrderHeader."Ship-to Name 2";
        END ELSE
          L_ShipAddr[3] := _PurchOrderHeader."Ship-to Name";
        IF LT_Location.GET(_PurchOrderHeader."Location Code") THEN
          L_ShipAddr[7] := LT_Location."Phone No. 2";
        LC_DHLMgt.ParseAddress(_PurchOrderHeader."Ship-to Address",L_ShipAddr[4],L_ShipAddr[5]);
      END;

      L_FS := ',';
      L_TS := '"';
      IF _MP THEN BEGIN
        PurchLine.RESET;
        PurchLine.SETRANGE("Document Type",_PurchOrderHeader."Document Type");
        PurchLine.SETRANGE("Document No.",_PurchOrderHeader."No.");
        PurchLine.SETRANGE(Type,PurchLine.Type::Item);
        PurchLine.SETFILTER("No.",'<>%1','');
        PurchLine.SETFILTER(Quantity,'<>0');
        PurchLine.SETRANGE("Sales Order No.",_SalesOrderHeader."No.");
        IF PurchLine.FINDSET THEN REPEAT
          IF (PurchLine.Type <> PurchLine.Type::Item) OR (NOT Item.GET(PurchLine."No.")) THEN
            CLEAR(Item);
          L_SalesPrice := 0;
          IF SalesLine.GET(SalesLine."Document Type"::Order,PurchLine."Sales Order No.",
             PurchLine."Sales Order Line No.") THEN
            L_SalesPrice := SalesLine."Line Amount" + SalesLine."Line Discount Amount";
          //H3847 07.04.15 DMO +++++++++++++++++++++++++++++
          Item.GET(PurchLine."No.");
          IF Item."Vendor Description" <> '' THEN
            ItemDescrL := Item."Vendor Description"
          ELSE
            ItemDescrL := PurchLine.Description + ' ' + PurchLine."Description 2";
          //H3847 07.04.15 DMO -----------------------------
          ExpFile.WRITE(
            _PurchOrderHeader."No." + L_FS +
            FORMAT(PurchLine.Quantity) + L_FS +
            L_TS + PurchLine."No." + L_TS + L_FS +
            //A/gob-rste/06.09.12/GOB1.22
            //Item."Vendor Item No." + L_FS +
            Item."Vendor Item No." + Item."Vendor Item No. Add." + L_FS +
            //E/gob-rste/06.09.12/GOB1.22
            //H3847 07.04.15 DMO +++++++++++++++++++++++++++++
            L_TS + ItemDescrL + L_TS + L_FS +
            //H3847 07.04.15 DMO -----------------------------
            ConvertAmt(ROUND(L_SalesPrice / PurchLine.Quantity,0.01)) + L_FS +
            ConvertAmt(L_SalesPrice) + L_FS +
            L_TS + ConvertText(L_ShipAddr[1]) + L_TS + L_FS +
            L_TS + ConvertText(L_ShipAddr[2]) + L_TS + L_FS +
            L_TS + ConvertText(L_ShipAddr[3]) + L_TS + L_FS +
            L_TS + ConvertText(L_ShipAddr[4]) + L_TS + L_FS +
            L_TS + ConvertText(L_ShipAddr[5]) + L_TS + L_FS +
            L_TS + ConvertText(_SalesOrderHeader."Ship-to Address 2") + L_TS + L_FS +
            L_TS + _SalesOrderHeader."Ship-to Post Code" + L_TS + L_FS +
            L_TS + ConvertText(_SalesOrderHeader."Ship-to City") + L_TS + L_FS +
            L_TS + _SalesOrderHeader."Ship-to Country/Region Code" + L_TS + L_FS +
            L_TS + L_ShipAddr[6] + L_TS + L_FS +
            L_TS + L_ShipAddr[7] + L_TS + L_FS +
            L_TS + ConvertText(L_InvAddr[1]) + L_TS + L_FS +
            L_TS + ConvertText(L_InvAddr[2]) + L_TS + L_FS +
            L_TS + ConvertText(L_InvAddr[3]) + L_TS + L_FS +
            L_TS + ConvertText(L_InvAddr[4]) + L_TS + L_FS +
            L_TS + ConvertText(L_InvAddr[5]) + L_TS + L_FS +
            L_TS + ConvertText(_SalesOrderHeader."Bill-to Address 2") + L_TS + L_FS +
            L_TS + _SalesOrderHeader."Bill-to Post Code" + L_TS + L_FS +
            L_TS + ConvertText(_SalesOrderHeader."Bill-to City") + L_TS + L_FS +
            L_TS + _SalesOrderHeader."Bill-to Country/Region Code" + L_TS + L_FS +
            L_TS + L_InvAddr[6] + L_TS + L_FS +
            L_TS + L_InvAddr[7] + L_TS + L_FS +
            L_TS + L_InvAddr[7] + L_TS + L_FS +
            L_Factoring + L_FS +
            L_TS + LT_BankAcc."Account Owner" + L_TS + L_FS +
            L_TS + LT_BankAcc.Name + L_TS + L_FS +
            LT_BankAcc."Bank Branch No." + L_FS +
            LT_BankAcc."Bank Account No." + L_FS +
            L_TS + LT_BankAcc.Name + L_TS + L_FS +
            L_TS + 'Vorgangsnummer: ' + _SalesOrderHeader."No." + L_TS);
        UNTIL PurchLine.NEXT = 0;
      END ELSE BEGIN
        PurchLine.RESET;
        PurchLine.SETRANGE("Document Type",_PurchOrderHeader."Document Type");
        PurchLine.SETRANGE("Document No.",_PurchOrderHeader."No.");
        PurchLine.SETRANGE(Type,PurchLine.Type::Item);
        PurchLine.SETFILTER("No.",'<>%1','');
        PurchLine.SETFILTER(Quantity,'<>0');
        IF PurchLine.FINDSET THEN REPEAT
          IF (PurchLine.Type <> PurchLine.Type::Item) OR (NOT Item.GET(PurchLine."No.")) THEN
            CLEAR(Item);
          //H3847 07.04.15 DMO +++++++++++++++++++++++++++++
          Item.GET(PurchLine."No.");
          IF Item."Vendor Description" <> '' THEN
            ItemDescrL := Item."Vendor Description"
          ELSE
            ItemDescrL := PurchLine.Description + ' ' + PurchLine."Description 2";
          //H3847 07.04.15 DMO -----------------------------
          ExpFile.WRITE(
            _PurchOrderHeader."No." + L_FS +
            FORMAT(PurchLine.Quantity) + L_FS +
            L_TS + PurchLine."No." + L_TS + L_FS +
            //A/gob-rste/06.09.12/GOB1.22
            //Item."Vendor Item No." + L_FS +
            Item."Vendor Item No." + Item."Vendor Item No. Add." + L_FS +
            //E/gob-rste/06.09.12/GOB1.22
            //H3847 07.04.15 DMO +++++++++++++++++++++++++++++
            L_TS + ConvertText(ItemDescrL) + L_TS + L_FS +
            //H3847 07.04.15 DMO -----------------------------
            L_TS + ConvertText(L_ShipAddr[1]) + L_TS + L_FS +
            L_TS + ConvertText(L_ShipAddr[2]) + L_TS + L_FS +
            L_TS + ConvertText(L_ShipAddr[3]) + L_TS + L_FS +
            L_TS + ConvertText(L_ShipAddr[4]) + L_TS + L_FS +
            L_TS + ConvertText(L_ShipAddr[5]) + L_TS + L_FS +
            L_TS + ConvertText(_PurchOrderHeader."Ship-to Address 2") + L_TS + L_FS +
            L_TS + _PurchOrderHeader."Ship-to Post Code" + L_TS + L_FS +
            L_TS + ConvertText(_PurchOrderHeader."Ship-to City") + L_TS + L_FS +
            L_TS + _PurchOrderHeader."Ship-to Country/Region Code" + L_TS + L_FS +
            L_TS + ConvertText(L_ShipAddr[6]) + L_TS + L_FS +
            L_TS + L_ShipAddr[7] + L_TS);
        UNTIL PurchLine.NEXT = 0;
      END;
      ExpFile.CLOSE;
    END;

    LOCAL PROCEDURE ConvertAmt@1000000009(_Amt@1000000000 : Decimal) : Text[30];
    VAR
      L_AmtText@1000000001 : Text[30];
    BEGIN
      L_AmtText := DELCHR(FORMAT(_Amt,0,'<Precision,2:2><Standard Format,0>'),'=','.');
      L_AmtText := CONVERTSTR(L_AmtText,',','.');
      EXIT(L_AmtText);
    END;

    PROCEDURE ConvertText@1000000006(_Text@1000000000 : Text[250]) : Text[250];
    BEGIN
      EXIT(CONVERTSTR(GeneralMgt.Ascii2Ansi(_Text),',',' '));
    END;

    LOCAL PROCEDURE NewLine@1000000057() : Text[30];
    VAR
      CR@1000000000 : Char;
      LF@1000000001 : Char;
      SPACE@1000000002 : Char;
    BEGIN
      CR := 13;
      LF := 10;
      EXIT(FORMAT(CR)+FORMAT(LF));
    END;

    PROCEDURE SetParameters@1000000004();
    BEGIN
      SendMailDirect := TRUE;
    END;

    PROCEDURE "*** Home24 ***"@1000000014();
    BEGIN
    END;

    PROCEDURE CheckOrderUpdateEMail@1000000016(PurchOrderHeaderV@1000000000 : Record 38) : Boolean;
    VAR
      SalesLineL@1000000001 : Record 37;
      PurchOrderLineL@1000000002 : Record 39;
    BEGIN
      //H0030 15.10.12 RHO +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
      PurchOrderLineL.RESET;
      PurchOrderLineL.SETRANGE("Document Type",PurchOrderHeaderV."Document Type");
      PurchOrderLineL.SETRANGE("Document No.",PurchOrderHeaderV."No.");
      PurchOrderLineL.SETRANGE(Type,PurchOrderLineL.Type::Item);
      //H0049 23.10.12 RHO +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
      IF PurchOrderLineL.FINDFIRST THEN BEGIN
        REPEAT
          IF SalesLineL.GET(PurchOrderLineL."Document Type"::Order,
                            PurchOrderLineL."Special Order Sales No.",PurchOrderLineL."Special Order Sales Line No.") THEN BEGIN
            IF SalesLineL."Send Update Mail" THEN
              EXIT(TRUE);
          END;
        UNTIL PurchOrderLineL.NEXT = 0;
      END;
      EXIT(FALSE);
      //H0049 23.10.12 RHO -----------------------------------------------------------------------------------------------------
      //H0030 15.10.12 RHO ---------------------------------------------------------------------------------------------------------------
    END;

    PROCEDURE CreateSpecialOrderMail@1108200017(_PurchOrderHeader@1000000029 : Record 38;_SalesOrderHeader@1000000030 : Record 36);
    VAR
      LT_MailITSetup@1000000028 : Record 75402;
      LT_WebSiteTransfer@1000000034 : Record 50033;
      LT_WebSource@1000000026 : Record 5059;
      LT_Location@1000000044 : Record 14;
      LT_LabelDHL@1000000045 : Record 50020;
      LT_ExtTextLine@1000000065 : Record 280;
      LR_SalesOrder@1000000050 : Report 50020;
      LR_CrossdockLabel@1000000076 : Report 50182;
      lCrossdockLabelFullsize@1000000088 : Report 50066;
      FormatAddr@1000000023 : Codeunit 365;
      ClientFso@1000000005 : Automation "{420B2830-E718-11CF-893D-00A0C9054228} 1.0:{0D43FE01-F093-11CF-8940-00A0C9054228}:'Microsoft Scripting Runtime'.FileSystemObject";
      ClientUtil@1000000003 : Automation "{1639594D-2135-4248-BE9B-FB55210F8AD8} 1.0:{D7CD856D-3889-4F19-BBBA-7608CF34EFB6}:'ExpandIT Dynamics Role Tailored Client Utility'.Utility";
      DivUtil@1000000054 : Automation "{2CD8D481-009C-4685-98EA-BC16452327B2} 1.0:{F1BBE10B-6E48-41B0-9EF6-F428C7A48655}:'Dynovus_SHA1Encryption'.SHA1EncryptAutomation";
      MailIT@1000000006 : OCX "{C8C4804C-89BA-4291-AB58-4C6050B65175}:'ExpandIT.MailIT2'";
      ShipAddr@1000000012 : ARRAY [8] OF Text[80];
      MailText@1000000032 : Text[250];
      DocName@1000000016 : Text[250];
      DocName2@1000000021 : Text[250];
      JobID@1000000007 : Text[50];
      ClientTempFolder@1000000004 : Text[250];
      ClientPdfFileName@1000000015 : Text[250];
      ClientFileName@1000000022 : Text[250];
      OldDefaultPrinter@1000000013 : Text[250];
      DefaultPrinterChanged@1000000014 : Boolean;
      ReportID@1000000001 : Integer;
      L_Text001@1000000002 : TextConst 'DEU=Bestellung Nr.:;ENU=Order No.:';
      L_Text002@1000000017 : TextConst 'DEU=Kunde:;ENU=Seller:';
      L_Text010@1000000010 : TextConst 'DEU=Sehr geehrte(r) %1,';
      L_Text010a@1000000063 : TextConst 'DEU=Sehr geehrte Damen und Herren,';
      L_Text011@1000000009 : TextConst 'DEU=anbei erhalten Sie eine Bestellung auf Rechnung %1';
      L_Text012@1000000000 : TextConst 'DEU=Anbei der Lieferschein, der der Sendung beigefÅgt werden kann.';
      L_Text013@1000000008 : TextConst 'DEU=Unsere Bestellnummer: %1';
      L_Text014@1000000011 : TextConst 'DEU=Versandadresse:';
      L_Text015@1000000064 : TextConst 'DEU=Bitte schicken Sie uns eine AuftragsbestÑtigung innerhalb von 24h mit dem geplanten Liefertermin und der bestÑtigten Anzahl als Antwort auf diese E-Mail.';
      L_Text016@1000000025 : TextConst 'DEU=Vielen Dank fÅr die Zusammenarbeit mit home24!';
      L_Text017@1000000027 : TextConst 'DEU=Mit freundlichen GrÅ·en';
      L_Text018@1000000033 : TextConst 'DEU=Tel: %1 | Fax: %2';
      L_Text019@1000000037 : TextConst 'DEU="anbei erhalten Sie eine Bestellung von Lagerartikeln fÅr unser Lager. "';
      L_Text020@1000000041 : TextConst 'DEU="Bitte beachten Sie, dass es eine neue Lieferaddresse in Berlin und einen neuen Ansprechpartner fÅr Avisierungen gibt. "';
      L_Text021@1000000042 : TextConst 'DEU=Bitte beachten Sie auch, dass Sie spÑtestens %1 vor Anlieferung Ihre Anlieferung avisieren.';
      L_Text022@1000000031 : TextConst 'DEU=Die neue Lieferadresse ist:';
      L_Text023@1000000046 : TextConst 'DEU=Entladezeit: %1';
      L_Text024@1000000047 : TextConst 'DEU=Ansprechpartner fÅr die Lieferavisierung ist %1.';
      L_Text025@1000000048 : TextConst 'DEU=Bitte folgenden Verteiler wÑhlen, wenn es um die Avisierung geht:';
      L_Text026@1000000049 : TextConst 'DEU=Bitte stellen Sie sicher, dass unsere Bestell-Referenz und die Bestellnummer auf dem Lieferschein hinterlegt sind.';
      L_Text027@1000000051 : TextConst 'DEU=anbei eine Bestellung aus dem %1 Marketplace, welche Sie bitte auf eigene Rechnung versenden.';
      L_Text028@1000000052 : TextConst 'DEU=Den vollen Bruttobetrag haben wir bereits eingezogen/reserviert und sichern Ihnen hiermit verbindlich die Auszahlung zu vereinbarten Konditionen zu.';
      L_Text029@1000000053 : TextConst 'DEU=Bitte beachten Sie, dass Sie mindestens die Liefer-KW eintragen und auf Aktualisieren klicken mÅssen, damit der Lieferschein erzeugt wird. Sie brauchen dafÅr fortan keine AuftragsbestÑtigungen mehr auf anderem Wege zusenden.';
      L_Text030@1000000060 : TextConst 'DEU=Kunde:';
      L_TextT001@1000000058 : TextConst 'DEU=Menge;ENU=Quantity';
      L_TextT002@1000000057 : TextConst 'DEU=Beschreibung (Artikelnr.);ENU=Description';
      L_TextT003@1000000056 : TextConst 'DEU=VK-Preis;ENU=Sales Price';
      L_TextT004@1000000055 : TextConst 'DAN=Enhed;DEU=Ihre SKU;ENU=Unit;ESP=Unidad;FRA=UnitÇ;SVE=Enhet';
      L_TextT005@1000000059 : TextConst 'DEU=Max. Liefer-KW';
      L_TextI001@1000000035 : TextConst 'DEU=Impressum';
      L_TextI002@1000000036 : TextConst 'DEU=Eingetragen beim %1';
      L_TextI004@1000000038 : TextConst 'DEU=USt-ID: %1';
      L_TextI005@1000000039 : TextConst 'DEU=GeschÑftsfÅhrer %1, %2';
      L_TextI006@1000000040 : TextConst 'DEU=(Montag - Freitag 09:00 - 18:00 Uhr)';
      Text040@1000000019 : TextConst 'DAN=Der blev ikke dannet et PDF-dokument.;DEU=Es wurde kein PDF Dokument erzeugt.;ENU=No PDF Document was generated.;ESP=No se gener¢ ning£n documento PDF.;FRA=Aucun document PDF n''a ÇtÇ crÇÇ.;SVE=Inget PDF-dokument skapades.';
      LinkID@1000000043 : Code[10];
      L_MaxKW@1000000061 : Text[10];
      L_Hash@1000000062 : Text[250];
      L_Port@1000000024 : Integer;
      PurchLineLoc@1108200000 : Record 39;
      DHLHDLabelReport@1108200001 : Report 50008;
      VendLoc@1108200002 : Record 23;
      SKUOK@1108200003 : Boolean;
      LabelCounter@1108200004 : Integer;
      Purchlineloc2@1108200005 : Record 39;
      L_Text031@1000000067 : TextConst 'ENU="Artikel-Bezeichnung: "';
      L_Text032@1000000066 : TextConst 'ENU="Unsere Artikelnr.: "';
      L_Text033@1000000020 : TextConst 'ENU="Ihre Artikelnr.: "';
      L_Text034@1000000018 : TextConst 'ENU="Menge: "';
      L_Text035@1000000068 : TextConst 'ENU=Unsere Kundennr.: %1';
      L_Text036@1000000069 : TextConst 'ENU="Versandart: "';
      L_Text037@1000000070 : TextConst 'ENU=Auftragsdatum: %1';
      SalesLineLoc@1000000071 : Record 37;
      PurchOrderLineL@1000000072 : Record 39;
      SalesLineL@1000000073 : Record 37;
      L_Text038@1000000074 : TextConst 'DEU=ACHTUNG! énderung zu Bestellnr: %1';
      rFPCGeneralSetup@1000000075 : Record 50055;
      RHDSalesExportLine@1000000077 : Record 50182;
      RHDSalesExportLine2@1000000078 : Record 50182;
      PosNoFilter@1000000079 : Text[30];
      L_Text039@1000000080 : TextConst 'ENU=Kundenauftragsnummer: %1';
      RHDSetup@1000000081 : Record 50177;
      "*** HME **********************"@1000000082 : Integer;
      PurchaseLineL@1000000083 : Record 39;
      SalesOrderLineL@1000000087 : Record 37;
      RHDPurchaseExportHeaderL@1000000085 : Record 50178;
      RHDSalesExportHeaderL@1000000086 : Record 50181;
      PrinterSelectionL@1000000089 : Record 78;
      HermesSetupL@1000000097 : Record 50319;
      SuppressDeliveryNoteL@1000000084 : Boolean;
      HermesTrackingInfoMgtL@1000000094 : Codeunit 50254;
      HermesTFormLabelMgtL@1000000095 : Codeunit 50255;
      isHermesMail@1000000096 : Boolean;
      ContainsChannelFromFilterL@1000000090 : Boolean;
      SparPartMgtL@1000000092 : Codeunit 50322;
      IsSparePartOrderL@1000000091 : Boolean;
      ContainsDefectLineL@1000000093 : Boolean;
      "*HME*****"@1100000089 : Integer;
      MailITSetupL@1100000091 : Record 75402;
      PurchaseMailHTMLPathL@1100000092 : Record 50339;
    BEGIN
      //H0006 07.10.12 RHO ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
      OrderUpdateMail:=FALSE;
      SendMailDirect := TRUE;
      IF CheckOrderUpdateEMail(_PurchOrderHeader) THEN BEGIN
        OrderUpdateMail:=TRUE;
      END;
      //H0006 07.10.12 RHO --------------------------------------------------------------------------------

      //A/gob-rste/28.06.12/GOB1.07
      LT_MailITSetup.GET;
      LT_MailITSetup.TESTFIELD("User Name (Special Order)");
      LT_MailITSetup.TESTFIELD("Password (Special Order)");
      LT_MailITSetup.TESTFIELD("Special Order E-Mail");
      LT_MailITSetup.TESTFIELD("Special Order E-Mail BCC");
      UserSetup.GET(USERID);
      UserSetup.TESTFIELD("PDF Creator");
      //H2078 04.02.15 EHN +++++++++++++++++++++++++++++++++++
      IsSparePartOrderL := SparPartMgtL.IsSparePartOrderFromPOrder(_PurchOrderHeader);
      ContainsDefectLineL := SparPartMgtL.CheckForDefectLine(_PurchOrderHeader);
      //H2078 04.02.15 EHN -----------------------------------

      _PurchOrderHeader.SETRECFILTER;
      _SalesOrderHeader.SETRECFILTER;
      LT_WebSiteTransfer.SETRANGE("Website No.",_SalesOrderHeader."Website No.");
      LT_WebSiteTransfer.FINDFIRST;
      LT_WebSiteTransfer.CALCFIELDS("Website Name");

      //H0411 19.06.13 ARU +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
      MailText := LT_WebSiteTransfer."Website Name" +': '+ L_Text001 +' '+ _PurchOrderHeader."No.";
      //H0411 19.06.13 ARU -------------------------------------------------------------------------------

      // H0773 22.01.14 FX +++++++++++++++++++++++++++++++++++++++++++++++++
        IF (PurchHeader.CheckSecondEMail(_PurchOrderHeader) <> '') AND
          (PurchHeader.CheckSecondEMail(_PurchOrderHeader) <> '!')
        THEN
          MailText += TextHME013;
      // H0773 22.01.14 FX -----------------------------------------------

      DocName := LT_WebSiteTransfer."Website Name" +'_Labels_'+  _PurchOrderHeader."No.";
      DocName2 := LT_WebSiteTransfer."Website Name" +'_Packzettel_'+  _PurchOrderHeader."No.";
      ReportID := 50020;
      CREATE(ClientFso,TRUE,TRUE);
      CREATE(ClientUtil,TRUE,TRUE);
      CREATE(DivUtil,TRUE,TRUE);
      JobID := MailIT.CreateGUID();

      // Get folder for temporary files on the client
      ClientTempFolder := ClientUtil.GetTempPath();
      IF ClientTempFolder = '' THEN
        ERROR('Unable to create the path of the temporary folder.');
      ClientTempFolder := ClientTempFolder + 'ExpMail';
      IF NOT ClientFso.FolderExists(ClientTempFolder) THEN
        ClientFso.CreateFolder(ClientTempFolder);
      ClientTempFolder := ClientTempFolder + '\' + JobID;
      IF NOT ClientFso.FolderExists(ClientTempFolder) THEN
        ClientFso.CreateFolder(ClientTempFolder);

      // Locate bill to Vendor
      Vend.GET(_PurchOrderHeader."Buy-from Vendor No.");
      CompanyInfo.GET;

      // Initialize the email
      IF SendMailDirect THEN
        MailIT.SetService('SMTP')
      ELSE
        MailIT.SetService(FORMAT(UserSetup."Mail Client"));

      //H2078 10.02.15 EHN +++++++++++++++++++++++++++++++++++
      IF IsSparePartOrderL THEN
        MailIT.SetFrom(LT_MailITSetup."SparePart Order E-Mail")
      ELSE
        MailIT.SetFrom(LT_MailITSetup."User Name (Direct)");
      //H2078 10.02.15 EHN -----------------------------------
      //H3782 17.03.15 EHN +++++++++++++++++++++++++++++++++
      IF NOT LT_MailITSetup."Test Mode" THEN BEGIN
        IF IsSparePartOrderL THEN
          MailIT.AddRecipientBCC(LT_MailITSetup."SparePart Order E-Mail BCC",LT_MailITSetup."SparePart Order E-Mail BCC")
        ELSE
          MailIT.AddRecipientBCC(LT_MailITSetup."Purchase E-Mail BCC (Direct)",LT_MailITSetup."Purchase E-Mail BCC (Direct)");
      END ELSE
      //H3782 17.03.15 EHN ---------------------------------
        MailIT.AddRecipientBCC(LT_MailITSetup."Test E-Mail BCC",LT_MailITSetup."Test E-Mail BCC");

      IF (Vend."Primary Contact No. (Direct)" <> '') AND Cont.GET(Vend."Primary Contact No. (Direct)") AND (Cont."E-Mail" <> '') THEN
        Vend."E-Mail" := Cont."E-Mail";

      Vend.TESTFIELD("E-Mail");

      IF Vend."E-Mail" <> '' THEN
        IF LT_MailITSetup."Test Mode" THEN
          MailIT.AddRecipient(LT_MailITSetup."Test E-Mail",LT_MailITSetup."Test E-Mail")
        ELSE
          MailIT.AddRecipient(Vend."E-Mail",Vend."E-Mail");

      MailIT.SetSubject(MailText);


      _PurchOrderHeader."Ship-to Country/Region Code" := '';
      FormatAddr.SalesHeaderShipTo(ShipAddr,_SalesOrderHeader);
      //H1671 11.03.15 ++++++++++++++++++++++++++++++++++++++
      //MailIT.LoadHTMLBody('C:\Mailhtml\header.html');
      IF MailITSetupL.GET THEN BEGIN
        IF PurchaseMailHTMLPathL.GET(MailITSetupL."Cross Dock Order Mail Code",_PurchOrderHeader."Language Code",
                                       PurchaseMailHTMLPathL.Type::header) THEN
          MailIT.LoadHTMLBody(PurchaseMailHTMLPathL.Path)
        ELSE
          IF PurchaseMailHTMLPathL.GET(MailITSetupL."Cross Dock Order Mail Code",'DEU',PurchaseMailHTMLPathL.Type::header) THEN
            MailIT.LoadHTMLBody(PurchaseMailHTMLPathL.Path)
      END;
      //H1671 11.03.15 --------------------------------------

      MailIT.AppendHTML('<font face="Arial","sans-serif">');
      //A/P0305
      MailIT.AppendHTML('<table width=590 border=0>');
      //E/P0305
      IF _PurchOrderHeader."Buy-from Contact" <> '' THEN
        MailIT.AppendHTML(STRSUBSTNO(L_Text010,_PurchOrderHeader."Buy-from Contact") + '<br /><br />')
      ELSE
        MailIT.AppendHTML(STRSUBSTNO(L_Text010a) + '<br /><br />');

      //H2078 05.02.15 EHN +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
      IF IsSparePartOrderL AND ContainsDefectLineL THEN
        MailIT.AppendHTML('<b>'+ TextHME014 + '</b><br /><br />')
      ELSE
        MailIT.AppendHTML('<b>'+ STRSUBSTNO(L_Text011,CompanyInfo.Name) + '</b><br /><br />');
      //H2078 05.02.15 EHN -----------------------------------------------------------------
      //A/gob-rste/30.07.12/GOB1.14

      //H0006 07.10.12 RHO +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
      IF OrderUpdateMail THEN BEGIN
        PurchOrderLineL.RESET;
        PurchOrderLineL.SETRANGE("Document Type",_PurchOrderHeader."Document Type");
        PurchOrderLineL.SETRANGE("Document No.",_PurchOrderHeader."No.");
        PurchOrderLineL.SETRANGE(Type,PurchOrderLineL.Type::Item);
        //A/P0642
        rFPCGeneralSetup.GET;
        rFPCGeneralSetup.TESTFIELD("Rhenus Crossdock Purch Filter");
        PurchOrderLineL.SETFILTER(PurchOrderLineL."Purchasing Code",rFPCGeneralSetup."Rhenus Crossdock Purch Filter");
        //E/P0642
        IF PurchOrderLineL.FINDFIRST THEN BEGIN
          IF SalesLineL.GET(
               PurchOrderLineL."Document Type"::Order,
               PurchOrderLineL."Special Order Sales No.",PurchOrderLineL."Special Order Sales Line No.")
          THEN
            MailIT.AppendHTML('<font size="5">' + STRSUBSTNO(L_Text038,SalesLineL."Orig. Purch. Order No.")+ '</font>'+ '<br />');
        END;
      END;
      //H0006 07.10.12 RHO ---------------------------------------------------------------------

      // H0773,H0872,H1223 16.07.14 EHN ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
      IF (PurchHeader.CheckSecondEMail(_PurchOrderHeader) <> '') AND
         (PurchHeader.CheckSecondEMail(_PurchOrderHeader) <> '!')
      THEN
        ConditionalText := TextHME013
      ELSE
        ConditionalText := '';

      rFPCGeneralSetup.GET;
      PurchaseLineL.RESET;
      PurchaseLineL.SETRANGE("Document Type", _PurchOrderHeader."Document Type");
      PurchaseLineL.SETRANGE("Document No.", _PurchOrderHeader."No.");
      PurchaseLineL.SETFILTER("Purchasing Code", rFPCGeneralSetup."Sup. Del. Note Channel Filter");
      RHDPurchaseExportHeaderL.RESET;
      RHDPurchaseExportHeaderL.SETRANGE("Document Type", _PurchOrderHeader."Document Type");
      RHDPurchaseExportHeaderL.SETRANGE("Document No.", _PurchOrderHeader."No.");
      IF RHDPurchaseExportHeaderL.FINDLAST AND PurchaseLineL.FINDFIRST AND rFPCGeneralSetup."Suppress Delivery Note" THEN
        MailIT.AppendHTML(
          '<font size="5">' + STRSUBSTNO(L_Text013,RHDPurchaseExportHeaderL."Rhenus Order No.") + ConditionalText +
          '</font>' + '<br /><br />')
      ELSE
        MailIT.AppendHTML(
          '<font size="5">' + STRSUBSTNO(L_Text013,_PurchOrderHeader."No.") + ConditionalText + '</font>' + '<br /><br />');
      // H0773,H0872,H1223 16.07.14 EHN -------------------------------------------------------------------------------------------------

      //H0794 07.01.13 ARU ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
      //H0872 20140220 DMA ++++++++++++++++++++++++++++++++++++++++++
      rFPCGeneralSetup.GET;
      SalesOrderLineL.RESET;

      SalesOrderLineL.SETRANGE("Document Type", _SalesOrderHeader."Document Type");
      SalesOrderLineL.SETRANGE("Document No.", _SalesOrderHeader."No.");
      SalesOrderLineL.SETFILTER("Purchasing Code", rFPCGeneralSetup."Sup. Del. Note Channel Filter");

      RHDSalesExportHeaderL.RESET;
      RHDSalesExportHeaderL.SETRANGE("Document Type", _SalesOrderHeader."Document Type");
      RHDSalesExportHeaderL.SETRANGE("Document No.", _SalesOrderHeader."No.");
      IF RHDSalesExportHeaderL.FINDLAST AND SalesLineL.FINDFIRST AND rFPCGeneralSetup."Suppress Delivery Note" THEN
        MailIT.AppendHTML(STRSUBSTNO(L_Text039, RHDSalesExportHeaderL."Rhenus Order No.")+ '<br /><br />')
      ELSE
      //H0872 20140220 DMA ------------------------------------------
        MailIT.AppendHTML(STRSUBSTNO(L_Text039, _SalesOrderHeader."No.")+ '<br /><br />');
      //H0794 07.01.13 ARU ------------------------------------------------------------

      //E/gob-rste/30.07.12/GOB1.14
      //a/gob-sfe/05.07.2012
      IF CheckAlternativeEMail(_PurchOrderHeader) THEN BEGIN
        IF Vend."Our Account No."<>'' THEN
          MailIT.AppendHTML(STRSUBSTNO(L_Text035,Vend."Our Account No.") + '<br />');
        //A/gob-rste/25.07.12/GOB1.11
        MailIT.AppendHTML(STRSUBSTNO(L_Text037,_PurchOrderHeader."DHL HD Transfer Date") + '<br /><br />');
        //E/gob-rste/25.07.12/GOB1.11

        Purchlineloc2.RESET;
        Purchlineloc2.SETRANGE("Document Type",_PurchOrderHeader."Document Type");
        Purchlineloc2.SETRANGE("Document No.",_PurchOrderHeader."No.");
        Purchlineloc2.SETRANGE(Type,Purchlineloc2.Type::Item);
        IF Purchlineloc2.FINDSET THEN
          REPEAT
            Item.GET(Purchlineloc2."No.");
            //H4267, H3847 20.05.15 EHN +++++++++++++++++++++++++++++
            IF (Item."Vendor Description" <> '') THEN BEGIN
              IF IsSparePartOrderL THEN
                MailIT.AppendHTML(L_Text031 + Item."Vendor Description" + Purchlineloc2."Description 2" +'<br />')
              ELSE
                MailIT.AppendHTML(L_Text031 + Item."Vendor Description" +'<br />')
            END ELSE
            //H4267, H3847 20.05.15 EHN -----------------------------
              MailIT.AppendHTML(L_Text031 + Purchlineloc2.Description + Purchlineloc2."Description 2" +'<br />');
            MailIT.AppendHTML(L_Text032 + Purchlineloc2."No." +'<br />');
            MailIT.AppendHTML(L_Text033 + Item."Vendor Item No." + Item."Vendor Item No. Add." +'<br />');
            MailIT.AppendHTML(L_Text034 + FORMAT(Purchlineloc2.Quantity) +'<br />');
            IF SalesLineLoc.GET(
                 Purchlineloc2."Document Type"::Order,
                 Purchlineloc2."Special Order Sales No.",Purchlineloc2."Special Order Sales Line No.")
            THEN
              MailIT.AppendHTML(L_Text036 + FORMAT(SalesLineLoc."Transp. Type") +'<br /><br />');
          UNTIL Purchlineloc2.NEXT=0;

        MailIT.AppendHTML(L_Text014 + '<br />');  //Versandaddresse
        MailIT.AppendHTML(_PurchOrderHeader."Ship-to Name" + '<br />');
        MailIT.AppendHTML(_PurchOrderHeader."Ship-to Address" + '<br />');
        MailIT.AppendHTML(_PurchOrderHeader."Ship-to Post Code" + ' ');
        MailIT.AppendHTML(_PurchOrderHeader."Ship-to City" + '<br />');
      END ELSE BEGIN
      //e/gob-sfe/05.07.2012
        //A,gob-dst,29.08.2012,P0252
        //A,gob-dst,24.10.2012,P0506
        //A/P0642
        //A/P0687
        rFPCGeneralSetup.GET();
        rFPCGeneralSetup.TESTFIELD("Chanel 99 Location Code");
        rFPCGeneralSetup.TESTFIELD("Chanel 98 Location Code");
        //E/P0687
        IF (_PurchOrderHeader."Location Code" = rFPCGeneralSetup."Chanel 99 Location Code") OR
           ( _PurchOrderHeader."Location Code" = rFPCGeneralSetup."Chanel 98 Location Code")
        THEN BEGIN
        //E,gob-dst,24.10.2012,P0506
          MailIT.AppendHTML(L_Text014 + '<br />');  //Versandaddresse
          MailIT.AppendHTML(_PurchOrderHeader."Ship-to Name" + '<br />');
          MailIT.AppendHTML(_PurchOrderHeader."Ship-to Address" + '<br />');
          MailIT.AppendHTML(_PurchOrderHeader."Ship-to Post Code" + ' ');
          MailIT.AppendHTML(_PurchOrderHeader."Ship-to City" + '<br />');
        END ELSE BEGIN
        //E,gob-dst,29.08.2012,P0252
          MailIT.AppendHTML(L_Text014 + '<br />');
          FOR i := 1 TO 8 DO
            IF ShipAddr[i] <> '' THEN
              MailIT.AppendHTML(ShipAddr[i] + '<br />');
        //A,gob-dst,29.08.2012,P0252
        END;
        //E,gob-dst,29.08.2012,P0252
      END; //gob-sfe/05.07.2012

      MailIT.AppendHTML('</table>');
      MailIT.AppendHTML(L_Text015 + '<br /><br />');

      // Fusszeilen
      //A/P0305
      MailIT.AppendHTML('<table width=590 border=0>');
      //E/P0305
      MailIT.AppendHTML('<br />');
      MailIT.AppendHTML('<p style=''background:#B3C5C5''>');

      //H0794 07.01.13 ARU +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
      MailIT.AppendHTML(L_Text016 + '<br /><br />');
      //H0794 07.01.13 ARU -------------------------------------------------------------------------

      MailIT.AppendHTML(L_Text017 + '<br />');

      //H0794 07.01.13 ARU ++++++++++++++++++++++++++++++++++++++++++++++++++++
      MailIT.AppendHTML('Home24' + '<br /><br />');
      //H0794 07.01.13 ARU ----------------------------------------------------

      //H3782, H2078, P1221 17.03.15 EHN ++++++++++++++++++++++++++++++++++++++++++++++
      IF LT_Location.GET(_PurchOrderHeader."Location Code") THEN BEGIN
        IF NOT LT_Location."Rhenus Crossdock Location" THEN BEGIN
          IF IsSparePartOrderL THEN BEGIN
            MailIT.AppendHTML(
              STRSUBSTNO(
                L_Text018,LT_MailITSetup."Spare Part Phone No.",
                LT_MailITSetup."Purchase Fax No. (Direct)") +
              '<br />');
            MailIT.AppendHTML('E-Mail: ' + LT_MailITSetup."SparePart Order E-Mail" + '<br /><br />');
          END ELSE BEGIN
            MailIT.AppendHTML(
              STRSUBSTNO(
                L_Text018,LT_MailITSetup."Purchase Phone No. (Direct)",
                LT_MailITSetup."Purchase Fax No. (Direct)") +
              '<br />');
            MailIT.AppendHTML('E-Mail: ' + LT_MailITSetup."Purchase E-Mail BCC (Direct)" + '<br /><br />');
          END;
          MailIT.AppendHTML('</p>');
        END;
      END;

      //H1671,H4320 19.06.15 FF ++++++++++++++++++++++++++++++++++++++
      IF IsSparePartOrderL THEN BEGIN
        IF MailITSetupL.GET THEN BEGIN
          IF PurchaseMailHTMLPathL.GET(
               MailITSetupL."Spare Part Order Mail Code",_PurchOrderHeader."Language Code",
               PurchaseMailHTMLPathL.Type::footer)
          THEN
            MailIT.LoadHTMLBody(PurchaseMailHTMLPathL.Path)
          ELSE
            IF PurchaseMailHTMLPathL.GET(MailITSetupL."Spare Part Order Mail Code",'DEU',PurchaseMailHTMLPathL.Type::footer) THEN
              MailIT.LoadHTMLBody(PurchaseMailHTMLPathL.Path)
        END;
      END ELSE BEGIN
        IF MailITSetupL.GET THEN BEGIN
          IF PurchaseMailHTMLPathL.GET(
               MailITSetupL."Cross Dock Order Mail Code",_PurchOrderHeader."Language Code",
               PurchaseMailHTMLPathL.Type::footer)
          THEN
            MailIT.LoadHTMLBody(PurchaseMailHTMLPathL.Path)
          ELSE
            IF PurchaseMailHTMLPathL.GET(MailITSetupL."Cross Dock Order Mail Code",'DEU',PurchaseMailHTMLPathL.Type::footer) THEN
              MailIT.LoadHTMLBody(PurchaseMailHTMLPathL.Path)
        END;
      END;

      //H1671,H4320 19.06.15 FF --------------------------------------

      //H3782, H2078, P1221 17.03.15 EHN ----------------------------------------------

      //H0794 07.01.13 ARU ++++++++++++++++++++++++++++++++++++
      rFPCGeneralSetup.GET;
      //H0872 20140220 DMA ++++++++++++++++++++++++++++++++++++
      PurchaseLineL.RESET;
      PurchaseLineL.SETRANGE("Document Type",_PurchOrderHeader."Document Type");
      PurchaseLineL.SETRANGE("Document No.",_PurchOrderHeader."No.");
      PurchaseLineL.SETRANGE(Type,Purchlineloc2.Type::Item);
      PurchaseLineL.SETFILTER("Purchasing Code", rFPCGeneralSetup."Sup. Del. Note Channel Filter");
      //H1750 28.11.14 DMA ++++++++++++++++++
      ContainsChannelFromFilterL := NOT PurchaseLineL.ISEMPTY;
      SuppressDeliveryNoteL :=FALSE;
      SuppressDeliveryNoteL := rFPCGeneralSetup."Suppress Delivery Note" AND ContainsChannelFromFilterL;
      //H1750 28.11.14 DMA ------------------
      IF NOT SuppressDeliveryNoteL THEN BEGIN
      //H0872 20140220 DMA ------------------------------------
        IF rFPCGeneralSetup."Delivery note attached" THEN BEGIN
        //H0794 07.01.13 ARU ------------------------------------
          ClientPdfFileName := ClientTempFolder + '\' + DocName2 + '.pdf';
          IF ClientFso.FileExists(ClientPdfFileName) THEN
            ClientFso.DeleteFile(ClientPdfFileName);
          MailIT.PDFParameter('Output',ClientPdfFileName);
          MailIT.PDFParameter('ShowPDF','no');
          MailIT.PDFParameter('Title',DocName2);
          MailIT.PDFParameter('Author',USERID);
          MailIT.PDFPreparePrinter();
          //H1870,H1619 02.12.14 EHN +++++++++++++++++++++++++++
          IF NOT DefaultPrinterChanged THEN BEGIN
            IF OldDefaultPrinter = '' THEN
              OldDefaultPrinter := MailIT.GetDefaultPrinter();
            IF OldDefaultPrinter <> UserSetup."PDF Creator" THEN BEGIN
              MailIT.SetDefaultPrinter(UserSetup."PDF Creator");
              DefaultPrinterChanged := TRUE;
            END;
          END;
          //H1870,H1619 02.12.14 EHN ---------------------------

          LR_SalesOrder.SetParameters(_PurchOrderHeader."No.");
          LR_SalesOrder.SETTABLEVIEW(_SalesOrderHeader);
          LR_SalesOrder.USEREQUESTFORM(FALSE);
          LR_SalesOrder.RUNMODAL;

          IF (MailIT.WaitForFile(ClientPdfFileName,20000) = 0) THEN
            ERROR(Text040);
          MailIT.AddAttachment(ClientPdfFileName);
        //H0794 07.01.13 ARU +++++
        END;
        //H0794 07.01.13 ARU -----
      //H0872 20140220 DMA ++++++++++++++++++++++++++++++++++++
      END;
      //H0872 20140220 DMA ------------------------------------


      // S/P1108
      // Crossdock-Label
      IF LT_Location.GET(_PurchOrderHeader."Location Code") THEN BEGIN
        IF LT_Location."Rhenus Crossdock Location" THEN BEGIN
          //S/P1185
          CASE Vend."RHD Crossdock Label Type" OF
            Vend."RHD Crossdock Label Type"::A4 :
              BEGIN
          //E/P1185
                //H1870, H1619, P1237 02.12.14 EHN +++++++++++++++++++++++++++
                ClientPdfFileName := ClientTempFolder + '\' + DocName + '.pdf';
                IF ClientFso.FileExists(ClientPdfFileName) THEN
                  ClientFso.DeleteFile(ClientPdfFileName);
                MailIT.PDFParameter('Output',ClientPdfFileName);
                MailIT.PDFParameter('ShowPDF','no');
                MailIT.PDFParameter('Title',DocName);
                MailIT.PDFParameter('Author',USERID);
                MailIT.PDFPreparePrinter();
                IF NOT DefaultPrinterChanged THEN BEGIN
                  IF OldDefaultPrinter = '' THEN
                    OldDefaultPrinter := MailIT.GetDefaultPrinter();
                  IF OldDefaultPrinter <> UserSetup."PDF Creator" THEN BEGIN
                    MailIT.SetDefaultPrinter(UserSetup."PDF Creator");
                    DefaultPrinterChanged := TRUE;
                  END;
                END;
                //H1870, H1619, P1237 02.12.14 EHN ---------------------------

              //S/P1185
              END;
            Vend."RHD Crossdock Label Type"::Fullsize :
              BEGIN
                // S/P1237
                ClientPdfFileName := ClientTempFolder + '\' + DocName + '.pdf';
                IF ClientFso.FileExists(ClientPdfFileName) THEN
                  ClientFso.DeleteFile(ClientPdfFileName);
                MailIT.PDFParameter('Output',ClientPdfFileName);
                MailIT.PDFParameter('ShowPDF','no');
                MailIT.PDFParameter('Title',DocName);
                MailIT.PDFParameter('Author',USERID);
                MailIT.PDFPreparePrinter();

                CopyRunOnce(ClientTempFolder);
                // E/P1237
                RHDSetup.GET;
                RHDSetup.TESTFIELD("Printer Fullsize Crossd. Label");
                //H1870 02.12.14 EHN +++++++++++++++++++++++++++
                IF OldDefaultPrinter = '' THEN
                  OldDefaultPrinter := MailIT.GetDefaultPrinter();
                MailIT.SetDefaultPrinter(RHDSetup."Printer Fullsize Crossd. Label");
                DefaultPrinterChanged := TRUE;
                //H1870 02.12.14 EHN ---------------------------
              END;
          END;
          //E/P1185

          RHDSalesExportLine.RESET;
          RHDSalesExportLine.SETRANGE("Purchase Order No.",_PurchOrderHeader."No.");
          IF NOT RHDSalesExportLine.ISEMPTY THEN BEGIN
            PosNoFilter := '';
            RHDSalesExportLine.FINDLAST;  //Get Sequence!!! No FINDSET/FIRST/'-'
            RHDSalesExportLine2.RESET;
            RHDSalesExportLine2.SETRANGE("Entry No.",RHDSalesExportLine."Entry No.");
            RHDSalesExportLine2.SETRANGE("Purchase Order No.",_PurchOrderHeader."No.");
            IF RHDSalesExportLine2.FINDSET THEN BEGIN
              REPEAT
                IF PosNoFilter = '' THEN
                  PosNoFilter := FORMAT(RHDSalesExportLine2."Pos. No.")
                ELSE
                  PosNoFilter := PosNoFilter + '|' + FORMAT(RHDSalesExportLine2."Pos. No.");
              UNTIL RHDSalesExportLine2.NEXT = 0;
            END;
            RHDSalesExportLine2.RESET;
            RHDSalesExportLine2.SETRANGE("Entry No.",RHDSalesExportLine."Entry No.");
            RHDSalesExportLine2.SETRANGE(Type,RHDSalesExportLine2.Type::Barcode);
            RHDSalesExportLine2.SETFILTER("Attached to Pos. No.",PosNoFilter);
            IF RHDSalesExportLine2.FINDSET THEN BEGIN
              //S/P1185
              CASE Vend."RHD Crossdock Label Type" OF
                Vend."RHD Crossdock Label Type"::A4 :
                  BEGIN
                    //H1870,H1619,P1185 02.12.14 EHN +++++++++++++++++++++++++++
                    LR_CrossdockLabel.SETTABLEVIEW(RHDSalesExportLine2);
                    LR_CrossdockLabel.USEREQUESTFORM(FALSE);
                    LR_CrossdockLabel.RUNMODAL;
                    //H1870,H1619,P1185 02.12.14 EHN ---------------------------
                  END;
                Vend."RHD Crossdock Label Type"::Fullsize :
                  BEGIN
                    //H1870,H1619,P1209 02.12.14 EHN +++++++++++++++++++++++++++
                    lCrossdockLabelFullsize.SETTABLEVIEW(RHDSalesExportLine2);
                    lCrossdockLabelFullsize.USEREQUESTFORM(FALSE);
                    lCrossdockLabelFullsize.RUNMODAL;
                    //H1870,H1619,P1209 02.12.14 EHN ---------------------------
                  END;
              END;
              //E/P1185

              IF (MailIT.WaitForFile(ClientPdfFileName,20000) = 0) THEN
                ERROR(Text040);
              MailIT.AddAttachment(ClientPdfFileName);
            END;
          END;
        END;

        // H1698 05.12.14 tec-ar ++++++++++++++++++++
        IF LT_Location."Hermes Location Type" IN [LT_Location."Hermes Location Type"::"Cross-Dock",
           LT_Location."Hermes Location Type"::"Direct Injection"]
        THEN BEGIN
          // H1700  18.03.15  MKR +++++++++++++++++++++++++++
          HermesSetupL.GET;
          HermesTrackingInfoMgtL.PrepCDLabelGeneration4Header(_PurchOrderHeader, HermesSetupL."Autom. IFTMIN Parc.Status Code");
          // H1700  18.03.15  MKR ---------------------------
          isHermesMail := TRUE;
          ClientPdfFileName := HermesTFormLabelMgtL.FillHermesCDLabelWithData(_PurchOrderHeader);
          IF (MailIT.WaitForFile(ClientPdfFileName,20000) = 0) THEN
            ERROR(Text040);
          MailIT.AddAttachment(ClientPdfFileName);
        END;
        // H1698 05.12.14 tec-ar --------------------
      END;
      // E/P1108

      LabelCounter := 0;
      IF _PurchOrderHeader.Kommissionierung THEN BEGIN
      PurchLineLoc.SETRANGE("Document Type",_PurchOrderHeader."Document Type");
      PurchLineLoc.SETRANGE("Document No.",_PurchOrderHeader."No.");
      //A,gob-dst,15.08.2012,P0199
      PurchLineLoc.SETRANGE("Purchasing Code",'GER-4');
      //E,gob-dst,15.08.2012,P0199
        IF PurchLineLoc.FIND('-') THEN BEGIN
          //REPEAT
            LabelCounter +=1;
            //ClientPdfFileName := ClientTempFolder + '\' + DocName + '_' + FORMAT(LabelCounter) + '.pdf';
            ClientPdfFileName := ClientTempFolder + '\' + DocName + '.pdf';

            IF ClientFso.FileExists(ClientPdfFileName) THEN
              ClientFso.DeleteFile(ClientPdfFileName);
            MailIT.PDFParameter('Output',ClientPdfFileName);
            MailIT.PDFParameter('ShowPDF','no');
            MailIT.PDFParameter('Title',DocName2);
            MailIT.PDFParameter('Author',USERID);
            MailIT.PDFPreparePrinter();
            //H1870,H1619 02.12.14 EHN +++++++++++++++++++++++++++
            IF NOT DefaultPrinterChanged THEN BEGIN
              IF OldDefaultPrinter = '' THEN
                OldDefaultPrinter := MailIT.GetDefaultPrinter();
              IF OldDefaultPrinter <> UserSetup."PDF Creator" THEN BEGIN
                MailIT.SetDefaultPrinter(UserSetup."PDF Creator");
                DefaultPrinterChanged := TRUE;
              END;
            END;
            //H1870,H1619 02.12.14 EHN ---------------------------

            Purchlineloc2.RESET;
            Purchlineloc2.SETRANGE("Document Type",PurchLineLoc."Document Type");
            Purchlineloc2.SETRANGE("Document No.",PurchLineLoc."Document No.");
            //Purchlineloc2.SETRANGE("Line No.",PurchLineLoc."Line No.");
            //A,gob-dst,15.08.2012,P0199
            Purchlineloc2.SETRANGE("Purchasing Code",'GER-4');
            //E,gob-dst,15.08.2012,P0199
            IF Purchlineloc2.FIND('-') THEN BEGIN
              CLEAR(DHLHDLabelReport);
              DHLHDLabelReport.SETTABLEVIEW(Purchlineloc2);
              DHLHDLabelReport.USEREQUESTFORM(FALSE);
              DHLHDLabelReport.RUNMODAL;
            END;

            IF (MailIT.WaitForFile(ClientPdfFileName,20000) = 0) THEN
              ERROR(Text040);

            MailIT.AddAttachment(ClientPdfFileName);
          //UNTIL PurchLineLoc.NEXT = 0;
        END;
      END;

      //H1068 22.05.14 DMA ++++++++++++++++++++++++++++++++++++++++
      //CreateSpecialOrderCSV(_PurchOrderHeader,TempSalesHeader,ClientTempFolder);
      // H1698 12.01.15 MKR +++++++++++++++++++++++++++++++++++++++
      IF isHermesMail THEN
        CreateSpecialOrderCSV_Hermes(_PurchOrderHeader,_SalesOrderHeader,ClientTempFolder)
      ELSE
      // H1698 12.01.15 MKR ---------------------------------------
        CreateSpecialOrderCSV(_PurchOrderHeader,_SalesOrderHeader,ClientTempFolder);
      //H1068 22.05.14 DMA ----------------------------------------

      MailIT.AddAttachment(ClientTempFolder + '\order.csv');
      IF DefaultPrinterChanged THEN
        MailIT.SetDefaultPrinter(OldDefaultPrinter);

      IF SendMailDirect THEN BEGIN
        MailIT.SetServer(LT_MailITSetup."Mail Server");
        IF LT_MailITSetup."Server Port" = '' THEN
          L_Port := 25
        ELSE
          EVALUATE(L_Port,LT_MailITSetup."Server Port");
        MailIT.SetPort(L_Port);
        //H0709 30.01.14 MBY +++++++++++++
        IF LT_MailITSetup.Authentication THEN BEGIN
        //H0709 30.01.14 MBY -------------
          MailIT.SetLogin(LT_MailITSetup."User Name (Direct)");
          MailIT.SetPassword(LT_MailITSetup."Password (Direct)");
        //H0709 30.01.14 MBY +++++++++++++
        END;
        //H0709 30.01.14 MBY -------------
        MailIT.Send;
      END ELSE
        MailIT.Display;

      //H2108 10.02.15 DMO +++++++++++++++++++++++++++++++++++
      PurchHeader.GET(_PurchOrderHeader."Document Type",_PurchOrderHeader."No.");
      PurchHeader."No. of Sent POs" += 1;
      PurchHeader.MODIFY;
      //H2108 10.02.15 DMO -----------------------------------

      IF FORMAT(UserSetup."Mail Client") <> 'MAPI' THEN
        IF ClientFso.FolderExists(ClientTempFolder) THEN
          ClientFso.DeleteFolder(ClientTempFolder, FALSE);
      CLEAR(ClientFso);
      CLEAR(ClientUtil);
      CLEAR(DivUtil);
      //E/gob-rste/28.06.12/GOB1.07
    END;

    LOCAL PROCEDURE CreateSpecialOrderCSV@1108200002(PurchOrderHeaderV@1000000002 : Record 38;SalesOrderHeaderV@1000000004 : Record 36;ExpFilePathV@1000000016 : Text[250]);
    VAR
      LT_NavCSalesHeader@1000000009 : Record 5251571;
      LT_PaymMethode@1000000001 : Record 289;
      LT_BankAcc@1000000000 : Record 270;
      LT_Cust@1000000013 : Record 18;
      LT_Location@1000000015 : Record 14;
      LC_DHLMgt@1000000012 : Codeunit 50020;
      L_DropShip@1000000017 : Boolean;
      L_SalesPrice@1000000006 : Decimal;
      L_FS@1000000007 : Text[1];
      L_TS@1000000008 : Text[1];
      Cust@1108200000 : Record 18;
      "****HME*****************"@1000000005 : Integer;
      ParentItemL@1000000034 : Record 27;
      LocationL@1000000030 : Record 14;
      SparePartMgtL@1000000036 : Codeunit 50322;
      DHLMgmtL@1000000031 : Codeunit 50020;
      VATRegNoL@1000000014 : Text[20];
      CountryGLNNoL@1000000018 : Code[20];
      GlobalGLNNoL@1000000019 : Code[20];
      EDIPartnerGLNNoL@1000000020 : Code[20];
      ShippingAgentCodeL@1000000021 : Code[10];
      SalesOrderNoL@1000000022 : Code[20];
      BranchCodeL@1000000025 : Code[10];
      DSLabelBillingNoL@1000000027 : Code[20];
      OriginalPurchOrderNoL@1000000033 : Code[20];
      ShippingAddrL@1000000024 : ARRAY [14] OF Text[80];
      CustomerAddrL@1000000023 : ARRAY [14] OF Text[80];
      TrackingNoStringL@1000000028 : Text[1024];
      RHDBarcodeStringL@1000000029 : Text[1024];
      NoofCollisL@1000000026 : Integer;
      FileOutstreamL@1000000032 : OutStream;
      IsSparePartOrderL@1000000035 : Boolean;
    BEGIN
      //A/gob-rste/28.06.12/GOB1.07
      ExpFilePathV := ExpFilePathV + '\order.csv';
      ExpFile.CREATE(ExpFilePathV);
      //H3782, H1731, H1619, H1218, H0794 17.03.15 EHN +++++++++++++++++++++++++++++++++++++++++++++++++++++++
      ExpFile.CREATEOUTSTREAM(FileOutstreamL);
      FileOutstreamL.WRITETEXT('"Kommissionsnr.",');             //1
      FileOutstreamL.WRITETEXT('"Bestellnummer",');              //2
      FileOutstreamL.WRITETEXT('"Depotnummer",');                //3
      FileOutstreamL.WRITETEXT('"SKU",');                        //4
      FileOutstreamL.WRITETEXT('"Artikelnr_MP",');               //5
      FileOutstreamL.WRITETEXT('"Beschreibung",');               //6
      FileOutstreamL.WRITETEXT('"Versand_Anrede",');             //7
      FileOutstreamL.WRITETEXT('"Versand_Vorname",');            //8
      FileOutstreamL.WRITETEXT('"Versand_Nachname",');           //9
      FileOutstreamL.WRITETEXT('"Versand_Strasse",');            //10
      FileOutstreamL.WRITETEXT('"Versand_Hausnummer",');         //11
      FileOutstreamL.WRITETEXT('"Versand Strasse 2",');          //12
      FileOutstreamL.WRITETEXT('"Versand_PLZ",');                //13
      FileOutstreamL.WRITETEXT('"Versand_Stadt",');              //14
      FileOutstreamL.WRITETEXT('"Versand_Land",');               //15
      FileOutstreamL.WRITETEXT('"Versand_Kontakt",');            //16
      FileOutstreamL.WRITETEXT('"Versand_Telefon",');            //17
      FileOutstreamL.WRITETEXT('"Endkunden_Anrede",');           //18
      FileOutstreamL.WRITETEXT('"Endkunden_Vorname",');          //19
      FileOutstreamL.WRITETEXT('"Endkunden_Nachname",');         //20
      FileOutstreamL.WRITETEXT('"Endkunden_Strasse",');          //21
      FileOutstreamL.WRITETEXT('"Endkunden_Hausnummer",');       //22
      FileOutstreamL.WRITETEXT('"Endkunden Strasse 2",');        //23
      FileOutstreamL.WRITETEXT('"Endkunden_PLZ",');              //24
      FileOutstreamL.WRITETEXT('"Endkunden_Stadt",');            //25
      FileOutstreamL.WRITETEXT('"Endkunden_Land",');             //26
      FileOutstreamL.WRITETEXT('"Endkunden_Kontakt",');          //27
      FileOutstreamL.WRITETEXT('"Endkunden_Telefon",');          //28
      FileOutstreamL.WRITETEXT('"Tracking_No",');                //29
      FileOutstreamL.WRITETEXT('"EAN",');                        //30
      FileOutstreamL.WRITETEXT('"Bestellmenge",');               //31
      FileOutstreamL.WRITETEXT('"Gesamtcollianzahl",');          //32
      FileOutstreamL.WRITETEXT('"Collianzahl Artikel",');        //33
      FileOutstreamL.WRITETEXT('"Barcode",');                    //34
      FileOutstreamL.WRITETEXT('"Gewicht",');                    //35
      FileOutstreamL.WRITETEXT('"Abrechnungsnummer Carrier",');  //36
      FileOutstreamL.WRITETEXT(ConvertText('"KÑufer GLN"') + ','); //37
      FileOutstreamL.WRITETEXT('"Rechnungs GLN",');              //38
      FileOutstreamL.WRITETEXT('"Sender GLN",');                 //39
      FileOutstreamL.WRITETEXT(ConvertText('"EmpfÑnger GLN"') + ','); //40
      FileOutstreamL.WRITETEXT('"Shipping Agent",');             //41
      FileOutstreamL.WRITETEXT('"Ust_Id_Nr",');                  //42
      FileOutstreamL.WRITETEXT('"Mutter SKU",');                 //43
      FileOutstreamL.WRITETEXT('"Kulanz/Mangel",');               //44
      FileOutstreamL.WRITETEXT('"UrsprungsbestellNr"');          //45
      FileOutstreamL.WRITETEXT;
      //H3782, H1731, H1619, H1218, H0794 17.03.15 EHN -------------------------------------------------------

      //H3782, H1218, H1619 24.03.15 EHN +++++++++++++++++++++++++++++++++++++++++++++++++++++
      LT_NavCSalesHeader.RESET;
      LT_NavCSalesHeader.SETCURRENTKEY("Sales Document No.");
      LT_NavCSalesHeader.SETRANGE("Sales Document No.",SalesOrderHeaderV."No.");
      IF LT_NavCSalesHeader.FINDFIRST THEN BEGIN
        CustomerAddrL[1] := LT_NavCSalesHeader."Ship-to Job Title";
        CustomerAddrL[2] := LT_NavCSalesHeader."Ship-to First Name";
        CustomerAddrL[3] := LT_NavCSalesHeader."Ship-to Surname";
        DHLMgmtL.ParseAddress(LT_NavCSalesHeader."Ship-to Address",CustomerAddrL[4],CustomerAddrL[5]);
        CustomerAddrL[6]  := SalesOrderHeaderV."Ship-to Address 2";
        CustomerAddrL[7]  := LT_NavCSalesHeader."Ship-to Post Code";
        CustomerAddrL[8]  := LT_NavCSalesHeader."Ship-to City";
        CustomerAddrL[9]  := LT_NavCSalesHeader."Ship-to Country Code";
        CustomerAddrL[10] := SalesOrderHeaderV."Ship-to Contact";
        IF Cust.GET(SalesOrderHeaderV."Sell-to Customer No.") THEN
          CustomerAddrL[11] := Cust."Phone No.";
      END;

      ShippingAddrL[1] := '';
      ShippingAddrL[2] := PurchOrderHeaderV."Ship-to Name";
      ShippingAddrL[3] := PurchOrderHeaderV."Ship-to Name 2";
      DHLMgmtL.ParseAddress(PurchOrderHeaderV."Ship-to Address",ShippingAddrL[4],ShippingAddrL[5]);
      ShippingAddrL[6] := PurchOrderHeaderV."Ship-to Address 2";
      ShippingAddrL[7] := PurchOrderHeaderV."Ship-to Post Code";
      ShippingAddrL[8] := PurchOrderHeaderV."Ship-to City";
      ShippingAddrL[9] := PurchOrderHeaderV."Ship-to Country/Region Code";
      ShippingAddrL[10] := PurchOrderHeaderV."Ship-to Contact";
      ShippingAddrL[11] := '';
      IF LocationL.GET(PurchOrderHeaderV."Location Code") THEN
        ShippingAddrL[11] := LocationL."Phone No. 2";

      PurchOrderHeaderV.GetVATandGLN(VATRegNoL,GlobalGLNNoL,CountryGLNNoL,EDIPartnerGLNNoL);
      BranchCodeL := PurchOrderHeaderV.GetBranchCode();
      NoofCollisL := PurchOrderHeaderV.GetNoofCollis();
      IsSparePartOrderL := SparePartMgtL.IsSparePartOrderFromPOrder(PurchOrderHeaderV);
      //H3782, H1218, H1619 24.03.15 EHN ----------------------------------------------

      L_FS := ',';
      L_TS := '"';
      PurchLine.RESET;
      PurchLine.SETRANGE("Document Type",PurchOrderHeaderV."Document Type");
      PurchLine.SETRANGE("Document No.",PurchOrderHeaderV."No.");
      PurchLine.SETRANGE(Type,PurchLine.Type::Item);
      PurchLine.SETFILTER("No.",'<>%1','');
      PurchLine.SETFILTER(Quantity,'<>0');
      IF PurchLine.FINDSET THEN REPEAT
        IF (PurchLine.Type <> PurchLine.Type::Item) OR (NOT Item.GET(PurchLine."No.")) THEN
          CLEAR(Item);
          //H3782, H1731, H1892, H1619, H1218, H0385, H0794 17.03.15 EHN +++++++++++++++++++++++++++++++
          CLEAR(ParentItemL);
          IF IsSparePartOrderL AND (PurchLine.Type = PurchLine.Type::Item) THEN
            ParentItemL.GET(PurchLine."Description 2");
          Item.CALCFIELDS("Parcels Number");
          SalesOrderNoL := PurchLine.GetLongSalesOrderNo();
          ShippingAgentCodeL := PurchLine.GetShippingAgent(SalesOrderHeaderV);
          DSLabelBillingNoL := PurchLine.GetDSLabelBillingNo();
          TrackingNoStringL := PurchLine.GetTrackingNo;
          RHDBarcodeStringL := PurchLine.GetRHDBarcode;
          OriginalPurchOrderNoL := PurchLine.GetOriginalPurchOrderNo;
          FileOutstreamL.WRITETEXT(
          L_TS + PurchOrderHeaderV."No." + L_TS + L_FS);                                                  //1 Kommissionsnr.
          FileOutstreamL.WRITETEXT(
          L_TS + SalesOrderNoL + L_TS + L_FS);                                                            //2 Bestellnummer
          FileOutstreamL.WRITETEXT(
          L_TS + BranchCodeL + L_TS + L_FS);                                                              //3 Depotnummer
          FileOutstreamL.WRITETEXT(
          L_TS + Item."Vendor Item No." + Item."Vendor Item No. Add." + L_TS + L_FS);                     //4 SKU
          FileOutstreamL.WRITETEXT(
          L_TS + PurchLine."No." + L_TS + L_FS);                                                          //5 Artikelnr_MP
          IF Item."Vendor Description" <> '' THEN
            FileOutstreamL.WRITETEXT(
            L_TS + ConvertText(Item."Vendor Description") + L_TS + L_FS)                                  //6 Beschreibung
          ELSE
            FileOutstreamL.WRITETEXT(
            L_TS + ConvertText(PurchLine.Description +' '+ PurchLine."Description 2") + L_TS + L_FS);
          FileOutstreamL.WRITETEXT(
          L_TS + ConvertText(ShippingAddrL[1]) + L_TS + L_FS);                                            //7 Versand_Anrede
          FileOutstreamL.WRITETEXT(
          L_TS + ConvertText(ShippingAddrL[2]) + L_TS + L_FS);                                            //8 Versand_Vorname
          FileOutstreamL.WRITETEXT(
          L_TS + ConvertText(ShippingAddrL[3]) + L_TS + L_FS);                                            //9 Versand_Nachname
          FileOutstreamL.WRITETEXT(
          L_TS + ConvertText(ShippingAddrL[4]) + L_TS + L_FS);                                            //10 Versand_Strasse
          FileOutstreamL.WRITETEXT(
          L_TS + ConvertText(ShippingAddrL[5]) + L_TS + L_FS);                                            //11 Versand_Hausnummer
          FileOutstreamL.WRITETEXT(
          L_TS + ConvertText(ShippingAddrL[6]) + L_TS + L_FS);                                            //12 Versand Strasse 2
          FileOutstreamL.WRITETEXT(
          L_TS + ConvertText(ShippingAddrL[7]) + L_TS + L_FS);                                            //13 Versand_PLZ
          FileOutstreamL.WRITETEXT(
          L_TS + ConvertText(ShippingAddrL[8]) + L_TS + L_FS);                                            //14 Versand_Stadt
          FileOutstreamL.WRITETEXT(
          L_TS + ConvertText(ShippingAddrL[9]) + L_TS + L_FS);                                            //15 Versand_Land
          FileOutstreamL.WRITETEXT(
          L_TS + ConvertText(ShippingAddrL[10]) + L_TS + L_FS);                                           //16 Versand_Kontakt
          FileOutstreamL.WRITETEXT(
          L_TS + ConvertText(ShippingAddrL[11]) + L_TS + L_FS);                                           //17 Versand_Telefon
          FileOutstreamL.WRITETEXT(
          L_TS + ConvertText(CustomerAddrL[1]) + L_TS + L_FS);                                            //18 Endkunden_Anrede
          FileOutstreamL.WRITETEXT(
          L_TS + ConvertText(CustomerAddrL[2]) + L_TS + L_FS);                                            //19 Endkunden_Vorname
          FileOutstreamL.WRITETEXT(
          L_TS + ConvertText(CustomerAddrL[3]) + L_TS + L_FS);                                            //20 Endkunden_Nachname
          FileOutstreamL.WRITETEXT(
          L_TS + ConvertText(CustomerAddrL[4]) + L_TS + L_FS);                                            //21 Endkunden_Strasse
          FileOutstreamL.WRITETEXT(
          L_TS + ConvertText(CustomerAddrL[5]) + L_TS + L_FS);                                            //22 Endkunden_Hausnummer
          FileOutstreamL.WRITETEXT(
          L_TS + ConvertText(CustomerAddrL[6]) + L_TS + L_FS);                                            //23 Endkunden Strasse 2
          FileOutstreamL.WRITETEXT(
          L_TS + ConvertText(CustomerAddrL[7]) + L_TS + L_FS);                                            //24 Endkunden_PLZ
          FileOutstreamL.WRITETEXT(
          L_TS + ConvertText(CustomerAddrL[8]) + L_TS + L_FS);                                            //25 Endkunden_Stadt
          FileOutstreamL.WRITETEXT(
          L_TS + ConvertText(CustomerAddrL[9]) + L_TS + L_FS);                                            //26 Endkunden_Land
          FileOutstreamL.WRITETEXT(
          L_TS + ConvertText(CustomerAddrL[10]) + L_TS + L_FS);                                           //27 Endkunden_Kontakt
          FileOutstreamL.WRITETEXT(
          L_TS + ConvertText(CustomerAddrL[11]) + L_TS + L_FS);                                           //28 Endkunden_Telefon
          FileOutstreamL.WRITETEXT(
          L_TS + TrackingNoStringL + L_TS + L_FS);                                                        //29 Tracking_No
          FileOutstreamL.WRITETEXT(
          L_TS + FORMAT(Item.EAN) + L_TS + L_FS);                                                         //30 EAN
          FileOutstreamL.WRITETEXT(
          FORMAT(PurchLine.Quantity) + L_FS);                                                             //31 Bestellmenge
          FileOutstreamL.WRITETEXT(
          L_TS + FORMAT(NoofCollisL) + L_TS + L_FS);                                                      //32 Gesamtcollianzahl
          FileOutstreamL.WRITETEXT(
          L_TS + FORMAT(Item."Parcels Number" * PurchLine.Quantity) + L_TS + L_FS);                       //33 Collianzahl Artikel
          FileOutstreamL.WRITETEXT(
          L_TS + RHDBarcodeStringL + L_TS + L_FS);                                                        //34 Barcode
          FileOutstreamL.WRITETEXT(
          L_TS + FORMAT(PurchLine."Gross Weight") + L_TS + L_FS);                                         //35 Gewicht
          FileOutstreamL.WRITETEXT(
          L_TS + DSLabelBillingNoL + L_TS + L_FS);                                                        //36 Abrechnungsnr. Carrier
          FileOutstreamL.WRITETEXT(
          L_TS + GlobalGLNNoL + L_TS + L_FS);                                                             //37 KÑufer GLN
          FileOutstreamL.WRITETEXT(
          L_TS + CountryGLNNoL + L_TS + L_FS);                                                            //38 Rechnungs GLN
          FileOutstreamL.WRITETEXT(
          L_TS + GlobalGLNNoL + L_TS + L_FS);                                                             //39 Sender GLN
          FileOutstreamL.WRITETEXT(
          L_TS + EDIPartnerGLNNoL + L_TS + L_FS);                                                         //40 EmpfÑnger GLN
          FileOutstreamL.WRITETEXT(
          L_TS + ShippingAgentCodeL + L_TS + L_FS);                                                       //41 Shipping Agent
          FileOutstreamL.WRITETEXT(
          L_TS + VATRegNoL + L_TS + L_FS);                                                                //42 Ust_Id_Nr
          FileOutstreamL.WRITETEXT(                                                                       //43 Mutter SKU
          L_TS + ParentItemL."Vendor Item No." + L_TS + L_FS);
          FileOutstreamL.WRITETEXT(                                                                       //44 Kulanz/Mangel
          L_TS + FORMAT(PurchLine."Spare Part Reason") + L_TS + L_FS);
          FileOutstreamL.WRITETEXT(                                                                       //45 UrsprungsbestellNr
          L_TS + OriginalPurchOrderNoL + L_TS + L_FS);
          FileOutstreamL.WRITETEXT(
          L_TS + '' + L_TS + L_FS);
          FileOutstreamL.WRITETEXT;
          //H3782, H1731, H1892, H1619, H1218, H0385, H0794 17.03.15 EHN -------------------------------

      UNTIL PurchLine.NEXT = 0;
      ExpFile.CLOSE;
      //E/gob-rste/28.06.12/GOB1.07
    END;

    LOCAL PROCEDURE CreateSpecialOrderCSV_Hermes@1000000025(PurchOrderHeaderV@1000000002 : Record 38;SalesOrderHeaderV@1000000004 : Record 36;ExpFilePathV@1000000016 : Text[250]);
    VAR
      CompanyInformationL@1000000020 : Record 79;
      EDIIntegratorSetupL@1000000021 : Record 82850;
      NavCSalesHeaderL@1000000009 : Record 5251571;
      SalesLineL@1000000001 : Record 37;
      LocationL@1000000015 : Record 14;
      CustomerL@1000000003 : Record 18;
      HesDepAssDirInjL@1000000024 : Record 50333;
      SalesHeaderL@1000000025 : Record 36;
      HesTFormLabMgt@1000000013 : Codeunit 50255;
      DHLMgmtL@1000000019 : Codeunit 50020;
      ShipAddrL@1000000011 : ARRAY [14] OF Text[80];
      CustAddrL@1000000000 : ARRAY [14] OF Text[80];
      FldSepL@1000000007 : Text[1];
      TxtSepL@1000000008 : Text[1];
      VATRegNoL@1000000014 : Text[20];
      BarcodeList@1000000012 : Text[1024];
      GLN_L@1000000018 : Code[20];
      OrderNoL@1000000023 : Code[20];
      savLocationL@1000000005 : Code[20];
      ParcelsAllLinesL@1000000017 : Integer;
      ParcelsTotalL@1000000006 : Integer;
      ParcelCountL@1000000010 : Integer;
      ParcelNoForBarcodeL@1000000022 : Integer;
    BEGIN
      // H1698  12.01.15  MKR ++++++++++++++++++++++++++++++
      // Function is an adjusted copy of CreateSpecialOrderCSV()

      ExpFilePathV := ExpFilePathV + '\order.csv';
      ExpFile.CREATE(ExpFilePathV);
      ExpFile.WRITEMODE(TRUE);
      ExpFile.TEXTMODE(TRUE);
      ExpFile.OPEN(ExpFilePathV);

      ExpFile.WRITE(
        '"Kommissionsnr.","Sales Order Nummer","Depotnummer","SKU","Artikelnr_MP","Beschreibung","Versand_Anrede","Versand_Vorname",' +
        '"Versand_Nachname","Versand_Strasse","Versand_Hausnummer","Versand Strasse 2","Versand_PLZ","Versand_Stadt","Versand_Land",' +
        '"Versand_Kontakt","Versand_Telefon","Endkunden_Anrede","Endkunden_Vorname","Endkunden_Nachname","Endkunden_Strasse",' +
        '"Endkunden_Hausnummer","Endkunden Strasse 2","Endkunden_PLZ","Endkunden_Stadt","Endkunden_Land","Endkunden_Kontakt",' +
        '"Endkunden_Telefon","Tracking No.","EAN","Bestellmenge","Gesamtcollianzahl","Collianzahl Artikel","Barcode",' +
        '"Gewicht","Abrechnungsnummer Carrier",'+ConvertText('"KÑufer GLN"')+',"Rechnungs GLN","Sender GLN",'+
        ConvertText('"EmpfÑnger GLN"')+',"Shipping Agent"');

      CLEAR(ShipAddrL);
      NavCSalesHeaderL.RESET;
      NavCSalesHeaderL.SETCURRENTKEY("Sales Document No.");
      NavCSalesHeaderL.SETRANGE("Sales Document No.", SalesOrderHeaderV."No.");
      IF NavCSalesHeaderL.FINDFIRST THEN BEGIN
        CustAddrL[1] := NavCSalesHeaderL."Ship-to Job Title";
        CustAddrL[2] := NavCSalesHeaderL."Ship-to First Name";
        CustAddrL[3] := NavCSalesHeaderL."Ship-to Surname";
        CustAddrL[4] := NavCSalesHeaderL."Ship-to Address";
        CustAddrL[5] := '';
        DHLMgmtL.ParseAddress(NavCSalesHeaderL."Ship-to Address", CustAddrL[4], CustAddrL[5]);
        CustAddrL[6]  := SalesOrderHeaderV."Ship-to Address 2";
        CustAddrL[7]  := NavCSalesHeaderL."Ship-to Post Code";
        CustAddrL[8]  := NavCSalesHeaderL."Ship-to City";
        CustAddrL[9]  := NavCSalesHeaderL."Ship-to Country Code";
        CustAddrL[10] := SalesOrderHeaderV."Ship-to Contact";
        IF CustomerL.GET(SalesOrderHeaderV."Sell-to Customer No.") THEN BEGIN
          CustAddrL[11] := CustomerL."Phone No.";
        END;
      END;

      CompanyInformationL.GET;
      EDIIntegratorSetupL.GET;
      VATRegNoL := CompanyInformationL."VAT Registration No.";;
      GLN_L := EDIIntegratorSetupL."Global Location Number (GLN)";

      FldSepL := ',';
      TxtSepL := '"';
      ParcelsAllLinesL := 0;
      PurchLine.RESET;
      PurchLine.SETRANGE("Document Type", PurchOrderHeaderV."Document Type");
      PurchLine.SETRANGE("Document No.", PurchOrderHeaderV."No.");
      PurchLine.SETRANGE(Type, PurchLine.Type::Item);
      PurchLine.SETFILTER("No.", '<>%1', '');
      PurchLine.SETFILTER(Quantity, '<>0');
      IF PurchLine.FIND('-') THEN
        REPEAT
          IF Item.GET(PurchLine."No.") THEN BEGIN
            Item.CALCFIELDS("Parcels Number");
            IF Item."Parcels Number" = 0 THEN
              ParcelsAllLinesL += 1
            ELSE
              ParcelsAllLinesL += Item."Parcels Number";
          END;
        UNTIL PurchLine.NEXT=0;

      IF PurchLine.FIND('-') THEN
        REPEAT
          IF NOT Item.GET(PurchLine."No.") THEN
            CLEAR(Item);

          // Shipping Agent to be found in Sales Line
          IF NOT
            SalesLineL.GET(
              SalesLineL."Document Type"::Order,
              PurchLine."Special Order Sales No.", PurchLine."Special Order Sales Line No.")
          THEN
            SalesLineL.INIT;

          // Ship-to Address
          IF LocationL.GET(PurchLine."Location Code") THEN BEGIN
            ShipAddrL[1] := LocationL.Name;
            ShipAddrL[2] := LocationL.Address;
            ShipAddrL[3] := LocationL."Post Code";
            ShipAddrL[4] := LocationL.City;
            ShipAddrL[5] := LocationL."Country/Region Code";
            ShipAddrL[6] := LocationL."Phone No.";
            ShipAddrL[7] := LocationL."GLN/ILN";
            // H3903  20.03.15  MKR ++++++++++++++++++++++++++++++++
            DHLMgmtL.ParseAddress(LocationL.Address,ShipAddrL[2],ShipAddrL[8]);

            IF LocationL."Hermes Location Type" = LocationL."Hermes Location Type"::"Cross-Dock" THEN BEGIN
              IF PurchLine."Special Order" THEN
                OrderNoL := PurchLine."Special Order Sales No."
              ELSE
                OrderNoL := PurchLine."Sales Order No.";

              IF SalesHeaderL.GET(SalesHeaderL."Document Type"::Order, OrderNoL) THEN
                // Changes the LocationL pointer to the shipping address location
                HesDepAssDirInjL.GetSalesOrderDILocation(SalesHeaderL, LocationL);
            END;
            // H3903  20.03.15  MKR --------------------------------
          END;

          // Build Bar Code String
          // H3806, H3878 12.03.15 tec-ar +++++++++++++
          ParcelNoForBarcodeL := HesTFormLabMgt.CalcParcelNosBeforeLines(PurchLine,FALSE);
          // H3806, H3878 12.03.15 tec-ar -------------

          Item.CALCFIELDS("Parcels Number");
          IF Item."Parcels Number" = 0 THEN
            ParcelsTotalL := 1
          ELSE
            ParcelsTotalL := Item."Parcels Number";

          BarcodeList := '';
          FOR ParcelCountL := 1 TO ParcelsTotalL DO BEGIN
            //BarcodeList += PurchLine."Special Order Sales No." + FORMAT(PurchLine."Special Order Sales Line No.") +
            //               HesTFormLabMgt.FormatIntToLeadZero(ParcelCountL,3);
            // H1698, H3806, H3878 12.03.15 tec-ar +++++++++++++
            BarcodeList += HesTFormLabMgt.GenerateHermesBarcode(PurchLine,ParcelNoForBarcodeL);
            // H1698, H3806, H3878 12.03.15 tec-ar -------------
            IF ParcelCountL < ParcelsTotalL THEN
              BarcodeList += ',';
          END;

          // Write PurchLine to CSV File
          ExpFile.WRITE(
            TxtSepL + PurchOrderHeaderV."No." + TxtSepL + FldSepL +
            TxtSepL + SalesOrderHeaderV."No." + TxtSepL + FldSepL +
            TxtSepL + LocationL."Branch Code" + TxtSepL + FldSepL +
            TxtSepL + Item."Vendor Item No." + Item."Vendor Item No. Add." + TxtSepL + FldSepL +
            TxtSepL + PurchLine."No." + TxtSepL + FldSepL +
            TxtSepL + ConvertText(PurchLine.Description +' '+ PurchLine."Description 2") + TxtSepL + FldSepL +
            TxtSepL + '' + TxtSepL + FldSepL +
            TxtSepL + '' + TxtSepL + FldSepL +
            TxtSepL + ConvertText(ShipAddrL[1]) + TxtSepL + FldSepL +
            TxtSepL + ConvertText(ShipAddrL[2]) + TxtSepL + FldSepL +
            TxtSepL + ConvertText(ShipAddrL[8]) + TxtSepL + FldSepL +
            TxtSepL + '' + TxtSepL + FldSepL +
            TxtSepL + ConvertText(ShipAddrL[3]) + TxtSepL + FldSepL +
            TxtSepL + ConvertText(ShipAddrL[4]) + TxtSepL + FldSepL +
            TxtSepL + ConvertText(ShipAddrL[5]) + TxtSepL + FldSepL +
            TxtSepL + '' + TxtSepL + FldSepL +
            TxtSepL + ConvertText(ShipAddrL[6]) + TxtSepL + FldSepL +
            TxtSepL + ConvertText(CustAddrL[1]) + TxtSepL + FldSepL +
            TxtSepL + ConvertText(CustAddrL[2]) + TxtSepL + FldSepL +
            TxtSepL + ConvertText(CustAddrL[3]) + TxtSepL + FldSepL +
            TxtSepL + ConvertText(CustAddrL[4]) + TxtSepL + FldSepL +
            TxtSepL + ConvertText(CustAddrL[5]) + TxtSepL + FldSepL +
            TxtSepL + ConvertText(CustAddrL[6]) + TxtSepL + FldSepL +
            TxtSepL + ConvertText(CustAddrL[7]) + TxtSepL + FldSepL +
            TxtSepL + ConvertText(CustAddrL[8]) + TxtSepL + FldSepL +
            TxtSepL + ConvertText(CustAddrL[9]) + TxtSepL + FldSepL +
            TxtSepL + ConvertText(CustAddrL[10]) + TxtSepL + FldSepL +
            TxtSepL + ConvertText(CustAddrL[11]) + TxtSepL + FldSepL +
            TxtSepL + BarcodeList + TxtSepL + FldSepL +
            TxtSepL + FORMAT(Item.EAN) + TxtSepL + FldSepL +
            FORMAT(PurchLine.Quantity) + FldSepL +
            FORMAT(ParcelsAllLinesL) + FldSepL +
            FORMAT(ParcelsTotalL) + FldSepL +
            TxtSepL + BarcodeList + TxtSepL + FldSepL +
            FORMAT(PurchLine."Gross Weight") + FldSepL +
            TxtSepL + '' + TxtSepL + FldSepL +                    // Abrechnungsnummer Carrier
            TxtSepL + GLN_L + TxtSepL + FldSepL +
            TxtSepL + GLN_L + TxtSepL + FldSepL +
            TxtSepL + GLN_L + TxtSepL + FldSepL +
            TxtSepL + ShipAddrL[7] + TxtSepL + FldSepL +
            TxtSepL + SalesLineL."Shipping Agent Code");
        UNTIL PurchLine.NEXT = 0;
      ExpFile.CLOSE;
      // H1698 12.01.15 MKR ---------------------------------------------
    END;

    PROCEDURE CheckAlternativeEMail@1000000010(PurchHeader@1000000000 : Record 38) : Boolean;
    VAR
      Vendor@1000000001 : Record 23;
    BEGIN
      //a/gob-sfe/04.07.2012
      Vendor.GET(PurchHeader."Buy-from Vendor No.");
      EXIT(Vendor."Alternative E-Mail");
      //e/gob-sfe/04.07.2012
    END;

    PROCEDURE CreateSplittedPurchOrderMail@1000000008(OriginalDocNo@1000000000 : Code[20]);
    VAR
      LT_MailITSetup@1000000001 : Record 75402;
      L_Text001@1000000002 : TextConst 'DEU=Umlegung der Bestellung';
      MailText@1000000003 : Text[250];
      DocName2@1000000004 : Text[250];
      PurchOrderHeader@1000000005 : Record 38;
      ReportID@1000000006 : Integer;
      ClientFso@1000000010 : Automation "{420B2830-E718-11CF-893D-00A0C9054228} 1.0:{0D43FE01-F093-11CF-8940-00A0C9054228}:'Microsoft Scripting Runtime'.FileSystemObject";
      ClientUtil@1000000009 : Automation "{1639594D-2135-4248-BE9B-FB55210F8AD8} 1.0:{D7CD856D-3889-4F19-BBBA-7608CF34EFB6}:'ExpandIT Dynamics Role Tailored Client Utility'.Utility";
      DivUtil@1000000008 : Automation "{2CD8D481-009C-4685-98EA-BC16452327B2} 1.0:{F1BBE10B-6E48-41B0-9EF6-F428C7A48655}:'Dynovus_SHA1Encryption'.SHA1EncryptAutomation";
      MailIT@1000000007 : OCX "{C8C4804C-89BA-4291-AB58-4C6050B65175}:'ExpandIT.MailIT2'";
      JobID@1000000011 : Text[50];
      ClientTempFolder@1000000014 : Text[250];
      ClientPdfFileName@1000000013 : Text[250];
      ClientFileName@1000000012 : Text[250];
      FormatAddr@1000000015 : Codeunit 365;
      ShipAddr@1000000016 : ARRAY [8] OF Text[80];
      L_Text010@1000000049 : TextConst 'DEU=Sehr geehrte(r) %1,';
      L_Text010a@1000000048 : TextConst 'DEU=Sehr geehrte Damen und Herren,';
      L_Text011@1000000047 : TextConst 'DEU=anbei erhalten Sie eine Bestellung auf Rechnung %1';
      L_Text012@1000000046 : TextConst 'DEU=Anbei der Lieferschein, der der Sendung beigefÅgt werden kann.';
      L_Text013@1000000045 : TextConst 'DEU=Unsere Bestellnummer: %1';
      L_Text014@1000000044 : TextConst 'DEU=Versandadresse:';
      L_Text015@1000000043 : TextConst 'DEU=Bitte schicken Sie uns eine AuftragsbestÑtigung innerhalb von 24h mit dem geplanten Liefertermin und der bestÑtigten Anzahl als Antwort auf diese E-Mail.';
      L_Text016@1000000042 : TextConst 'DEU=Vielen Dank fÅr die Zusammenarbeit mit %1 !';
      L_Text017@1000000041 : TextConst 'DEU=Mit freundlichen GrÅ·en';
      L_Text018@1000000040 : TextConst 'DEU=Tel: %1 | Fax: %2';
      L_Text019@1000000039 : TextConst 'DEU=die Bestellung %1 wurde aufgrund Ihrer AuftragsbestÑtigung/Avisierung in mehrere Einzelbestellungen gesplittet. Die neuen Bestellnummern lauten wie folgt:';
      L_Text020@1000000038 : TextConst 'DEU=Bitte beachten Sie, dass es fÅr eine reibungslose Anlieferung notwendig ist, die o.g. Bestellnummern auf den entsprechenden Lieferscheinen zu hinterlegen.';
      L_Text021@1000000037 : TextConst 'DEU=Bitte beachten Sie auch, dass Sie spÑtestens %1 vor Anlieferung Ihre Anlieferung avisieren.';
      L_Text022@1000000036 : TextConst 'DEU=Bitte liefern Sie an folgende Adresse:';
      L_Text023@1000000035 : TextConst 'DEU=Entladezeit: %1';
      L_Text024@1000000034 : TextConst 'DEU=Ansprechpartner fÅr die Lieferavisierung ist %1.';
      L_Text025@1000000033 : TextConst 'DEU="Bitte setzen Sie sich zwecks Avisierung rechtzeitig mit unserem Team in Verbindung: "';
      L_TextI006@1000000018 : TextConst 'DEU=(Montag - Freitag 09:00 - 18:00 Uhr)';
      Text040@1000000017 : TextConst 'DAN=Der blev ikke dannet et PDF-dokument.;DEU=Es wurde kein PDF Dokument erzeugt.;ENU=No PDF Document was generated.;ESP=No se gener¢ ning£n documento PDF.;FRA=Aucun document PDF n''a ÇtÇ crÇÇ.;SVE=Inget PDF-dokument skapades.';
      LT_Location@1000000050 : Record 14;
      LT_ExtTextLine@1000000051 : Record 280;
      DefaultPrinterChanged@1000000052 : Boolean;
      OldDefaultPrinter@1000000053 : Text[250];
      L_Port@1000000054 : Integer;
      PurchOrderHeader2@1000000055 : Record 38;
      ReportLoc@1000000056 : Report 405;
      PurchOrderHeader3@1000000057 : Record 38;
      L_Text030@1000000019 : TextConst 'DEU=Die neuen PO-Nummern lauten wie folgt:';
      OrderNo@1000000020 : ARRAY [20] OF Code[20];
      NoOfOrders@1000000021 : Integer;
      "*HME*******"@1000000022 : Integer;
      MailITSetupL@1000000023 : Record 75402;
      PurchaseMailHTMLPathL@1000000025 : Record 50339;
    BEGIN
      //A/gob-mab/p0072/23.07.12
      LT_MailITSetup.GET;
      LT_MailITSetup.TESTFIELD("User Name (General)");
      LT_MailITSetup.TESTFIELD("Password (General)");
      LT_MailITSetup.TESTFIELD("Mail Server");
      UserSetup.GET(USERID);
      UserSetup.TESTFIELD("PDF Creator");

      PurchOrderHeader.RESET;
      PurchOrderHeader.SETRANGE("Document Type",PurchOrderHeader."Document Type" :: Order);
      PurchOrderHeader.SETRANGE("No.",OriginalDocNo);
      PurchOrderHeader.FINDFIRST;

      LT_Location.GET(PurchOrderHeader."Location Code");
      MailText := L_Text001 + ' ' + PurchOrderHeader."No.";

      CREATE(ClientFso,TRUE,TRUE);
      CREATE(ClientUtil,TRUE,TRUE);
      CREATE(DivUtil,TRUE,TRUE);
      JobID := MailIT.CreateGUID();

      // Get folder for temporary files on the client
      ClientTempFolder := ClientUtil.GetTempPath();
      IF ClientTempFolder = '' THEN
        ERROR('Unable to create the path of the temporary folder.');
      ClientTempFolder := ClientTempFolder + 'ExpMail';
      IF NOT ClientFso.FolderExists(ClientTempFolder) THEN
        ClientFso.CreateFolder(ClientTempFolder);
      ClientTempFolder := ClientTempFolder + '\' + JobID;
      IF NOT ClientFso.FolderExists(ClientTempFolder) THEN
        ClientFso.CreateFolder(ClientTempFolder);

      // Locate bill to customer
      Vend.GET(PurchOrderHeader."Buy-from Vendor No.");
      CompanyInfo.GET;

      // Initialize the email
      IF SendMailDirect THEN
        MailIT.SetService('SMTP')
      ELSE
        MailIT.SetService(FORMAT(UserSetup."Mail Client"));

      MailIT.SetFrom(LT_MailITSetup."Purchase E-Mail BCC (Location)");

      //EmpfÑnger... BCC...
      IF NOT LT_MailITSetup."Test Mode" THEN
        MailIT.AddRecipientBCC(LT_MailITSetup."Purchase E-Mail BCC (Location)",LT_MailITSetup."Purchase E-Mail BCC (Location)")
      ELSE
        MailIT.AddRecipientBCC(LT_MailITSetup."Test E-Mail BCC",LT_MailITSetup."Test E-Mail BCC");

      IF (Vend."Primary Contact No. (Order)" <> '') AND Cont.GET(Vend."Primary Contact No. (Order)") AND (Cont."E-Mail" <> '') THEN
        Vend."E-Mail" := Cont."E-Mail";

      Vend.TESTFIELD("E-Mail");
      IF Vend."E-Mail" <> '' THEN
        IF LT_MailITSetup."Test Mode" THEN
          MailIT.AddRecipient(LT_MailITSetup."Test E-Mail",LT_MailITSetup."Test E-Mail")
        ELSE
          MailIT.AddRecipient(Vend."E-Mail",Vend."E-Mail");

      MailIT.SetSubject(MailText);

      // Add some HTML to the mail body
      PurchOrderHeader."Ship-to Contact" := '';
      PurchOrderHeader."Ship-to Country/Region Code" := '';
      FormatAddr.PurchHeaderShipTo(ShipAddr,PurchOrderHeader);

      MailIT.AppendHTML('<font face="Arial","sans-serif">');
      //MailIT.AppendHTML('<table width=744 border=0>');
      IF PurchOrderHeader."Buy-from Contact" <> '' THEN
        MailIT.AppendHTML(STRSUBSTNO(L_Text010,PurchOrderHeader."Buy-from Contact") + '<br /><br />')
      ELSE
        MailIT.AppendHTML(STRSUBSTNO(L_Text010a) + '<br /><br />');

      // text fÅr Umlegung
      MailIT.AppendHTML(STRSUBSTNO(L_Text019,PurchOrderHeader."No.") + '<br /><br />');
      //MailIT.AppendHTML('<b>'+ L_Text020 + '</b><br /><br />');
      //Neue PO Nummer:
      SetOrderNo(OrderNo,OriginalDocNo,NoOfOrders);

      //MailIT.AppendHTML(L_Text030 + '<br /><br />');

      FOR i := 1 TO NoOfOrders DO
        IF OrderNo[i] <> '' THEN
          //A/P0169
          //IF NoOfOrders <> i THEN
          //E/P0169
          MailIT.AppendHTML('- ' + OrderNo[i] + '<br /><br />');

      MailIT.AppendHTML(L_Text020 + '<br /><br />');

      MailIT.AppendHTML(L_Text022 + '<br /> <br />');


      //FormatAddr.PurchHeaderShipTo(ShipAddr,PurchOrderHeader);

        FOR i := 1 TO 8 DO
          IF ShipAddr[i] <> '' THEN
            MailIT.AppendHTML(ShipAddr[i] + '<br />');


        //Verteiler Avisierung Text
        //a/gob-sfe/P0092
        {
        MailIT.AppendHTML('<br /><br />' + L_Text025 + '<br /><br />');
        MailIT.AppendHTML(STRSUBSTNO(L_Text018,LT_Location."Phone No. 2",LT_Location."Fax No.") + '<br />');
        MailIT.AppendHTML('E-Mail: ' + LT_Location."E-Mail" + '<br /><br />');
        }
        MailIT.AppendHTML('<br /><br />');
        LT_ExtTextLine.SETRANGE("Table Name",LT_ExtTextLine."Table Name"::"Standard Text");
        LT_ExtTextLine.SETRANGE("No.",'BESTAVI');
        IF LT_ExtTextLine.FINDSET THEN REPEAT
          MailIT.AppendHTML(LT_ExtTextLine."Text (Long)" + '<br />');
        UNTIL LT_ExtTextLine.NEXT = 0;
        MailIT.AppendHTML('<br /><br />');
        //e/gob-sfe/P0099

        LT_ExtTextLine.SETRANGE("Table Name",LT_ExtTextLine."Table Name"::"Standard Text");
        LT_ExtTextLine.SETRANGE("No.",'BESTTEXT');
        IF LT_ExtTextLine.FINDSET THEN REPEAT
          MailIT.AppendHTML(LT_ExtTextLine."Text (Long)" + '<br />');
        UNTIL LT_ExtTextLine.NEXT = 0;

        MailIT.AppendHTML(L_Text017 + '<br />');
        MailIT.AppendHTML(LT_MailITSetup."Purchase Group (Direct)" + '<br />');
      MailIT.AppendHTML('</p>');

      // read footer file
      //H1671 11.03.15 ++++++++++++++++++++++++++++++++++++++
      //MailIT.LoadHTMLBody('C:\Mailhtml\footer.html');
      IF MailITSetupL.GET THEN BEGIN
        IF PurchaseMailHTMLPathL.GET(MailITSetupL."Splitted Order Mail Code",PurchOrderHeader."Language Code",
                                       PurchaseMailHTMLPathL.Type::footer) THEN
          MailIT.LoadHTMLBody(PurchaseMailHTMLPathL.Path)
        ELSE
          IF PurchaseMailHTMLPathL.GET(MailITSetupL."Splitted Order Mail Code",'DEU',PurchaseMailHTMLPathL.Type::footer) THEN
            MailIT.LoadHTMLBody(PurchaseMailHTMLPathL.Path)
      END;
      //H1671 11.03.15 --------------------------------------


      // Prepare to print it to PDF
      ClientPdfFileName := ClientTempFolder + '\' + DocName2 + '.pdf';
      IF ClientFso.FileExists(ClientPdfFileName) THEN
        ClientFso.DeleteFile(ClientPdfFileName);
      MailIT.PDFParameter('Output',ClientPdfFileName);
      MailIT.PDFParameter('ShowPDF','no');
      MailIT.PDFParameter('Title',DocName2);
      MailIT.PDFParameter('Author',USERID);
      MailIT.PDFPreparePrinter();
      IF NOT DefaultPrinterChanged THEN BEGIN
        IF OldDefaultPrinter = '' THEN
          OldDefaultPrinter := MailIT.GetDefaultPrinter();
        IF OldDefaultPrinter <> UserSetup."PDF Creator" THEN BEGIN
          MailIT.SetDefaultPrinter(UserSetup."PDF Creator");
          DefaultPrinterChanged := TRUE;
        END;
      END;

      PurchOrderHeader2.RESET;
      PurchOrderHeader2.SETRANGE("Document Type",PurchOrderHeader2."Document Type" :: Order);
      PurchOrderHeader2.SETFILTER("No.",OriginalDocNo + '*');
      IF PurchOrderHeader2.FIND('-') THEN BEGIN
        DocName2 := 'umgelegte Bestellung_'+  PurchOrderHeader2."No.";

        ClientPdfFileName := ClientTempFolder + '\' + DocName2 + '.pdf';
        IF ClientFso.FileExists(ClientPdfFileName) THEN
          ClientFso.DeleteFile(ClientPdfFileName);
        MailIT.PDFParameter('Output',ClientPdfFileName);
        MailIT.PDFParameter('ShowPDF','no');
        MailIT.PDFParameter('Title',DocName2);
        MailIT.PDFParameter('Author',USERID);
        MailIT.PDFPreparePrinter();
        IF NOT DefaultPrinterChanged THEN BEGIN
          IF OldDefaultPrinter = '' THEN
            OldDefaultPrinter := MailIT.GetDefaultPrinter();
          IF OldDefaultPrinter <> UserSetup."PDF Creator" THEN BEGIN
            MailIT.SetDefaultPrinter(UserSetup."PDF Creator");
            DefaultPrinterChanged := TRUE;
          END;
        END;
        CLEAR(ReportLoc);
        ReportLoc.SETTABLEVIEW(PurchOrderHeader2);
        ReportLoc.USEREQUESTFORM(FALSE);
        ReportLoc.RUNMODAL;

        //REPORT.RUN(ReportID,FALSE,TRUE,PurchOrderHeader2);
        IF (MailIT.WaitForFile(ClientPdfFileName,20000) = 0) THEN
          ERROR(Text040);
        MailIT.AddAttachment(ClientPdfFileName);
      END;

      PurchOrderHeader3.RESET;
      PurchOrderHeader3.SETRANGE("Document Type", PurchOrderHeader3."Document Type" :: Order);
      PurchOrderHeader3.SETRANGE("No.",OriginalDocNo + '*');
      IF PurchOrderHeader3.FIND('-') THEN BEGIN
        REPEAT
          PurchOrderHeader3."Split Email sent" := TRUE;
          PurchOrderHeader3.MODIFY;
        UNTIL PurchOrderHeader3.NEXT = 0;
      END;

      //MailIT.AddAttachment('D:\Lagerbestellungen\Anhang\20120413_FPCommerce_Avisierungsrichtlinien.pdf');

      // Restore the user's default printer selection
      IF DefaultPrinterChanged THEN
        MailIT.SetDefaultPrinter(OldDefaultPrinter);

      IF SendMailDirect THEN BEGIN
        MailIT.SetServer(LT_MailITSetup."Mail Server");
        IF LT_MailITSetup."Server Port" = '' THEN
          L_Port := 25
        ELSE
          EVALUATE(L_Port,LT_MailITSetup."Server Port");
        MailIT.SetPort(L_Port);
        MailIT.SetLogin(LT_MailITSetup."User Name (Location)");
        MailIT.SetPassword(LT_MailITSetup."Password (Location)");
        MailIT.Send();
      END ELSE
        MailIT.Display();

      // Remove the temporary folder and it's content.
      // If you use MAPI and Thunderbird or other MAPI email clints the they may require that
      // the image files remain on the disk until the mail is sent.
      IF FORMAT(UserSetup."Mail Client") <> 'MAPI' THEN
        IF ClientFso.FolderExists(ClientTempFolder) THEN
          ClientFso.DeleteFolder(ClientTempFolder, FALSE);
      CLEAR(ClientFso);
      CLEAR(ClientUtil);
      CLEAR(DivUtil);

      //E/gob-mab/p0072/23.07.12
    END;

    PROCEDURE SetOrderNo@1000000015(VAR OrderNo@1000000000 : ARRAY [20] OF Code[20];OriginalOrderNo@1000000001 : Code[20];VAR counter@1000000003 : Integer);
    VAR
      PurchOrderHeader@1000000002 : Record 38;
    BEGIN
      counter := 0;
      PurchOrderHeader.RESET;
      PurchOrderHeader.SETRANGE("Document Type", PurchOrderHeader."Document Type" :: Order);
      PurchOrderHeader.SETFILTER("No.",OriginalOrderNo + '*');
      IF PurchOrderHeader.FIND('-') THEN BEGIN
        counter := 0;
        REPEAT
          counter := counter + 1;
          OrderNo[counter] := PurchOrderHeader."No.";
        UNTIL PurchOrderHeader.NEXT = 0;
      END;
    END;

    PROCEDURE RealizePaymentAdviseMail@1000000011(VAR PmtLedgEntr@1000000000 : Record 5001902);
    VAR
      PmtLine@1000000001 : Record 5001903;
      LastAccNo@1000000002 : Code[20];
      LocVend@1000000003 : Record 23;
      GOB001@1000000004 : TextConst 'DEU=Payment Avis already sent per Mail. Do you want to send again?';
      UpdatePaymentLedgerEntry@1000000005 : Codeunit 50117;
    BEGIN
      LastAccNo := '';

      //CreatePaymentAdviseMail(PmtLedgEntr."Entry No.",'70110');

      IF PmtLedgEntr."Avis sent per Mail" THEN
        IF NOT CONFIRM(GOB001) THEN EXIT;

      PmtLine.RESET;
      PmtLine.SETCURRENTKEY("Payment No.","Account No.");
      PmtLine.SETRANGE("Payment No.",PmtLedgEntr."Payment No.");
      PmtLine.SETRANGE("Account Type",PmtLine."Account Type"::Vendor);
      PmtLine.SETRANGE("AVIS Letter",TRUE);
      IF PmtLine.FIND('-') THEN REPEAT
        IF PmtLine."Account No." <> LastAccNo THEN BEGIN
          LocVend.GET(PmtLine."Account No.");
          IF (LocVend."E-Mail Payment Advise" <> '') THEN
      //      CreatePaymentAdviseMail(PmtLedgEntr."Entry No.",PmtLine."Account No.");
          LastAccNo := PmtLine."Account No.";
          END;
        UNTIL PmtLine.NEXT = 0;

      //S/P1125
      //PmtLedgEntr."Avis sent per Mail" := TRUE;
      //PmtLedgEntr.MODIFY;
      UpdatePaymentLedgerEntry.RUN(PmtLedgEntr);
      //E/P1125
    END;

    PROCEDURE CreatePaymentAdviseMail@1000000012(PmtLedgEntryNo@1000000030 : Integer;VendNo@1000000000 : Code[20]);
    VAR
      LT_MailITSetup@1000000028 : Record 75402;
      LT_WebSiteTransfer@1000000034 : Record 50033;
      LT_WebSource@1000000026 : Record 5059;
      LT_Location@1000000044 : Record 14;
      LT_LabelDHL@1000000045 : Record 50020;
      FormatAddr@1000000023 : Codeunit 365;
      ClientFso@1000000005 : Automation "{420B2830-E718-11CF-893D-00A0C9054228} 1.0:{0D43FE01-F093-11CF-8940-00A0C9054228}:'Microsoft Scripting Runtime'.FileSystemObject";
      ClientUtil@1000000003 : Automation "{1639594D-2135-4248-BE9B-FB55210F8AD8} 1.0:{D7CD856D-3889-4F19-BBBA-7608CF34EFB6}:'ExpandIT Dynamics Role Tailored Client Utility'.Utility";
      DivUtil@1000000054 : Automation "{2CD8D481-009C-4685-98EA-BC16452327B2} 1.0:{F1BBE10B-6E48-41B0-9EF6-F428C7A48655}:'Dynovus_SHA1Encryption'.SHA1EncryptAutomation";
      MailIT@1000000006 : OCX "{C8C4804C-89BA-4291-AB58-4C6050B65175}:'ExpandIT.MailIT2'";
      ShipAddr@1000000012 : ARRAY [8] OF Text[80];
      MailText@1000000032 : Text[250];
      DocName@1000000016 : Text[250];
      DocName2@1000000021 : Text[250];
      JobID@1000000007 : Text[50];
      ClientTempFolder@1000000004 : Text[250];
      ClientPdfFileName@1000000015 : Text[250];
      ClientFileName@1000000022 : Text[250];
      OldDefaultPrinter@1000000013 : Text[250];
      DefaultPrinterChanged@1000000014 : Boolean;
      ReportID@1000000001 : Integer;
      L_Text001@1000000002 : TextConst 'DEU=Vielen Dank fÅr Ihre Bestellung Nr.:;ENU=Order No.:';
      L_Text010@1000000010 : TextConst 'DEU=Sehr geehrte(r) %1,';
      L_Text010a@1000000063 : TextConst 'DEU=Sehr geehrte Damen und Herren,';
      L_Text016@1000000025 : TextConst 'DEU=Vielen Dank fÅr die Zusammenarbeit mit %1 !';
      L_Text017@1000000027 : TextConst 'DEU=Mit freundlichen GrÅ·en';
      L_Text018@1000000033 : TextConst 'DEU=Tel: %1 | Fax: %2';
      L_TextI001@1000000035 : TextConst 'DEU=Impressum';
      L_TextI002@1000000036 : TextConst 'DEU=Eingetragen beim %1';
      L_TextI004@1000000038 : TextConst 'DEU=USt-ID: %1';
      L_TextI005@1000000039 : TextConst 'DEU=GeschÑftsfÅhrer %1, %2';
      L_TextI006@1000000040 : TextConst 'DEU=(Montag - Freitag 09:00 - 18:00 Uhr)';
      Text040@1000000019 : TextConst 'DAN=Der blev ikke dannet et PDF-dokument.;DEU=Es wurde kein PDF Dokument erzeugt.;ENU=No PDF Document was generated.;ESP=No se gener¢ ning£n documento PDF.;FRA=Aucun document PDF n''a ÇtÇ crÇÇ.;SVE=Inget PDF-dokument skapades.';
      LinkID@1000000043 : Code[10];
      L_MaxKW@1000000061 : Text[10];
      L_Hash@1000000062 : Text[250];
      L_Text011@1108200000 : TextConst 'DEU=anbei erhalten Sie Ihre Rechnung %1.';
      port@1108200001 : Integer;
      L_Port@1108200002 : Integer;
      LocPmtLedgEntr@1000000018 : Record 5001902;
      LocPmtLine@1000000008 : Record 5001903;
      GOBLocText001@1000000009 : TextConst 'DEU=Zahlungsavis';
      GOBLocText002@1000000011 : TextConst 'DEU=anbei Åbersenden wir das Avis zu unserer Zahlung vom %1.';
      GOBLocText003@1000000017 : TextConst 'DEU=FÅr RÅckfragen stehen wir gerne zur VerfÅgung.';
    BEGIN
      //A/temp
      SendMailDirect := TRUE;
      //E/temp

      LT_MailITSetup.GET;
      {***
      LT_MailITSetup.TESTFIELD("User Name Home24 (Invoice)");
      LT_MailITSetup.TESTFIELD("Password Home24 (Invoice)");
      LT_MailITSetup.TESTFIELD("Invoice E-Mail Home24");
      LT_MailITSetup.TESTFIELD("Invoice E-Mail Home24 BCC");
      ***}
      LT_MailITSetup.TESTFIELD(LT_MailITSetup."User Name Home24 (Paymt Avise)");
      LT_MailITSetup.TESTFIELD(LT_MailITSetup."Password Home24 (Paymt Avise)");
      LT_MailITSetup.TESTFIELD(LT_MailITSetup."Payment Avise E-Mail Home24");


      LT_MailITSetup.TESTFIELD("Mail Server Home24");
      LT_MailITSetup.TESTFIELD("Server Port Home24");

      Vend.GET(VendNo);
      LocPmtLedgEntr.GET(PmtLedgEntryNo);

      UserSetup.GET(USERID);
      UserSetup.TESTFIELD("PDF Creator");


      MailText := GOBLocText001;

      ReportID := 50040;

      CREATE(ClientFso,TRUE,TRUE);
      CREATE(ClientUtil,TRUE,TRUE);
      CREATE(DivUtil,TRUE,TRUE);
      JobID := MailIT.CreateGUID();

      // Get folder for temporary files on the client
      ClientTempFolder := ClientUtil.GetTempPath();
      IF ClientTempFolder = '' THEN
        ERROR('Unable to create the path of the temporary folder.');
      ClientTempFolder := ClientTempFolder + 'ExpMail';
      IF NOT ClientFso.FolderExists(ClientTempFolder) THEN
        ClientFso.CreateFolder(ClientTempFolder);
      ClientTempFolder := ClientTempFolder + '\' + JobID;
      IF NOT ClientFso.FolderExists(ClientTempFolder) THEN
        ClientFso.CreateFolder(ClientTempFolder);


      CompanyInfo.GET;

      // Initialize the email
      IF SendMailDirect THEN
        MailIT.SetService('SMTP')
      ELSE
        MailIT.SetService(FORMAT(UserSetup."Mail Client"));


      {
      IF LT_MailITSetup."Accounting E-Mail" <> ''
        THEN MailIT.SetFrom(LT_MailITSetup."Accounting E-Mail")
        ELSE MailIT.SetFrom(LT_MailITSetup."Sales E-Mail");
      }

      MailIT.SetFrom(LT_MailITSetup."Accounting E-Mail");
      //A/gob-ko/P0391/GOB1.32/27.09.12
      {
      //E/gob-ko/P0391/GOB1.32/27.09.12
      IF NOT LT_MailITSetup."Test Mode" THEN
        MailIT.AddRecipientBCC(LT_MailITSetup."Accounting E-Mail",LT_MailITSetup."Accounting E-Mail")
      ELSE
        MailIT.AddRecipientBCC(LT_MailITSetup."Test E-Mail BCC",LT_MailITSetup."Test E-Mail BCC");
      //A/gob-ko/P0391/GOB1.32/27.09.12
      }
      //E/gob-ko/P0391/GOB1.32/27.09.12


      IF NOT LT_MailITSetup."Test Mode" THEN BEGIN
        Vend.TESTFIELD("E-Mail Payment Advise");
        IF Vend."E-Mail Payment Advise" <> '' THEN
          MailIT.AddRecipient(Vend."E-Mail Payment Advise",Vend."E-Mail Payment Advise");
      END ELSE BEGIN
        MailIT.AddRecipient(LT_MailITSetup."Test E-Mail",LT_MailITSetup."Test E-Mail");
        END;

      MailIT.SetSubject(MailText);

      // Add some HTML to the mail body
      MailIT.LoadHTMLBody('C:\Mailhtml\header.html');
      MailIT.AppendHTML('<br /><br />');

      //A/P0305
      //MailIT.AppendHTML('<table width=744 border=0>');
      MailIT.AppendHTML('<table width=590 border=0>');
      //E/P0305
      MailIT.AppendHTML(STRSUBSTNO(L_Text010a) + '<br /><br />');
      MailIT.AppendHTML('<br /><br />');
      MailIT.AppendHTML(STRSUBSTNO(GOBLocText002,LocPmtLedgEntr."Payment Date") + '<br /><br />');
      MailIT.AppendHTML(STRSUBSTNO(GOBLocText003) + '<br /><br />');



      // read footer file
      MailIT.LoadHTMLBody('C:\Mailhtml\footer.html');

      // Prepare to print it to PDF
      ClientPdfFileName := ClientTempFolder + '\' + DocName + '.pdf';
      IF ClientFso.FileExists(ClientPdfFileName) THEN
        ClientFso.DeleteFile(ClientPdfFileName);
      MailIT.PDFParameter('Output',ClientPdfFileName);
      MailIT.PDFParameter('ShowPDF','no');
      MailIT.PDFParameter('Title',DocName);
      MailIT.PDFParameter('Author',USERID);
      MailIT.PDFPreparePrinter();
      IF NOT DefaultPrinterChanged THEN BEGIN
        IF OldDefaultPrinter = '' THEN
          OldDefaultPrinter := MailIT.GetDefaultPrinter();
        IF OldDefaultPrinter <> UserSetup."PDF Creator" THEN BEGIN
          MailIT.SetDefaultPrinter(UserSetup."PDF Creator");
          DefaultPrinterChanged := TRUE;
        END;
      END;

      LocPmtLine.RESET;
      LocPmtLine.SETFILTER("Payment No.",STRSUBSTNO('%1',PmtLedgEntryNo));
      LocPmtLine.SETRANGE("Account No.",VendNo);
      LocPmtLine.SETRANGE("AVIS Letter",TRUE);

      REPORT.RUNMODAL(ReportID,FALSE,TRUE,LocPmtLine);
      IF (MailIT.WaitForFile(ClientPdfFileName,20000) = 0) THEN
        ERROR(Text040 + '2');
      MailIT.AddAttachment(ClientPdfFileName);


      // Restore the user's default printer selection
      IF DefaultPrinterChanged THEN
        MailIT.SetDefaultPrinter(OldDefaultPrinter);



      IF SendMailDirect THEN BEGIN
        MailIT.SetServer(LT_MailITSetup."Mail Server Home24");

        IF LT_MailITSetup."Server Port Home24" = '' THEN
          L_Port := 25
        ELSE
          EVALUATE(L_Port,LT_MailITSetup."Server Port Home24");

        MailIT.SetPort(L_Port);
        //H0709 28.11.13 MBY +++++++++++++
        IF LT_MailITSetup."Authentication Home24" THEN BEGIN
          MailIT.UseSSL(1);
          MailIT.SetLogin(LT_MailITSetup."User Name Home24 (Paymt Avise)");
          MailIT.SetPassword(LT_MailITSetup."Password Home24 (Paymt Avise)");
        END;
        //H0709 28.11.13 MBY -------------

        MailIT.Send();
      END ELSE
        MailIT.Display();

      // Remove the temporary folder and it's content.
      // If you use MAPI and Thunderbird or other MAPI email clints the they may require that
      // the image files remain on the disk until the mail is sent.
      IF FORMAT(UserSetup."Mail Client") <> 'MAPI' THEN
        IF ClientFso.FolderExists(ClientTempFolder) THEN
          ClientFso.DeleteFolder(ClientTempFolder, FALSE);
      CLEAR(ClientFso);
      CLEAR(ClientUtil);
      CLEAR(DivUtil);
    END;

    PROCEDURE "**HME*************************"@1000000013();
    BEGIN
    END;

    PROCEDURE CreateSalesWhseReturnConfirm@1000000019(SalesReturnHeaderV@1000000030 : Record 36);
    VAR
      AdminMailQueueSetupL@1000000018 : Record 50092;
      CustomerL@1000000004 : Record 18;
      ExtTextLinesL@1000000014 : Record 280;
      MailIT@1000000006 : OCX "{C8C4804C-89BA-4291-AB58-4C6050B65175}:'ExpandIT.MailIT2'";
      RecipientNameL@1000000005 : Text[50];
      LineTextL@1000000013 : Text[150];
      LineTypeL@1000000012 : Text[10];
      SubjecTextL@1000000011 : Text[250];
      PortL@1000000001 : Integer;
      LoopCounterL@1000000000 : Integer;
      PositionL@1000000007 : Integer;
    BEGIN
      //H0114  10.12.12  ABR  +++++++++++++++++++++++++++++++++++++++++++++
      AdminMailQueueSetupL.GET;
      IF AdminMailQueueSetupL."Whse. Ret. Conf. Status" = AdminMailQueueSetupL."Whse. Ret. Conf. Status"::Disabled THEN
        AdminMailQueueSetupL.FIELDERROR("Whse. Ret. Conf. Status");
      //H0784 04.02.14 ARU +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
      //IF (SalesReturnHeaderV."Language Code" IN ['','DEU','NLD','FRA','DEA']) = FALSE THEN
      IF (SalesReturnHeaderV."Language Code" IN ['','DEU','NLD','FRA','DEA','DES','FRS']) = FALSE THEN
      //H0784 04.02.14 ARU ---------------------------------------------------------------------------
        SalesReturnHeaderV.FIELDERROR("Language Code");

      // Locate bill to customer
      CustomerL.GET(SalesReturnHeaderV."Sell-to Customer No.");

      // Initialize the email
      MailIT.SetService('SMTP');

      CASE SalesReturnHeaderV."Language Code" OF
        '','DEU':
          BEGIN
            MailIT.SetFrom(AdminMailQueueSetupL."Whse. Ret. Conf. Sender DE");
            MailIT.AddRecipientBCC(AdminMailQueueSetupL."Whse. Ret. Conf. BCC DE",AdminMailQueueSetupL."Whse. Ret. Conf. BCC DE");
          END;
        'NLD':
          BEGIN
            MailIT.SetFrom(AdminMailQueueSetupL."Whse. Ret. Conf. Sender NL");
            MailIT.AddRecipientBCC(AdminMailQueueSetupL."Whse. Ret. Conf. BCC NL",AdminMailQueueSetupL."Whse. Ret. Conf. BCC NL");
          END;
        'FRA':
          BEGIN
            MailIT.SetFrom(AdminMailQueueSetupL."Whse. Ret. Conf. Sender FR");
            MailIT.AddRecipientBCC(AdminMailQueueSetupL."Whse. Ret. Conf. BCC FR",AdminMailQueueSetupL."Whse. Ret. Conf. BCC FR");
          END;
        //H0194  11.02.13  ABR  +++++++++++++++++++++++++++++++++
        'DEA':
          BEGIN
            MailIT.SetFrom(AdminMailQueueSetupL."Whse. Ret. Conf. Sender AT");
            MailIT.AddRecipientBCC(AdminMailQueueSetupL."Whse. Ret. Conf. BCC AT",AdminMailQueueSetupL."Whse. Ret. Conf. BCC AT");
          END;
        //H0194  11.02.13  ABR  ---------------------------------
        //H1173,H0784 11.06.14 MSL ++++++++++++++++++++++++++++++
        'DES','FRS':
          BEGIN
            MailIT.SetFrom(AdminMailQueueSetupL."Whse. Ret. Conf. Sender CH");
            MailIT.AddRecipientBCC(AdminMailQueueSetupL."Whse.Ret.Conf. BCC CH",AdminMailQueueSetupL."Whse.Ret.Conf. BCC CH");
          END;
        //H1173,H0784 11.06.14 MSL ------------------------------
      END;

      IF AdminMailQueueSetupL."Whse. Ret. Conf. Status" = AdminMailQueueSetupL."Whse. Ret. Conf. Status"::Active THEN BEGIN
        CustomerL.TESTFIELD("E-Mail");
        IF CustomerL."E-Mail" <> '' THEN
          MailIT.AddRecipient(CustomerL."E-Mail",CustomerL."E-Mail");
      END ELSE BEGIN
        CASE SalesReturnHeaderV."Language Code" OF
          '','DEU':
            BEGIN
              MailIT.AddRecipient(AdminMailQueueSetupL."Whse. Ret. Conf. BCC DE",AdminMailQueueSetupL."Whse. Ret. Conf. BCC DE");
            END;
          'NLD':
            BEGIN
              MailIT.AddRecipient(AdminMailQueueSetupL."Whse. Ret. Conf. BCC NL",AdminMailQueueSetupL."Whse. Ret. Conf. BCC NL");
            END;
          'FRA':
            BEGIN
              MailIT.AddRecipient(AdminMailQueueSetupL."Whse. Ret. Conf. BCC FR",AdminMailQueueSetupL."Whse. Ret. Conf. BCC FR");
            END;
          //H0194  11.02.13  ABR  +++++++++++++++++++++++++++++++++
          'DEA':
            BEGIN
              MailIT.AddRecipient(AdminMailQueueSetupL."Whse. Ret. Conf. BCC AT",AdminMailQueueSetupL."Whse. Ret. Conf. BCC AT");
            END;
          //H0194  11.02.13  ABR  ---------------------------------
          //H0784 04.02.14 ARU ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
          'DES','FRS':
            BEGIN
              MailIT.AddRecipient(AdminMailQueueSetupL."Whse.Ret.Conf. BCC CH",AdminMailQueueSetupL."Whse.Ret.Conf. BCC CH");
            END;
          //H0784 04.02.14 ARU ----------------------------------------------------------------------------------------------
        END;
      END;

      //Add Header
      CASE SalesReturnHeaderV."Language Code" OF
        '','DEU':
          BEGIN
            MailIT.LoadHTMLBody(AdminMailQueueSetupL."Whse. Ret. Conf. HTML Head. DE");
          END;
        'NLD':
          BEGIN
            MailIT.LoadHTMLBody(AdminMailQueueSetupL."Whse. Ret. Conf. HTML Head. NL");
          END;
        'FRA':
          BEGIN
            MailIT.LoadHTMLBody(AdminMailQueueSetupL."Whse. Ret. Conf. HTML Head. FR");
          END;
        //H0194  11.02.13  ABR  +++++++++++++++++++++++++++++++++
        'DEA':
          BEGIN
            MailIT.LoadHTMLBody(AdminMailQueueSetupL."Whse. Ret. Conf. HTML Head. AT");
          END;
        //H0194  11.02.13  ABR  ---------------------------------
        //H0784 04.02.14 ARU ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        'DES':
          BEGIN
            MailIT.LoadHTMLBody(AdminMailQueueSetupL."Whse.Ret.Conf. HTMLHead. CH-DE");
          END;

        'FRS':
          BEGIN
            MailIT.LoadHTMLBody(AdminMailQueueSetupL."Whse.Ret.Conf. HTMLHead. CH-FR");
          END;
        //H0784 04.02.14 ARU ----------------------------------------------------------
      END;

      MailIT.AppendHTML('<font face="Arial","sans-serif">');
      MailIT.AppendHTML('<table width=590 border=0>');

      //H0775 16.12.13 ARU +++++++++++++++++++++
      MailIT.AppendHTML('<font color="black">');
      //H0775 16.12.13 ARU ---------------------

      //Get & Format Name
      RecipientNameL := '';
      IF SalesReturnHeaderV."Search Name" <> '' THEN BEGIN
        RecipientNameL := LOWERCASE(SalesReturnHeaderV."Search Name");
        FOR LoopCounterL := 1 TO STRLEN(RecipientNameL) DO BEGIN
          IF LoopCounterL = 1 THEN
            RecipientNameL := UPPERCASE(COPYSTR(RecipientNameL,1,1)) + COPYSTR(RecipientNameL,2,STRLEN(RecipientNameL));
          IF LoopCounterL > 1 THEN
            IF COPYSTR(RecipientNameL,LoopCounterL-1,1) = ' ' THEN
              RecipientNameL := COPYSTR(RecipientNameL,1,LoopCounterL-1)
                               + UPPERCASE(COPYSTR(RecipientNameL,LoopCounterL,1))
                               + COPYSTR(RecipientNameL,LoopCounterL+1,STRLEN(RecipientNameL));
        END;
      END;

      //Add Mail Text
      ExtTextLinesL.RESET;
      ExtTextLinesL.SETRANGE("Table Name",ExtTextLinesL."Table Name"::"Standard Text");
      CASE SalesReturnHeaderV."Language Code" OF
        '','DEU':
          BEGIN
            ExtTextLinesL.SETRANGE("No.",AdminMailQueueSetupL."Whse. Ret. Conf. Text Code DE");
            ExtTextLinesL.SETRANGE("Language Code",'DEU');
          END;
        'NLD':
          BEGIN
            ExtTextLinesL.SETRANGE("No.",AdminMailQueueSetupL."Whse. Ret. Conf. Text Code NL");
            ExtTextLinesL.SETRANGE("Language Code",'NLD');
          END;
        'FRA':
          BEGIN
            ExtTextLinesL.SETRANGE("No.",AdminMailQueueSetupL."Whse. Ret. Conf. Text Code FR");
            ExtTextLinesL.SETRANGE("Language Code",'FRA');
          END;
        //H0194  11.02.13  ABR  +++++++++++++++++++++++++++++++++
        'DEA':
          BEGIN
            ExtTextLinesL.SETRANGE("No.",AdminMailQueueSetupL."Whse. Ret. Conf. Text Code AT");
            ExtTextLinesL.SETRANGE("Language Code",'DEA');
          END;
        //H0194  11.02.13  ABR  ---------------------------------
        //H0784 04.02.14 ARU ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        'DES':
          BEGIN
            ExtTextLinesL.SETRANGE("No.",AdminMailQueueSetupL."Whse.Ret.Conf. TextCode CH-DE");
            ExtTextLinesL.SETRANGE("Language Code",'DES');
          END;

        'FRS':
          BEGIN
            ExtTextLinesL.SETRANGE("No.",AdminMailQueueSetupL."Whse.Ret.Conf. TextCode CH-FR");
            ExtTextLinesL.SETRANGE("Language Code",'FRS');
          END;
        //H0784 04.02.14 ARU ------------------------------------------------------------------

      END;
      ExtTextLinesL.SETRANGE("Text No.",1);

      IF ExtTextLinesL.FIND('-') THEN REPEAT
        LineTextL   := ExtTextLinesL."Text (Long)";
        PositionL := STRPOS(LineTextL,'[');
         IF PositionL = 1 THEN BEGIN
           LineTypeL := COPYSTR(LineTextL,PositionL+1,STRPOS(LineTextL,']')-2);
           IF LineTypeL = 'Subject' THEN BEGIN
             LineTextL := STRSUBSTNO(DELSTR(ExtTextLinesL."Text (Long)",
                                  1,STRPOS(ExtTextLinesL."Text (Long)",']')),SalesReturnHeaderV."External Document No.") + ' ';
             SubjecTextL := SubjecTextL + LineTextL;
           END;
         END ELSE BEGIN
           // %1 Ext. Document No. %2 Customer Name
           LineTextL := STRSUBSTNO(DELSTR(ExtTextLinesL."Text (Long)",1,STRPOS(ExtTextLinesL."Text (Long)",']')),
                                SalesReturnHeaderV."External Document No.",RecipientNameL);
           IF LineTextL = '' THEN
             LineTextL := '<br /><br />';
           MailIT.AppendHTML(LineTextL);
         END;
      UNTIL ExtTextLinesL.NEXT = 0;

      MailIT.SetSubject(SubjecTextL);

      //Add footer
      CASE SalesReturnHeaderV."Language Code" OF
        '','DEU':
          BEGIN
            MailIT.LoadHTMLBody(AdminMailQueueSetupL."Whse. Ret. Conf. HTML Foot. DE");
          END;
        'NLD':
          BEGIN
            MailIT.LoadHTMLBody(AdminMailQueueSetupL."Whse. Ret. Conf. HTML Foot. NL");
          END;
        'FRA':
          BEGIN
            MailIT.LoadHTMLBody(AdminMailQueueSetupL."Whse. Ret. Conf. HTML Foot. FR");
          END;
        //H0194  11.02.13  ABR  +++++++++++++++++++++++++++++++++
        'DEA':
          BEGIN
            MailIT.LoadHTMLBody(AdminMailQueueSetupL."Whse. Ret. Conf. HTML Foot. AT");
          END;
        //H0194  11.02.13  ABR  ---------------------------------
        //H0784 04.02.14 ARU ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        'DES':
          BEGIN
            MailIT.LoadHTMLBody(AdminMailQueueSetupL."Whse.Ret.Conf. HTMLFoot. CH-DE");
          END;
        'FRS':
          BEGIN
            MailIT.LoadHTMLBody(AdminMailQueueSetupL."Whse.Ret.Conf. HTMLFoot. CH-FR");
          END;
        //H0784 04.02.14 ARU ----------------------------------------------------------
      END;

      MailIT.SetServer(AdminMailQueueSetupL."Whse. Ret. Conf. Mail Server");
      MailIT.UseSSL(1);

      IF AdminMailQueueSetupL."Whse. Ret. Conf. Server Port" = '' THEN
        PortL := 25
      ELSE
        EVALUATE(PortL,AdminMailQueueSetupL."Whse. Ret. Conf. Server Port");

      MailIT.SetPort(PortL);
      MailIT.SetLogin(AdminMailQueueSetupL."Whse. Ret. Conf. User Name");
      MailIT.SetPassword(AdminMailQueueSetupL."Whse. Ret. Conf. Password");
      MailIT.Send();
      //H0114  10.12.12  ABR  ---------------------------------------------
    END;

    PROCEDURE CreateSalesWhseReturnConfirmAr@1000000018(SalesReturnHeaderArV@1000000030 : Record 5107);
    VAR
      AdminMailQueueSetupL@1000000018 : Record 50092;
      CustomerL@1000000004 : Record 18;
      ExtTextLinesL@1000000014 : Record 280;
      MailIT@1000000006 : OCX "{C8C4804C-89BA-4291-AB58-4C6050B65175}:'ExpandIT.MailIT2'";
      RecipientNameL@1000000005 : Text[50];
      LineTextL@1000000013 : Text[150];
      LineTypeL@1000000012 : Text[10];
      SubjecTextL@1000000011 : Text[250];
      PortL@1000000001 : Integer;
      LoopCounterL@1000000000 : Integer;
      PositionL@1000000007 : Integer;
    BEGIN
      //H0114  10.12.12  ABR  +++++++++++++++++++++++++++++++++++++++++++++
      AdminMailQueueSetupL.GET;
      IF AdminMailQueueSetupL."Whse. Ret. Conf. Status" = AdminMailQueueSetupL."Whse. Ret. Conf. Status"::Disabled THEN
        AdminMailQueueSetupL.FIELDERROR("Whse. Ret. Conf. Status");
      //H0784 04.02.14 ARU +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
      //IF (SalesReturnHeaderArV."Language Code" IN ['','DEU','NLD','FRA','DEA']) = FALSE THEN
      IF (SalesReturnHeaderArV."Language Code" IN ['','DEU','NLD','FRA','DEA','DES','FRS']) = FALSE THEN
      //H0784 04.02.14 ARU -----------------------------------------------------------------------------
        SalesReturnHeaderArV.FIELDERROR("Language Code");

      // Locate bill to customer
      CustomerL.GET(SalesReturnHeaderArV."Sell-to Customer No.");

      // Initialize the email
      MailIT.SetService('SMTP');

      CASE SalesReturnHeaderArV."Language Code" OF
        '','DEU':
          BEGIN
            MailIT.SetFrom(AdminMailQueueSetupL."Whse. Ret. Conf. Sender DE");
            MailIT.AddRecipientBCC(AdminMailQueueSetupL."Whse. Ret. Conf. BCC DE",AdminMailQueueSetupL."Whse. Ret. Conf. BCC DE");
          END;
        'NLD':
          BEGIN
            MailIT.SetFrom(AdminMailQueueSetupL."Whse. Ret. Conf. Sender NL");
            MailIT.AddRecipientBCC(AdminMailQueueSetupL."Whse. Ret. Conf. BCC NL",AdminMailQueueSetupL."Whse. Ret. Conf. BCC NL");
          END;
        'FRA':
          BEGIN
            MailIT.SetFrom(AdminMailQueueSetupL."Whse. Ret. Conf. Sender FR");
            MailIT.AddRecipientBCC(AdminMailQueueSetupL."Whse. Ret. Conf. BCC FR",AdminMailQueueSetupL."Whse. Ret. Conf. BCC FR");
          END;
        //H0194  11.02.13  ABR  +++++++++++++++++++++++++++++++++
        'DEA':
          BEGIN
            MailIT.SetFrom(AdminMailQueueSetupL."Whse. Ret. Conf. Sender AT");
            MailIT.AddRecipientBCC(AdminMailQueueSetupL."Whse. Ret. Conf. BCC AT",AdminMailQueueSetupL."Whse. Ret. Conf. BCC AT");
          END;
        //H0194  11.02.13  ABR  ---------------------------------
        //H0784 04.02.14 ARU +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        'DES','FRS':
          BEGIN
            MailIT.SetFrom(AdminMailQueueSetupL."Whse. Ret. Conf. Sender CH");
            MailIT.AddRecipientBCC(AdminMailQueueSetupL."Whse.Ret.Conf. BCC CH",AdminMailQueueSetupL."Whse.Ret.Conf. BCC CH");
          END;
        //H0784 04.02.14 ARU -------------------------------------------------------------------------------------------------
      ELSE
        ERROR('No Sender available!');
      END;

      IF AdminMailQueueSetupL."Whse. Ret. Conf. Status" = AdminMailQueueSetupL."Whse. Ret. Conf. Status"::Active THEN BEGIN
        CustomerL.TESTFIELD("E-Mail");
        IF CustomerL."E-Mail" <> '' THEN
          MailIT.AddRecipient(CustomerL."E-Mail",CustomerL."E-Mail");
      END ELSE BEGIN
        CASE SalesReturnHeaderArV."Language Code" OF
          '','DEU':
            BEGIN
              MailIT.AddRecipient(AdminMailQueueSetupL."Whse. Ret. Conf. BCC DE",AdminMailQueueSetupL."Whse. Ret. Conf. BCC DE");
            END;
          'NLD':
            BEGIN
              MailIT.AddRecipient(AdminMailQueueSetupL."Whse. Ret. Conf. BCC NL",AdminMailQueueSetupL."Whse. Ret. Conf. BCC NL");
            END;
          'FRA':
            BEGIN
              MailIT.AddRecipient(AdminMailQueueSetupL."Whse. Ret. Conf. BCC FR",AdminMailQueueSetupL."Whse. Ret. Conf. BCC FR");
            END;
          //H0194  11.02.13  ABR  +++++++++++++++++++++++++++++++++
          'DEA':
            BEGIN
              MailIT.AddRecipient(AdminMailQueueSetupL."Whse. Ret. Conf. BCC AT",AdminMailQueueSetupL."Whse. Ret. Conf. BCC AT");
            END;
          //H0194  11.02.13  ABR  ---------------------------------
          //H0784 04.02.14 ARU ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
          'DES','FRS':
            BEGIN
              MailIT.AddRecipient(AdminMailQueueSetupL."Whse.Ret.Conf. BCC CH",AdminMailQueueSetupL."Whse.Ret.Conf. BCC CH");
            END;
          //H0784 04.02.14 ARU ----------------------------------------------------------------------------------------------
        ELSE
          ERROR('No Recipient available!');
        END;
      END;

      //Add Header
      CASE SalesReturnHeaderArV."Language Code" OF
        '','DEU':
          BEGIN
            MailIT.LoadHTMLBody(AdminMailQueueSetupL."Whse. Ret. Conf. HTML Head. DE");
          END;
        'NLD':
          BEGIN
            MailIT.LoadHTMLBody(AdminMailQueueSetupL."Whse. Ret. Conf. HTML Head. NL");
          END;
        'FRA':
          BEGIN
            MailIT.LoadHTMLBody(AdminMailQueueSetupL."Whse. Ret. Conf. HTML Head. FR");
          END;
        //H0194  11.02.13  ABR  +++++++++++++++++++++++++++++++++
        'DEA':
          BEGIN
            MailIT.LoadHTMLBody(AdminMailQueueSetupL."Whse. Ret. Conf. HTML Head. AT");
          END;
        //H0194  11.02.13  ABR  ---------------------------------
        //H0784 04.02.14 ARU ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        'DES':
          BEGIN
            MailIT.LoadHTMLBody(AdminMailQueueSetupL."Whse.Ret.Conf. HTMLHead. CH-DE");
          END;

        'FRS':
          BEGIN
            MailIT.LoadHTMLBody(AdminMailQueueSetupL."Whse.Ret.Conf. HTMLHead. CH-FR");
          END;
        //H0784 04.02.14 ARU ----------------------------------------------------------
      ELSE
        ERROR('No HTML Header available!');
      END;

      MailIT.AppendHTML('<font face="Arial","sans-serif">');
      MailIT.AppendHTML('<table width=590 border=0>');

      //Get & Format Name
      RecipientNameL := '';
      IF SalesReturnHeaderArV."Search Name" <> '' THEN BEGIN
        RecipientNameL := LOWERCASE(SalesReturnHeaderArV."Search Name");
        FOR LoopCounterL := 1 TO STRLEN(RecipientNameL) DO BEGIN
          IF LoopCounterL = 1 THEN
            RecipientNameL := UPPERCASE(COPYSTR(RecipientNameL,1,1)) + COPYSTR(RecipientNameL,2,STRLEN(RecipientNameL));
          IF LoopCounterL > 1 THEN
            IF COPYSTR(RecipientNameL,LoopCounterL-1,1) = ' ' THEN
              RecipientNameL := COPYSTR(RecipientNameL,1,LoopCounterL-1)
                               + UPPERCASE(COPYSTR(RecipientNameL,LoopCounterL,1))
                               + COPYSTR(RecipientNameL,LoopCounterL+1,STRLEN(RecipientNameL));
        END;
      END;

      //Add Mail Text
      ExtTextLinesL.RESET;
      ExtTextLinesL.SETRANGE("Table Name",ExtTextLinesL."Table Name"::"Standard Text");
      CASE SalesReturnHeaderArV."Language Code" OF
        '','DEU':
          BEGIN
            ExtTextLinesL.SETRANGE("No.",AdminMailQueueSetupL."Whse. Ret. Conf. Text Code DE");
            ExtTextLinesL.SETRANGE("Language Code",'DEU');
          END;
        'NLD':
          BEGIN
            ExtTextLinesL.SETRANGE("No.",AdminMailQueueSetupL."Whse. Ret. Conf. Text Code NL");
            ExtTextLinesL.SETRANGE("Language Code",'NLD');
          END;
        'FRA':
          BEGIN
            ExtTextLinesL.SETRANGE("No.",AdminMailQueueSetupL."Whse. Ret. Conf. Text Code FR");
            ExtTextLinesL.SETRANGE("Language Code",'FRA');
          END;
        //H0194  11.02.13  ABR  +++++++++++++++++++++++++++++++++
        'DEA':
          BEGIN
            ExtTextLinesL.SETRANGE("No.",AdminMailQueueSetupL."Whse. Ret. Conf. Text Code AT");
            ExtTextLinesL.SETRANGE("Language Code",'DEA');
          END;
        //H0194  11.02.13  ABR  ---------------------------------
        //H0784 04.02.14 ARU ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        'DES':
          BEGIN
            ExtTextLinesL.SETRANGE("No.",AdminMailQueueSetupL."Whse.Ret.Conf. TextCode CH-DE");
            ExtTextLinesL.SETRANGE("Language Code",'DES');
          END;

        'FRS':
          BEGIN
            ExtTextLinesL.SETRANGE("No.",AdminMailQueueSetupL."Whse.Ret.Conf. TextCode CH-FR");
            ExtTextLinesL.SETRANGE("Language Code",'FRS');
          END;
        //H0784 04.02.14 ARU ------------------------------------------------------------------
      ELSE
        ERROR('No Text Code available!');
      END;
      ExtTextLinesL.SETRANGE("Text No.",1);

      IF ExtTextLinesL.FIND('-') THEN REPEAT
        LineTextL   := ExtTextLinesL."Text (Long)";
        PositionL := STRPOS(LineTextL,'[');
         IF PositionL = 1 THEN BEGIN
           LineTypeL := COPYSTR(LineTextL,PositionL+1,STRPOS(LineTextL,']')-2);
           IF LineTypeL = 'Subject' THEN BEGIN
             LineTextL := STRSUBSTNO(DELSTR(ExtTextLinesL."Text (Long)",
                                  1,STRPOS(ExtTextLinesL."Text (Long)",']')),SalesReturnHeaderArV."External Document No.") + ' ';
             SubjecTextL := SubjecTextL + LineTextL;
           END;
         END ELSE BEGIN
           // %1 Ext. Document No. %2 Customer Name
           LineTextL := STRSUBSTNO(DELSTR(ExtTextLinesL."Text (Long)",1,STRPOS(ExtTextLinesL."Text (Long)",']')),
                                SalesReturnHeaderArV."External Document No.",RecipientNameL);
           IF LineTextL = '' THEN
             LineTextL := '<br /><br />';
           MailIT.AppendHTML(LineTextL);
         END;
      UNTIL ExtTextLinesL.NEXT = 0;

      MailIT.SetSubject(SubjecTextL);

      //Add footer
      CASE SalesReturnHeaderArV."Language Code" OF
        '','DEU':
          BEGIN
            MailIT.LoadHTMLBody(AdminMailQueueSetupL."Whse. Ret. Conf. HTML Foot. DE");
          END;
        'NLD':
          BEGIN
            MailIT.LoadHTMLBody(AdminMailQueueSetupL."Whse. Ret. Conf. HTML Foot. NL");
          END;
        'FRA':
          BEGIN
            MailIT.LoadHTMLBody(AdminMailQueueSetupL."Whse. Ret. Conf. HTML Foot. FR");
          END;
        'DEA':
          BEGIN
            MailIT.LoadHTMLBody(AdminMailQueueSetupL."Whse. Ret. Conf. HTML Foot. AT");
          END;
        //H0784 04.02.14 ARU ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        'DES':
          BEGIN
            MailIT.LoadHTMLBody(AdminMailQueueSetupL."Whse.Ret.Conf. HTMLFoot. CH-DE");
          END;

        'FRS':
          BEGIN
            MailIT.LoadHTMLBody(AdminMailQueueSetupL."Whse.Ret.Conf. HTMLFoot. CH-FR");
          END;
        //H0784 04.02.14 ARU ----------------------------------------------------------
      ELSE
        ERROR('No HTML Footer available!');
      END;

      MailIT.SetServer(AdminMailQueueSetupL."Whse. Ret. Conf. Mail Server");
      MailIT.UseSSL(1);

      IF AdminMailQueueSetupL."Whse. Ret. Conf. Server Port" = '' THEN
        PortL := 25
      ELSE
        EVALUATE(PortL,AdminMailQueueSetupL."Whse. Ret. Conf. Server Port");

      MailIT.SetPort(PortL);
      MailIT.SetLogin(AdminMailQueueSetupL."Whse. Ret. Conf. User Name");
      MailIT.SetPassword(AdminMailQueueSetupL."Whse. Ret. Conf. Password");
      MailIT.Send();
    END;

    PROCEDURE CreateSalesRefundConfirm@1000000020(SalesReturnHeaderV@1000000030 : Record 36);
    VAR
      PaymentMethod@1000000002 : Record 289;
      AdminMailQueueSetupL@1000000018 : Record 50092;
      CustomerL@1000000004 : Record 18;
      ExtTextLinesL@1000000014 : Record 280;
      ExtTextLines2L@1000000008 : Record 280;
      MailIT@1000000006 : OCX "{C8C4804C-89BA-4291-AB58-4C6050B65175}:'ExpandIT.MailIT2'";
      RecipientNameL@1000000005 : Text[50];
      LineTextL@1000000013 : Text[150];
      LineText2L@1000000009 : Text[150];
      LineTypeL@1000000012 : Text[10];
      SubjecTextL@1000000011 : Text[250];
      PortL@1000000001 : Integer;
      LoopCounterL@1000000000 : Integer;
      PositionL@1000000007 : Integer;
    BEGIN
      // ---> H0243
      AdminMailQueueSetupL.GET;
      IF AdminMailQueueSetupL."Refund Conf. Status" = AdminMailQueueSetupL."Refund Conf. Status"::Disabled THEN
        AdminMailQueueSetupL.FIELDERROR("Refund Conf. Status");

      //H0784 04.02.14 ARU +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
      //IF (SalesReturnHeaderV."Language Code" IN ['','DEU','NLD','FRA','DEA']) = FALSE THEN
      IF (SalesReturnHeaderV."Language Code" IN ['','DEU','NLD','FRA','DEA','DES','FRS']) = FALSE THEN
      //H0784 04.02.14 ARU ---------------------------------------------------------------------------
        SalesReturnHeaderV.FIELDERROR("Language Code");

      // Locate Sell-to customer
      CustomerL.GET(SalesReturnHeaderV."Sell-to Customer No.");

      // Initialize the e-mail
      MailIT.SetService('SMTP');

      CASE SalesReturnHeaderV."Language Code" OF
        '','DEU':
          BEGIN
            MailIT.SetFrom(AdminMailQueueSetupL."Refund Conf. Sender DE");
            MailIT.AddRecipientBCC(AdminMailQueueSetupL."Refund Conf. BCC DE",AdminMailQueueSetupL."Refund Conf. BCC DE");
          END;
        'NLD':
          BEGIN
            MailIT.SetFrom(AdminMailQueueSetupL."Refund Conf. Sender NL");
            MailIT.AddRecipientBCC(AdminMailQueueSetupL."Refund Conf. BCC NL",AdminMailQueueSetupL."Refund Conf. BCC NL");
          END;
        'FRA':
          BEGIN
            MailIT.SetFrom(AdminMailQueueSetupL."Refund Conf. Sender FR");
            MailIT.AddRecipientBCC(AdminMailQueueSetupL."Refund Conf. BCC FR",AdminMailQueueSetupL."Refund Conf. BCC FR");
          END;
        'DEA':
          BEGIN
            MailIT.SetFrom(AdminMailQueueSetupL."Refund Conf. Sender AT");
            MailIT.AddRecipientBCC(AdminMailQueueSetupL."Refund Conf. BCC AT",AdminMailQueueSetupL."Refund Conf. BCC AT");
          END;
        //H0784 04.02.14 ARU +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        'DES','FRS':
          BEGIN
            MailIT.SetFrom(AdminMailQueueSetupL."Refund Conf. Sender CH");
            MailIT.AddRecipientBCC(AdminMailQueueSetupL."Refund Conf. BCC CH",AdminMailQueueSetupL."Refund Conf. BCC CH");
          END;
        //H0784 04.02.14 ARU ---------------------------------------------------------------------------------------------
      END;

      IF AdminMailQueueSetupL."Refund Conf. Status" = AdminMailQueueSetupL."Refund Conf. Status"::Active THEN BEGIN
        CustomerL.TESTFIELD("E-Mail");
        IF CustomerL."E-Mail" <> '' THEN
          MailIT.AddRecipient(CustomerL."E-Mail", CustomerL."E-Mail");
      END ELSE BEGIN
        CASE SalesReturnHeaderV."Language Code" OF
          '','DEU':
              MailIT.AddRecipient(AdminMailQueueSetupL."Refund Conf. BCC DE",AdminMailQueueSetupL."Refund Conf. BCC DE");
          'NLD':
              MailIT.AddRecipient(AdminMailQueueSetupL."Refund Conf. BCC NL",AdminMailQueueSetupL."Refund Conf. BCC NL");
          'FRA':
              MailIT.AddRecipient(AdminMailQueueSetupL."Refund Conf. BCC FR",AdminMailQueueSetupL."Refund Conf. BCC FR");
          'DEA':
              MailIT.AddRecipient(AdminMailQueueSetupL."Refund Conf. BCC AT",AdminMailQueueSetupL."Refund Conf. BCC AT");
          //H0784 04.02.14 ARU ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
          'DES','FRS':
              MailIT.AddRecipient(AdminMailQueueSetupL."Refund Conf. BCC CH",AdminMailQueueSetupL."Refund Conf. BCC CH");
          //H0784 04.02.14 ARU ------------------------------------------------------------------------------------------
        END;
      END;

      // Adds Header
      CASE SalesReturnHeaderV."Language Code" OF
        '','DEU':
            MailIT.LoadHTMLBody(AdminMailQueueSetupL."Refund Conf. HTML Head. DE");
        'NLD':
            MailIT.LoadHTMLBody(AdminMailQueueSetupL."Refund Conf. HTML Head. NL");
        'FRA':
            MailIT.LoadHTMLBody(AdminMailQueueSetupL."Refund Conf. HTML Head. FR");
        'DEA':
            MailIT.LoadHTMLBody(AdminMailQueueSetupL."Refund Conf. HTML Head. AT");
        //H0784 04.02.14 ARU +++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        'DES':
            MailIT.LoadHTMLBody(AdminMailQueueSetupL."Refund Conf. HTML Head. CH-DE");

        'FRS':
            MailIT.LoadHTMLBody(AdminMailQueueSetupL."Refund Conf. HTML Head. CH-FR");
        //H0784 04.02.14 ARU ---------------------------------------------------------
      END;

      // Gets & Formats Name
      RecipientNameL := '';
      IF SalesReturnHeaderV."Search Name" <> '' THEN BEGIN
        RecipientNameL := LOWERCASE(SalesReturnHeaderV."Search Name");
        FOR LoopCounterL := 1 TO STRLEN(RecipientNameL) DO BEGIN
          IF LoopCounterL = 1 THEN
            RecipientNameL := UPPERCASE(COPYSTR(RecipientNameL,1,1)) + COPYSTR(RecipientNameL,2,STRLEN(RecipientNameL));
          IF LoopCounterL > 1 THEN
            IF COPYSTR(RecipientNameL,LoopCounterL - 1, 1) = ' ' THEN
              RecipientNameL := COPYSTR(RecipientNameL,1,LoopCounterL - 1) +
                                        UPPERCASE(COPYSTR(RecipientNameL, LoopCounterL, 1)) +
                                        COPYSTR(RecipientNameL, LoopCounterL + 1, STRLEN(RecipientNameL));
        END;
      END;

      // Determines language
      ExtTextLinesL.RESET;
      ExtTextLinesL.SETRANGE("Table Name",ExtTextLinesL."Table Name"::"Standard Text");
      CASE SalesReturnHeaderV."Language Code" OF
        '','DEU':
          BEGIN
            ExtTextLinesL.SETRANGE("No.",AdminMailQueueSetupL."Refund Conf. Text Code DE");
            ExtTextLinesL.SETRANGE("Language Code",'DEU');
          END;
        'NLD':
          BEGIN
            ExtTextLinesL.SETRANGE("No.",AdminMailQueueSetupL."Refund Conf. Text Code NL");
            ExtTextLinesL.SETRANGE("Language Code",'NLD');
          END;
        'FRA':
          BEGIN
            ExtTextLinesL.SETRANGE("No.",AdminMailQueueSetupL."Refund Conf. Text Code FR");
            ExtTextLinesL.SETRANGE("Language Code",'FRA');
          END;
        'DEA':
          BEGIN
            ExtTextLinesL.SETRANGE("No.", AdminMailQueueSetupL."Refund Conf. Text Code AT");
            ExtTextLinesL.SETRANGE("Language Code", 'DEA');
          END;
        //H0784 04.02.14 ARU +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        'DES':
          BEGIN
            ExtTextLinesL.SETRANGE("No.", AdminMailQueueSetupL."Refund Conf. TextCode CH-DE");
            ExtTextLinesL.SETRANGE("Language Code", 'DES');
          END;

        'FRS':
          BEGIN
            ExtTextLinesL.SETRANGE("No.", AdminMailQueueSetupL."Refund Conf. TextCode CH-FR");
            ExtTextLinesL.SETRANGE("Language Code", 'FRS');
          END;
        //H0784 04.02.14 ARU -----------------------------------------------------------------
      END;

      //H0784 04.02.14 ARU +++++++++++++++++++++++

      //H0604 06.11.13 ARU +++++++++++++++++++++
      //MailIT.AppendHTML('<font color="black">');
      //H0604 06.11.13 ARU ---------------------

      MailIT.AppendHTML(TextHME011);
      //H0784 04.02.14 ARU -----------------------


      // Text arrangieren fÅgt
      ExtTextLinesL.SETRANGE("Text No.",1);
      IF ExtTextLinesL.FIND('-') THEN REPEAT
        LineTextL := ExtTextLinesL."Text (Long)";
        PositionL := STRPOS(LineTextL,'[');
         IF PositionL = 1 THEN BEGIN
           LineTypeL := COPYSTR(LineTextL,PositionL+1,STRPOS(LineTextL,']')-2);
           IF LineTypeL = 'Subject' THEN BEGIN
             LineTextL := STRSUBSTNO(
                                     DELSTR(ExtTextLinesL."Text (Long)", 1, STRPOS(ExtTextLinesL."Text (Long)",']')),
                                     SalesReturnHeaderV."External Document No.") + ' ';
             SubjecTextL := SubjecTextL + LineTextL;
           END;
         END ELSE BEGIN
           // %1 Ext. Document No. %2 Customer Name %3 Payment Ext. Text
           LineTextL := STRSUBSTNO(
                                   DELSTR(ExtTextLinesL."Text (Long)",1,STRPOS(ExtTextLinesL."Text (Long)",']')),
                                   RecipientNameL,
                                   SalesReturnHeaderV."External Document No."
                                   );

           IF LineTextL = '%3' THEN BEGIN
             PaymentMethod.GET(SalesReturnHeaderV."Payment Method Code");
             ExtTextLines2L.RESET;
             ExtTextLines2L.SETRANGE("Text No.", 1);
             ExtTextLines2L.SETRANGE("Table Name", ExtTextLines2L."Table Name"::"Standard Text");
             CASE SalesReturnHeaderV."Language Code" OF
               '','DEU':
                   ExtTextLines2L.SETRANGE("No.", PaymentMethod."Refund Conf. Text Code DE");
               'NLD':
                   ExtTextLines2L.SETRANGE("No.", PaymentMethod."Refund Conf. Text Code NL");
               'FRA':
                   ExtTextLines2L.SETRANGE("No.", PaymentMethod."Refund Conf. Text Code FR");
               'DEA':
                   ExtTextLines2L.SETRANGE("No.", PaymentMethod."Refund Conf. Text Code AT");

               //H0784 04.02.14 ARU ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
               'DES':
                   ExtTextLines2L.SETRANGE("No.", PaymentMethod."Refund Conf. Text Code CH-DE");
               'FRS':
                   ExtTextLines2L.SETRANGE("No.", PaymentMethod."Refund Conf. Text Code CH-FR");
               //H0784 04.02.14 ARU ------------------------------------------------------------
             END;

             IF ExtTextLines2L.FIND('-') THEN REPEAT
               LineText2L := STRSUBSTNO(
                                       DELSTR(ExtTextLinesL."Text (Long)", 1, STRPOS(ExtTextLines2L."Text (Long)",']')),
                                       SalesReturnHeaderV."External Document No.",
                                       RecipientNameL,
                                       ExtTextLines2L."Text (Long)");
               //H0604 05.11.13  ARU +++++++++
               IF LineText2L = '' THEN
                 LineText2L := '<br /><br />';
               //H0604 05.11.13  ARU ---------

               MailIT.AppendHTML(LineText2L);
             UNTIL ExtTextLines2L.NEXT = 0;
           END;

           IF LineTextL = '' THEN
             LineTextL := '<br /><br />';

           IF LineTextL <> '%3' THEN
             MailIT.AppendHTML(LineTextL);
         END;
      UNTIL ExtTextLinesL.NEXT = 0;

      MailIT.SetSubject(SubjecTextL);

      // Footer voegt
      CASE SalesReturnHeaderV."Language Code" OF
        '','DEU':
            MailIT.LoadHTMLBody(AdminMailQueueSetupL."Refund Conf. HTML Foot. DE");
        'NLD':
            MailIT.LoadHTMLBody(AdminMailQueueSetupL."Refund Conf. HTML Foot. NL");
        'FRA':
            MailIT.LoadHTMLBody(AdminMailQueueSetupL."Refund Conf. HTML Foot. FR");
        'DEA':
            MailIT.LoadHTMLBody(AdminMailQueueSetupL."Refund Conf. HTML Foot. AT");
        //H0784 04.02.14 ARU +++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        'DES':
            MailIT.LoadHTMLBody(AdminMailQueueSetupL."Refund Conf. HTML Foot. CH-DE");

        'FRS':
            MailIT.LoadHTMLBody(AdminMailQueueSetupL."Refund Conf. HTML Foot. CH-FR");
        //H0784 04.02.14 ARU ---------------------------------------------------------
      END;

      MailIT.SetServer(AdminMailQueueSetupL."Refund Conf. Mail Server");
      MailIT.UseSSL(1);

      IF AdminMailQueueSetupL."Refund Conf. Server Port" = '' THEN
        PortL := 25
      ELSE
        EVALUATE(PortL,AdminMailQueueSetupL."Refund Conf. Server Port");

      MailIT.SetPort(PortL);
      //H0709 19.06.14 MBY +++++++++++++++++++++++++++++++++++++++++++++++++++++++++
      IF AdminMailQueueSetupL."Refund Conf. Authentication" THEN BEGIN
        MailIT.UseSSL(1);
        MailIT.SetLogin(AdminMailQueueSetupL."Refund Conf. User Name");
        MailIT.SetPassword(AdminMailQueueSetupL."Refund Conf. Password");
      END;
      //H0709 19.06.14 MBY ---------------------------------------------------------
      MailIT.Send();

      // H0243 --->
    END;

    PROCEDURE CreateSalesRefundConfirmAr@1000000017(SalesReturnHeaderArV@1000000030 : Record 5107);
    VAR
      PaymentMethod@1000000002 : Record 289;
      AdminMailQueueSetupL@1000000018 : Record 50092;
      CustomerL@1000000004 : Record 18;
      ExtTextLinesL@1000000014 : Record 280;
      ExtTextLines2L@1000000008 : Record 280;
      MailIT@1000000006 : OCX "{C8C4804C-89BA-4291-AB58-4C6050B65175}:'ExpandIT.MailIT2'";
      RecipientNameL@1000000005 : Text[50];
      LineTextL@1000000013 : Text[150];
      LineText2L@1000000009 : Text[150];
      LineTypeL@1000000012 : Text[10];
      SubjecTextL@1000000011 : Text[250];
      PortL@1000000001 : Integer;
      LoopCounterL@1000000000 : Integer;
      PositionL@1000000007 : Integer;
    BEGIN
      // ---> H0243

      AdminMailQueueSetupL.GET;
      IF AdminMailQueueSetupL."Refund Conf. Status" = AdminMailQueueSetupL."Refund Conf. Status"::Disabled THEN
        AdminMailQueueSetupL.FIELDERROR("Refund Conf. Status");
      //H0784 04.02.14 ARU +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
      //IF (SalesReturnHeaderArV."Language Code" IN ['','DEU','NLD','FRA','DEA']) = FALSE THEN
      IF (SalesReturnHeaderArV."Language Code" IN ['','DEU','NLD','FRA','DEA','DES','FRS']) = FALSE THEN
        SalesReturnHeaderArV.FIELDERROR("Language Code");
      //H0784 04.02.14 ARU -----------------------------------------------------------------------------

      // Locate Sell-to customer
      CustomerL.GET(SalesReturnHeaderArV."Sell-to Customer No.");

      // Initialize the e-mail
      MailIT.SetService('SMTP');

      CASE SalesReturnHeaderArV."Language Code" OF
        '','DEU':
          BEGIN
            MailIT.SetFrom(AdminMailQueueSetupL."Refund Conf. Sender DE");
            MailIT.AddRecipientBCC(AdminMailQueueSetupL."Refund Conf. BCC DE",AdminMailQueueSetupL."Refund Conf. BCC DE");
          END;
        'NLD':
          BEGIN
            MailIT.SetFrom(AdminMailQueueSetupL."Refund Conf. Sender NL");
            MailIT.AddRecipientBCC(AdminMailQueueSetupL."Refund Conf. BCC NL",AdminMailQueueSetupL."Refund Conf. BCC NL");
          END;
        'FRA':
          BEGIN
            MailIT.SetFrom(AdminMailQueueSetupL."Refund Conf. Sender FR");
            MailIT.AddRecipientBCC(AdminMailQueueSetupL."Refund Conf. BCC FR",AdminMailQueueSetupL."Refund Conf. BCC FR");
          END;
        'DEA':
          BEGIN
            MailIT.SetFrom(AdminMailQueueSetupL."Refund Conf. Sender AT");
            MailIT.AddRecipientBCC(AdminMailQueueSetupL."Refund Conf. BCC AT",AdminMailQueueSetupL."Refund Conf. BCC AT");
          END;
        //H0784 04.02.14 ARU +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        'DES','FRS':
          BEGIN
            MailIT.SetFrom(AdminMailQueueSetupL."Refund Conf. Sender CH");
            MailIT.AddRecipientBCC(AdminMailQueueSetupL."Refund Conf. BCC CH",AdminMailQueueSetupL."Refund Conf. BCC CH");
          END;
        //H0784 04.02.14 ARU ---------------------------------------------------------------------------------------------
      END;

      IF AdminMailQueueSetupL."Refund Conf. Status" = AdminMailQueueSetupL."Refund Conf. Status"::Active THEN BEGIN
        CustomerL.TESTFIELD("E-Mail");
        IF CustomerL."E-Mail" <> '' THEN
          MailIT.AddRecipient(CustomerL."E-Mail", CustomerL."E-Mail");
      END ELSE BEGIN
        CASE SalesReturnHeaderArV."Language Code" OF
          '','DEU':
              MailIT.AddRecipient(AdminMailQueueSetupL."Refund Conf. BCC DE",AdminMailQueueSetupL."Refund Conf. BCC DE");
          'NLD':
              MailIT.AddRecipient(AdminMailQueueSetupL."Refund Conf. BCC NL",AdminMailQueueSetupL."Refund Conf. BCC NL");
          'FRA':
              MailIT.AddRecipient(AdminMailQueueSetupL."Refund Conf. BCC FR",AdminMailQueueSetupL."Refund Conf. BCC FR");
          'DEA':
              MailIT.AddRecipient(AdminMailQueueSetupL."Refund Conf. BCC AT",AdminMailQueueSetupL."Refund Conf. BCC AT");
          //H0784 04.02.14 ARU ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
          'DES','FRS':
              MailIT.AddRecipient(AdminMailQueueSetupL."Refund Conf. BCC CH",AdminMailQueueSetupL."Refund Conf. BCC CH");
          //H0784 04.02.14 ARU ------------------------------------------------------------------------------------------
        END;
      END;

      // Adds Header
      CASE SalesReturnHeaderArV."Language Code" OF
        '','DEU':
            MailIT.LoadHTMLBody(AdminMailQueueSetupL."Refund Conf. HTML Head. DE");
        'NLD':
            MailIT.LoadHTMLBody(AdminMailQueueSetupL."Refund Conf. HTML Head. NL");
        'FRA':
            MailIT.LoadHTMLBody(AdminMailQueueSetupL."Refund Conf. HTML Head. FR");
        'DEA':
            MailIT.LoadHTMLBody(AdminMailQueueSetupL."Refund Conf. HTML Head. AT");
        //H0784 04.02.14 ARU +++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        'DES':
            MailIT.LoadHTMLBody(AdminMailQueueSetupL."Refund Conf. HTML Head. CH-DE");

        'FRS':
            MailIT.LoadHTMLBody(AdminMailQueueSetupL."Refund Conf. HTML Head. CH-FR");
        //H0784 04.02.14 ARU ---------------------------------------------------------
      END;

      // Gets & Formats Name
      RecipientNameL := '';
      IF SalesReturnHeaderArV."Search Name" <> '' THEN BEGIN
        RecipientNameL := LOWERCASE(SalesReturnHeaderArV."Search Name");
        FOR LoopCounterL := 1 TO STRLEN(RecipientNameL) DO BEGIN
          IF LoopCounterL = 1 THEN
            RecipientNameL := UPPERCASE(COPYSTR(RecipientNameL,1,1)) + COPYSTR(RecipientNameL,2,STRLEN(RecipientNameL));
          IF LoopCounterL > 1 THEN
            IF COPYSTR(RecipientNameL,LoopCounterL - 1, 1) = ' ' THEN
              RecipientNameL := COPYSTR(RecipientNameL,1,LoopCounterL - 1) +
                                        UPPERCASE(COPYSTR(RecipientNameL, LoopCounterL, 1)) +
                                        COPYSTR(RecipientNameL, LoopCounterL + 1, STRLEN(RecipientNameL));
        END;
      END;

      // Determines language
      ExtTextLinesL.RESET;
      ExtTextLinesL.SETRANGE("Table Name",ExtTextLinesL."Table Name"::"Standard Text");
      CASE SalesReturnHeaderArV."Language Code" OF
        '','DEU':
          BEGIN
            ExtTextLinesL.SETRANGE("No.",AdminMailQueueSetupL."Refund Conf. Text Code DE");
            ExtTextLinesL.SETRANGE("Language Code",'DEU');
          END;
        'NLD':
          BEGIN
            ExtTextLinesL.SETRANGE("No.",AdminMailQueueSetupL."Refund Conf. Text Code NL");
            ExtTextLinesL.SETRANGE("Language Code",'NLD');
          END;
        'FRA':
          BEGIN
            ExtTextLinesL.SETRANGE("No.",AdminMailQueueSetupL."Refund Conf. Text Code FR");
            ExtTextLinesL.SETRANGE("Language Code",'FRA');
          END;
        'DEA':
          BEGIN
            ExtTextLinesL.SETRANGE("No.", AdminMailQueueSetupL."Refund Conf. Text Code AT");
            ExtTextLinesL.SETRANGE("Language Code", 'DEA');
          END;
        //H0784 04.02.14 ARU +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        'DES':
          BEGIN
            ExtTextLinesL.SETRANGE("No.", AdminMailQueueSetupL."Refund Conf. TextCode CH-DE");
            ExtTextLinesL.SETRANGE("Language Code", 'DES');
          END;

        'FRS':
          BEGIN
            ExtTextLinesL.SETRANGE("No.", AdminMailQueueSetupL."Refund Conf. TextCode CH-FR");
            ExtTextLinesL.SETRANGE("Language Code", 'FRS');
          END;
        //H0784 04.02.14 ARU -----------------------------------------------------------------
      END;

      //H0784 04.02.14 ARU +++++++++++++++++++++++

      //H0604 06.11.13 ARU +++++++++++++++++++++
      //MailIT.AppendHTML('<font color="black">');
      //H0604 06.11.13 ARU ---------------------

      MailIT.AppendHTML(TextHME011);
      //H0784 04.02.14 ARU -----------------------

      // Tekst regelen voegt
      ExtTextLinesL.SETRANGE("Text No.",1);
      IF ExtTextLinesL.FIND('-') THEN REPEAT
        LineTextL := ExtTextLinesL."Text (Long)";
        PositionL := STRPOS(LineTextL,'[');
         IF PositionL = 1 THEN BEGIN
           LineTypeL := COPYSTR(LineTextL,PositionL+1,STRPOS(LineTextL,']')-2);
           IF LineTypeL = 'Subject' THEN BEGIN
             LineTextL := STRSUBSTNO(
                                     DELSTR(ExtTextLinesL."Text (Long)", 1, STRPOS(ExtTextLinesL."Text (Long)",']')),
                                     SalesReturnHeaderArV."External Document No."
                                     ) + ' ';
             SubjecTextL := SubjecTextL + LineTextL;
           END;
         END ELSE BEGIN
           // %1 Ext. Document No. %2 Customer Name %3 Payment Ext. Text
           LineTextL := STRSUBSTNO(
                                   DELSTR(ExtTextLinesL."Text (Long)",1,STRPOS(ExtTextLinesL."Text (Long)",']')),
                                   RecipientNameL,
                                   SalesReturnHeaderArV."External Document No."
                                   );

           IF LineTextL = '%3' THEN BEGIN
             PaymentMethod.GET(SalesReturnHeaderArV."Payment Method Code");
             ExtTextLines2L.RESET;
             ExtTextLines2L.SETRANGE("Text No.", 1);
             ExtTextLines2L.SETRANGE("Table Name", ExtTextLines2L."Table Name"::"Standard Text");
             CASE SalesReturnHeaderArV."Language Code" OF
               '','DEU':
                   ExtTextLines2L.SETRANGE("No.", PaymentMethod."Refund Conf. Text Code DE");
               'NLD':
                   ExtTextLines2L.SETRANGE("No.", PaymentMethod."Refund Conf. Text Code NL");
               'FRA':
                   ExtTextLines2L.SETRANGE("No.", PaymentMethod."Refund Conf. Text Code FR");
               'DEA':
                   ExtTextLines2L.SETRANGE("No.", PaymentMethod."Refund Conf. Text Code AT");
               //H0784 04.02.14 ARU ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
               'DES':
                   ExtTextLines2L.SETRANGE("No.", PaymentMethod."Refund Conf. Text Code CH-DE");
               'FRS':
                   ExtTextLines2L.SETRANGE("No.", PaymentMethod."Refund Conf. Text Code CH-FR");
               //H0784 04.02.14 ARU ------------------------------------------------------------
             END;

             IF ExtTextLines2L.FIND('-') THEN REPEAT
               LineText2L := STRSUBSTNO(
                                       DELSTR(ExtTextLinesL."Text (Long)", 1, STRPOS(ExtTextLines2L."Text (Long)",']')),
                                       SalesReturnHeaderArV."External Document No.",
                                       RecipientNameL,
                                       ExtTextLines2L."Text (Long)");

               //H0604 05.11.13  ARU +++++++++
               IF LineText2L = '' THEN
                 LineText2L := '<br /><br />';
               //H0604 05.11.13  ARU ---------

               MailIT.AppendHTML(LineText2L);
             UNTIL ExtTextLines2L.NEXT = 0;
           END;

           IF LineTextL = '' THEN
             LineTextL := '<br /><br />';

           IF LineTextL <> '%3' THEN
             MailIT.AppendHTML(LineTextL);
         END;
      UNTIL ExtTextLinesL.NEXT = 0;

      MailIT.SetSubject(SubjecTextL);

      // Footer voegt
      CASE SalesReturnHeaderArV."Language Code" OF
        '','DEU':
            MailIT.LoadHTMLBody(AdminMailQueueSetupL."Refund Conf. HTML Foot. DE");
        'NLD':
            MailIT.LoadHTMLBody(AdminMailQueueSetupL."Refund Conf. HTML Foot. NL");
        'FRA':
            MailIT.LoadHTMLBody(AdminMailQueueSetupL."Refund Conf. HTML Foot. FR");
        'DEA':
            MailIT.LoadHTMLBody(AdminMailQueueSetupL."Refund Conf. HTML Foot. AT");
        //H0784 04.02.14 ARU +++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        'DES':
            MailIT.LoadHTMLBody(AdminMailQueueSetupL."Refund Conf. HTML Foot. CH-DE");

        'FRS':
            MailIT.LoadHTMLBody(AdminMailQueueSetupL."Refund Conf. HTML Foot. CH-FR");
        //H0784 04.02.14 ARU ---------------------------------------------------------
      END;

      MailIT.SetServer(AdminMailQueueSetupL."Refund Conf. Mail Server");

      IF AdminMailQueueSetupL."Refund Conf. Server Port" = '' THEN
        PortL := 25
      ELSE
        EVALUATE(PortL,AdminMailQueueSetupL."Refund Conf. Server Port");

      MailIT.SetPort(PortL);
      //H0709 19.06.14 MBY +++++++++++++++++++++++++++++++++++++++++++++++++++++++++
      IF AdminMailQueueSetupL."Refund Conf. Authentication" THEN BEGIN
        MailIT.UseSSL(1);
        MailIT.SetLogin(AdminMailQueueSetupL."Refund Conf. User Name");
        MailIT.SetPassword(AdminMailQueueSetupL."Refund Conf. Password");
      END;
      //H0709 19.06.14 MBY ---------------------------------------------------------
      MailIT.Send();

      // H0243 --->
    END;

    PROCEDURE CreatePOCancInquiryMail@1000000022(VAR BatchPostDocumentR@1000000030 : Record 50043);
    VAR
      BatchPostDocumentLineL@1000000029 : Record 50190;
      ContactTypeL@1000000007 : Record 50189;
      CustomerL@1000000048 : Record 18;
      ExtendedTextHeaderL@1000000009 : Record 279;
      ExtendedTextLineL@1000000008 : Record 280;
      FPC_GeneralSetupL@1000000018 : Record 50055;
      ItemL@1000000051 : Record 27;
      LoginL@1000000004 : Record 387;
      MailITSetupL@1000000024 : Record 75402;
      PurchaseHeaderL@1000000028 : Record 38;
      PurchaseLineL@1000000041 : Record 39;
      PurchaseLineLT@1000000042 : TEMPORARY Record 39;
      PurchaseLine_ItemUoMPriceLT@1000000046 : TEMPORARY Record 39;
      PurchasePriceLT@1000000047 : TEMPORARY Record 7012;
      SalesHeaderL@1000000049 : Record 36;
      UserSetupL@1000000002 : Record 91;
      VendorL@1000000031 : Record 23;
      WindowsLanguageL@1000000013 : Record 2000000045;
      POCancInquiry_FunctionsL@1000000000 : Codeunit 50146;
      IsCompletePOCancellation@1000000015 : Boolean;
      IsAllLanguagesL@1000000014 : Boolean;
      SkipCurrLineL@1000000012 : Boolean;
      SubjectFoundL@1000000011 : Boolean;
      OLD_GloballanguageL@1000000052 : Integer;
      PortL@1000000005 : Integer;
      MailITL@1000000006 : OCX "{C8C4804C-89BA-4291-AB58-4C6050B65175}:'ExpandIT.MailIT2'";
      LineTextL@1000000003 : Text[250];
      HTML_PathFooterL@1000000001 : Text[30];
    BEGIN
      //H0609 14.10.13 HCN +++++++++++++++++++++++++++++

      UserSetup.GET(BatchPostDocumentR."Scheduled by");
      POCancInquiry_FunctionsL.CheckPOCancInquirySetup(FPC_GeneralSetupL,UserSetup);
      MailITSetupL.GET();

      // Determine whether cancellation affects all purchase order lines:
      IsCompletePOCancellation :=
        POCancInquiry_FunctionsL.CheckPOCancIsCompleteCancell(BatchPostDocumentR);


      // Retrieve purchase order lines affected and sum up quantity per item
      // Assumption: Unit of Measure Code is always the for an item in one purchase order !
      CLEAR(BatchPostDocumentLineL);
      BatchPostDocumentLineL.SETCURRENTKEY("Assigned to Entry No.","Line No.");
      BatchPostDocumentLineL.SETRANGE("Assigned to Entry No.",BatchPostDocumentR."Entry No.");
      BatchPostDocumentLineL.FIND('-');
      REPEAT
        PurchaseLineL.GET(PurchaseLineL."Document Type"::Order,
                          BatchPostDocumentLineL."Document No.",
                          BatchPostDocumentLineL."Document Line No.");
        PurchaseLineLT := PurchaseLineL;
        PurchaseLineLT.INSERT;
      UNTIL BatchPostDocumentLineL.NEXT = 0;

      PurchaseLineLT.SETCURRENTKEY("Document Type",Type,"No.","Variant Code",
                                   "Drop Shipment","Location Code","Expected Receipt Date");
      PurchaseLineLT.FIND('-');
      REPEAT
        // PK-PurchasePriceLT:
        // Item No.,Vendor No.,Starting Date,Currency Code,Variant Code,Unit of Measure Code,Minimum Quantity
        IF PurchasePriceLT.GET(PurchaseLineLT."No.",'',0D,
                               PurchaseLineLT."Currency Code",'',
                               PurchaseLineLT."Unit of Measure Code",
                               PurchaseLineLT."Unit Cost (LCY)")
        THEN BEGIN
          // Field "Direct Unit Cost" (ab)used to sum up quantities to be cancelled
          PurchasePriceLT."Direct Unit Cost" += PurchaseLineLT.Quantity;
          PurchasePriceLT.MODIFY;
        END ELSE BEGIN
          PurchasePriceLT.INIT;
          PurchasePriceLT."Item No." := PurchaseLineLT."No.";
          PurchasePriceLT."Unit of Measure Code" := PurchaseLineLT."Unit of Measure Code";
          PurchasePriceLT."Minimum Quantity" := PurchaseLineLT."Unit Cost (LCY)";
          PurchasePriceLT."Direct Unit Cost" := PurchaseLineLT.Quantity;
          PurchasePriceLT.INSERT;
        END;
      UNTIL PurchaseLineLT.NEXT = 0;

      PurchaseHeaderL.GET(PurchaseHeaderL."Document Type"::Order,
                          BatchPostDocumentLineL."Document No.");
      VendorL.GET(PurchaseHeaderL."Buy-from Vendor No.");
      // retrieve vendorÔs e-mail-address:
      POCancInquiry_FunctionsL.RetrieveVendPOCancInqEmailAddr(VendorL,ContactTypeL);


      OLD_GloballanguageL := GLOBALLANGUAGE;
      CLEAR(WindowsLanguageL);
      WindowsLanguageL.SETCURRENTKEY("Abbreviated Name");
      WindowsLanguageL.SETRANGE("Abbreviated Name",VendorL."Language Code");
      IF WindowsLanguageL.FINDFIRST AND
         WindowsLanguageL.Enabled
      THEN BEGIN
        GLOBALLANGUAGE(WindowsLanguageL."Language ID");
      END ELSE BEGIN
        GLOBALLANGUAGE(1031); // = DEU
      END;

      CASE VendorL."Language Code" OF
        'DEU','':
          BEGIN
            HTML_PathFooterL := FPC_GeneralSetupL."POCancInquiry HTML Footer Path";
          END;
        ELSE BEGIN
          HTML_PathFooterL := FPC_GeneralSetupL."POCancInquiry HTML Footer Path";
        END;
      END;

      // Initialize e-mail functionalities
      IF SendMailDirect THEN BEGIN
        MailITL.SetService('SMTP');
      END ELSE BEGIN
        MailITL.SetService(FORMAT(UserSetup."Mail Client"));
      END;

      MailITL.SetFrom(FPC_GeneralSetupL."POCancInquiry Sender E-Mail");
      //H0709 30.01.14 MBY +++++++++++++
      IF MailITSetupL."Authentication Home24 (Return)" THEN BEGIN
      //H0709 30.01.14 MBY -------------
        MailITL.SetLogin(FPC_GeneralSetupL."POCancInquiry Sender E-Mail");
        MailITL.SetPassword(FPC_GeneralSetupL."POCancInquiry Password");
      //H0709 30.01.14 MBY +++++++++++++
      END;
      //H0709 30.01.14 MBY -------------


      IF MailITSetupL."Test Mode" THEN BEGIN
        MailITL.AddRecipient(MailITSetupL."Test E-Mail",
                             MailITSetupL."Test E-Mail");
      END ELSE BEGIN
        MailITL.AddRecipient(ContactTypeL."Contact Medium",
                              ContactTypeL."Contact Medium");
        CLEAR(UserSetupL);
        UserSetupL.SETRANGE("Is BCC for PurchOrdCancInquiry",TRUE);
        UserSetupL.SETFILTER("E-Mail",'<>%1','');
        IF UserSetupL.FIND('-') THEN BEGIN
          REPEAT
            MailITL.AddRecipientBCC(UserSetupL."E-Mail",UserSetupL."E-Mail");
          UNTIL UserSetupL.NEXT= 0;
        END;
      END;

      // set font, etc.
      MailITL.AppendHTML(TextHME011);

      //
      // Step 1: Subject and Pretext
      //
      CLEAR(ExtendedTextHeaderL);
      ExtendedTextHeaderL.SETCURRENTKEY("Table Name","No.","Language Code",
                                        "All Language Codes","Starting Date","Ending Date");
      ExtendedTextHeaderL.SETRANGE("Table Name",ExtendedTextHeaderL."Table Name"::"Standard Text");
      ExtendedTextHeaderL.SETRANGE("No.",FPC_GeneralSetupL."POCancInquiry Pretext");
      IF (VendorL."Language Code" <> '') THEN BEGIN
        ExtendedTextHeaderL.SETRANGE("Language Code",VendorL."Language Code");
      END ELSE BEGIN
        ExtendedTextHeaderL.SETRANGE("All Language Codes",TRUE);
      END;
      ExtendedTextHeaderL.SETFILTER("Starting Date",'%1|<=%2',0D,TODAY);
      ExtendedTextHeaderL.SETFILTER("Ending Date",'>=%1|%2',TODAY,0D);
      IF ExtendedTextHeaderL.FINDFIRST THEN BEGIN
        ExtendedTextHeaderL.SETRANGE("Language Code");
      END ELSE BEGIN
        ExtendedTextHeaderL.SETRANGE("Language Code");
        ExtendedTextHeaderL.SETRANGE("All Language Codes",TRUE);
        ExtendedTextHeaderL.FINDFIRST;
      END;

      CLEAR(ExtendedTextLineL);
      ExtendedTextLineL.SETCURRENTKEY("Table Name","No.","Language Code","Text No.","Line No.");
      ExtendedTextLineL.SETRANGE("Table Name",ExtendedTextHeaderL."Table Name");
      ExtendedTextLineL.SETRANGE("No.",ExtendedTextHeaderL."No.");
      ExtendedTextLineL.SETRANGE("Language Code",ExtendedTextHeaderL."Language Code");
      ExtendedTextLineL.SETRANGE("Text No.",ExtendedTextHeaderL."Text No.");
      IF ExtendedTextHeaderL.FIND('-') THEN BEGIN
        REPEAT
          IF NOT SubjectFoundL THEN BEGIN
            IF (STRPOS(ExtendedTextLineL."Text (Long)",FPC_GeneralSetupL.ExtText_SubjectIdentifier) <> 0) THEN BEGIN
              LineTextL := COPYSTR(ExtendedTextLineL."Text (Long)",STRLEN(FPC_GeneralSetupL.ExtText_SubjectIdentifier)+1);
              MailITL.SetSubject(LineTextL);
              SubjectFoundL := TRUE;
              SkipCurrLineL := TRUE;
            END;
          END;
          IF SkipCurrLineL THEN BEGIN
            SkipCurrLineL := FALSE;
          END ELSE BEGIN
            MailITL.AppendHTML(ExtendedTextLineL."Text (Long)"+'<br>');
          END;
        UNTIL ExtendedTextLineL.NEXT = 0;
      END;
      MailITL.AppendHTML('</table></font></span>');


      //
      // Step 2: variable information retrieved from SalesHeader, Purchase Header
      //

      // Reference to Purchase Order, Sales Order no., Customer Name:
      // retrieve reference data:
      // xxx
      PurchaseLineLT.FIND('-');
      IF NOT SalesHeaderL.GET(SalesHeaderL."Document Type"::Order,
                          PurchaseLineLT."Sales Order No.")
      THEN BEGIN
        SalesHeaderL.GET(SalesHeaderL."Document Type"::Order,
                         PurchaseLineLT."Special Order Sales No.");
      END;

      // set 1. table PurchaseOrder, SalsesOrder, CustomerName
      //
      // set Header
      //
      LineTextL := '<h4>'+TextHME012+TextHME009+'</h4></font>';
      MailITL.AppendHTML(LineTextL);

      // set column width
      LineTextL :='<table><table border="1" cellspacing="2" cellpadding="5"><thead><colgroup>'+
                  '<col width="200">'+
                  '<col width="200">'+
                  '<col width="200">'+
                  '</colgroup></thead>';
      MailITL.AppendHTML(LineTextL);

      // set column headers
      LineTextL := '<tr>'+
                   '<th>'+TextHME012+TextHME002+'</font></th>';
      MailITL.AppendHTML(LineTextL);
      LineTextL := '<th>'+TextHME012+TextHME003+'</font></th>';
      MailITL.AppendHTML(LineTextL);
      LineTextL := '<th>'+TextHME012+TextHME004+'</font></th>'+'</tr>';
      MailITL.AppendHTML(LineTextL);

      // fill reference data, end of table
      LineTextL := '<tbody><tr>'+
                   '<td>'+TextHME012+PurchaseHeaderL."No."+'</font></td>';
      MailITL.AppendHTML(LineTextL);
      LineTextL := '<td>'+TextHME012+SalesHeaderL."No."+'</font></td>';
      MailITL.AppendHTML(LineTextL);
      LineTextL := '<td>'+TextHME012+SalesHeaderL."Bill-to Name"+'</font></td>'+
                   '</tr></tbody>'+
                   '</table></span><br>';
      MailITL.AppendHTML(LineTextL);


      IF NOT IsCompletePOCancellation THEN BEGIN
        // set table title
        LineTextL := '<h4>'+TextHME012+TextHME001+'</h4></font>';
        MailITL.AppendHTML(LineTextL);

        // set 2. table, header, column width
        LineTextL :='<table border="1" cellpadding="5"><thead><colgroup>'+
                    '<col width="200">'+
                    '<col width="250">'+
                    '<col width="50">'+
                  '<col width="50">'+
                    '</colgroup></thead>';

        MailITL.AppendHTML(LineTextL);

        // set column headers
        LineTextL := '<tr>'+
                     '<th>'+TextHME012+TextHME005+'</font></th>';
        MailITL.AppendHTML(LineTextL);
        LineTextL := '<th>'+TextHME012+TextHME006+'</font></th>';
        MailITL.AppendHTML(LineTextL);
        LineTextL := '<th>'+TextHME012+TextHME007+'</font></th>';
        MailITL.AppendHTML(LineTextL);
        LineTextL := '<th>'+TextHME012+TextHME008+'</font></th></tr>';
        MailITL.AppendHTML(LineTextL);

        // fill body data
        PurchasePriceLT.FIND('-');
        LineTextL := '<br><tbody>';
        MailITL.AppendHTML(LineTextL);
        REPEAT
          ItemL.GET(PurchasePriceLT."Item No.");
          LineTextL := '<tr>'+
                       '<td>'+TextHME012+ItemL."Vendor Item No."+'</font></td>';
          MailITL.AppendHTML(LineTextL);
          LineTextL := '<td>'+TextHME012+ItemL."Vendor Description"+'</font></td>';
          MailITL.AppendHTML(LineTextL);
          LineTextL := '<td>'+TextHME012+FORMAT(PurchasePriceLT."Direct Unit Cost")+'</font></td>';
          MailITL.AppendHTML(LineTextL);
          LineTextL := '<td>'+TextHME012+FORMAT(PurchasePriceLT."Unit of Measure Code")+'</font></td></tr>';
          MailITL.AppendHTML(LineTextL);

        UNTIL PurchasePriceLT.NEXT = 0;
        LineTextL := '</tbody></table></span>';
        MailITL.AppendHTML(LineTextL);
        // end of table
      END;  // IF NOT IsCompletePOCancellation THEN BEGIN


      //
      // Step 3: Posttext
      //
      MailITL.AppendHTML(TextHME011);
      ExtendedTextHeaderL.SETRANGE("No.",FPC_GeneralSetupL."POCancInquiry Posttext");
      IF (VendorL."Language Code" <> '') THEN BEGIN
        ExtendedTextHeaderL.SETRANGE("Language Code",VendorL."Language Code");
      END ELSE BEGIN
        ExtendedTextHeaderL.SETRANGE("All Language Codes",TRUE);
      END;
      ExtendedTextHeaderL.SETFILTER("Starting Date",'%1|<=%2',0D,TODAY);
      ExtendedTextHeaderL.SETFILTER("Ending Date",'>=%1|%2',TODAY,0D);
      IF ExtendedTextHeaderL.FINDFIRST THEN BEGIN
        ExtendedTextHeaderL.SETRANGE("Language Code");
      END ELSE BEGIN
        ExtendedTextHeaderL.SETRANGE("Language Code");
        ExtendedTextHeaderL.SETRANGE("All Language Codes",TRUE);
        ExtendedTextHeaderL.FINDFIRST;
      END;

      CLEAR(ExtendedTextLineL);
      ExtendedTextLineL.SETCURRENTKEY("Table Name","No.","Language Code","Text No.","Line No.");
      ExtendedTextLineL.SETRANGE("Table Name",ExtendedTextHeaderL."Table Name");
      ExtendedTextLineL.SETRANGE("No.",ExtendedTextHeaderL."No.");
      ExtendedTextLineL.SETRANGE("Language Code",ExtendedTextHeaderL."Language Code");
      ExtendedTextLineL.SETRANGE("Text No.",ExtendedTextHeaderL."Text No.");
      IF ExtendedTextHeaderL.FIND('-') THEN BEGIN
        REPEAT
          MailITL.AppendHTML(ExtendedTextLineL."Text (Long)"+'<br>');
        UNTIL ExtendedTextLineL.NEXT = 0;
      END;
      MailITL.AppendHTML('</table></span><br>');

      //
      // Step 4: HTML-Footer
      //
      IF (FPC_GeneralSetupL."POCancInquiry HTML Footer Path" <> '') THEN BEGIN
        MailITL.LoadHTMLBody(HTML_PathFooterL);
      END;

      SendMailDirect := TRUE;
      IF SendMailDirect THEN BEGIN
        MailITL.SetServer(MailITSetupL."Mail Server Home24 (Return)");
        //H0709 30.01.14 MBY +++++++++++++
        IF MailITSetupL."Authentication Home24 (Return)" THEN
        //H0709 30.01.14 MBY -------------
          MailITL.UseSSL(1);

        IF MailITSetupL."Server Port Home24 (Return)" = '' THEN BEGIN
          PortL := 25
        END ELSE BEGIN
          EVALUATE(PortL,MailITSetupL."Server Port Home24 (Return)");
        END;
        MailITL.SetPort(PortL);
        MailITL.Send();
      END ELSE BEGIN
        MailITL.Display();
      END;
      MailITL.AppendHTML('</font>');

      GLOBALLANGUAGE(OLD_GloballanguageL);
      //H0609 14.10.13 HCN -----------------------------
    END;

    PROCEDURE "**P1237**"@1000000021();
    BEGIN
    END;

    PROCEDURE CopyRunOnce@1000000023(p_ClientPath@1000000000 : Text[1024]);
    VAR
      SourceFile@1000000001 : Text[1024];
      DestinationFile@1000000002 : Text[1024];
    BEGIN
      IF p_ClientPath <> '' THEN BEGIN
        IF STRPOS(p_ClientPath,'Temp') <> 0 THEN BEGIN
          SourceFile := COPYSTR(p_ClientPath,1,STRPOS(p_ClientPath,'Temp')- 1);
          DestinationFile := SourceFile;
          SourceFile := SourceFile + 'PDF Writer\Bullzip PDF Printer\runonce.ini';
          DestinationFile := DestinationFile + 'PDF Writer\Bullzip PDF Printer #2\runonce.ini';
          IF EXISTS(DestinationFile) THEN
            IF ERASE(DestinationFile) THEN;
          COPY(SourceFile,DestinationFile);
        END;
      END;
    END;

    BEGIN
    {
      +--------------------------------------------+
      |                                            |
      |                  Home24                    |
      |       Internal Customizing by NAV-Team     |
      |                                            |
      +--------------------------------------------+

      Project No. Date      Shortcut  Description
      _____________________________________________

      H0006       10.10.12  RHO       New Function CreateSpecialOrderMail - Change Channel 4->99; 7->99; 8->99; Send Update-E-Mail
      H0030       15.10.12  RHO       CreateSpecialOrderMail modified -> New Function CheckOrderUpdateEMail
      H0049       23.10.12  RHO       Redesign of Function CheckOrderUpdateEMail
      H0385       17.06.13  ARU       anonymised Packing List for CH-99 (PurchSpecialOrder)
      H0411       19.06.13  ARU       anonym. delivery note f. 'PO' > subject without seller
      H0114       10.12.12  ABR       New Functions:
                                       CreateSalesWhseReturnConfirm
                                       CreateSalesWhseReturnConfirmAr
                                       CreateSalesRefundConfirm
                                       CreateSalesRefundConfirmAr
      H0194       11.02.13  ABR       Send Mails for AT
      H0243       10.04.13  FX        Conditional texts for Refund Confirmation e-mail (v.4)
      H0370       31.05.13  FX        Don't e-mail zero amount invoices
      H0510       16.08.13  FX        Bugfix for invoice e-mail
      H0609       14.10.13  HCN       Incorporate new action type: PurchaseOrder Cancellation Inquiry e-mail
      H0775       16.12.13  ARU       Review assimilation Customer-Mails (Phase 1) > Changes in WhseReturnConfirm
      H0794       07.01.13  ARU       RHD CD/WE - assimilation for Order-Mail > Ch-99 and Ch-3
      H0773       22.01.14  FX        Confirmation Request for second sending of a Purchase Order email
      H0872       20.02.14  DMA       Suppress Delivery Note for specific channels
      H0916       04.03.14  ARU       No cust.E-Mails will send out if the SalesOrder is not archived
      H1068       22.05.14  DMA       Bug: CSV File contains wrong Customer Name (Johnny Jaguzsch), CODECHANGE
      H0784       04.02.14  ARU       Switzerland: Prepare all customer mails in NAV
      H0709       30.01.14  MBY       Add Mail Server Authorization Setup
      H1173       11.06.14  MSL       Bug: Unprocessed swiss Return Orders: WhseReturnConfirmation
      T0014       30.06.14  MSL       FTTC 3 - Phase 1- Remove Ret. Whse. Mail Fields
      H1218       10.07.14  EHN       Export crossborder VAT Registration No. via EDI and CSV File
      H1223       16.07.14  EHN       Bugfix: CD Purchase email with duplicate orderno in email body
      H1619       31.10.14  EHN       Extend CSV in Purchase Order Email
      H1750       28.11.14  DMA       BUG: EDI Delivery Note is missing for EDI Crossdock Orders
      H1870       02.12.14  EHN       HOTFIX: Purchasing email print fix
      H1892       08.12.14  EHN       BUGFIX: CSV File missing CD Shipping Address
      H1783       19.11.14  MIK       SII Redesign for the Return&Change messages (Label&Instruction)
      H1731       09.12.14  EHN       Phase 2: spare part - EDI & CSV adjustment
      H1698       16.01.15  MKR       Hermes 2MH: Adjustments Cross-Dock Label/EDI ORDERS/CSV: New function CreateSpecialOrderCSV_Hermes()
      H1534       26.01.15  RST       Phase 2: Vendor E-Mail for Spare Part
      H2078       04.02.15  EHN       Spare Part: Adjust purchase mail address & spare part reason
      H2108       11.02.15  DMO       PO Line Tracking Improvements, modified to update counter of sent emails on Purchase Header
      H1700       18.03.15  MKR       Hermes 2MH: Generation and transmission IFTMIN: New Parcel Status Code added
      H3782       17.03.15  EHN       Spare Part Process: Improvement Vendor Mail/EDI & delivery note
      H3903       20.03.15  MKR       Hermes 2MH: Adjustments label/EDI ORDERS/CSV for cross docking: Use customer based depot
      H4267       20.05.15  EHN       Bugfix - H3847 - Description 2 is overwritten in Purchase Line
      H1671       11.03.15  FF        Dropship/Purchase Mail Footer/Header Setup
      H4320       19.06.15  FF        Change Sparepart Footer from Hardcoded to Setup Fields

      +--------------------------------------------+
      |                                            |
      |                  Home24                    |
      |     Cooperation Tectura & Home24 NAV Team  |
      |                                            |
      +--------------------------------------------+

      Project No. Date      Shortcut  Description
      _____________________________________________
      H1698       09.02.15  tec-ar    Hermes 2MH Adjustments Cross-Dock LabelEDI ORDERSCSV
      H3806       05.03.15  tec-ar    Bugfix
      H3878       12.03.15  tec-are   Bugfix

      +-----------------------------------------------------+
      |               GOB Software & Systeme                |
      +-----------------------------------------------------+
      |                FP Commerce Anpassungen              |
      -------------------------------------------------------

      Version        Bemerkung
      -------------------------------------------------------
      P0506   gob-dst   24.10.12   Kanal 99: Verwendung Lagerort Code aus Einrichtung fÅr Wahl der Lieferadresse
      P0642   gob-rste  06.12.12   Channel 98 RHE Crossdock Freienbrink
      P0687   gob-rste  17.12.12   Get Setup for Check
      P1108   gob-ael   17.09.13   Crossdock Label (PDF) added to Special-E-Mail
      P1146   gob-lku   11.11.13   Filterung fÅr Aufruf des Crossdock Labels ergÑnzt
      P1165   gob-lku   10.12.13   weitere Anpassung Filterung fÅr Aufruf des CD labels
      P1185   gob-rste  30.01.14   Create Crossdock Label Fullsize
      P1209   gob-kmi   25.02.14   Print Crossdock Label Fullsize
      P1221   gob-kmi   13.03.14   No Mail/Phone/Fax Information at Email, if Crossdock
      P1237   gob-kmi   04.04.14   Fullsize CD - Print with "Bullzip Printer #2"
    }
    END.
  }
}

