OBJECT Codeunit 6085573 Xml Library
{
  OBJECT-PROPERTIES
  {
    Date=17.01.14;
    Time=01:00:00;
    Version List=DCW13.70.00.3.50.06;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {

    PROCEDURE CreateXmlDOM@1000000001(VAR XmlDoc@1000000000 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{88D96A05-F192-11D4-A65F-0040963251E5}:'Microsoft XML, v6.0'.DOMDocument60";RootName@1000000002 : Text[30]);
    VAR
      XmlNode@1000000001 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      XmlPI@1000000004 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF89-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMProcessingInstruction";
      XmlAttr@1000000003 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF85-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMAttribute";
    BEGIN
      CREATE(XmlDoc);
      XmlNode :=  XmlDoc.createElement(RootName);
      XmlDoc.appendChild(XmlNode);

      XmlPI := XmlDoc.createProcessingInstruction('xml','version="1.0"');
      XmlAttr := XmlDoc.createAttribute('encoding');
      XmlAttr.value := 'ascii';
      XmlPI.attributes.setNamedItem(XmlAttr);
      XmlDoc.insertBefore(XmlPI,XmlNode);
    END;

    PROCEDURE CreateUTF8XmlDOM@1000000006(VAR XmlDoc@1000000000 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{88D96A05-F192-11D4-A65F-0040963251E5}:'Microsoft XML, v6.0'.DOMDocument60";RootName@1000000002 : Text[30]);
    VAR
      XmlNode@1000000001 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      XmlPI@1000000004 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF89-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMProcessingInstruction";
      XmlAttr@1000000003 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF85-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMAttribute";
    BEGIN
      CREATE(XmlDoc);
      XmlNode :=  XmlDoc.createElement(RootName);
      XmlDoc.appendChild(XmlNode);

      XmlPI := XmlDoc.createProcessingInstruction('xml','version="1.0"');
      XmlAttr := XmlDoc.createAttribute('encoding');
      XmlAttr.value := 'utf-8';
      XmlPI.attributes.setNamedItem(XmlAttr);
      XmlDoc.insertBefore(XmlPI,XmlNode);
    END;

    PROCEDURE AppendXmlNode@1000000002(ParentNode@161024012 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";Name@1000000000 : Text[30];Value@1000000002 : Text[1024]);
    VAR
      Node@1000000004 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
    BEGIN
      CreateXmlNode(ParentNode,Name,Value,Node);
    END;

    PROCEDURE CreateXmlNode@1000000000(ParentNode@1000000001 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";Name@1000000000 : Text[30];Value@1000000002 : Text[1024];VAR NewNode@1000000003 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode");
    BEGIN
      CLEAR(NewNode);
      NewNode :=  ParentNode.ownerDocument.createNode('element',Name,'');
      NewNode.text := Value;
      ParentNode.appendChild(NewNode)
    END;

    PROCEDURE SetXmlNodeAttr@1000000007(VAR Node@1000000002 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";AttrName@1000000001 : Text[30];AttrValue@1000000000 : Text[1024]);
    VAR
      XmlNode@1000000005 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      XmlAttr@1000000004 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF85-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMAttribute";
    BEGIN
      XmlAttr := Node.ownerDocument.createAttribute(AttrName);
      XmlAttr.value := AttrValue;
      Node.attributes.setNamedItem(XmlAttr);
    END;

    PROCEDURE GetNodeText@1000000021(ParentNode@1000000000 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";Name@1000000001 : Text[1024]) : Text[1024];
    VAR
      Node@1000000002 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
    BEGIN
      Node := ParentNode.selectSingleNode(Name);
      IF NOT ISCLEAR(Node) THEN
        EXIT(Node.text);
    END;

    PROCEDURE GetNodeAttrib@161024012(ParentNode@1000000000 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";NodeName@1000000001 : Text[1024];AttribName@161024012 : Text[30]) : Text[1024];
    VAR
      Node@1000000002 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
    BEGIN
      Node := ParentNode.selectSingleNode(NodeName);
      IF NOT ISCLEAR(Node) THEN
        EXIT(Node.attributes.getNamedItem(AttribName).text);
    END;

    PROCEDURE GetNodeGuid@1160040001(ParentNode@1000000000 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";Name@1000000001 : Text[1024]) ReturnGUID : GUID;
    VAR
      Node@1000000002 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      GUIDText@1160040000 : Text[100];
    BEGIN
      GUIDText := GetNodeText(ParentNode,Name);
      IF GUIDText = '' THEN
        EXIT;

      IF COPYSTR(GUIDText,1,1) <> '{' THEN
        GUIDText := '{' + GUIDText;

      IF COPYSTR(GUIDText,STRLEN(GUIDText)-1,1) <> '}' THEN
        GUIDText := GUIDText + '}';

      EVALUATE(ReturnGUID,GUIDText);
    END;

    PROCEDURE Bool2Text@1000000037(bool@1000000000 : Boolean) : Text[30];
    BEGIN
      IF bool THEN
        EXIT('true')
      ELSE
        EXIT('false');
    END;

    PROCEDURE Date2Text@1000000003(date@1000000000 : Date) : Text[30];
    BEGIN
      IF date = 0D THEN
        EXIT;
      EXIT(FORMAT(date,0,'<Day,2>-<Month,2>-<Year4>'));
    END;

    PROCEDURE Dec2Text@1000000004(dec@1000000000 : Decimal) : Text[30];
    BEGIN
      EXIT(FORMAT(dec,0,'<Sign><Integer><Decimals><Comma,.>'));
    END;

    PROCEDURE Text2Bool@1000000005(Text@1000000000 : Text[30]) : Boolean;
    BEGIN
      CASE UPPERCASE(Text) OF
        '','FALSE','NO','0':
          EXIT(FALSE);
        ELSE
          EXIT(TRUE);
      END;
    END;

    PROCEDURE Text2Date@1000000023(Text@1000000000 : Text[30]) : Date;
    VAR
      Day@1000000001 : Integer;
      Month@1000000002 : Integer;
      Year@1000000003 : Integer;
    BEGIN
      IF Text = '' THEN
        EXIT(0D);

      EVALUATE(Day,COPYSTR(Text,1,2));
      EVALUATE(Month,COPYSTR(Text,4,2));
      EVALUATE(Year,COPYSTR(Text,7,4));
      EXIT(DMY2DATE(Day,Month,Year));
    END;

    PROCEDURE Text2Time@1000000031(Text@1000000000 : Text[30]) TheTime : Time;
    VAR
      Hours@1000000001 : Integer;
      Minutes@1000000002 : Integer;
      Seconds@1000000003 : Integer;
    BEGIN
      IF Text = '' THEN
        EXIT(0T);

      EVALUATE(TheTime,
        COPYSTR(Text,1,2) + ':' +
        COPYSTR(Text,4,2) + ':' +
        COPYSTR(Text,7,2));
    END;

    PROCEDURE Text2DateTime@1000000030(Text@1000000000 : Text[30]) : DateTime;
    BEGIN
      IF Text = '' THEN
        EXIT(0DT);

      EXIT(CREATEDATETIME(Text2Date(Text),Text2Time(COPYSTR(Text,12))));
    END;

    PROCEDURE Text2Dec@1000000022(Text@1000000000 : Text[1024]) : Decimal;
    VAR
      TestDec@1000000001 : Decimal;
    BEGIN
      IF Text = '' THEN
        EXIT(0);
      EVALUATE(TestDec,Text);
      IF STRPOS(FORMAT(1.1),',') <> 0 THEN
        EXIT(TestDec / 100)
      ELSE
        EXIT(TestDec);
    END;

    PROCEDURE Text2Int@1000000028(Text@1000000000 : Text[1024]) TheInt : Integer;
    BEGIN
      IF Text = '' THEN
        EXIT(0);
      EVALUATE(TheInt,Text);
    END;

    BEGIN
    END.
  }
}

