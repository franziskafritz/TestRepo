OBJECT Codeunit 82 Sales-Post + Print
{
  OBJECT-PROPERTIES
  {
    Date=10.03.15;
    Time=12:23:58;
    Modified=Yes;
    Version List=NAVW15.00,NAVDACH4.00.02,T0082;
  }
  PROPERTIES
  {
    TableNo=36;
    OnRun=BEGIN
            SalesHeader.COPY(Rec);
            Code;
            Rec := SalesHeader;
          END;

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'DEU=&Liefern,&Fakturieren,Liefern &und fakturieren;ENU=&Ship,&Invoice,Ship &and Invoice';
      Text001@1001 : TextConst 'DEU=M”chten Sie die %1 buchen und drucken?;ENU=Do you want to post and print the %1?';
      Text002@1002 : TextConst 'DEU=&Liefern,&Fakturieren,Liefern &und fakturieren;ENU=&Receive,&Invoice,Receive &and Invoice';
      SalesHeader@1003 : Record 36;
      SalesShptHeader@1004 : Record 110;
      SalesInvHeader@1005 : Record 112;
      SalesCrMemoHeader@1006 : Record 114;
      ReturnRcptHeader@1007 : Record 6660;
      ReportSelection@1008 : Record 77;
      SalesPost@1009 : Codeunit 80;
      Selection@1010 : Integer;
      EBPPSetup@1150001 : Record 3010501;

    LOCAL PROCEDURE Code@2();
    VAR
      "***TEC************************"@1100409003 : Integer;
      BatchPostDocumentL@1100409004 : Record 50043;
      MPPostingMgtL@1100409002 : Codeunit 50501;
      SaveInvoice@1100409001 : Boolean;
      ManualPosting@1100409000 : Boolean;
    BEGIN
      //T0082 08.12.14 TEC-GH ++++++++++++++++++++++++++++++++++++++++++++++++++
      ManualPosting := MPPostingMgtL.DoSalesPostbyBatch(SalesHeader);
      //T0082 08.12.14 TEC-GH --------------------------------------------------

      WITH SalesHeader DO BEGIN
        CASE "Document Type" OF
          "Document Type"::Order:
            BEGIN
              Selection := STRMENU(Text000,3);
              IF Selection = 0 THEN
                EXIT;
              Ship := Selection IN [1,3];
              Invoice := Selection IN [2,3];
            END;
          "Document Type"::"Return Order":
            BEGIN
              Selection := STRMENU(Text002,3);
              IF Selection = 0 THEN
                EXIT;
              Receive := Selection IN [1,3];
              Invoice := Selection IN [2,3];
            END ELSE
              IF NOT
                CONFIRM(
                  Text001,FALSE,
                  "Document Type")
              THEN
                EXIT;
        END;
      //T0082 08.12.14 TEC-GH ++++++++++++++++++++++++++++++++++++++++++++++++++
        IF ManualPosting THEN BEGIN
          IF Ship THEN BEGIN
            MPPostingMgtL.InsertShippingSalesBatch(SalesHeader);
          END;
          IF Invoice THEN BEGIN
            MPPostingMgtL.InsertInvoiceSalesBatch(SalesHeader);
          END;
          SaveInvoice := Invoice;
          IF Ship THEN BEGIN
            MPPostingMgtL.PostSalesBatchShip(SalesHeader);
          END;
          Invoice := SaveInvoice;
          IF Invoice THEN BEGIN
            MPPostingMgtL.PostSalesBatchInvoice(SalesHeader);
          END;
        //T0060, 10.03.15 CC-GH     +++++++++++++++++++++++++++++++++++++
        END ELSE IF (SalesHeader."Document Type" = SalesHeader."Document Type"::"Return Order") THEN BEGIN
          MPPostingMgtL.RUN(SalesHeader);
          COMMIT;
        //T0060 10.03.15 CC-GH     -------------------------------------
        END ELSE BEGIN
      //T0082 08.12.14 TEC-GH --------------------------------------------------

        SalesPost.RUN(SalesHeader);
      //T0082 08.12.14 TEC-GH ++++++++++++++++++++++++++++++++++++++++++++++++++
        END;
      //T0082 08.12.14 TEC-GH --------------------------------------------------

        GetReport(SalesHeader);
        COMMIT;
      END;
    END;

    PROCEDURE GetReport@3(VAR SalesHeader@1000 : Record 36);
    BEGIN
      WITH SalesHeader DO BEGIN
        CASE "Document Type" OF
          "Document Type"::Order:
            BEGIN
              IF Ship THEN BEGIN
                SalesShptHeader."No." := "Last Shipping No.";
                SalesShptHeader.SETRECFILTER;
                PrintReport(ReportSelection.Usage::"S.Shipment");
              END;
              IF Invoice THEN BEGIN
                IF EBPPSetup.FIND('-') THEN
                  IF EBPPSetup.CheckEBPPPrint("Document Type"::Invoice,"Last Posting No.","Bill-to Customer No.",FALSE) THEN
                    EXIT;
                SalesInvHeader."No." := "Last Posting No.";
                SalesInvHeader.SETRECFILTER;
                PrintReport(ReportSelection.Usage::"S.Invoice");
              END;
            END;
          "Document Type"::Invoice:
            BEGIN
              IF EBPPSetup.FIND('-') THEN
                IF EBPPSetup.CheckEBPPPrint("Document Type"::Invoice,"Last Posting No.","Bill-to Customer No.",FALSE) THEN
                  EXIT;

              IF "Last Posting No." = '' THEN
                SalesInvHeader."No." := "No."
              ELSE
                SalesInvHeader."No." := "Last Posting No.";
              SalesInvHeader.SETRECFILTER;
              PrintReport(ReportSelection.Usage::"S.Invoice");
            END;
          "Document Type"::"Return Order":
            BEGIN
              IF Receive THEN BEGIN
                ReturnRcptHeader."No." := "Last Return Receipt No.";
                ReturnRcptHeader.SETRECFILTER;
                PrintReport(ReportSelection.Usage::"S.Ret.Rcpt.");
              END;
              IF Invoice THEN BEGIN
                IF EBPPSetup.FIND('-') THEN
                  IF EBPPSetup.CheckEBPPPrint("Document Type"::"Return Order","Last Posting No.","Bill-to Customer No.",FALSE) THEN
                    EXIT;

                SalesCrMemoHeader."No." := "Last Posting No.";
                SalesCrMemoHeader.SETRECFILTER;
                PrintReport(ReportSelection.Usage::"S.Cr.Memo");
              END;
            END;
          "Document Type"::"Credit Memo":
            BEGIN
              IF EBPPSetup.FIND('-') THEN
                IF EBPPSetup.CheckEBPPPrint("Document Type"::"Credit Memo","Last Posting No.","Bill-to Customer No.",FALSE) THEN
                  EXIT;

              IF "Last Posting No." = '' THEN
                SalesCrMemoHeader."No." := "No."
              ELSE
                SalesCrMemoHeader."No." := "Last Posting No.";
              SalesCrMemoHeader.SETRECFILTER;
              PrintReport(ReportSelection.Usage::"S.Cr.Memo");
            END;
        END;
      END;
    END;

    LOCAL PROCEDURE PrintReport@1(ReportUsage@1000 : Integer);
    BEGIN
      ReportSelection.RESET;
      ReportSelection.SETRANGE(Usage,ReportUsage);
      ReportSelection.FINDSET;
      REPEAT
        ReportSelection.TESTFIELD("Report ID");
        CASE ReportUsage OF
          ReportSelection.Usage::"SM.Invoice":
            REPORT.RUN(ReportSelection."Report ID",FALSE,FALSE,SalesInvHeader);
          ReportSelection.Usage::"SM.Credit Memo":
            REPORT.RUN(ReportSelection."Report ID",FALSE,FALSE,SalesCrMemoHeader);
          ReportSelection.Usage::"S.Invoice":
            REPORT.RUN(ReportSelection."Report ID",FALSE,FALSE,SalesInvHeader);
          ReportSelection.Usage::"S.Cr.Memo":
            REPORT.RUN(ReportSelection."Report ID",FALSE,FALSE,SalesCrMemoHeader);
          ReportSelection.Usage::"S.Shipment":
            REPORT.RUN(ReportSelection."Report ID",FALSE,FALSE,SalesShptHeader);
          ReportSelection.Usage::"S.Ret.Rcpt.":
            REPORT.RUN(ReportSelection."Report ID",FALSE,FALSE,ReturnRcptHeader);
        END;
      UNTIL ReportSelection.NEXT = 0;
    END;

    BEGIN
    {
      +--------------------------------------------+
      |                                            |
      |                  Home24                    |
      |     Cooperation Tectura & Home24 NAV Team  |
      |                                            |
      +--------------------------------------------+

      Project No. Date      Shortcut  Description
      _____________________________________________

      T0082       08.12.14  tec-gh    Post sales batch (Selection = 1|2), new function DefManualPosting
    }
    END.
  }
}

