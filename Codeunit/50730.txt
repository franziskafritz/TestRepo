OBJECT Codeunit 50730 Test: RHD Crossdock
{
  OBJECT-PROPERTIES
  {
    Date=23.02.15;
    Time=12:00:00;
    Version List=HME1920;
  }
  PROPERTIES
  {
    Subtype=Test;
    OnRun=BEGIN
            isInitialized := FALSE;
          END;

  }
  CODE
  {
    VAR
      LibrarySales@1000000010 : Codeunit 50701;
      RHDInterfaceHelper@1000000004 : Codeunit 50716;
      ChannelCode3@1000000003 : Code[10];
      ChannelCode3FR@1000000001 : Code[10];
      ChannelCode3NL@1000000002 : Code[10];
      ChannelCode3AT@1000000006 : Code[10];
      ChannelCode3CH@1000000007 : Code[10];
      ChannelCode3BE@1000000008 : Code[10];
      ChannelCode3IT@1000000009 : Code[10];
      isInitialized@1000000000 : Boolean;

    LOCAL PROCEDURE Initialize@1000000034();
    VAR
      BackupMgt@1001 : Codeunit 50201;
    BEGIN
      RANDOMIZE;
      IF isInitialized THEN
        EXIT;
      // BackupMgt.DefaultFixture;
      isInitialized := TRUE;

      IF NOT LibrarySales.FindNoSeries('TEST') THEN
        LibrarySales.CreateNoSeries('TEST');

      ChannelCode3 := 'GER-3';
      ChannelCode3FR := 'FRA-3';
      ChannelCode3NL := 'NL-3';
      ChannelCode3AT := 'AT-3';
      ChannelCode3CH := 'CH-3';
      ChannelCode3BE := 'BE-3';
      ChannelCode3IT := 'IT-3';
      COMMIT;
    END;

    [Test]
    PROCEDURE "---DE---"@1000000015();
    BEGIN
    END;

    [Test]
    PROCEDURE GER3_RHDInitInterface@1000000001();
    BEGIN
      // Trigger RHD Interface, verify RHD Sales Header.
      Initialize;
      RHDInterfaceHelper.RHDInitializeInterfaceCD(ChannelCode3,'Ger3Single');
    END;

    [Test]
    PROCEDURE GER3_RHDInitInterfaceAssembly@1000000063();
    BEGIN
      // Trigger RHD Interface, verify RHD Sales Header.
      Initialize;
      RHDInterfaceHelper.RHDInitializeInterfaceAssemCD(ChannelCode3,'Ger3SingleAssemble');
    END;

    [Test]
    PROCEDURE GER3_CreateKADSingleLine@1000000000();
    BEGIN
      // Create KAD File for Single Line Order.
      Initialize;
      RHDInterfaceHelper.CreateKADFile(ChannelCode3,'Ger3Single');
    END;

    [Test]
    PROCEDURE GER3_CreateKADSingleLineRes@1000000016();
    BEGIN
      // Create KAD File for Single Line Order with Resource = Credit Bon.
      Initialize;
      RHDInterfaceHelper.CreateKADFileResource(ChannelCode3,'Ger3SingleVoucher');
    END;

    [Test]
    PROCEDURE GER3_CreateKADSingleLineAssem@1000000021();
    BEGIN
      // Create KAD File for Single Line Order with Resource = Assembly Service.
      Initialize;
      RHDInterfaceHelper.CreateKADFileResource(ChannelCode3,'Ger3SingleAssemble');
    END;

    [Test]
    PROCEDURE GER3_CreateKADMultiLine@1000000017();
    BEGIN
      // Create KAD File for Multi-Line Order.
      Initialize;
      RHDInterfaceHelper.CreateKADFile(ChannelCode3,'Ger3Multi');
    END;

    [Test]
    PROCEDURE GER3_CreateKADMultiLineRes@1000000018();
    BEGIN
      // Create KAD File for Multi-Line Order with Resource = Credit Bon.
      Initialize;
      RHDInterfaceHelper.CreateKADFileResource(ChannelCode3,'Ger3MultiVoucher');
    END;

    [Test]
    PROCEDURE GER3_CreateKADMultiLineAssem@1000000022();
    BEGIN
      // Create KAD File for Multi-Line Order with Resource = Assembly Service.
      Initialize;
      RHDInterfaceHelper.CreateKADFileResource(ChannelCode3,'Ger3MultiAssemble');
    END;

    [Test]
    PROCEDURE GER3_CreatePurchOrder@1000000002();
    BEGIN
      Initialize;
      RHDInterfaceHelper.CreatePurchOrder(ChannelCode3,'Ger3Single');
    END;

    [Test]
    PROCEDURE GER3_CreatePurchOrderMultiLine@1000000003();
    BEGIN
      Initialize;
      RHDInterfaceHelper.CreatePurchOrder(ChannelCode3,'Ger3Multi');
    END;

    [Test]
    PROCEDURE GER3_CreatePurchOrderKAD@1000000005();
    BEGIN
      Initialize;
      RHDInterfaceHelper.CreatePurchOrderCreateKAD(ChannelCode3,'Ger3Single');
    END;

    [Test]
    PROCEDURE GER3_CreatePurchOrderMultKAD@1000000004();
    BEGIN
      Initialize;
      RHDInterfaceHelper.CreatePurchOrderCreateKAD(ChannelCode3,'Ger3Multi');
    END;

    [Test]
    PROCEDURE GER3_ImportSTAFileStatus0@1000000006();
    BEGIN
      Initialize;
      RHDInterfaceHelper.ImportSTAFileStatus0CD(ChannelCode3,'Ger3Single');
    END;

    [Test]
    PROCEDURE GER3_ImportSTAFileStatus0Multi@1000000008();
    BEGIN
      Initialize;
      RHDInterfaceHelper.ImportSTAFileStatus0CD(ChannelCode3,'Ger3Multi');
    END;

    [Test]
    PROCEDURE GER3_ImportSTAFileStatus1@1000000007();
    BEGIN
      Initialize;
      RHDInterfaceHelper.ImportSTAFileStatus1CD(ChannelCode3,'Ger3Single');
    END;

    [Test]
    PROCEDURE GER3_ImportSTAFileStatus3@1000000012();
    BEGIN
      Initialize;
      RHDInterfaceHelper.ImportSTAFileStatus3CD(ChannelCode3,'Ger3Single');
    END;

    [Test]
    PROCEDURE GER3_ImportSTAFileStatus3Multi@1000000014();
    BEGIN
      Initialize;
      RHDInterfaceHelper.ImportSTAFileStatus3CD(ChannelCode3,'Ger3Multi');
    END;

    [Test]
    PROCEDURE GER3_ImportSTAFileStatus50@1000000009();
    BEGIN
      Initialize;
      RHDInterfaceHelper.ImportSTAFileStatus50CD(ChannelCode3,'Ger3Single');
    END;

    [Test]
    PROCEDURE GER3_ShipSalesOrderWithJob@1000000010();
    BEGIN
      Initialize;
      RHDInterfaceHelper.ShipSalesOrderWithJobCD(ChannelCode3,'Ger3Multi');
    END;

    [Test]
    PROCEDURE GER3_InvoiceSalesOrderWithJob@1000000011();
    BEGIN
      Initialize;
      RHDInterfaceHelper.InvoiceSalesOrderWithJobCD(ChannelCode3,'Ger3Single');
    END;

    [Test]
    PROCEDURE GER3_CancelRHDInterface@1000000028();
    BEGIN
      // Check Cancelation of Rhenus Interface.
      Initialize;
      RHDInterfaceHelper.CancelRHDInterfaceCD(ChannelCode3,'Ger3Multi');
    END;

    [Test]
    PROCEDURE "---FRA---"@1000000044();
    BEGIN
    END;

    [Test]
    PROCEDURE FRA3_RHDInitInterface@1000000043();
    BEGIN
      // Trigger RHD Interface, verify RHD Sales Header.
      Initialize;
      RHDInterfaceHelper.RHDInitializeInterfaceCD(ChannelCode3FR,'Fr3Single');
    END;

    [Test]
    PROCEDURE FRA3_CreateKADSingleLine@1000000041();
    BEGIN
      // Create KAD File for Single Line Order.
      Initialize;
      RHDInterfaceHelper.CreateKADFile(ChannelCode3FR,'Fr3Single');
    END;

    [Test]
    PROCEDURE FRA3_CreateKADSingleLineRes@1000000040();
    BEGIN
      // Create KAD File for Single Line Order with Resource = Credit Bon.
      Initialize;
      RHDInterfaceHelper.CreateKADFileResource(ChannelCode3FR,'Fr3SingleVoucher');
    END;

    [Test]
    PROCEDURE FRA3_CreateKADMultiLine@1000000038();
    BEGIN
      // Create KAD File for Multi-Line Order.
      Initialize;
      RHDInterfaceHelper.CreateKADFile(ChannelCode3FR,'Fr3Multi');
    END;

    [Test]
    PROCEDURE FRA3_CreateKADMultiLineRes@1000000037();
    BEGIN
      // Create KAD File for Multi-Line Order with Resource = Credit Bon.
      Initialize;
      RHDInterfaceHelper.CreateKADFileResource(ChannelCode3FR,'Fr3MultiVoucher');
    END;

    [Test]
    PROCEDURE FRA3_CreatePurchOrder@1000000035();
    BEGIN
      Initialize;
      RHDInterfaceHelper.CreatePurchOrder(ChannelCode3FR,'Fr3Single');
    END;

    [Test]
    PROCEDURE FRA3_CreatePurchOrderMultiLine@1000000033();
    BEGIN
      Initialize;
      RHDInterfaceHelper.CreatePurchOrder(ChannelCode3FR,'Fr3Multi');
    END;

    [Test]
    PROCEDURE FRA3_CreatePurchOrderKAD@1000000032();
    BEGIN
      Initialize;
      RHDInterfaceHelper.CreatePurchOrderCreateKAD(ChannelCode3FR,'Fr3Single');
    END;

    [Test]
    PROCEDURE FRA3_CreatePurchOrderMultKAD@1000000031();
    BEGIN
      Initialize;
      RHDInterfaceHelper.CreatePurchOrderCreateKAD(ChannelCode3FR,'Fr3Multi');
    END;

    [Test]
    PROCEDURE FRA3_ImportSTAFileStatus0@1000000030();
    BEGIN
      Initialize;
      RHDInterfaceHelper.ImportSTAFileStatus0CD(ChannelCode3FR,'Fr3Single');
    END;

    [Test]
    PROCEDURE FRA3_ImportSTAFileStatus0Multi@1000000029();
    BEGIN
      Initialize;
      RHDInterfaceHelper.ImportSTAFileStatus0CD(ChannelCode3FR,'Fr3Multi');
    END;

    [Test]
    PROCEDURE FRA3_ImportSTAFileStatus3@1000000026();
    BEGIN
      Initialize;
      RHDInterfaceHelper.ImportSTAFileStatus3CD(ChannelCode3FR,'Fr3Single');
    END;

    [Test]
    PROCEDURE FRA3_ImportSTAFileStatus3Multi@1000000025();
    BEGIN
      Initialize;
      RHDInterfaceHelper.ImportSTAFileStatus3CD(ChannelCode3FR,'Fr3Multi');
    END;

    [Test]
    PROCEDURE FRA3_ImportSTAFileStatus50@1000000024();
    BEGIN
      Initialize;
      RHDInterfaceHelper.ImportSTAFileStatus50CD(ChannelCode3FR,'Fr3Single');
    END;

    [Test]
    PROCEDURE FRA3_ShipSalesOrderWithJob@1000000023();
    BEGIN
      Initialize;
      RHDInterfaceHelper.ShipSalesOrderWithJobCD(ChannelCode3FR,'Fr3Single');
    END;

    [Test]
    PROCEDURE FRA3_InvoiceSalesOrderWithJob@1000000020();
    BEGIN
      Initialize;
      RHDInterfaceHelper.InvoiceSalesOrderWithJobCD(ChannelCode3FR,'Fr3Single');
    END;

    [Test]
    PROCEDURE FRA3_CancelRHDInterface@1000000019();
    BEGIN
      // Check Cancelation of Rhenus Interface.
      Initialize;
      RHDInterfaceHelper.CancelRHDInterfaceCD(ChannelCode3FR,'Fr3Single');
    END;

    [Test]
    PROCEDURE "---NL---"@1000000067();
    BEGIN
    END;

    [Test]
    PROCEDURE NL3_RHDInitInterface@1000000066();
    BEGIN
      // Trigger RHD Interface, verify RHD Sales Header.
      Initialize;
      RHDInterfaceHelper.RHDInitializeInterfaceCD(ChannelCode3NL,'NL3Single');
    END;

    [Test]
    PROCEDURE NL3_CreateKADSingleLine@1000000064();
    BEGIN
      // Create KAD File for Single Line Order.
      Initialize;
      RHDInterfaceHelper.CreateKADFile(ChannelCode3NL,'NL3Single');
    END;

    [Test]
    PROCEDURE NL3_CreateKADSingleLineRes@1000000062();
    BEGIN
      // Create KAD File for Single Line Order with Resource = Credit Bon.
      Initialize;
      RHDInterfaceHelper.CreateKADFileResource(ChannelCode3NL,'NL3SingleVoucher');
    END;

    [Test]
    PROCEDURE NL3_CreateKADMultiLine@1000000060();
    BEGIN
      // Create KAD File for Multi-Line Order.
      Initialize;
      RHDInterfaceHelper.CreateKADFile(ChannelCode3NL,'NL3Multi');
    END;

    [Test]
    PROCEDURE NL3_CreateKADMultiLineRes@1000000059();
    BEGIN
      // Create KAD File for Multi-Line Order with Resource = Credit Bon.
      Initialize;
      RHDInterfaceHelper.CreateKADFileResource(ChannelCode3NL,'NL3MultiVoucher');
    END;

    [Test]
    PROCEDURE NL3_CreatePurchOrder@1000000057();
    BEGIN
      Initialize;
      RHDInterfaceHelper.CreatePurchOrder(ChannelCode3NL,'NL3Single');
    END;

    [Test]
    PROCEDURE NL3_CreatePurchOrderMultiLine@1000000056();
    BEGIN
      Initialize;
      RHDInterfaceHelper.CreatePurchOrder(ChannelCode3NL,'NL3Multi');
    END;

    [Test]
    PROCEDURE NL3_CreatePurchOrderKAD@1000000055();
    BEGIN
      Initialize;
      RHDInterfaceHelper.CreatePurchOrderCreateKAD(ChannelCode3NL,'NL3Single');
    END;

    [Test]
    PROCEDURE NL3_CreatePurchOrderMultKAD@1000000054();
    BEGIN
      Initialize;
      RHDInterfaceHelper.CreatePurchOrderCreateKAD(ChannelCode3NL,'NL3Multi');
    END;

    [Test]
    PROCEDURE NL3_ImportSTAFileStatus0@1000000053();
    BEGIN
      Initialize;
      RHDInterfaceHelper.ImportSTAFileStatus0CD(ChannelCode3NL,'NL3Single');
    END;

    [Test]
    PROCEDURE NL3_ImportSTAFileStatus0Multi@1000000052();
    BEGIN
      Initialize;
      RHDInterfaceHelper.ImportSTAFileStatus0CD(ChannelCode3NL,'NL3Multi');
    END;

    [Test]
    PROCEDURE NL3_ImportSTAFileStatus1@1000000051();
    BEGIN
      Initialize;
      RHDInterfaceHelper.ImportSTAFileStatus1CD(ChannelCode3NL,'NL3Single');
    END;

    [Test]
    PROCEDURE NL3_ImportSTAFileStatus3@1000000050();
    BEGIN
      Initialize;
      RHDInterfaceHelper.ImportSTAFileStatus3CD(ChannelCode3NL,'NL3Single');
    END;

    [Test]
    PROCEDURE NL3_ImportSTAFileStatus3Multi@1000000049();
    BEGIN
      Initialize;
      RHDInterfaceHelper.ImportSTAFileStatus3CD(ChannelCode3NL,'NL3Multi');
    END;

    [Test]
    PROCEDURE NL3_ImportSTAFileStatus50@1000000048();
    BEGIN
      Initialize;
      RHDInterfaceHelper.ImportSTAFileStatus50CD(ChannelCode3NL,'NL3Single');
    END;

    [Test]
    PROCEDURE NL3_ShipSalesOrderWithJob@1000000047();
    BEGIN
      Initialize;
      RHDInterfaceHelper.ShipSalesOrderWithJobCD(ChannelCode3NL,'NL3Single');
    END;

    [Test]
    PROCEDURE NL3_InvoiceSalesOrderWithJob@1000000046();
    BEGIN
      Initialize;
      RHDInterfaceHelper.InvoiceSalesOrderWithJobCD(ChannelCode3NL,'NL3Single');
    END;

    [Test]
    PROCEDURE NL3_CancelRHDInterface@1000000045();
    BEGIN
      // Check Cancelation of Rhenus Interface.
      Initialize;
      RHDInterfaceHelper.CancelRHDInterfaceCD(ChannelCode3NL,'NL3Single');
    END;

    [Test]
    PROCEDURE "---AT---"@1000000089();
    BEGIN
    END;

    [Test]
    PROCEDURE AT3_RHDInitInterface@1000000088();
    BEGIN
      // Trigger RHD Interface, verify RHD Sales Header.
      Initialize;
      RHDInterfaceHelper.RHDInitializeInterfaceCD(ChannelCode3AT,'AT3Single');
    END;

    [Test]
    PROCEDURE AT3_CreateKADSingleLine@1000000086();
    BEGIN
      // Create KAD File for Single Line Order.
      Initialize;
      RHDInterfaceHelper.CreateKADFile(ChannelCode3AT,'AT3Single');
    END;

    [Test]
    PROCEDURE AT3_CreateKADSingleLineRes@1000000085();
    BEGIN
      // Create KAD File for Single Line Order with Resource = Credit Bon.
      Initialize;
      RHDInterfaceHelper.CreateKADFileResource(ChannelCode3AT,'AT3SingleVoucher');
    END;

    [Test]
    PROCEDURE AT3_CreateKADMultiLine@1000000083();
    BEGIN
      // Create KAD File for Multi-Line Order.
      Initialize;
      RHDInterfaceHelper.CreateKADFile(ChannelCode3AT,'AT3Multi');
    END;

    [Test]
    PROCEDURE AT3_CreateKADMultiLineRes@1000000082();
    BEGIN
      // Create KAD File for Multi-Line Order with Resource = Credit Bon.
      Initialize;
      RHDInterfaceHelper.CreateKADFileResource(ChannelCode3AT,'AT3Multi');
    END;

    [Test]
    PROCEDURE AT3_CreatePurchOrder@1000000080();
    BEGIN
      Initialize;
      RHDInterfaceHelper.CreatePurchOrder(ChannelCode3AT,'AT3Single');
    END;

    [Test]
    PROCEDURE AT3_CreatePurchOrderMultiLine@1000000079();
    BEGIN
      Initialize;
      RHDInterfaceHelper.CreatePurchOrder(ChannelCode3AT,'AT3Multi');
    END;

    [Test]
    PROCEDURE AT3_CreatePurchOrderKAD@1000000078();
    BEGIN
      Initialize;
      RHDInterfaceHelper.CreatePurchOrderCreateKAD(ChannelCode3AT,'AT3Single');
    END;

    [Test]
    PROCEDURE AT3_CreatePurchOrderMultKAD@1000000077();
    BEGIN
      Initialize;
      RHDInterfaceHelper.CreatePurchOrderCreateKAD(ChannelCode3AT,'AT3Multi');
    END;

    [Test]
    PROCEDURE AT3_ImportSTAFileStatus0@1000000076();
    BEGIN
      Initialize;
      RHDInterfaceHelper.ImportSTAFileStatus0CD(ChannelCode3AT,'AT3Single');
    END;

    [Test]
    PROCEDURE AT3_ImportSTAFileStatus0Multi@1000000075();
    BEGIN
      Initialize;
      RHDInterfaceHelper.ImportSTAFileStatus0CD(ChannelCode3AT,'AT3Multi');
    END;

    [Test]
    PROCEDURE AT3_ImportSTAFileStatus1@1000000074();
    BEGIN
      Initialize;
      RHDInterfaceHelper.ImportSTAFileStatus1CD(ChannelCode3AT,'AT3Single');
    END;

    [Test]
    PROCEDURE AT3_ImportSTAFileStatus3@1000000073();
    BEGIN
      Initialize;
      RHDInterfaceHelper.ImportSTAFileStatus3CD(ChannelCode3AT,'AT3Single');
    END;

    [Test]
    PROCEDURE AT3_ImportSTAFileStatus3Multi@1000000072();
    BEGIN
      Initialize;
      RHDInterfaceHelper.ImportSTAFileStatus3CD(ChannelCode3AT,'AT3Multi');
    END;

    [Test]
    PROCEDURE AT3_ImportSTAFileStatus50@1000000071();
    BEGIN
      Initialize;
      RHDInterfaceHelper.ImportSTAFileStatus50CD(ChannelCode3AT,'AT3Single');
    END;

    [Test]
    PROCEDURE AT3_ShipSalesOrderWithJob@1000000070();
    BEGIN
      Initialize;
      RHDInterfaceHelper.ShipSalesOrderWithJobCD(ChannelCode3AT,'AT3Single');
    END;

    [Test]
    PROCEDURE AT3_InvoiceSalesOrderWithJob@1000000069();
    BEGIN
      Initialize;
      RHDInterfaceHelper.InvoiceSalesOrderWithJobCD(ChannelCode3AT,'AT3Single');
    END;

    [Test]
    PROCEDURE AT3_CancelRHDInterface@1000000068();
    BEGIN
      // Check Cancelation of Rhenus Interface.
      Initialize;
      RHDInterfaceHelper.CancelRHDInterfaceCD(ChannelCode3AT,'AT3Single');
    END;

    [Test]
    PROCEDURE "---CH---"@1000000111();
    BEGIN
    END;

    [Test]
    PROCEDURE CH3_RHDInitInterface@1000000110();
    BEGIN
      // Trigger RHD Interface, verify RHD Sales Header.
      Initialize;
      RHDInterfaceHelper.RHDInitializeInterfaceCD(ChannelCode3CH,'CH3Single');
    END;

    [Test]
    PROCEDURE CH3_CreateKADSingleLine@1000000108();
    BEGIN
      // Create KAD File for Single Line Order.
      Initialize;
      RHDInterfaceHelper.CreateKADFile(ChannelCode3CH,'CH3Single');
    END;

    [Test]
    PROCEDURE CH3_CreateKADSingleLineRes@1000000107();
    BEGIN
      // Create KAD File for Single Line Order with Resource = Credit Bon.
      Initialize;
      RHDInterfaceHelper.CreateKADFileResource(ChannelCode3CH,'CH3SingleVoucher');
    END;

    [Test]
    PROCEDURE CH3_CreateKADMultiLine@1000000105();
    BEGIN
      // Create KAD File for Multi-Line Order.
      Initialize;
      RHDInterfaceHelper.CreateKADFile(ChannelCode3CH,'CH3Multi');
    END;

    [Test]
    PROCEDURE CH3_CreateKADMultiLineRes@1000000104();
    BEGIN
      // Create KAD File for Multi-Line Order with Resource = Credit Bon.
      Initialize;
      RHDInterfaceHelper.CreateKADFileResource(ChannelCode3CH,'CH3MultiVoucher');
    END;

    [Test]
    PROCEDURE CH3_CreatePurchOrder@1000000102();
    BEGIN
      Initialize;
      RHDInterfaceHelper.CreatePurchOrder(ChannelCode3CH,'CH3Single');
    END;

    [Test]
    PROCEDURE CH3_CreatePurchOrderMultiLine@1000000101();
    BEGIN
      Initialize;
      RHDInterfaceHelper.CreatePurchOrder(ChannelCode3CH,'CH3Multi');
    END;

    [Test]
    PROCEDURE CH3_CreatePurchOrderKAD@1000000100();
    BEGIN
      Initialize;
      RHDInterfaceHelper.CreatePurchOrderCreateKAD(ChannelCode3CH,'CH3Single');
    END;

    [Test]
    PROCEDURE CH3_CreatePurchOrderMultKAD@1000000099();
    BEGIN
      Initialize;
      RHDInterfaceHelper.CreatePurchOrderCreateKAD(ChannelCode3CH,'CH3Multi');
    END;

    [Test]
    PROCEDURE CH3_ImportSTAFileStatus0@1000000098();
    BEGIN
      Initialize;
      RHDInterfaceHelper.ImportSTAFileStatus0CD(ChannelCode3CH,'CH3Single');
    END;

    [Test]
    PROCEDURE CH3_ImportSTAFileStatus0Multi@1000000097();
    BEGIN
      Initialize;
      RHDInterfaceHelper.ImportSTAFileStatus0CD(ChannelCode3CH,'CH3Multi');
    END;

    [Test]
    PROCEDURE CH3_ImportSTAFileStatus3@1000000095();
    BEGIN
      Initialize;
      RHDInterfaceHelper.ImportSTAFileStatus3CD(ChannelCode3CH,'CH3Single');
    END;

    [Test]
    PROCEDURE CH3_ImportSTAFileStatus3Multi@1000000094();
    BEGIN
      Initialize;
      RHDInterfaceHelper.ImportSTAFileStatus3CD(ChannelCode3CH,'CH3Multi');
    END;

    [Test]
    PROCEDURE CH3_ImportSTAFileStatus7@1000000027();
    BEGIN
      Initialize;
      RHDInterfaceHelper.ImportSTAFileStatus7CD(ChannelCode3CH,'CH3Single');
    END;

    [Test]
    PROCEDURE CH3_ImportSTAFileStatus50@1000000093();
    BEGIN
      Initialize;
      RHDInterfaceHelper.ImportSTAFileStatus50CD(ChannelCode3CH,'CH3Single');
    END;

    [Test]
    PROCEDURE CH3_ShipSalesOrderWithJob@1000000092();
    BEGIN
      Initialize;
      RHDInterfaceHelper.ShipSalesOrderWithJobCD(ChannelCode3CH,'CH3Single');
    END;

    [Test]
    PROCEDURE CH3_InvoiceSalesOrderWithJob@1000000091();
    BEGIN
      Initialize;
      RHDInterfaceHelper.InvoiceSalesOrderWithJobCD(ChannelCode3CH,'CH3Single');
    END;

    [Test]
    PROCEDURE CH3_CancelRHDInterface@1000000090();
    BEGIN
      // Check Cancelation of Rhenus Interface.
      Initialize;
      RHDInterfaceHelper.CancelRHDInterfaceCD(ChannelCode3CH,'CH3Single');
    END;

    [Test]
    PROCEDURE "---BE---"@1000000133();
    BEGIN
    END;

    [Test]
    PROCEDURE BE3_RHDInitInterface@1000000132();
    BEGIN
      // Trigger RHD Interface, verify RHD Sales Header.
      Initialize;
      RHDInterfaceHelper.RHDInitializeInterfaceCD(ChannelCode3BE,'BE3Single');
    END;

    [Test]
    PROCEDURE BE3_CreateKADSingleLine@1000000130();
    BEGIN
      // Create KAD File for Single Line Order.
      Initialize;
      RHDInterfaceHelper.CreateKADFile(ChannelCode3BE,'BE3Single');
    END;

    [Test]
    PROCEDURE BE3_CreateKADSingleLineRes@1000000129();
    BEGIN
      // Create KAD File for Single Line Order with Resource = Credit Bon.
      Initialize;
      RHDInterfaceHelper.CreateKADFileResource(ChannelCode3BE,'BE3SingleVoucher');
    END;

    [Test]
    PROCEDURE BE3_CreateKADMultiLine@1000000127();
    BEGIN
      // Create KAD File for Multi-Line Order.
      Initialize;
      RHDInterfaceHelper.CreateKADFile(ChannelCode3BE,'BE3Multi');
    END;

    [Test]
    PROCEDURE BE3_CreateKADMultiLineRes@1000000126();
    BEGIN
      // Create KAD File for Multi-Line Order with Resource = Credit Bon.
      Initialize;
      RHDInterfaceHelper.CreateKADFileResource(ChannelCode3BE,'BE3MultiVoucher');
    END;

    [Test]
    PROCEDURE BE3_CreatePurchOrder@1000000124();
    BEGIN
      Initialize;
      RHDInterfaceHelper.CreatePurchOrder(ChannelCode3BE,'BE3Single');
    END;

    [Test]
    PROCEDURE BE3_CreatePurchOrderMultiLine@1000000123();
    BEGIN
      Initialize;
      RHDInterfaceHelper.CreatePurchOrder(ChannelCode3BE,'BE3Multi');
    END;

    [Test]
    PROCEDURE BE3_CreatePurchOrderKAD@1000000122();
    BEGIN
      Initialize;
      RHDInterfaceHelper.CreatePurchOrderCreateKAD(ChannelCode3BE,'BE3Single');
    END;

    [Test]
    PROCEDURE BE3_CreatePurchOrderMultKAD@1000000121();
    BEGIN
      Initialize;
      RHDInterfaceHelper.CreatePurchOrderCreateKAD(ChannelCode3BE,'BE3Multi');
    END;

    [Test]
    PROCEDURE BE3_ImportSTAFileStatus0@1000000120();
    BEGIN
      Initialize;
      RHDInterfaceHelper.ImportSTAFileStatus0CD(ChannelCode3BE,'BE3Single');
    END;

    [Test]
    PROCEDURE BE3_ImportSTAFileStatus0Multi@1000000119();
    BEGIN
      Initialize;
      RHDInterfaceHelper.ImportSTAFileStatus0CD(ChannelCode3BE,'BE3Multi');
    END;

    [Test]
    PROCEDURE BE3_ImportSTAFileStatus1@1000000118();
    BEGIN
      Initialize;
      RHDInterfaceHelper.ImportSTAFileStatus1CD(ChannelCode3BE,'BE3Single');
    END;

    [Test]
    PROCEDURE BE3_ImportSTAFileStatus3@1000000117();
    BEGIN
      Initialize;
      RHDInterfaceHelper.ImportSTAFileStatus3CD(ChannelCode3BE,'BE3Single');
    END;

    [Test]
    PROCEDURE BE3_ImportSTAFileStatus3Multi@1000000116();
    BEGIN
      Initialize;
      RHDInterfaceHelper.ImportSTAFileStatus3CD(ChannelCode3BE,'BE3Multi');
    END;

    [Test]
    PROCEDURE BE3_ImportSTAFileStatus50@1000000115();
    BEGIN
      Initialize;
      RHDInterfaceHelper.ImportSTAFileStatus50CD(ChannelCode3BE,'BE3Single');
    END;

    [Test]
    PROCEDURE BE3_ShipSalesOrderWithJob@1000000114();
    BEGIN
      Initialize;
      RHDInterfaceHelper.ShipSalesOrderWithJobCD(ChannelCode3BE,'BE3Single');
    END;

    [Test]
    PROCEDURE BE3_InvoiceSalesOrderWithJob@1000000113();
    BEGIN
      Initialize;
      RHDInterfaceHelper.InvoiceSalesOrderWithJobCD(ChannelCode3BE,'BE3Single');
    END;

    [Test]
    PROCEDURE BE3_CancelRHDInterface@1000000112();
    BEGIN
      // Check Cancelation of Rhenus Interface.
      Initialize;
      RHDInterfaceHelper.CancelRHDInterfaceCD(ChannelCode3BE,'BE3Single');
    END;

    [Test]
    PROCEDURE "---IT---"@1000000155();
    BEGIN
    END;

    [Test]
    PROCEDURE IT3_RHDInitInterface@1000000154();
    BEGIN
      // Trigger RHD Interface, verify RHD Sales Header.
      Initialize;
      RHDInterfaceHelper.RHDInitializeInterfaceCD(ChannelCode3IT,'IT3Single');
    END;

    [Test]
    PROCEDURE IT3_CreateKADSingleLine@1000000152();
    BEGIN
      // Create KAD File for Single Line Order.
      Initialize;
      RHDInterfaceHelper.CreateKADFile(ChannelCode3IT,'IT3Single');
    END;

    [Test]
    PROCEDURE IT3_CreateKADSingleLineRes@1000000151();
    BEGIN
      // Create KAD File for Single Line Order with Resource = Credit Bon.
      Initialize;
      RHDInterfaceHelper.CreateKADFileResource(ChannelCode3IT,'IT3SingleVoucher');
    END;

    [Test]
    PROCEDURE IT3_CreateKADMultiLine@1000000149();
    BEGIN
      // Create KAD File for Multi-Line Order.
      Initialize;
      RHDInterfaceHelper.CreateKADFile(ChannelCode3IT,'IT3Multi');
    END;

    [Test]
    PROCEDURE IT3_CreateKADMultiLineRes@1000000148();
    BEGIN
      // Create KAD File for Multi-Line Order with Resource = Credit Bon.
      Initialize;
      RHDInterfaceHelper.CreateKADFileResource(ChannelCode3IT,'IT3MultiVoucher');
    END;

    [Test]
    PROCEDURE IT3_CreatePurchOrder@1000000146();
    BEGIN
      Initialize;
      RHDInterfaceHelper.CreatePurchOrder(ChannelCode3IT,'IT3Single');
    END;

    [Test]
    PROCEDURE IT3_CreatePurchOrderMultiLine@1000000145();
    BEGIN
      Initialize;
      RHDInterfaceHelper.CreatePurchOrder(ChannelCode3IT,'IT3Multi');
    END;

    [Test]
    PROCEDURE IT3_CreatePurchOrderKAD@1000000144();
    BEGIN
      Initialize;
      RHDInterfaceHelper.CreatePurchOrderCreateKAD(ChannelCode3IT,'IT3Single');
    END;

    [Test]
    PROCEDURE IT3_CreatePurchOrderMultKAD@1000000143();
    BEGIN
      Initialize;
      RHDInterfaceHelper.CreatePurchOrderCreateKAD(ChannelCode3IT,'IT3Multi');
    END;

    [Test]
    PROCEDURE IT3_ImportSTAFileStatus0@1000000142();
    BEGIN
      Initialize;
      RHDInterfaceHelper.ImportSTAFileStatus0CD(ChannelCode3IT,'IT3Single');
    END;

    [Test]
    PROCEDURE IT3_ImportSTAFileStatus0Multi@1000000141();
    BEGIN
      Initialize;
      RHDInterfaceHelper.ImportSTAFileStatus0CD(ChannelCode3IT,'IT3Multi');
    END;

    [Test]
    PROCEDURE IT3_ImportSTAFileStatus1@1000000140();
    BEGIN
      Initialize;
      RHDInterfaceHelper.ImportSTAFileStatus1CD(ChannelCode3IT,'IT3Single');
    END;

    [Test]
    PROCEDURE IT3_ImportSTAFileStatus3@1000000139();
    BEGIN
      Initialize;
      RHDInterfaceHelper.ImportSTAFileStatus3CD(ChannelCode3IT,'IT3Single');
    END;

    [Test]
    PROCEDURE IT3_ImportSTAFileStatus3Multi@1000000138();
    BEGIN
      Initialize;
      RHDInterfaceHelper.ImportSTAFileStatus3CD(ChannelCode3IT,'IT3Multi');
    END;

    [Test]
    PROCEDURE IT3_ImportSTAFileStatus50@1000000137();
    BEGIN
      Initialize;
      RHDInterfaceHelper.ImportSTAFileStatus50CD(ChannelCode3IT,'IT3Single');
    END;

    [Test]
    PROCEDURE IT3_ShipSalesOrderWithJob@1000000136();
    BEGIN
      Initialize;
      RHDInterfaceHelper.ShipSalesOrderWithJobCD(ChannelCode3IT,'IT3Single');
    END;

    [Test]
    PROCEDURE IT3_InvoiceSalesOrderWithJob@1000000135();
    BEGIN
      Initialize;
      RHDInterfaceHelper.InvoiceSalesOrderWithJobCD(ChannelCode3IT,'IT3Single');
    END;

    [Test]
    PROCEDURE IT3_CancelRHDInterface@1000000134();
    BEGIN
      // Check Cancelation of Rhenus Interface.
      Initialize;
      RHDInterfaceHelper.CancelRHDInterfaceCD(ChannelCode3IT,'IT3Single');
    END;

    BEGIN
    {
      +--------------------------------------------+
      |                                            |
      |                  Home24                    |
      |       Internal Customizing by NAV-Team     |
      |                                            |
      +--------------------------------------------+

      Project No. Date      Shortcut  Description
      _____________________________________________
      H1920       23.02.15  MM        Testing: Add Channel 3 (Crossdock) to RHD Interface

      Test Cases:
      Name
      RHDInitInterface
      RHDInitInterfaceAssembly
      CreateKADSingleLine
      CreateKADSingleLineRes
      CreateKADSingleLineAssem
      CreateKADMultiLine
      CreateKADMultiLineRes
      CreateKADMultiLineAssem
      CreatePurchOrder
      CreatePurchOrderMultiLine
      CreatePurchOrderKAD
      CreatePurchOrderMultKAD
      ImportSTAFileStatus0
      ImportSTAFileStatus0Multi
      ImportSTAFileStatus1
      ImportSTAFileStatus3
      ImportSTAFileStatus3Multi
      ImportSTAFileStatus7
      ImportSTAFileStatus50
      ShipSalesOrderWithJob
      InvoiceSalesOrderWithJob
      CancelRHDInterface
    }
    END.
  }
}

