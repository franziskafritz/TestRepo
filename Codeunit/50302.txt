OBJECT Codeunit 50302 Whse. LF Sales Import Mgt.
{
  OBJECT-PROPERTIES
  {
    Date=13.04.15;
    Time=12:00:00;
    Modified=Yes;
    Version List=HME2201;
  }
  PROPERTIES
  {
    OnRun=BEGIN
            WhseLFSetup.GET;
            //H2158 18.02.15 DMO ++++++++++++++++++++++++++
            WhseLFSetup.TESTFIELD("Record Type - Post Code");
            //H2158 18.02.15 DMO --------------------------
            //H2157 18.02.15 DMO ++++++++++++++++++++++++++
            WhseLFSetup.TESTFIELD("Record Type STA");
            //H2157 18.02.15 DMO --------------------------
            CASE RecType OF
              WhseLFSetup."Record Type - Post Code": ImportPostCode(RecFile);   // POSTCODE
              //H2157 18.02.15 DMO ++++++++++++++++++++++++++
              WhseLFSetup."Record Type STA": ImportSTA(RecFile);               // STA-IMPORT
              //H2157 18.02.15 DMO --------------------------
            END;
          END;

  }
  CODE
  {
    VAR
      RecFile@1000000003 : Record 2000000022;
      WhseLFSetup@1000000004 : Record 50300;
      RecType@1000000006 : Code[10];
      FPCInterfaceSetupCode@1000000005 : Code[10];
      Filename@1000000001 : Text[250];
      BoolNoImport@1000000002 : Boolean;

    PROCEDURE SetRecFile@1000000006(RecFileV@1000000000 : Record 2000000022);
    BEGIN
      RecFile := RecFileV;
    END;

    PROCEDURE SetRecTypeAndFPCInterface@1000000008(RecTypeV@1000000000 : Code[10];FPCInterfaceSetupCodeV@1000000001 : Code[10]);
    BEGIN
      //H2157 18.02.15 DMO ++++++++++++++++++++++++++
      RecType := RecTypeV;
      FPCInterfaceSetupCode := FPCInterfaceSetupCodeV;
      //H2157 18.02.15 DMO --------------------------
    END;

    LOCAL PROCEDURE ImportPostCode@1000000001(ImpFileV@1000000008 : Record 2000000022);
    VAR
      FPCInterSetupL@1000000000 : Record 50014;
      WhseLFPCMatrixL@1000000001 : Record 50307;
      LocFileL@1000000005 : File;
      StringL@1000000006 : Text[1024];
      iL@1000000007 : Integer;
      mL@1000000004 : Integer;
    BEGIN
      //H2158 18.02.15 DMO ++++++++++++++++++++++++++
      FPCInterSetupL.GET(FPCInterfaceSetupCode);
      //H2158 18.02.15 DMO --------------------------
      FPCInterSetupL.TESTFIELD("Import Folder");
      FPCInterSetupL.TESTFIELD("Archive Root Folder");

      IF STRPOS(UPPERCASE(ImpFileV.Name),'PLZ') <> 0 THEN BEGIN
        SetFilename(ImpFileV.Name);
        LocFileL.TEXTMODE(TRUE);
        LocFileL.WRITEMODE(FALSE);
        LocFileL.OPEN(ImpFileV.Path + ImpFileV.Name);
        REPEAT   // fÅr jeden Datensatz in der gerade geîffneten Datei
          mL += 1;
          LocFileL.READ(StringL);
          IF mL > 1 THEN BEGIN
            IF (mL = 2) AND (NOT WhseLFPCMatrixL.GET(COPYSTR(StringL,1,STRPOS(StringL,';')-1))) THEN
              WhseLFPCMatrixL.INIT;
            FOR iL := 1 TO 17 DO BEGIN // 17 Felder
              CASE iL OF
                1: WhseLFPCMatrixL."Post Code" := COPYSTR(StringL,1,STRPOS(StringL,';')-1);
                2: WhseLFPCMatrixL.Description := COPYSTR(StringL,1,STRPOS(StringL,';')-1);
                3: WhseLFPCMatrixL."LSC II"    := COPYSTR(StringL,1,STRPOS(StringL,';')-1);
                4: EVALUATE(WhseLFPCMatrixL."Monday From",COPYSTR(StringL,1,STRPOS(StringL,';')-1));
                5: EVALUATE(WhseLFPCMatrixL."Monday To",COPYSTR(StringL,1,STRPOS(StringL,';')-1));
                6: EVALUATE(WhseLFPCMatrixL."Tuesday From",COPYSTR(StringL,1,STRPOS(StringL,';')-1));
                7: EVALUATE(WhseLFPCMatrixL."Tuesday To",COPYSTR(StringL,1,STRPOS(StringL,';')-1));
                8: EVALUATE(WhseLFPCMatrixL."Wednesday From",COPYSTR(StringL,1,STRPOS(StringL,';')-1));
                9: EVALUATE(WhseLFPCMatrixL."Wednesday To",COPYSTR(StringL,1,STRPOS(StringL,';')-1));
                10: EVALUATE(WhseLFPCMatrixL."Thursday From",COPYSTR(StringL,1,STRPOS(StringL,';')-1));
                11: EVALUATE(WhseLFPCMatrixL."Thursday To",COPYSTR(StringL,1,STRPOS(StringL,';')-1));
                12: EVALUATE(WhseLFPCMatrixL."Friday From",COPYSTR(StringL,1,STRPOS(StringL,';')-1));
                13: EVALUATE(WhseLFPCMatrixL."Friday To",COPYSTR(StringL,1,STRPOS(StringL,';')-1));
                14: EVALUATE(WhseLFPCMatrixL."Saturday From",COPYSTR(StringL,1,STRPOS(StringL,';')-1));
                15: EVALUATE(WhseLFPCMatrixL."Saturday To",COPYSTR(StringL,1,STRPOS(StringL,';')-1));
                16: EVALUATE(WhseLFPCMatrixL."Sunday From",COPYSTR(StringL,1,STRPOS(StringL,';')-1));
                17: EVALUATE(WhseLFPCMatrixL."Sunday To",COPYSTR(StringL,1));
              END;
              IF STRPOS(StringL,';') <> 0 THEN
                StringL := COPYSTR(StringL,STRPOS(StringL,';') + 1);
            END;
            IF NOT WhseLFPCMatrixL.INSERT THEN
              WhseLFPCMatrixL.MODIFY;
          END;
        UNTIL LocFileL.POS = LocFileL.LEN;
        LocFileL.CLOSE;
        COPY(ImpFileV.Path + ImpFileV.Name,FPCInterSetupL."Archive Root Folder" + ImpFileV.Name);
        ERASE(ImpFileV.Path + ImpFileV.Name);
      END ELSE
        SetNoImport; // Kein Fehler, wenn eine Datei mit anderem Namen nicht eingelesen wurde
    END;

    LOCAL PROCEDURE ImportSTA@1000000007(ImpFileV@1000000000 : Record 2000000022);
    VAR
      FPCInterSetupL@1000000006 : Record 50014;
      WhseH24Identifier@1000000014 : Record 50508;
      WhseLFSalesImportL@1000000004 : Record 50306;
      WhseLFTrackingNoLogL@1000000002 : Record 50316;
      WhseH24BarcodeL@1000000011 : Record 50812;
      WhseLFSalesExportLineL@1000000012 : Record 50305;
      LocFileL@1000000005 : File;
      StringL@1000000003 : Text[1024];
      TrackingNoStringL@1000000001 : Text[500];
      ArchiveFilenameL@1000000008 : Text[500];
      LineNoL@1000000007 : Integer;
      BigStringL@1000000009 : BigText;
      StringTempL@1000000010 : Text[1024];
      BigStringTempL@1000000013 : BigText;
    BEGIN
      //H2201,H2157,H1412,H1408 19.03.15 DMA +++++++++++++++++++++++++++++++
      FPCInterSetupL.GET(FPCInterfaceSetupCode);
      FPCInterSetupL.TESTFIELD("Import Folder");
      FPCInterSetupL.TESTFIELD("Archive Root Folder");

      IF STRPOS(UPPERCASE(ImpFileV.Name),'STA') <> 0 THEN BEGIN
        SetFilename(ImpFileV.Name);
        LocFileL.TEXTMODE(TRUE);
        LocFileL.WRITEMODE(FALSE);
        LocFileL.OPEN(ImpFileV.Path + ImpFileV.Name);

        REPEAT   // fÅr jeden Datensatz in der gerade geîffneten Datei
          CLEAR(BigStringL);
          LocFileL.READ(BigStringL);

          WhseLFSalesImportL.INIT;
          WhseLFSalesImportL."Entry No." := 0;
          WhseLFSalesImportL."Import Timestamp" := CURRENTDATETIME;
          WhseLFSalesImportL."Import Status" := WhseLFSalesImportL."Import Status"::Unprocessed;
          BigStringL.GETSUBTEXT(WhseLFSalesImportL."Record Type",1,3);
          BigStringL.GETSUBTEXT(WhseLFSalesImportL."Client Identifier",4,4);
          BigStringL.GETSUBTEXT(WhseLFSalesImportL."Customer Order No.",8,20);
          BigStringL.GETSUBTEXT(WhseLFSalesImportL."Customer Order No. 2",28,20);
          BigStringL.GETSUBTEXT(StringTempL,48,10);
          EVALUATE(WhseLFSalesImportL."Transmission No.",StringTempL);
          BigStringL.GETSUBTEXT(StringTempL,58,5);
          EVALUATE(WhseLFSalesImportL."Order Pos. No.",StringTempL);
          BigStringL.GETSUBTEXT(StringTempL,63,3);
          EVALUATE(WhseLFSalesImportL."Order Type",StringTempL);
          BigStringL.GETSUBTEXT(StringTempL,66,30);
          WhseLFSalesImportL."Item No." := COPYSTR(StringTempL,1,30);
          BigStringL.GETSUBTEXT(StringTempL,96,5);
          EVALUATE(WhseLFSalesImportL.Quantity,StringTempL);
          BigStringL.GETSUBTEXT(WhseLFSalesImportL."Stock Type",101,1);
          BigStringL.GETSUBTEXT(StringTempL,102,2);
          EVALUATE(WhseLFSalesImportL."Order Status",StringTempL);
          BigStringL.GETSUBTEXT(StringL,104,500);
          TrackingNoStringL := DELCHR(StringL,'=');
          BigStringL.GETSUBTEXT(WhseLFSalesImportL."Order Date",604,10);
          BigStringL.GETSUBTEXT(WhseLFSalesImportL."Order Period From",614,5);
          BigStringL.GETSUBTEXT(WhseLFSalesImportL."Order Period To",619,5);
          BigStringL.GETSUBTEXT(WhseLFSalesImportL."Carry Out Date",624,19);
          BigStringL.GETSUBTEXT(WhseLFSalesImportL.Timestamp,643,19);
          WhseLFSalesImportL.Filename := ImpFileV.Name;
          WhseLFSalesImportL.INSERT;

          IF WhseH24Identifier.GET(WhseLFSalesImportL."Client Identifier") THEN BEGIN
            IF WhseLFSalesImportL."Order Status" = WhseH24Identifier."STA Barcodes Status" THEN BEGIN
              CLEAR(BigStringTempL);
              BigStringL.GETSUBTEXT(StringL,662,1000);
              StringL := DELCHR(StringL,'=',' ');
              BigStringTempL.ADDTEXT(StringL);

              IF BigStringTempL.LENGTH = 1000 THEN BEGIN
                BigStringL.GETSUBTEXT(BigStringTempL,1662,1000);
                StringL := DELCHR(StringL,'=',' ');
                BigStringTempL.ADDTEXT(StringL);
              END;

              IF BigStringL.LENGTH <> 0 THEN BEGIN
                LineNoL := 0;
                REPEAT
                  IF BigStringTempL.LENGTH <> 0 THEN BEGIN
                    WhseH24BarcodeL.RESET;
                    WhseH24BarcodeL.INIT;
                    WhseH24BarcodeL."Whse. LF Sales Imp. Entry No." := WhseLFSalesImportL."Entry No.";
                    LineNoL += 10000;
                    WhseH24BarcodeL."Line No." := LineNoL;
                    WhseH24BarcodeL."Document No." := WhseLFSalesImportL."Customer Order No. 2";
                    WhseH24BarcodeL."Item No." := WhseLFSalesImportL."Item No.";
                    WhseH24BarcodeL."Location Code" := WhseLFSalesImportL."Client Identifier";
                    IF BigStringTempL.TEXTPOS(',') <> 0 THEN
                      BigStringTempL.GETSUBTEXT(StringTempL,1,BigStringTempL.TEXTPOS(',')-1)
                    ELSE
                      BigStringTempL.GETSUBTEXT(StringTempL,1,BigStringTempL.LENGTH);

                    WhseH24BarcodeL.Barcode := StringTempL;
                    WhseLFSalesExportLineL.RESET;
                    WhseLFSalesExportLineL.SETRANGE("Attached to Document No.",WhseLFSalesImportL."Customer Order No. 2");
                    WhseLFSalesExportLineL.SETRANGE("Pos. No.",WhseLFSalesImportL."Order Pos. No.");
                    IF WhseLFSalesExportLineL.FINDLAST THEN BEGIN
                      WhseH24BarcodeL."Shipping Agent Code" := WhseLFSalesExportLineL."Shipping Agent Code";
                      WhseH24BarcodeL."Location Code" := WhseLFSalesExportLineL."Location Code";
                    END;
                    EVALUATE(WhseH24BarcodeL."Transfer Date", WhseLFSalesImportL."Order Date");
                    WhseH24BarcodeL.INSERT(TRUE);
                  END;

                  IF BigStringTempL.TEXTPOS(',') <> 0 THEN
                    BigStringTempL.GETSUBTEXT(
                      BigStringTempL,
                      BigStringTempL.TEXTPOS(',')+1)
                  ELSE
                    CLEAR(BigStringTempL);

                UNTIL (BigStringTempL.LENGTH = 0);
              END;
            END;
          END;

          IF (TrackingNoStringL <> '') AND (WhseLFSalesImportL."Order Status" = WhseLFSetup."Tracking No. Status") THEN BEGIN
            LineNoL := 0;
            REPEAT
              WhseLFTrackingNoLogL.INIT;
              WhseLFTrackingNoLogL."Sales Import Entry No." := WhseLFSalesImportL."Entry No.";
              LineNoL += 10000;
              WhseLFTrackingNoLogL."Line No." := LineNoL;
              WhseLFTrackingNoLogL."Tracking No." := SELECTSTR(1,TrackingNoStringL);
              WhseLFTrackingNoLogL.INSERT(TRUE);
              IF STRPOS(TrackingNoStringL,',') <> 0 THEN
                TrackingNoStringL := COPYSTR(TrackingNoStringL,STRPOS(TrackingNoStringL,',')+1)
              ELSE
                TrackingNoStringL := '';
            UNTIL (TrackingNoStringL = '');
          END;

        UNTIL LocFileL.POS = LocFileL.LEN;
        LocFileL.CLOSE;
        IF FPCInterSetupL."Archive Root Folder"[STRLEN(FPCInterSetupL."Archive Root Folder")] = '\' THEN
          ArchiveFilenameL := FPCInterSetupL."Archive Root Folder" + ImpFileV.Name
        ELSE
          ArchiveFilenameL := FPCInterSetupL."Archive Root Folder" + '\' + ImpFileV.Name;
        COPY(ImpFileV.Path + ImpFileV.Name,ArchiveFilenameL);
        ERASE(ImpFileV.Path + ImpFileV.Name);
      END ELSE
        SetNoImport; // Kein Fehler, wenn eine Datei mit anderem Namen nicht eingelesen wurde

      //H2201,H2157,H1412,H1408 19.03.15 DMA -------------------------------
    END;

    LOCAL PROCEDURE SetFilename@1000000003(FilenameV@1000000000 : Text[250]);
    BEGIN
      // For "RHD Sales Log"
      Filename := FilenameV;
    END;

    PROCEDURE GetFilename@1000000002() : Text[250];
    BEGIN
      // For "RHD Sales Log"
      EXIT(Filename);
    END;

    PROCEDURE SetNoImport@1000000004();
    BEGIN
      // No Import = No Log
      BoolNoImport := TRUE;
    END;

    PROCEDURE GetNoImport@1000000005() : Boolean;
    BEGIN
      // No Import = No Log
      EXIT(BoolNoImport);
    END;

    BEGIN
    {
      +--------------------------------------------+
      |                                            |
      |                  Home24                    |
      |       Internal Customizing by NAV-Team     |
      |                                            |
      +--------------------------------------------+

      Project No. Date     Shortcut  Description
      _____________________________________________
      H1408     05.08.14   DMA       Copy RHD Interface, rename and implement as Whs LF Interface
      H1412     11.08.14   EHN       For STA, add "Trackingnummer", position 104, Char, 100 symbols
      H2157     18.02.15   DMO       CODECHANGE: "Interface Code STA" field is deleted in Whse.LF Setup and not used any more;
                                     New SetRecTypeAndFPCInterface function is added;
      H1980     19.03.15   EHN       Set ADD for LF lines without tracking information
      H2201     19.03.15   DMA       H24 warehouses: Adjust STA import processing for Hermes
      H2158     08.04.15   DMO       Dynamic location for all home24 operated warehouses in WEM
    }
    END.
  }
}

