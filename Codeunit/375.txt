OBJECT Codeunit 375 Bank Acc. Entry Set Recon.-No.
{
  OBJECT-PROPERTIES
  {
    Date=08.06.01;
    Time=12:00:00;
    Version List=NAVW13.00,AR3.70;
  }
  PROPERTIES
  {
    Permissions=TableData 271=rm,
                TableData 272=rm,
                TableData 5001902=rm;
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      CheckLedgEntry@1000 : Record 272;
      PaymLedgEntry@1105400000 : Record 5001902;
      BankAccount@1105400001 : Record 270;

    PROCEDURE ToggleReconNo@5(VAR BankAccLedgEntry@1000 : Record 271;VAR BankAccReconLine@1001 : Record 274;ChangeAmount@1002 : Boolean);
    BEGIN
      BankAccLedgEntry.LOCKTABLE;
      CheckLedgEntry.LOCKTABLE;
      // CLR
      PaymLedgEntry.LOCKTABLE;
      // CLR
      BankAccReconLine.LOCKTABLE;
      BankAccReconLine.FIND;
      IF BankAccLedgEntry."Statement No." = '' THEN BEGIN
        SetReconNo(BankAccLedgEntry,BankAccReconLine);
        BankAccReconLine."Applied Amount" :=
          BankAccReconLine."Applied Amount" + BankAccLedgEntry."Remaining Amount";
        BankAccReconLine."Applied Entries" := BankAccReconLine."Applied Entries" + 1;
      END ELSE BEGIN
        RemoveReconNo(BankAccLedgEntry,BankAccReconLine,TRUE);
        BankAccReconLine."Applied Amount" :=
          BankAccReconLine."Applied Amount" - BankAccLedgEntry."Remaining Amount";
        BankAccReconLine."Applied Entries" := BankAccReconLine."Applied Entries" - 1;
      END;
      IF ChangeAmount THEN
        BankAccReconLine.VALIDATE("Statement Amount",BankAccReconLine."Applied Amount")
      ELSE
        BankAccReconLine.VALIDATE("Statement Amount");
      // CLR
      IF BankAccLedgEntry."Transit Posting" THEN BEGIN
        BankAccount.GET(BankAccReconLine."Bank Account No.");
        BankAccReconLine."Currency Code" := BankAccount."Currency Code";
        BankAccReconLine."Original Curreny Code" := BankAccount."Currency Code";
        BankAccReconLine."Original Amount (LCY)" := BankAccLedgEntry."Amount (LCY)";
      END;
      // CLR
      BankAccReconLine.MODIFY;
    END;

    PROCEDURE SetReconNo@2(VAR BankAccLedgEntry@1000 : Record 271;VAR BankAccReconLine@1001 : Record 274);
    BEGIN
      BankAccLedgEntry.TESTFIELD(Open,TRUE);
      BankAccLedgEntry.TESTFIELD("Statement Status",BankAccLedgEntry."Statement Status"::Open);
      BankAccLedgEntry.TESTFIELD("Statement No.",'');
      BankAccLedgEntry.TESTFIELD("Statement Line No.",0);
      BankAccLedgEntry.TESTFIELD("Bank Account No.",BankAccReconLine."Bank Account No.");
      BankAccLedgEntry."Statement Status" :=
        BankAccLedgEntry."Statement Status"::"Bank Acc. Entry Applied";
      BankAccLedgEntry."Statement No." := BankAccReconLine."Statement No.";
      BankAccLedgEntry."Statement Line No." := BankAccReconLine."Statement Line No.";
      BankAccLedgEntry.MODIFY;

      CheckLedgEntry.RESET;
      CheckLedgEntry.SETCURRENTKEY("Bank Account Ledger Entry No.");
      CheckLedgEntry.SETRANGE("Bank Account Ledger Entry No.",BankAccLedgEntry."Entry No.");
      CheckLedgEntry.SETRANGE(CheckLedgEntry.Open,TRUE);
      IF CheckLedgEntry.FIND('-') THEN
        REPEAT
          CheckLedgEntry.TESTFIELD("Statement Status",CheckLedgEntry."Statement Status"::Open);
          CheckLedgEntry.TESTFIELD("Statement No.",'');
          CheckLedgEntry.TESTFIELD("Statement Line No.",0);
          CheckLedgEntry."Statement Status" :=
            CheckLedgEntry."Statement Status"::"Bank Acc. Entry Applied";
          CheckLedgEntry."Statement No." := '';
          CheckLedgEntry."Statement Line No." := 0;
          CheckLedgEntry.MODIFY;
        UNTIL CheckLedgEntry.NEXT = 0;

      // CLR
      PaymLedgEntry.RESET;
      PaymLedgEntry.SETCURRENTKEY("Bank Ledger Entry No.");
      PaymLedgEntry.SETRANGE("Bank Ledger Entry No.",BankAccLedgEntry."Entry No.");
      PaymLedgEntry.SETRANGE(PaymLedgEntry.Open,TRUE);
      IF PaymLedgEntry.FIND('-') THEN
        REPEAT
          PaymLedgEntry.TESTFIELD("Statement Status",PaymLedgEntry."Statement Status"::Open);
          PaymLedgEntry.TESTFIELD("Statement No.",'');
          PaymLedgEntry.TESTFIELD("Statement Line No.",0);
          PaymLedgEntry."Statement Status" :=
          PaymLedgEntry."Statement Status"::"Regulation Bank Ledger Entry";
          PaymLedgEntry."Statement No." := '';
          PaymLedgEntry."Statement Line No." := 0;
          PaymLedgEntry.MODIFY;
          UNTIL PaymLedgEntry.NEXT = 0;
      // CLR
    END;

    PROCEDURE RemoveReconNo@3(VAR BankAccLedgEntry@1000 : Record 271;VAR BankAccReconLine@1001 : Record 274;Test@1002 : Boolean);
    BEGIN
      BankAccLedgEntry.TESTFIELD(Open,TRUE);
      IF Test THEN BEGIN
        BankAccLedgEntry.TESTFIELD(
          "Statement Status",BankAccLedgEntry."Statement Status"::"Bank Acc. Entry Applied");
        BankAccLedgEntry.TESTFIELD("Statement No.",BankAccReconLine."Statement No.");
        BankAccLedgEntry.TESTFIELD("Statement Line No.",BankAccReconLine."Statement Line No.");
      END;
      BankAccLedgEntry.TESTFIELD("Bank Account No.",BankAccReconLine."Bank Account No.");
      BankAccLedgEntry."Statement Status" := BankAccLedgEntry."Statement Status"::Open;
      BankAccLedgEntry."Statement No." := '';
      BankAccLedgEntry."Statement Line No." := 0;
      BankAccLedgEntry.MODIFY;

      CheckLedgEntry.RESET;
      CheckLedgEntry.SETCURRENTKEY("Bank Account Ledger Entry No.");
      CheckLedgEntry.SETRANGE("Bank Account Ledger Entry No.",BankAccLedgEntry."Entry No.");
      CheckLedgEntry.SETRANGE(Open,TRUE);
      IF CheckLedgEntry.FIND('-') THEN
        REPEAT
          IF Test THEN BEGIN
            CheckLedgEntry.TESTFIELD(
              "Statement Status",CheckLedgEntry."Statement Status"::"Bank Acc. Entry Applied");
            CheckLedgEntry.TESTFIELD("Statement No.",'');
            CheckLedgEntry.TESTFIELD("Statement Line No.",0);
          END;
          CheckLedgEntry."Statement Status" := CheckLedgEntry."Statement Status"::Open;
          CheckLedgEntry."Statement No." := '';
          CheckLedgEntry."Statement Line No." := 0;
          CheckLedgEntry.MODIFY;
        UNTIL CheckLedgEntry.NEXT = 0;

      // CLR
      PaymLedgEntry.RESET;
      PaymLedgEntry.SETCURRENTKEY("Bank Ledger Entry No.");
      PaymLedgEntry.SETRANGE("Bank Ledger Entry No.",BankAccLedgEntry."Entry No.");
      PaymLedgEntry.SETRANGE(Open,TRUE);
      IF PaymLedgEntry.FIND('-') THEN
        REPEAT
          IF Test THEN BEGIN
            PaymLedgEntry.TESTFIELD(
              "Statement Status",PaymLedgEntry."Statement Status"::"Regulation Bank Ledger Entry");
            PaymLedgEntry.TESTFIELD("Statement No.",'');
            PaymLedgEntry.TESTFIELD("Statement Line No.",0);
          END;
          PaymLedgEntry."Statement Status" := PaymLedgEntry."Statement Status"::Open;
          PaymLedgEntry."Statement No." := '';
          PaymLedgEntry."Statement Line No." := 0;
          PaymLedgEntry.MODIFY;
        UNTIL PaymLedgEntry.NEXT = 0;
      // CLR
    END;

    LOCAL PROCEDURE RemoveAllReconNo@1105400001(VAR BankAccReconLine@1105400000 : Record 274);
    VAR
      BankAccLedgEntry@1105400001 : Record 271;
    BEGIN
      WITH BankAccReconLine DO BEGIN
        BankAccLedgEntry.RESET;
        BankAccLedgEntry.SETCURRENTKEY("Bank Account No.",Open);
        BankAccLedgEntry.SETRANGE("Bank Account No.","Bank Account No.");
        BankAccLedgEntry.SETRANGE(Open,TRUE);
        BankAccLedgEntry.SETFILTER("Statement Status",'<>%1',BankAccLedgEntry."Statement Status"::Open);
        BankAccLedgEntry.LOCKTABLE;
        IF BankAccLedgEntry.FIND('-') THEN
          REPEAT
            BankAccLedgEntry."Statement Status" := BankAccLedgEntry."Statement Status"::Open;
            BankAccLedgEntry."Statement No." := '';
            BankAccLedgEntry."Statement Line No." := 0;
            BankAccLedgEntry.MODIFY;
          UNTIL BankAccLedgEntry.NEXT = 0;
      END;
    END;

    BEGIN
    END.
  }
}

