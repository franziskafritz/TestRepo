OBJECT Codeunit 50014 Update Seq. No.
{
  OBJECT-PROPERTIES
  {
    Date=16.06.14;
    Time=12:00:00;
    Modified=Yes;
    Version List=chrmu,GOB,T0002;
  }
  PROPERTIES
  {
    OnRun=VAR
            cu@1000000000 : Codeunit 50038;
          BEGIN
            //ReleaseKK;
            //UpdatePurchCode;
            //UpdateStatus;
            //UpdateName;
            //UpdateGer3;
            //UpdateVaucher;
            //UpdatePhone;
            //ReleaseInvoice;
            //cu.ProcessRhenus;
            //UpdateGift;
            //UpdateHistory;
            //FixEasyLog
            //FixCancellation
            //UpdateParcelsNumber
            //cu.Code;
            Update15
          END;

  }
  CODE
  {
    VAR
      FPCGeneralSetup@1000000000 : Record 50055;

    PROCEDURE UpdateSeqNo@1170000000();
    VAR
      PO@1170000004 : Record 38;
      SO@1170000003 : Record 36;
      POLine@1170000002 : Record 39;
      SOLine@1170000001 : Record 37;
      i@1170000000 : Integer;
    BEGIN
      SO.RESET;
      SO.FINDSET;
      REPEAT
        i := SO."Last Seq. No.";
        SOLine.SETRANGE(SOLine."Document Type",SO."Document Type");
        SOLine.SETRANGE(SOLine."Document No.",SO."No.");
        SOLine.SETRANGE(SOLine."Seq. No.",0);
        IF SOLine.FINDSET THEN BEGIN
          REPEAT
            i := i + 1;
            SOLine."Seq. No." := i;
            SOLine.MODIFY;
          UNTIL SOLine.NEXT = 0;
          SO."Last Seq. No." := i;
          SO.MODIFY;
        END;
      UNTIL SO.NEXT = 0;

      PO.RESET;
      PO.FINDSET;
      REPEAT
        i := PO."Last Seq. No.";
        POLine.SETRANGE("Document Type",PO."Document Type");
        POLine.SETRANGE("Document No.",PO."No.");
        POLine.SETRANGE("Seq. No.",0);
        IF POLine.FINDSET THEN BEGIN
          REPEAT
            i := i + 1;
            POLine."Seq. No." := i;
            POLine.MODIFY;
          UNTIL POLine.NEXT = 0;
          PO."Last Seq. No." := i;
          PO.MODIFY;
        END;
      UNTIL PO.NEXT = 0;
    END;

    PROCEDURE ReleaseKK@1170000002();
    VAR
      SO@1170000000 : Record 36;
      SO2@1170000002 : Record 36;
      releaseSalesDocument@1170000001 : Codeunit 414;
    BEGIN
      SO.SETRANGE("Document Type",SO."Document Type"::Order);
      SO.SETRANGE("Payment Method Code",'FREE');
      SO.SETFILTER(Status,'<>%1&<>%2',SO.Status::Released,SO.Status::Canceled);
      IF SO.FINDSET(TRUE,TRUE) THEN
      REPEAT
        SO2.GET(SO."Document Type",SO."No.");
        releaseSalesDocument.RUN(SO2);
      UNTIL SO.NEXT = 0;
    END;

    PROCEDURE ReleaseInvoice@1000000002();
    VAR
      SO@1170000000 : Record 36;
      SO2@1170000002 : Record 36;
      releaseSalesDocument@1170000001 : Codeunit 414;
      SOLine@1000000000 : Record 37;
    BEGIN
      SO.SETRANGE("Document Type",SO."Document Type"::Order);
      SO.SETRANGE("Payment Method Code",'RECHNUNG');
      SO.SETFILTER(Status,'<>%1&<>%2',SO.Status::Released,SO.Status::Canceled);
      IF SO.FINDSET(TRUE,TRUE) THEN
      REPEAT
        SOLine.SETRANGE("Document Type",SO."Document Type");
        SOLine.SETRANGE("Document No.",SO."No.");
        SOLine.SETRANGE(Type,SOLine.Type::Item);
        SOLine.SETFILTER("Purchasing Code",'<>%1&<>%2&<>%3&<>%4','GER-1','GER-2','GER-7','GER-8');
        IF NOT SOLine.FINDFIRST THEN BEGIN
          SO2.GET(SO."Document Type",SO."No.");
          releaseSalesDocument.RUN(SO2);
        END;
      UNTIL SO.NEXT = 0;
    END;

    PROCEDURE UpdatePurchCode@1170000001();
    VAR
      SO@1170000000 : Record 36;
      SalesLine@1170000001 : Record 37;
      SalesLine2@1000000000 : Record 37;
      Item@1170000005 : Record 27;
      Vend@1170000004 : Record 23;
      WebshopPurch@1170000003 : Record 50030;
      LogChanel@1170000002 : Integer;
      oldStatus@1170000006 : Integer;
    BEGIN
      SalesLine.SETRANGE(Type,SalesLine.Type::Resource);
      SalesLine.SETRANGE("Purchasing Code",'');
      SalesLine.SETFILTER("Parent ID",'<>0');
      IF SalesLine.FINDSET THEN REPEAT
        SalesLine2.RESET;
        SalesLine2.SETRANGE("Document Type",SalesLine."Document Type");
        SalesLine2.SETRANGE("Document No.",SalesLine."Document No.");
        SalesLine2.SETRANGE(ID,SalesLine."Parent ID");
        IF SalesLine2.FINDFIRST THEN BEGIN
          SO.GET(SalesLine."Document Type",SalesLine."Document No.");
          oldStatus := SO.Status;
          IF SO.Status <> SO.Status::Open THEN BEGIN
            SO.Status := SO.Status::Open;
            SO.MODIFY;
          END;
          SalesLine.VALIDATE("Purchasing Code",SalesLine2."Purchasing Code");
          //SOLine.MODIFY;

          IF SO.Status <> oldStatus THEN BEGIN
            SO.Status := oldStatus;
            SO.MODIFY;
          END;

        END;
      UNTIL SalesLine.NEXT = 0;
    END;

    PROCEDURE UpdatePurchCode2@1000000004();
    VAR
      SO@1170000000 : Record 36;
      SOLine@1170000001 : Record 37;
      Item@1170000005 : Record 27;
      Vend@1170000004 : Record 23;
      WebshopPurch@1170000003 : Record 50030;
      LogChanel@1170000002 : Integer;
      oldStatus@1170000006 : Integer;
    BEGIN
      SO.SETRANGE("Document Type",SOLine."Document Type"::Order);
      SO.SETRANGE(SO."Language Code",'DEU');
      IF SO.FINDSET THEN
      REPEAT
        SOLine.SETRANGE("Document Type",SO."Document Type");
        SOLine.SETRANGE("Document No.",SO."No.");
        SOLine.SETRANGE(Type,SOLine.Type::Item);
        SOLine.SETRANGE("Purch. Order Line No.",0);
        IF SOLine.FINDSET THEN REPEAT
          IF STRLEN(SOLine."Shipping Source") = 5 THEN BEGIN
            Item.GET(SOLine."No.");
            IF Vend.GET(Item."Vendor No.") THEN
              IF Vend."Cross Dock Purchasing Code" = 'GER-4' THEN BEGIN
                oldStatus := SO.Status;
                IF SO.Status <> SO.Status::Open THEN BEGIN
                  SO.Status := SO.Status::Open;
                  SO.MODIFY;
                END;

                IF (SOLine."Transp. Type" = SOLine."Transp. Type"::"Parcel Service") AND (SOLine."Purchasing Code" <> 'GER-3') THEN
                  SOLine.VALIDATE("Purchasing Code",'GER-3');
                IF (SOLine."Transp. Type" = SOLine."Transp. Type"::"Furniture Shipping") AND (SOLine."Purchasing Code" <> 'GER-4') THEN
                  SOLine.VALIDATE("Purchasing Code",'GER-4');

                SOLine.MODIFY;

                IF SO.Status <> oldStatus THEN BEGIN
                  SO.Status := oldStatus;
                  SO.MODIFY;
                END;

              END;
          END;
        UNTIL SOLine.NEXT = 0;

      UNTIL SO.NEXT = 0;
    END;

    PROCEDURE UpdateStatus@1170000003();
    VAR
      ParcelStatusDHL@1170000000 : Record 50021;
      ParcelStatusDHL2@1170000001 : Record 50021;
      soline@1170000002 : Record 37;
      soline2@1170000003 : Record 37;
      ParcelStatusHistory@1000000000 : Record 80013;
      ParcelStatusHistory2@1000000001 : Record 80013;
    BEGIN
      //S/P1133
      FPCGeneralSetup.GET;
      //E/P1133

      //S/P1117
      //S/P1133
      IF FPCGeneralSetup."Active Parcel Status History" IN
        [FPCGeneralSetup."Active Parcel Status History"::"Use Only Old DHL Parcel Status History",
        FPCGeneralSetup."Active Parcel Status History"::"Fill Both But Show And Use Old",
        FPCGeneralSetup."Active Parcel Status History"::"Fill Both But Show And Use New"]
      THEN BEGIN
      //E/P1133
        //S/P1117/++S+++++++
        ParcelStatusDHL.RESET;
        ParcelStatusDHL.SETRANGE("Rhenus Entry",FALSE);
        IF ParcelStatusDHL.FINDSET THEN REPEAT
          soline.SETRANGE("Document Type",soline."Document Type"::Order);
          soline.SETRANGE("Document No.",ParcelStatusDHL."Document No.");
          soline.SETRANGE("Line No.",ParcelStatusDHL."Document Line No.");
          IF soline.FINDFIRST THEN BEGIN
            soline2.SETRANGE("Document Type",soline."Document Type");
            soline2.SETRANGE("Document No.",soline."Document No.");
            soline2.SETFILTER("Line No.",'<>%1',soline."Line No.");
            soline2.SETRANGE("Purchasing Code",soline."Purchasing Code");
            IF soline2.FINDSET THEN REPEAT
              ParcelStatusDHL2.SETRANGE("Account Number",ParcelStatusDHL."Account Number");
              ParcelStatusDHL2.SETRANGE("Document Line No.",soline2."Line No.");
              ParcelStatusDHL2.SETRANGE("Document No.",soline2."Document No.");
              ParcelStatusDHL2.SETRANGE("Status Event",ParcelStatusDHL."Status Event");
              ParcelStatusDHL2.SETRANGE("Status Code",ParcelStatusDHL."Status Code");
              IF NOT ParcelStatusDHL2.FINDFIRST THEN BEGIN
                ParcelStatusDHL2.TRANSFERFIELDS(ParcelStatusDHL);
                ParcelStatusDHL2."Entry No." := 0;
                ParcelStatusDHL2."Document Line No." := soline2."Line No.";
                IF ParcelStatusDHL2.INSERT(TRUE) THEN;
              END;
            UNTIL soline2.NEXT = 0;
          END;
        UNTIL ParcelStatusDHL.NEXT = 0;
        //E/P1117/--E-------
      //S/P1133
      END;
      //S/P1133
      IF FPCGeneralSetup."Active Parcel Status History" IN
        [FPCGeneralSetup."Active Parcel Status History"::"Fill Both But Show And Use Old",
        FPCGeneralSetup."Active Parcel Status History"::"Fill Both But Show And Use New",
        FPCGeneralSetup."Active Parcel Status History"::"Use Only New Parcel Status History"]
      THEN BEGIN
      //E/P1133
        //T0002 28.05.14 tec-cs +++++++++++++++++++++++++++++
        //ParcelStatusHistory.SETCURRENTKEY("Used Interface");
        //T0002 28.05.14 tec-cs -----------------------------
        ParcelStatusHistory.SETFILTER("Used Interface",'<>%1',ParcelStatusHistory."Used Interface"::Rhenus);
        IF ParcelStatusHistory.FIND('-') THEN BEGIN
          REPEAT
          IF soline.GET(
            soline."Document Type"::Order,
            ParcelStatusHistory."Document No.",
            ParcelStatusHistory."Document Line No.")
          THEN BEGIN
            CLEAR(soline2);
            soline2.SETRANGE("Document Type",soline."Document Type");
            soline2.SETRANGE("Document No.",soline."Document No.");
            soline2.SETFILTER("Line No.",'<>%1',soline."Line No.");
            soline2.SETRANGE("Purchasing Code",soline."Purchasing Code");
            IF soline2.FIND('-') THEN REPEAT
              CLEAR(ParcelStatusHistory2);
              ParcelStatusHistory2.SETCURRENTKEY("Document No.","Document Line No.","Document Type");
              ParcelStatusHistory2.SETRANGE("Document No.",soline2."Document No.");
              ParcelStatusHistory2.SETRANGE("Document Line No.",soline2."Line No.");
              ParcelStatusHistory2.SETRANGE("Document Type",soline2."Document Type");
              ParcelStatusHistory2.SETRANGE("Account No.",ParcelStatusHistory."Account No.");
              ParcelStatusHistory2.SETRANGE("Status Code",ParcelStatusHistory."Status Code");
              ParcelStatusHistory2.SETRANGE("Status Sub Code",ParcelStatusHistory."Status Sub Code");
              IF NOT ParcelStatusHistory2.FIND('-') THEN BEGIN
                ParcelStatusHistory2.TRANSFERFIELDS(ParcelStatusHistory);
                ParcelStatusHistory2."Entry No." := ParcelStatusHistory2.GetNextEntryNo(TRUE);
                ParcelStatusHistory2."Document Line No." := soline2."Line No.";
                ParcelStatusHistory2.INSERT(TRUE);
              END;
            UNTIL soline2.NEXT = 0;
          END;

          UNTIL ParcelStatusHistory.NEXT = 0;
        END;
      //E/P1133
      END;
      //E/P1117
    END;

    PROCEDURE UpdateName@1170000004();
    VAR
      so@1170000000 : Record 36;
      cust@1170000001 : Record 18;
      cont@1170000002 : Record 5050;
    BEGIN
      so.SETRANGE("Sell-to Customer Name 2",'');
      so.SETFILTER("Bill-to Name 2",'<>%1','');
      IF so.FINDSET THEN REPEAT
        cust.GET(so."Sell-to Customer No.");
        IF cust."Name 2" = '' THEN BEGIN
          cust."Name 2" := so."Bill-to Name 2";
          cust.MODIFY;
        END;
        IF so."Sell-to Contact No." <> '' THEN BEGIN
          cont.GET(so."Sell-to Contact No.");
          IF cont."Name 2" = '' THEN BEGIN
            cont."Name 2" := so."Bill-to Name 2";
            cont.MODIFY;
          END;
        END;
      UNTIL  so.NEXT = 0;
    END;

    PROCEDURE UpdateGer3@1170000005();
    VAR
      SOLine@1170000000 : Record 37;
      so@1170000001 : Record 36;
      Vend@1170000002 : Record 23;
      Item@1170000003 : Record 27;
      oldStatus@1170000004 : Integer;
    BEGIN
      SOLine.SETRANGE(SOLine."Document Type",SOLine."Document Type"::Order);
      SOLine.SETRANGE(SOLine."Purchasing Code",'GER-3');
      IF SOLine.FINDSET THEN
        REPEAT

          so.GET(so."Document Type"::Order,SOLine."Document No.");
          oldStatus := so.Status;
          so.Status := so.Status::Open;
          so.MODIFY;

          Item.GET(SOLine."No.");
          IF Vend.GET(Item."Vendor No.") THEN BEGIN
            IF Vend."Create DS Label" THEN
              SOLine.VALIDATE("Purchasing Code",'GER-7')
            ELSE
              SOLine.VALIDATE("Purchasing Code",'GER-8');
            SOLine.MODIFY;
          END;

          so.Status := oldStatus;
          so.MODIFY;

        UNTIL SOLine.NEXT = 0;
    END;

    PROCEDURE UpdateVaucher@1000000000();
    VAR
      Vaucher@1000000000 : Record 50051;
      ResSetup@1000000001 : Record 314;
      Res@1000000002 : Record 156;
      ResTmpl@1000000003 : Record 156;
      "ResTmpl Gift"@1000000004 : Record 156;
      SO@1000000006 : Record 36;
      SOLine@1000000005 : Record 37;
      OldStatus@1000000007 : Integer;
    BEGIN
      ResSetup.GET;
      Vaucher.SETRANGE(Vaucher."Coupon Type",Vaucher."Coupon Type"::Payment);
      IF Vaucher.FINDSET THEN
        REPEAT
          IF STRLEN(Vaucher."Voucher Code") > 20 THEN
            Res.SETRANGE("Original Code",Vaucher."Voucher Code")
          ELSE
            Res.SETRANGE("No.",Vaucher."Voucher Code");
          IF Res.FINDFIRST THEN BEGIN
            ResTmpl.RESET;
            ResTmpl.SETRANGE(Template,TRUE);
            IF STRPOS(Vaucher."Voucher Code",ResSetup."Groupon Prefix") = 1 THEN
                ResTmpl.SETRANGE(Type,ResTmpl.Type::Groupon)
              ELSE
                ResTmpl.SETRANGE(Type,ResTmpl.Type::"Sales Bon");
             ResTmpl.FINDFIRST;

            IF Res.Type <> ResTmpl.Type THEN BEGIN
              Res.Type := ResTmpl.Type;
              IF Res."Gen. Prod. Posting Group" <> ResTmpl."Gen. Prod. Posting Group" THEN
                Res.VALIDATE("Gen. Prod. Posting Group",ResTmpl."Gen. Prod. Posting Group");
              IF Res."VAT Prod. Posting Group" <> ResTmpl."VAT Prod. Posting Group" THEN
                Res.VALIDATE("VAT Prod. Posting Group",ResTmpl."VAT Prod. Posting Group");
              Res.MODIFY;


              SOLine.RESET;
              SOLine.SETRANGE("Document Type",SOLine."Document Type"::Order);
              SOLine.SETRANGE(Type, SOLine.Type::Resource);
              SOLine.SETRANGE("No.",Res."No.");
              IF SOLine.FINDSET THEN
                REPEAT
                  IF (SOLine."Gen. Prod. Posting Group" <> Res."Gen. Prod. Posting Group") OR
                    (SOLine."VAT Prod. Posting Group" <> Res."VAT Prod. Posting Group") THEN BEGIN

                    SO.GET(SO."Document Type"::Order,SOLine."Document No.");
                    OldStatus := SO.Status;
                    IF SO.Status <> SO.Status::Open THEN BEGIN
                      SO.Status := SO.Status::Open;
                      SO.MODIFY;
                    END;
                    SOLine.VALIDATE("Gen. Prod. Posting Group",Res."Gen. Prod. Posting Group");
                    SOLine.VALIDATE("VAT Prod. Posting Group",Res."VAT Prod. Posting Group");
                    SOLine.MODIFY;
                    IF SO.Status <> OldStatus THEN BEGIN
                      SO.Status := OldStatus;
                      SO.MODIFY;
                    END;
                  END;
                UNTIL SOLine.NEXT = 0;
            END;
          END;
      UNTIL Vaucher.NEXT = 0;
    END;

    PROCEDURE UpdatePhone@1000000001();
    VAR
      eBayNavCSalesHeader@1000000007 : Record 5251571;
      customer@1000000006 : Record 18;
      eBayNavCAccount@1000000005 : Record 5251550;
      eBayNavCAccountUtil@1000000004 : Codeunit 5251542;
    BEGIN
      eBayNavCSalesHeader.SETFILTER("Webshop Code",'1|2|3');
      eBayNavCSalesHeader.SETRANGE(Status,eBayNavCSalesHeader.Status::Delivered);
      eBayNavCSalesHeader.SETFILTER("Bill-to Phone No.",'<>%1','');
      IF eBayNavCSalesHeader.FINDSET THEN
      REPEAT
        eBayNavCAccount.GET(eBayNavCSalesHeader."Webshop Code", eBayNavCSalesHeader."Sell-to Account No.");
        IF eBayNavCAccount."Phone No." = '' THEN BEGIN
          eBayNavCAccount."Phone No." := eBayNavCSalesHeader."Bill-to Phone No.";
          eBayNavCAccount.MODIFY(TRUE);
        END;

        IF customer.GET(eBayNavCAccount."Customer No.") THEN
          IF customer."Phone No." = '' THEN BEGIN
            customer."Phone No." := eBayNavCSalesHeader."Bill-to Phone No.";
            customer.MODIFY(TRUE);
          END;


      UNTIL eBayNavCSalesHeader.NEXT = 0;
    END;

    PROCEDURE UpdateGift@1000000003();
    VAR
      Voucher@1000000006 : Record 50051;
      salesHeader@1000000005 : Record 36;
      salesLine@1000000004 : Record 37;
      ApprMgt@1000000003 : Codeunit 439;
      OrderAmount@1000000002 : Decimal;
      OrderAmountLCY@1000000001 : Decimal;
      oldStatus@1000000000 : Integer;
    BEGIN
      Voucher.RESET;
      Voucher.SETRANGE(Type,Voucher.Type::Payment);
      Voucher.SETFILTER("Coupon Type",'<>%1',Voucher."Coupon Type"::Relative);
      IF Voucher.FINDSET THEN
        IF salesHeader.GET(salesHeader."Document Type"::Order,Voucher."Sales Order No.") THEN BEGIN
          ApprMgt.CalcSalesDocAmount(salesHeader,OrderAmount,OrderAmountLCY);
          IF OrderAmount < 0 THEN BEGIN
            oldStatus := salesHeader.Status;
            salesHeader.Status := salesHeader.Status::Open;
            //salesHeader.MODIFY;

            salesLine.RESET;
            salesLine.SETRANGE("Document Type",salesHeader."Document Type");
            salesLine.SETRANGE("Document No.",salesHeader."No.");
            salesLine.SETRANGE(Type,salesLine.Type::Resource);
            salesLine.SETFILTER("Unit Price",'<0');
            IF salesLine.FINDFIRST THEN BEGIN
              salesLine."Unit Price" := salesLine."Unit Price" - OrderAmount;
              //salesLine.MODIFY;
            END;

            salesHeader.Status := oldStatus;
            //salesHeader.MODIFY;

          END;
        END;
    END;

    PROCEDURE UpdateHistory@1170000008();
    VAR
      Hist@1170000000 : Record 50034;
      salesLine@1170000001 : Record 37;
    BEGIN
      Hist.RESET;
      Hist.SETRANGE(Hist.Interface,'EASYLOG');
      //Hist.SETRange(Hist."Import Framework Code",'%1|%2','R-STA','');

      salesLine.SETRANGE("Document Type",salesLine."Document Type"::Order);
      salesLine.SETRANGE(Type,salesLine.Type::Item);
      salesLine.SETFILTER("Dropship No.",'<>%1','');
      salesLine.SETRANGE("Quantity Shipped",0);
      IF salesLine.FINDSET THEN REPEAT
        Hist.SETRANGE(Hist."Document No.",salesLine."Dropship No.");
        IF Hist.FINDSET THEN
        BEGIN
          Hist.MODIFYALL(Complete,FALSE);
        END;
      UNTIL salesLine.NEXT = 0;
    END;

    PROCEDURE FixEasyLog@1000000005();
    VAR
      SOLine@1000000000 : Record 37;
      SO@1000000001 : Record 36;
      StatusLog@1000000002 : Record 50021;
      oldStatus@1000000003 : Integer;
    BEGIN
      //S/P1117
      //OMA P1117: Redesign of "T50021 DHL Parcel Status History"
      //This function has not been modified for the redesign,
      //because it seems like an ad hoc function for a quick data manipulation.
      //E/P1117

      SOLine.RESET;
      SOLine.SETRANGE(SOLine."DHL Shipment Number",'319893385054');//'323618000288');
      IF SOLine.FINDSET(TRUE,TRUE) THEN REPEAT
        StatusLog.RESET;
        StatusLog.SETRANGE(StatusLog."Document No.",SOLine."Document No.");
        IF StatusLog.FINDLAST THEN BEGIN
          SOLine."DHL Shipment Number" := StatusLog."DHL Shipment Code";
          SOLine."Status Event Code" := StatusLog."Status Event";
          SOLine."Status Code" := StatusLog."Status Code";
        END ELSE BEGIN
          SOLine."DHL Shipment Number" := '';
          SOLine."Status Event Code" := '';
          SOLine."Status Code" := '';
        END;
        SOLine.MODIFY;

      UNTIL SOLine.NEXT = 0;
    END;

    PROCEDURE FixCancellation@1000000006();
    VAR
      ProcessLog@1000000000 : Record 50070;
      SO@1000000001 : Record 36;
    BEGIN
      IF SO.GET(1,'10105000095513') THEN ProcessLog.AddSalesLog(SO,'RHENUS',ProcessLog.Action::New);
    END;

    PROCEDURE UpdateParcelsNumber@1000000007();
    VAR
      so@1000000000 : Record 36;
      soLine@1000000001 : Record 37;
      Log@1000000002 : Record 50070;
      Item@1000000003 : Record 27;
    BEGIN
      so.RESET;
      so.SETRANGE(so."Document Type",so."Document Type"::Order);
      so.SETRANGE(Status,so.Status::Open);
      IF so.FINDSET THEN
      REPEAT
        soLine.SETRANGE(soLine."Document Type",so."Document Type");
        soLine.SETRANGE(soLine."Document No.",so."No.");
        soLine.SETRANGE(soLine.Type,soLine.Type::Item);
        IF soLine.FINDSET THEN REPEAT
          Item.GET(soLine."No.");
          Item.CALCFIELDS("Parcels Number");
          IF Item."Parcels Number" > 0 THEN BEGIN
            soLine."Parcels Number" := Item."Parcels Number";
            soLine.MODIFY;
          END;
        UNTIL soLine.NEXT = 0;
      UNTIL so.NEXT = 0;
    END;

    PROCEDURE Update15@1000000008();
    VAR
      cu50010@1000000000 : Codeunit 50010;
    BEGIN
       cu50010.FixResource('10106000105338');
       cu50010.FixResource('10106000106614');
       cu50010.FixResource('10106000106614');
       cu50010.FixResource('10106000108509');
       cu50010.FixResource('10106000106400');
       cu50010.FixResource('10106000107015');
       cu50010.FixResource('10106000107015');
       cu50010.FixResource('10106000107015');
       cu50010.FixResource('10106000107106');
       cu50010.FixResource('10106000107274');
       cu50010.FixResource('10106000107274');
       cu50010.FixResource('10106000107274');
       cu50010.FixResource('10106000107274');
       cu50010.FixResource('10106000107924');
       cu50010.FixResource('10106000107924');
    END;

    BEGIN
    {
      +--------------------------------------------+
      |                                            |
      |                  Home24                    |
      |     Cooperation GOB & Home24 NAV Team      |
      |                                            |
      +--------------------------------------------+

      Project No. Date      Shortcut  Description
      _____________________________________________

      P1117     02.10.13  gob-mlan    - Redesign of "DHL Parcel Status History"
                                      - Code within with //S/P1117/++S+++++++ and //E/P1117/--E-------
                                        will be replaced by the new code and/or it will be deactivated
      P1133     05.11.13  gob-mlan    - Redesign of "DHL Parcel Status History"

      +--------------------------------------------+
      |                                            |
      |                  Home24                    |
      |     Cooperation Tectura & Home24 NAV Team  |
      |                                            |
      +--------------------------------------------+

      Project No. Date      Shortcut  Description
      _____________________________________________

      T0002       28.05.14  tec-cs    remove obsolete setcurrentkey-calls (keys in table 80013 have been deleted)
    }
    END.
  }
}

