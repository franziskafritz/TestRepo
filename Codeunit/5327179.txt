OBJECT Codeunit 5327179 ACF Module Mapping
{
  OBJECT-PROPERTIES
  {
    Date=17.01.13;
    Time=00:00:00;
    Version List=ACF3.02;
  }
  PROPERTIES
  {
    SingleInstance=Yes;
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Events@1000000027 : Codeunit 5327180;
      Module1@1000000002 : Codeunit 5327198;
      Module2@1000000001 : Codeunit 5327182;
      Module3@1000000003 : Codeunit 5327183;
      Module4@1000000004 : Codeunit 5327184;
      Module5@1000000005 : Codeunit 5327198;
      Module6@1000000006 : Codeunit 5327198;
      Module7@1000000007 : Codeunit 5327198;
      Module8@1000000008 : Codeunit 5327188;
      Module9@1000000009 : Codeunit 5327198;
      Module10@1000000010 : Codeunit 5327198;
      Module11@5326062 : Codeunit 5327198;
      Module12@5326063 : Codeunit 5327198;
      Module13@5326064 : Codeunit 5327198;
      Module14@5326065 : Codeunit 5327198;
      Module15@5326066 : Codeunit 5327198;
      Module16@5326067 : Codeunit 5327198;
      Module17@5326068 : Codeunit 5327198;
      Module18@5326069 : Codeunit 5327198;
      Module19@5326070 : Codeunit 5327198;
      Module20@5326071 : Codeunit 5327197;
      Mgt@5326072 : Codeunit 5327126;
      gModuleNo@5326094 : Integer;
      "-- Global Values"@5326073 : Integer;
      gWebPageElement@5326074 : Record 5327101;
      gWebPageElementField@5326081 : Record 5327103;
      gRecRef@5326077 : RecordRef;
      gFldRef@5326082 : FieldRef;
      gxRecRef@5326084 : RecordRef;
      gxFldRef@5326083 : FieldRef;
      gWindowRecRef@5326078 : RecordRef;
      gDestWebPageElement@5326075 : Record 5327101;
      gDestRecRef@5326076 : RecordRef;
      gCustomTableRelationRecRef@5326079 : RecordRef;
      gFunctionCode@5326085 : Code[20];
      gRelationCode@5326080 : Code[20];
      gFieldName@5326086 : Text[50];
      gTableNumber@5326088 : Integer;
      gClosedByNAV@5326097 : Boolean;
      "gField#1"@5326089 : Integer;
      "gField#2"@5326090 : Integer;
      gInitStyle@5326093 : Boolean;
      gCSS@5326092 : Text[1024];
      gFldNo@5326095 : Integer;
      gxFldNo@5326096 : Integer;
      tWebPageElement@5326116 : Record 5327101;
      tWebPageElementField@5326115 : Record 5327103;
      tRecRef@5326114 : RecordRef;
      tFldRef@5326113 : FieldRef;
      txRecRef@5326112 : RecordRef;
      txFldRef@5326111 : FieldRef;
      tWindowRecRef@5326110 : RecordRef;
      tDestWebPageElement@5326109 : Record 5327101;
      tDestRecRef@5326108 : RecordRef;
      tCustomTableRelationRecRef@5326107 : RecordRef;
      tFunctionCode@5326106 : Code[20];
      tRelationCode@5326105 : Code[20];
      tFieldName@5326104 : Text[50];
      tTableNumber@5326103 : Integer;
      tClosedByNAV@5326102 : Boolean;
      tInitStyle@5326099 : Boolean;
      tFldNo@5326091 : Integer;
      txFldNo@5326087 : Integer;

    PROCEDURE GetModuleNo@1000000005(WebPageCode@1000000000 : Code[20]) ModuleNo : Integer;
    VAR
      WebPage@1000000001 : Record 5327100;
      Mgt@5326062 : Codeunit 5327126;
    BEGIN
      //Get ModuleNo by "Web Page Element" using "Web Page".Module-value
      IF WebPageCode='' THEN EXIT(0);
      IF NOT WebPage.GET(WebPageCode) THEN EXIT(0);
      EXIT(WebPage.Module);
    END;

    PROCEDURE GetModuleName@1000000003(ModuleNo@1000000000 : Integer) ModuleName : Text[30];
    BEGIN
      //Module mapping
      CASE ModuleNo OF
        0: EXIT(Events.GetModuleName);
        1: EXIT(Module1.GetModuleName);
        2: EXIT(Module2.GetModuleName);
        3: EXIT(Module3.GetModuleName);
        4: EXIT(Module4.GetModuleName);
        5: EXIT(Module5.GetModuleName);
        6: EXIT(Module6.GetModuleName);
        7: EXIT(Module7.GetModuleName);
        8: EXIT(Module8.GetModuleName);
        9: EXIT(Module9.GetModuleName);
        10: EXIT(Module10.GetModuleName);
        11: EXIT(Module11.GetModuleName);
        12: EXIT(Module12.GetModuleName);
        13: EXIT(Module13.GetModuleName);
        14: EXIT(Module14.GetModuleName);
        15: EXIT(Module15.GetModuleName);
        16: EXIT(Module16.GetModuleName);
        17: EXIT(Module17.GetModuleName);
        18: EXIT(Module18.GetModuleName);
        19: EXIT(Module19.GetModuleName);
        20: EXIT(Module20.GetModuleName);
      END;
    END;

    PROCEDURE LogEventWebPageElement@5326062(FunctionName@5326065 : Text[30];Text@5326066 : Text[1024];WebPageElement@5326062 : Record 5327101);
    VAR
      ModuleNo@5326063 : Integer;
      Mgt@5326064 : Codeunit 5327126;
    BEGIN
      gWebPageElement := WebPageElement;
      SetModuleNoFromWebPageElement();
      ModuleNo := gModuleNo;
      Mgt.Log(FunctionName, Text+STRSUBSTNO(' Web Page Element:%1 %2 Module %3:%4',
        WebPageElement."Web Page Code", WebPageElement."Line No.",
        ModuleNo, GetModuleName(ModuleNo)));
    END;

    LOCAL PROCEDURE "-- Main-Events"@5326064();
    BEGIN
    END;

    PROCEDURE OnLogin@1000000001() LoginAllowed : Boolean;
    BEGIN
      //No module mapping
      Mgt.Log('OnLogin','BEGIN');
      LoginAllowed :=Events.OnLogin;
      Mgt.Log('OnLogin',STRSUBSTNO('END Value:%1',LoginAllowed));
    END;

    PROCEDURE OnLogout@1000000017(UserAction@1000000000 : 'RefreshedBrowser,ClosedBrowser,Logout');
    BEGIN
      //No module mapping
      Mgt.Log('OnLogout',STRSUBSTNO('BEGIN UserAction:%1',UserAction));
      Events.OnLogout(UserAction);
      Mgt.Log('OnLogout','END');
    END;

    PROCEDURE OnLoadEnvironment@1000000024();
    BEGIN
      //No module mapping
      Mgt.Log('OnLoadEnvironment','BEGIN');
      Events.OnLoadEnvironment();
      Mgt.Log('OnLoadEnvironment','END');
    END;

    PROCEDURE OnBeforeLoad@1000000030(WebPageElement@1000000000 : Record 5327101;VAR RecRef@1000000001 : RecordRef;VAR WindowRecRef@5326062 : RecordRef);
    BEGIN
      LogEventWebPageElement('OnBeforeLoad','BEGIN', WebPageElement);

      // Input Parameters
      gWebPageElement := WebPageElement;
      gRecRef := RecRef;
      gWindowRecRef := WindowRecRef;
      SetModuleNoFromWebPageElement();
      CLEARVALUES();
      tWebPageElement := WebPageElement;
      tRecRef := RecRef;
      tWindowRecRef := WindowRecRef;
      SETVALUES();

      //Module mapping
      CASE gModuleNo OF
        0: Events.OnBeforeLoad();
        1: Module1.OnBeforeLoad();
        2: Module2.OnBeforeLoad();
        3: Module3.OnBeforeLoad();
        4: Module4.OnBeforeLoad();
        5: Module5.OnBeforeLoad();
        6: Module6.OnBeforeLoad();
        7: Module7.OnBeforeLoad();
        8: Module8.OnBeforeLoad();
        9: Module9.OnBeforeLoad();
        10: Module10.OnBeforeLoad();
        11: Module11.OnBeforeLoad();
        12: Module12.OnBeforeLoad();
        13: Module13.OnBeforeLoad();
        14: Module14.OnBeforeLoad();
        15: Module15.OnBeforeLoad();
        16: Module16.OnBeforeLoad();
        17: Module17.OnBeforeLoad();
        18: Module18.OnBeforeLoad();
        19: Module19.OnBeforeLoad();
        20: Module20.OnBeforeLoad();
      END;

      // Output Values
      GETVALUES();
      RecRef := gRecRef;

      Mgt.Log('OnBeforeLoad','END');
    END;

    PROCEDURE ReadSecurityFilter@1000000036(VAR RecRef@1000000000 : RecordRef);
    VAR
      FldRef@1000000002 : FieldRef;
      WebUser@1000000001 : Record 5327140;
    BEGIN
      Mgt.Log('ReadSecurityFilter','BEGIN');
      //No module mapping
      Events.ReadSecurityFilter(RecRef);
      Mgt.Log('ReadSecurityFilter','END');
    END;

    PROCEDURE GetLanguageFilter@1000000021(VAR Language@1000000000 : Record 8);
    BEGIN
      Mgt.Log('GetLanguageFilter','BEGIN');

      //No module mapping
      Events.GetLanguageFilter(Language);
      Mgt.Log('GetLanguageFilter','END');
    END;

    PROCEDURE CheckPassword@1000000038(NewPassword@1000000000 : Text[32]) IsOK : Boolean;
    BEGIN
      Mgt.Log('CheckPassword','BEGIN');
      //No module mapping
      IsOK := Events.CheckPassword(NewPassword);
      Mgt.Log('CheckPassword',STRSUBSTNO('END IsOK:%1',IsOK));
    END;

    PROCEDURE TestPassword@1000000037(NewPassword@1000000000 : Text[32]);
    BEGIN
      Mgt.Log('TestPassword','BEGIN');
      //No module mapping
      Events.TestPassword(NewPassword);
      Mgt.Log('TestPassword','END');
    END;

    LOCAL PROCEDURE "-- Events"@5326083();
    BEGIN
    END;

    PROCEDURE OnAfterGetField@1000000029(WebPageElement@1000000004 : Record 5327101;VAR FldRef@1000000000 : FieldRef;WebPageElementField@1000000005 : Record 5327103;RecRefIn@1000000007 : RecordRef;VAR CSS@1000000006 : Text[1024]) ShowValue : Boolean;
    BEGIN
      LogEventWebPageElement('OnAfterGetField','BEGIN', WebPageElement);
      Mgt.Log('OnAfterGetField',STRSUBSTNO('RecRef.CAPTION:%1 FldRef.CAPTION:%2 FieldName:%3 Value:%4',
        RecRefIn.CAPTION, FldRef.CAPTION, WebPageElementField."Field Name", FldRef.VALUE));

      // Input Parameters
      gWebPageElement := WebPageElement;
      gWebPageElementField := WebPageElementField;
      gFldRef := FldRef;
      gFieldName := WebPageElementField."Field Name";
      gRecRef := RecRefIn.DUPLICATE;
      gInitStyle := TRUE;
      SetModuleNoFromWebPageElement();
      CLEARVALUES();
      tWebPageElement := WebPageElement;
      tWebPageElementField := WebPageElementField;
      tFldRef := FldRef;
      tFieldName := WebPageElementField."Field Name";
      tRecRef := RecRefIn.DUPLICATE;
      tInitStyle := TRUE;

      SETVALUES();

      // Module Mapping
      CASE gModuleNo OF
        0: ShowValue := Events.OnAfterGetField();
        1: ShowValue := Module1.OnAfterGetField();
        2: ShowValue := Module2.OnAfterGetField();
        3: ShowValue := Module3.OnAfterGetField();
        4: ShowValue := Module4.OnAfterGetField();
        5: ShowValue := Module5.OnAfterGetField();
        6: ShowValue := Module6.OnAfterGetField();
        7: ShowValue := Module7.OnAfterGetField();
        8: ShowValue := Module8.OnAfterGetField();
        9: ShowValue := Module9.OnAfterGetField();
        10: ShowValue := Module10.OnAfterGetField();
        11: ShowValue := Module11.OnAfterGetField();
        12: ShowValue := Module12.OnAfterGetField();
        13: ShowValue := Module13.OnAfterGetField();
        14: ShowValue := Module14.OnAfterGetField();
        15: ShowValue := Module15.OnAfterGetField();
        16: ShowValue := Module16.OnAfterGetField();
        17: ShowValue := Module17.OnAfterGetField();
        18: ShowValue := Module18.OnAfterGetField();
        19: ShowValue := Module19.OnAfterGetField();
        20: ShowValue := Module20.OnAfterGetField();
      END;
      gInitStyle := FALSE;

      // Output Values
      GETVALUES();
      FldRef := gFldRef;
      CSS := gCSS;

      Mgt.Log('OnAfterGetField',STRSUBSTNO('END ShowValue:%1',ShowValue));
    END;

    PROCEDURE OnAfterGetRecord@1000000028(WebPageElement@1000000004 : Record 5327101;VAR RecRef@1000000000 : RecordRef);
    BEGIN
      LogEventWebPageElement('OnAfterGetRecord','BEGIN', WebPageElement);

      // Input Parameters
      gWebPageElement := WebPageElement;
      gRecRef := RecRef;
      SetModuleNoFromWebPageElement();
      CLEARVALUES();
      tWebPageElement := WebPageElement;
      tRecRef := RecRef;

      SETVALUES();

      //Module mapping
      CASE gModuleNo OF
        0: Events.OnAfterGetRecord();
        1: Module1.OnAfterGetRecord();
        2: Module2.OnAfterGetRecord();
        3: Module3.OnAfterGetRecord();
        4: Module4.OnAfterGetRecord();
        5: Module5.OnAfterGetRecord();
        6: Module6.OnAfterGetRecord();
        7: Module7.OnAfterGetRecord();
        8: Module8.OnAfterGetRecord();
        9: Module9.OnAfterGetRecord();
        10: Module10.OnAfterGetRecord();
        11: Module11.OnAfterGetRecord();
        12: Module12.OnAfterGetRecord();
        13: Module13.OnAfterGetRecord();
        14: Module14.OnAfterGetRecord();
        15: Module15.OnAfterGetRecord();
        16: Module16.OnAfterGetRecord();
        17: Module17.OnAfterGetRecord();
        18: Module18.OnAfterGetRecord();
        19: Module19.OnAfterGetRecord();
        20: Module20.OnAfterGetRecord();
      END;

      // Output Values
      GETVALUES();
      RecRef := gRecRef;

      Mgt.Log('OnAfterGetRecord','END');
    END;

    PROCEDURE OnAfterLoad@1000000018(WebPageElement@1000000000 : Record 5327101);
    BEGIN
      LogEventWebPageElement('OnAfterLoad','BEGIN', WebPageElement);

      // Input Parameters
      gWebPageElement := WebPageElement;
      SetModuleNoFromWebPageElement();
      CLEARVALUES();
      tWebPageElement := WebPageElement;
      SETVALUES();

      //Module mapping
      CASE gModuleNo OF
        0: Events.OnAfterLoad();
        1: Module1.OnAfterLoad();
        2: Module2.OnAfterLoad();
        3: Module3.OnAfterLoad();
        4: Module4.OnAfterLoad();
        5: Module5.OnAfterLoad();
        6: Module6.OnAfterLoad();
        7: Module7.OnAfterLoad();
        8: Module8.OnAfterLoad();
        9: Module9.OnAfterLoad();
        10: Module10.OnAfterLoad();
        11: Module11.OnAfterLoad();
        12: Module12.OnAfterLoad();
        13: Module13.OnAfterLoad();
        14: Module14.OnAfterLoad();
        15: Module15.OnAfterLoad();
        16: Module16.OnAfterLoad();
        17: Module17.OnAfterLoad();
        18: Module18.OnAfterLoad();
        19: Module19.OnAfterLoad();
        20: Module20.OnAfterLoad();
      END;

      // Output Values
      //GETVALUES();

      Mgt.Log('OnAfterLoad','END');
    END;

    PROCEDURE OnAction@1000000026(VAR RecRef@1000000002 : RecordRef;FunctionCode@1000000004 : Code[20];VAR WebPageElement@1000000001 : Record 5327101;VAR ErrorDescription@1000000005 : Text[1024];VAR CloseWindow@1000000010 : Boolean;VAR WindowRecRef@5326062 : RecordRef) Value : Boolean;
    VAR
      Core@1000000000 : Codeunit 5327101;
    BEGIN
      gWebPageElement := WebPageElement;
      LogEventWebPageElement('OnAction',STRSUBSTNO('BEGIN FunctionCode:%1',FunctionCode), WebPageElement);
      SetModuleNoFromWebPageElement();
      IF RecRef.NUMBER <> 0 THEN
        RecRef.FILTERGROUP(102);
      Value := OnActionModuleNo(RecRef,FunctionCode, WebPageElement,ErrorDescription,CloseWindow,
        gModuleNo, WindowRecRef);
      Mgt.Log('OnAction',STRSUBSTNO('END Value:%1',Value));
    END;

    PROCEDURE OnActionModuleNo@1000000006(VAR RecRef@1000000002 : RecordRef;FunctionCode@1000000004 : Code[20];VAR WebPageElement@1000000001 : Record 5327101;VAR ErrorDescription@1000000005 : Text[1024];VAR CloseWindow@1000000010 : Boolean;ModuleNo@1000000003 : Integer;VAR WindowRecRef@5326062 : RecordRef) : Boolean;
    VAR
      Core@1000000000 : Codeunit 5327101;
    BEGIN
      LogEventWebPageElement('OnActionModuleNo',STRSUBSTNO('BEGIN FunctionCode:%1',FunctionCode), WebPageElement);
      IF RecRef.NUMBER <> 0 THEN
        IF RecRef.FINDFIRST THEN;

      // Input Parameters
      gModuleNo := ModuleNo;
      gWebPageElement := WebPageElement;
      gRecRef := RecRef;
      gWindowRecRef := WindowRecRef;
      gFunctionCode := FunctionCode;
      CLEARVALUES();
      tWebPageElement := WebPageElement;
      tRecRef := RecRef;
      tWindowRecRef := WindowRecRef;
      tFunctionCode := FunctionCode;
      SETVALUES();

      //Module mapping
      CASE gModuleNo OF
        0: CloseWindow := Events.OnAction();
        1: CloseWindow := Module1.OnAction();
        2: CloseWindow := Module2.OnAction();
        3: CloseWindow := Module3.OnAction();
        4: CloseWindow := Module4.OnAction();
        5: CloseWindow := Module5.OnAction();
        6: CloseWindow := Module6.OnAction();
        7: CloseWindow := Module7.OnAction();
        8: CloseWindow := Module8.OnAction();
        9: CloseWindow := Module9.OnAction();
        10: CloseWindow := Module10.OnAction();
        11: CloseWindow := Module11.OnAction();
        12: CloseWindow := Module12.OnAction();
        13: CloseWindow := Module13.OnAction();
        14: CloseWindow := Module14.OnAction();
        15: CloseWindow := Module15.OnAction();
        16: CloseWindow := Module16.OnAction();
        17: CloseWindow := Module17.OnAction();
        18: CloseWindow := Module18.OnAction();
        19: CloseWindow := Module19.OnAction();
        20: CloseWindow := Module20.OnAction();
      END;

      IF RecRef.NUMBER <> 0 THEN
        CloseWindow := CloseWindow OR RecRef.ISEMPTY;
      Mgt.Log('OnActionModuleNo','END');
      EXIT(TRUE);
    END;

    PROCEDURE OnInit@1000000032(WebPageElement@1000000001 : Record 5327101;VAR RecRef@1000000000 : RecordRef);
    BEGIN
      LogEventWebPageElement('OnInit','BEGIN', WebPageElement);

      // Input Parameters
      gWebPageElement := WebPageElement;
      gRecRef := RecRef;
      SetModuleNoFromWebPageElement();
      CLEARVALUES();
      tWebPageElement := WebPageElement;
      tRecRef := RecRef;
      SETVALUES();

      //Module mapping
      CASE gModuleNo OF
        0: Events.OnInit();
        1: Module1.OnInit();
        2: Module2.OnInit();
        3: Module3.OnInit();
        4: Module4.OnInit();
        5: Module5.OnInit();
        6: Module6.OnInit();
        7: Module7.OnInit();
        8: Module8.OnInit();
        9: Module9.OnInit();
        10: Module10.OnInit();
        11: Module11.OnInit();
        12: Module12.OnInit();
        13: Module13.OnInit();
        14: Module14.OnInit();
        15: Module15.OnInit();
        16: Module16.OnInit();
        17: Module17.OnInit();
        18: Module18.OnInit();
        19: Module19.OnInit();
        20: Module20.OnInit();
      END;

      // Output Values
      GETVALUES();
      RecRef := gRecRef;

      Mgt.Log('OnInit', 'END');
    END;

    PROCEDURE OnBeforeValidate@1000000019(WebPageElement@1000000000 : Record 5327101;VAR xRecRef@1000000008 : RecordRef;VAR RecRef@1000000001 : RecordRef;VAR xFldRef@1000000002 : FieldRef;VAR FldRef@1000000004 : FieldRef) DoValidation : Boolean;
    BEGIN
      LogEventWebPageElement('OnBeforeValidate','BEGIN', WebPageElement);

      // Input Parameters
      gWebPageElement := WebPageElement;
      gRecRef := RecRef;
      gFldRef := FldRef;
      gxRecRef := xRecRef;
      gxFldRef := xFldRef;
      SetModuleNoFromWebPageElement();
      CLEARVALUES();
      tWebPageElement := WebPageElement;
      tRecRef := RecRef;
      tFldRef := FldRef;
      txRecRef := xRecRef;
      txFldRef := xFldRef;
      SETVALUES();

      //Module mapping
      CASE gModuleNo OF
        0: DoValidation := Events.OnBeforeValidate();
        1: DoValidation := Module1.OnBeforeValidate();
        2: DoValidation := Module2.OnBeforeValidate();
        3: DoValidation := Module3.OnBeforeValidate();
        4: DoValidation := Module4.OnBeforeValidate();
        5: DoValidation := Module5.OnBeforeValidate();
        6: DoValidation := Module6.OnBeforeValidate();
        7: DoValidation := Module7.OnBeforeValidate();
        8: DoValidation := Module8.OnBeforeValidate();
        9: DoValidation := Module9.OnBeforeValidate();
        10: DoValidation := Module10.OnBeforeValidate();
        11: DoValidation := Module11.OnBeforeValidate();
        12: DoValidation := Module12.OnBeforeValidate();
        13: DoValidation := Module13.OnBeforeValidate();
        14: DoValidation := Module14.OnBeforeValidate();
        15: DoValidation := Module15.OnBeforeValidate();
        16: DoValidation := Module16.OnBeforeValidate();
        17: DoValidation := Module17.OnBeforeValidate();
        18: DoValidation := Module18.OnBeforeValidate();
        19: DoValidation := Module19.OnBeforeValidate();
        20: DoValidation := Module20.OnBeforeValidate();
      END;

      // Output Values
      GETVALUES();
      RecRef := gRecRef;
      FldRef := gFldRef;

      Mgt.Log('OnBeforeValidate', STRSUBSTNO('END DoValidation:%1', DoValidation));
    END;

    PROCEDURE OnValidate@1000000025(WebPageElement@1000000004 : Record 5327101;WebPageElementField@5326062 : Record 5327103;VAR xRecRef@1000000003 : RecordRef;VAR RecRef@1000000002 : RecordRef;xFldRef@1000000001 : FieldRef;FldRef@1000000000 : FieldRef) : Boolean;
    BEGIN
      LogEventWebPageElement('OnValidate','BEGIN', WebPageElement);

      // Input Parameters
      gWebPageElement := WebPageElement;
      gWebPageElementField := WebPageElementField;
      gRecRef := RecRef;
      gFldRef := FldRef;
      gxRecRef := xRecRef;
      gxFldRef := xFldRef;
      SetModuleNoFromWebPageElement();
      CLEARVALUES();
      tWebPageElement := WebPageElement;
      tWebPageElementField := WebPageElementField;
      tRecRef := RecRef;
      txRecRef := xRecRef;
      tFldRef := FldRef;
      txFldRef := xFldRef;

      SETVALUES();

      //Module mapping
      CASE gModuleNo OF
        0: Events.OnValidate();
        1: Module1.OnValidate();
        2: Module2.OnValidate();
        3: Module3.OnValidate();
        4: Module4.OnValidate();
        5: Module5.OnValidate();
        6: Module6.OnValidate();
        7: Module7.OnValidate();
        8: Module8.OnValidate();
        9: Module9.OnValidate();
        10: Module10.OnValidate();
        11: Module11.OnValidate();
        12: Module12.OnValidate();
        13: Module13.OnValidate();
        14: Module14.OnValidate();
        15: Module15.OnValidate();
        16: Module16.OnValidate();
        17: Module17.OnValidate();
        18: Module18.OnValidate();
        19: Module19.OnValidate();
        20: Module20.OnValidate();
      END;

      // Output Values
      GETVALUES();
      RecRef := gRecRef;
      CLEAR(gFldNo);
      CLEAR(gxFldNo);

      Mgt.Log('OnValidate','END');
    END;

    PROCEDURE CallOnInsertTrigger@1000000034(WebPageElement@5326062 : Record 5327101;VAR RecRef@1000000000 : RecordRef) CallTableOnInsertTrigger : Boolean;
    VAR
      WebDeskExample@1000000003 : Record 5327194;
      xWebDeskExample@1000000002 : Record 5327194;
    BEGIN
      LogEventWebPageElement('CallOnInsertTrigger','BEGIN',WebPageElement);

      // Input Parameters
      gWebPageElement := WebPageElement;
      gRecRef := RecRef;
      SetModuleNoFromWebPageElement();
      CLEARVALUES();
      tWebPageElement := WebPageElement;
      tRecRef := RecRef;
      SETVALUES();


      //Module mapping
      CASE gModuleNo OF
        0: CallTableOnInsertTrigger := Events.CallOnInsertTrigger();
        1: CallTableOnInsertTrigger := Module1.CallOnInsertTrigger();
        2: CallTableOnInsertTrigger := Module2.CallOnInsertTrigger();
        3: CallTableOnInsertTrigger := Module3.CallOnInsertTrigger();
        4: CallTableOnInsertTrigger := Module4.CallOnInsertTrigger();
        5: CallTableOnInsertTrigger := Module5.CallOnInsertTrigger();
        6: CallTableOnInsertTrigger := Module6.CallOnInsertTrigger();
        7: CallTableOnInsertTrigger := Module7.CallOnInsertTrigger();
        8: CallTableOnInsertTrigger := Module8.CallOnInsertTrigger();
        9: CallTableOnInsertTrigger := Module9.CallOnInsertTrigger();
        10: CallTableOnInsertTrigger := Module10.CallOnInsertTrigger();
        11: CallTableOnInsertTrigger := Module11.CallOnInsertTrigger();
        12: CallTableOnInsertTrigger := Module12.CallOnInsertTrigger();
        13: CallTableOnInsertTrigger := Module13.CallOnInsertTrigger();
        14: CallTableOnInsertTrigger := Module14.CallOnInsertTrigger();
        15: CallTableOnInsertTrigger := Module15.CallOnInsertTrigger();
        16: CallTableOnInsertTrigger := Module16.CallOnInsertTrigger();
        17: CallTableOnInsertTrigger := Module17.CallOnInsertTrigger();
        18: CallTableOnInsertTrigger := Module18.CallOnInsertTrigger();
        19: CallTableOnInsertTrigger := Module19.CallOnInsertTrigger();
        20: CallTableOnInsertTrigger := Module20.CallOnInsertTrigger();
      END;
      Mgt.Log('CallOnInsertTrigger',STRSUBSTNO('END CallTableOnInsertTrigger:%1',CallTableOnInsertTrigger));
    END;

    PROCEDURE CallOnModifyTrigger@1000000033(WebPageElement@5326062 : Record 5327101;VAR xRecRef@1000000001 : RecordRef;VAR RecRef@1000000000 : RecordRef) CallTableOnModifyTrigger : Boolean;
    BEGIN
      LogEventWebPageElement('CallOnModifyTrigger','BEGIN',WebPageElement);

      // Input Parameters
      gWebPageElement := WebPageElement;
      gRecRef := RecRef;
      gxRecRef := xRecRef;
      SetModuleNoFromWebPageElement();
      CLEARVALUES();
      tWebPageElement := WebPageElement;
      tRecRef := RecRef;
      txRecRef := xRecRef;
      SETVALUES();

      //Module mapping
      CASE gModuleNo OF
        0: CallTableOnModifyTrigger := Events.CallOnModifyTrigger();
        1: CallTableOnModifyTrigger := Module1.CallOnModifyTrigger();
        2: CallTableOnModifyTrigger := Module2.CallOnModifyTrigger();
        3: CallTableOnModifyTrigger := Module3.CallOnModifyTrigger();
        4: CallTableOnModifyTrigger := Module4.CallOnModifyTrigger();
        5: CallTableOnModifyTrigger := Module5.CallOnModifyTrigger();
        6: CallTableOnModifyTrigger := Module6.CallOnModifyTrigger();
        7: CallTableOnModifyTrigger := Module7.CallOnModifyTrigger();
        8: CallTableOnModifyTrigger := Module8.CallOnModifyTrigger();
        9: CallTableOnModifyTrigger := Module9.CallOnModifyTrigger();
        10: CallTableOnModifyTrigger := Module10.CallOnModifyTrigger();
        11: CallTableOnModifyTrigger := Module11.CallOnModifyTrigger();
        12: CallTableOnModifyTrigger := Module12.CallOnModifyTrigger();
        13: CallTableOnModifyTrigger := Module13.CallOnModifyTrigger();
        14: CallTableOnModifyTrigger := Module14.CallOnModifyTrigger();
        15: CallTableOnModifyTrigger := Module15.CallOnModifyTrigger();
        16: CallTableOnModifyTrigger := Module16.CallOnModifyTrigger();
        17: CallTableOnModifyTrigger := Module17.CallOnModifyTrigger();
        18: CallTableOnModifyTrigger := Module18.CallOnModifyTrigger();
        19: CallTableOnModifyTrigger := Module19.CallOnModifyTrigger();
        20: CallTableOnModifyTrigger := Module20.CallOnModifyTrigger();
      END;
      Mgt.Log('CallOnModifyTrigger',STRSUBSTNO('END CallTableOnModifyTrigger:%1',CallTableOnModifyTrigger));
    END;

    PROCEDURE CallOnDeleteTrigger@1000000014(WebPageElement@5326062 : Record 5327101;VAR RecRef@1000000000 : RecordRef) CallTableOnDeleteTrigger : Boolean;
    BEGIN
      LogEventWebPageElement('CallOnDeleteTrigger','BEGIN',WebPageElement);

      // Input Parameters
      gWebPageElement := WebPageElement;
      gRecRef := RecRef;
      SetModuleNoFromWebPageElement();
      CLEARVALUES();
      tWebPageElement := WebPageElement;
      tRecRef := RecRef;
      SETVALUES();

      //Module mapping
      CASE gModuleNo OF
        0: CallTableOnDeleteTrigger := Events.CallOnDeleteTrigger();
        1: CallTableOnDeleteTrigger := Module1.CallOnDeleteTrigger();
        2: CallTableOnDeleteTrigger := Module2.CallOnDeleteTrigger();
        3: CallTableOnDeleteTrigger := Module3.CallOnDeleteTrigger();
        4: CallTableOnDeleteTrigger := Module4.CallOnDeleteTrigger();
        5: CallTableOnDeleteTrigger := Module5.CallOnDeleteTrigger();
        6: CallTableOnDeleteTrigger := Module6.CallOnDeleteTrigger();
        7: CallTableOnDeleteTrigger := Module7.CallOnDeleteTrigger();
        8: CallTableOnDeleteTrigger := Module8.CallOnDeleteTrigger();
        9: CallTableOnDeleteTrigger := Module9.CallOnDeleteTrigger();
        10: CallTableOnDeleteTrigger := Module10.CallOnDeleteTrigger();
        11: CallTableOnDeleteTrigger := Module11.CallOnDeleteTrigger();
        12: CallTableOnDeleteTrigger := Module12.CallOnDeleteTrigger();
        13: CallTableOnDeleteTrigger := Module13.CallOnDeleteTrigger();
        14: CallTableOnDeleteTrigger := Module14.CallOnDeleteTrigger();
        15: CallTableOnDeleteTrigger := Module15.CallOnDeleteTrigger();
        16: CallTableOnDeleteTrigger := Module16.CallOnDeleteTrigger();
        17: CallTableOnDeleteTrigger := Module17.CallOnDeleteTrigger();
        18: CallTableOnDeleteTrigger := Module18.CallOnDeleteTrigger();
        19: CallTableOnDeleteTrigger := Module19.CallOnDeleteTrigger();
        20: CallTableOnDeleteTrigger := Module20.CallOnDeleteTrigger();
      END;
      Mgt.Log('CallOnDeleteTrigger',STRSUBSTNO('END CallTableOnDeleteTrigger:%1',CallTableOnDeleteTrigger));
    END;

    PROCEDURE OnInsertRecord@1000000007(WebPageElement@5326062 : Record 5327101;VAR RecRef@1000000002 : RecordRef) DoInsert : Boolean;
    BEGIN
      LogEventWebPageElement('OnInsertRecord','BEGIN',WebPageElement);

      // Input Parameters
      gWebPageElement := WebPageElement;
      gRecRef := RecRef;
      SetModuleNoFromWebPageElement();
      CLEARVALUES();
      tWebPageElement := WebPageElement;
      tRecRef := RecRef;
      SETVALUES();

      //Module mapping
      CASE gModuleNo OF
        0: DoInsert := Events.OnInsertRecord();
        1: DoInsert := Module1.OnInsertRecord();
        2: DoInsert := Module2.OnInsertRecord();
        3: DoInsert := Module3.OnInsertRecord();
        4: DoInsert := Module4.OnInsertRecord();
        5: DoInsert := Module5.OnInsertRecord();
        6: DoInsert := Module6.OnInsertRecord();
        7: DoInsert := Module7.OnInsertRecord();
        8: DoInsert := Module8.OnInsertRecord();
        9: DoInsert := Module9.OnInsertRecord();
        10: DoInsert := Module10.OnInsertRecord();
        11: DoInsert := Module11.OnInsertRecord();
        12: DoInsert := Module12.OnInsertRecord();
        13: DoInsert := Module13.OnInsertRecord();
        14: DoInsert := Module14.OnInsertRecord();
        15: DoInsert := Module15.OnInsertRecord();
        16: DoInsert := Module16.OnInsertRecord();
        17: DoInsert := Module17.OnInsertRecord();
        18: DoInsert := Module18.OnInsertRecord();
        19: DoInsert := Module19.OnInsertRecord();
        20: DoInsert := Module20.OnInsertRecord();
      END;

      // Output Values
      GETVALUES();
      RecRef := gRecRef;

      Mgt.Log('OnInsertRecord', STRSUBSTNO('END DoInsert:%1', DoInsert));
    END;

    PROCEDURE OnModifyRecord@1000000008(WebPageElement@5326062 : Record 5327101;VAR xRecRef@1000000003 : RecordRef;VAR RecRef@1000000002 : RecordRef) DoModify : Boolean;
    BEGIN
      LogEventWebPageElement('OnModifyRecord','BEGIN',WebPageElement);

      // Input Parameters
      gWebPageElement := WebPageElement;
      gRecRef := RecRef;
      gxRecRef := xRecRef;
      SetModuleNoFromWebPageElement();
      CLEARVALUES();
      tWebPageElement := WebPageElement;
      tRecRef := RecRef;
      txRecRef := xRecRef;
      SETVALUES();

      //Module mapping
      CASE gModuleNo OF
        0: DoModify := Events.OnModifyRecord();
        1: DoModify := Module1.OnModifyRecord();
        2: DoModify := Module2.OnModifyRecord();
        3: DoModify := Module3.OnModifyRecord();
        4: DoModify := Module4.OnModifyRecord();
        5: DoModify := Module5.OnModifyRecord();
        6: DoModify := Module6.OnModifyRecord();
        7: DoModify := Module7.OnModifyRecord();
        8: DoModify := Module8.OnModifyRecord();
        9: DoModify := Module9.OnModifyRecord();
        10: DoModify := Module10.OnModifyRecord();
        11: DoModify := Module11.OnModifyRecord();
        12: DoModify := Module12.OnModifyRecord();
        13: DoModify := Module13.OnModifyRecord();
        14: DoModify := Module14.OnModifyRecord();
        15: DoModify := Module15.OnModifyRecord();
        16: DoModify := Module16.OnModifyRecord();
        17: DoModify := Module17.OnModifyRecord();
        18: DoModify := Module18.OnModifyRecord();
        19: DoModify := Module19.OnModifyRecord();
        20: DoModify := Module20.OnModifyRecord();
      END;


      // Output Values
      GETVALUES();
      RecRef := gRecRef;

      Mgt.Log('OnModifyRecord', STRSUBSTNO('END DoModify:%1', DoModify));
    END;

    PROCEDURE OnRenameRecord@1000000031(WebPageElement@1000000000 : Record 5327101;VAR xRecRef@1000000008 : RecordRef;VAR RecRef@1000000001 : RecordRef;VAR xFldRef@1000000002 : FieldRef;VAR FldRef@1000000004 : FieldRef) DoRename : Boolean;
    BEGIN
      LogEventWebPageElement('OnRenameRecord','BEGIN',WebPageElement);

      // Input Parameters
      gWebPageElement := WebPageElement;
      gRecRef := RecRef;
      gFldRef := FldRef;
      gxRecRef := xRecRef;
      gxFldRef := xFldRef;
      SetModuleNoFromWebPageElement();
      CLEARVALUES();
      tWebPageElement := WebPageElement;
      tRecRef := RecRef;
      tFldRef := FldRef;
      txRecRef := xRecRef;
      txFldRef := xFldRef;
      SETVALUES();

      //Module mapping
      CASE gModuleNo OF
        0: DoRename := Events.OnRenameRecord();
        1: DoRename := Module1.OnRenameRecord();
        2: DoRename := Module2.OnRenameRecord();
        3: DoRename := Module3.OnRenameRecord();
        4: DoRename := Module4.OnRenameRecord();
        5: DoRename := Module5.OnRenameRecord();
        6: DoRename := Module6.OnRenameRecord();
        7: DoRename := Module7.OnRenameRecord();
        8: DoRename := Module8.OnRenameRecord();
        9: DoRename := Module9.OnRenameRecord();
        10: DoRename := Module10.OnRenameRecord();
        11: DoRename := Module11.OnRenameRecord();
        12: DoRename := Module12.OnRenameRecord();
        13: DoRename := Module13.OnRenameRecord();
        14: DoRename := Module14.OnRenameRecord();
        15: DoRename := Module15.OnRenameRecord();
        16: DoRename := Module16.OnRenameRecord();
        17: DoRename := Module17.OnRenameRecord();
        18: DoRename := Module18.OnRenameRecord();
        19: DoRename := Module19.OnRenameRecord();
        20: DoRename := Module20.OnRenameRecord();
      END;
      Mgt.Log('OnRenameRecord', STRSUBSTNO('END DoRename:%1', DoRename));

      // Output Values
      GETVALUES();
      RecRef := gRecRef;
      FldRef := gFldRef;
    END;

    PROCEDURE OnDeleteRecord@1000000000(WebPageElement@1000000001 : Record 5327101;VAR RecRef@1000000000 : RecordRef) DeleteRecord : Boolean;
    BEGIN
      LogEventWebPageElement('OnDeleteRecord','BEGIN',WebPageElement);

      // Input Parameters
      gWebPageElement := WebPageElement;
      gRecRef := RecRef;
      SetModuleNoFromWebPageElement();
      CLEARVALUES();
      tWebPageElement := WebPageElement;
      tRecRef := RecRef;
      SETVALUES();

      //Module mapping
      CASE gModuleNo OF
        0: DeleteRecord :=Events.OnDeleteRecord();
        1: DeleteRecord :=Module1.OnDeleteRecord();
        2: DeleteRecord :=Module2.OnDeleteRecord();
        3: DeleteRecord :=Module3.OnDeleteRecord();
        4: DeleteRecord :=Module4.OnDeleteRecord();
        5: DeleteRecord :=Module5.OnDeleteRecord();
        6: DeleteRecord :=Module6.OnDeleteRecord();
        7: DeleteRecord :=Module7.OnDeleteRecord();
        8: DeleteRecord :=Module8.OnDeleteRecord();
        9: DeleteRecord :=Module9.OnDeleteRecord();
        10: DeleteRecord :=Module10.OnDeleteRecord();
        11: DeleteRecord :=Module11.OnDeleteRecord();
        12: DeleteRecord :=Module12.OnDeleteRecord();
        13: DeleteRecord :=Module13.OnDeleteRecord();
        14: DeleteRecord :=Module14.OnDeleteRecord();
        15: DeleteRecord :=Module15.OnDeleteRecord();
        16: DeleteRecord :=Module16.OnDeleteRecord();
        17: DeleteRecord :=Module17.OnDeleteRecord();
        18: DeleteRecord :=Module18.OnDeleteRecord();
        19: DeleteRecord :=Module19.OnDeleteRecord();
        20: DeleteRecord :=Module20.OnDeleteRecord();
      END;

      // Output Values
      GETVALUES();
      RecRef := gRecRef;

      Mgt.Log('OnDeleteRecord',STRSUBSTNO('END DeleteRecord:%1',DeleteRecord));
    END;

    PROCEDURE OnAfterInsertRecord@1000000009(WebPageElement@5326062 : Record 5327101;VAR RecRef@1000000000 : RecordRef);
    BEGIN
      LogEventWebPageElement('OnAfterInsertRecord','BEGIN',WebPageElement);

      // Input Parameters
      gWebPageElement := WebPageElement;
      gRecRef := RecRef;
      SetModuleNoFromWebPageElement();
      CLEARVALUES();
      tWebPageElement := WebPageElement;
      tRecRef := RecRef;
      SETVALUES();

      //Module mapping
      CASE gModuleNo OF
        0: Events.OnAfterInsertRecord();
        1: Module1.OnAfterInsertRecord();
        2: Module2.OnAfterInsertRecord();
        3: Module3.OnAfterInsertRecord();
        4: Module4.OnAfterInsertRecord();
        5: Module5.OnAfterInsertRecord();
        6: Module6.OnAfterInsertRecord();
        7: Module7.OnAfterInsertRecord();
        8: Module8.OnAfterInsertRecord();
        9: Module9.OnAfterInsertRecord();
        10: Module10.OnAfterInsertRecord();
        11: Module11.OnAfterInsertRecord();
        12: Module12.OnAfterInsertRecord();
        13: Module13.OnAfterInsertRecord();
        14: Module14.OnAfterInsertRecord();
        15: Module15.OnAfterInsertRecord();
        16: Module16.OnAfterInsertRecord();
        17: Module17.OnAfterInsertRecord();
        18: Module18.OnAfterInsertRecord();
        19: Module19.OnAfterInsertRecord();
        20: Module20.OnAfterInsertRecord();
      END;
      Mgt.Log('OnAfterInsertRecord','END');
    END;

    PROCEDURE OnAfterModifyRecord@1000000010(WebPageElement@5326062 : Record 5327101;VAR xRecRef@1000000000 : RecordRef;VAR RecRef@1000000001 : RecordRef);
    BEGIN
      LogEventWebPageElement('OnAfterModifyRecord','BEGIN',WebPageElement);

      // Input Parameters
      gWebPageElement := WebPageElement;
      gRecRef := RecRef;
      gxRecRef := xRecRef;
      SetModuleNoFromWebPageElement();
      CLEARVALUES();
      tWebPageElement := WebPageElement;
      tRecRef := RecRef;
      txRecRef := xRecRef;
      SETVALUES();

      //Module mapping
      CASE gModuleNo OF
        0: Events.OnAfterModifyRecord();
        1: Module1.OnAfterModifyRecord();
        2: Module2.OnAfterModifyRecord();
        3: Module3.OnAfterModifyRecord();
        4: Module4.OnAfterModifyRecord();
        5: Module5.OnAfterModifyRecord();
        6: Module6.OnAfterModifyRecord();
        7: Module7.OnAfterModifyRecord();
        8: Module8.OnAfterModifyRecord();
        9: Module9.OnAfterModifyRecord();
        10: Module10.OnAfterModifyRecord();
        11: Module11.OnAfterModifyRecord();
        12: Module12.OnAfterModifyRecord();
        13: Module13.OnAfterModifyRecord();
        14: Module14.OnAfterModifyRecord();
        15: Module15.OnAfterModifyRecord();
        16: Module16.OnAfterModifyRecord();
        17: Module17.OnAfterModifyRecord();
        18: Module18.OnAfterModifyRecord();
        19: Module19.OnAfterModifyRecord();
        20: Module20.OnAfterModifyRecord();
      END;
      Mgt.Log('OnAfterModifyRecord','END');
    END;

    PROCEDURE OnAfterRenameRecord@1000000011(WebPageElement@5326062 : Record 5327101;VAR xRecRef@1000000000 : RecordRef;VAR RecRef@1000000001 : RecordRef);
    BEGIN
      //Module mapping
      LogEventWebPageElement('OnAfterRenameRecord','BEGIN',WebPageElement);

      // Input Parameters
      gWebPageElement := WebPageElement;
      gRecRef := RecRef;
      gxRecRef := xRecRef;
      SetModuleNoFromWebPageElement();
      CLEARVALUES();
      tWebPageElement := WebPageElement;
      tRecRef := RecRef;
      txRecRef := xRecRef;
      SETVALUES();

      CASE gModuleNo OF
        0: Events.OnAfterRenameRecord();
        1: Module1.OnAfterRenameRecord();
        2: Module2.OnAfterRenameRecord();
        3: Module3.OnAfterRenameRecord();
        4: Module4.OnAfterRenameRecord();
        5: Module5.OnAfterRenameRecord();
        6: Module6.OnAfterRenameRecord();
        7: Module7.OnAfterRenameRecord();
        8: Module8.OnAfterRenameRecord();
        9: Module9.OnAfterRenameRecord();
        10: Module10.OnAfterRenameRecord();
        11: Module11.OnAfterRenameRecord();
        12: Module12.OnAfterRenameRecord();
        13: Module13.OnAfterRenameRecord();
        14: Module14.OnAfterRenameRecord();
        15: Module15.OnAfterRenameRecord();
        16: Module16.OnAfterRenameRecord();
        17: Module17.OnAfterRenameRecord();
        18: Module18.OnAfterRenameRecord();
        19: Module19.OnAfterRenameRecord();
        20: Module20.OnAfterRenameRecord();
      END;
      Mgt.Log('OnAfterRenameRecord','END');
    END;

    PROCEDURE OnAfterDeleteRecord@1000000012(WebPageElement@5326062 : Record 5327101;VAR RecRef@1000000000 : RecordRef);
    BEGIN
      LogEventWebPageElement('OnAfterDeleteRecord','BEGIN',WebPageElement);

      // Input Parameters
      gWebPageElement := WebPageElement;
      gRecRef := RecRef;
      SetModuleNoFromWebPageElement();
      CLEARVALUES();
      tWebPageElement := WebPageElement;
      tRecRef := RecRef;
      SETVALUES();


      //Module mapping
      CASE gModuleNo OF
        0: Events.OnAfterDeleteRecord();
        1: Module1.OnAfterDeleteRecord();
        2: Module2.OnAfterDeleteRecord();
        3: Module3.OnAfterDeleteRecord();
        4: Module4.OnAfterDeleteRecord();
        5: Module5.OnAfterDeleteRecord();
        6: Module6.OnAfterDeleteRecord();
        7: Module7.OnAfterDeleteRecord();
        8: Module8.OnAfterDeleteRecord();
        9: Module9.OnAfterDeleteRecord();
        10: Module10.OnAfterDeleteRecord();
        11: Module11.OnAfterDeleteRecord();
        12: Module12.OnAfterDeleteRecord();
        13: Module13.OnAfterDeleteRecord();
        14: Module14.OnAfterDeleteRecord();
        15: Module15.OnAfterDeleteRecord();
        16: Module16.OnAfterDeleteRecord();
        17: Module17.OnAfterDeleteRecord();
        18: Module18.OnAfterDeleteRecord();
        19: Module19.OnAfterDeleteRecord();
        20: Module20.OnAfterDeleteRecord();
      END;
      Mgt.Log('OnAfterDeleteRecord','END');
    END;

    PROCEDURE OnBeforeCloseWebPage@1000000004(VAR RecRef@1000000005 : RecordRef;VAR WebPageElement@1000000003 : Record 5327101;VAR CloseWindow@1000000000 : Boolean;ClosedByNAV@1000000001 : Boolean) : Boolean;
    BEGIN
      LogEventWebPageElement('OnBeforeCloseWebPage','BEGIN',WebPageElement);

      // Input Parameters
      gWebPageElement := WebPageElement;
      gRecRef := RecRef;
      gClosedByNAV := ClosedByNAV;
      SetModuleNoFromWebPageElement();
      CLEARVALUES();
      tWebPageElement := WebPageElement;
      tRecRef := RecRef;
      tClosedByNAV := ClosedByNAV;
      SETVALUES();

      //Module mapping
      CASE gModuleNo OF
        0: CloseWindow := Events.OnBeforeCloseWebPage();
        1: CloseWindow := Module1.OnBeforeCloseWebPage();
        2: CloseWindow := Module2.OnBeforeCloseWebPage();
        3: CloseWindow := Module3.OnBeforeCloseWebPage();
        4: CloseWindow := Module4.OnBeforeCloseWebPage();
        5: CloseWindow := Module5.OnBeforeCloseWebPage();
        6: CloseWindow := Module6.OnBeforeCloseWebPage();
        7: CloseWindow := Module7.OnBeforeCloseWebPage();
        8: CloseWindow := Module8.OnBeforeCloseWebPage();
        9: CloseWindow := Module9.OnBeforeCloseWebPage();
        10: CloseWindow := Module10.OnBeforeCloseWebPage();
        11: CloseWindow := Module11.OnBeforeCloseWebPage();
        12: CloseWindow := Module12.OnBeforeCloseWebPage();
        13: CloseWindow := Module13.OnBeforeCloseWebPage();
        14: CloseWindow := Module14.OnBeforeCloseWebPage();
        15: CloseWindow := Module15.OnBeforeCloseWebPage();
        16: CloseWindow := Module16.OnBeforeCloseWebPage();
        17: CloseWindow := Module17.OnBeforeCloseWebPage();
        18: CloseWindow := Module18.OnBeforeCloseWebPage();
        19: CloseWindow := Module19.OnBeforeCloseWebPage();
        20: CloseWindow := Module20.OnBeforeCloseWebPage();
      END;
      Mgt.Log('OnBeforeCloseWebPage',STRSUBSTNO('END CloseWindow:%1 ClosedByNAV:%2',CloseWindow,ClosedByNAV));
    END;

    PROCEDURE IsWriteBack@1000000035(WebPageElement@1000000009 : Record 5327101;VAR xRecRef@1000000008 : RecordRef;xFldNo@1000000001 : Integer;VAR RecRef@1000000002 : RecordRef) WriteRecord : Boolean;
    VAR
      xFldRef@1000000010 : FieldRef;
    BEGIN
      LogEventWebPageElement('IsWriteBack','BEGIN',WebPageElement);

      // Input Parameters
      gWebPageElement := WebPageElement;
      gRecRef := RecRef;
      gxRecRef := xRecRef;
      gxFldNo := xFldNo;
      SetModuleNoFromWebPageElement();
      CLEARVALUES();
      tWebPageElement := WebPageElement;
      tRecRef := RecRef;
      txRecRef := xRecRef;
      txFldNo := xFldNo;
      SETVALUES();

      //Module mapping
      CASE gModuleNo OF
        0: WriteRecord := Events.IsWriteBack();
        1: WriteRecord := Module1.IsWriteBack();
        2: WriteRecord := Module2.IsWriteBack();
        3: WriteRecord := Module3.IsWriteBack();
        4: WriteRecord := Module4.IsWriteBack();
        5: WriteRecord := Module5.IsWriteBack();
        6: WriteRecord := Module6.IsWriteBack();
        7: WriteRecord := Module7.IsWriteBack();
        8: WriteRecord := Module8.IsWriteBack();
        9: WriteRecord := Module9.IsWriteBack();
        10: WriteRecord := Module10.IsWriteBack();
        11: WriteRecord := Module11.IsWriteBack();
        12: WriteRecord := Module12.IsWriteBack();
        13: WriteRecord := Module13.IsWriteBack();
        14: WriteRecord := Module14.IsWriteBack();
        15: WriteRecord := Module15.IsWriteBack();
        16: WriteRecord := Module16.IsWriteBack();
        17: WriteRecord := Module17.IsWriteBack();
        18: WriteRecord := Module18.IsWriteBack();
        19: WriteRecord := Module19.IsWriteBack();
        20: WriteRecord := Module20.IsWriteBack();
      END;

      //Reset Values
      CLEAR(xFldNo);

      // Output Values
      GETVALUES();
      RecRef := gRecRef;
      xRecRef := gxRecRef;

      Mgt.Log('IsWriteBack',STRSUBSTNO('END WriteRecord:%1',WriteRecord));
    END;

    PROCEDURE DropDownFieldDefinition@1000000002(TableNumber@1000000000 : Integer;VAR "Field#1"@1000000001 : Integer;VAR "Field#2"@1000000002 : Integer;WebPageElementField@1000000003 : Record 5327103);
    BEGIN
      // Input Parameters
      gWebPageElement.GET(WebPageElementField."Web Page Code", WebPageElementField."Web Page Element Line No.");
      gWebPageElementField := WebPageElementField;
      gTableNumber := TableNumber;
      SetModuleNoFromWebPageElement();
      CLEARVALUES();
      tWebPageElement.GET(WebPageElementField."Web Page Code", WebPageElementField."Web Page Element Line No.");
      tWebPageElementField := WebPageElementField;
      tTableNumber := TableNumber;
      SETVALUES();

      LogEventWebPageElement('DropDownFieldDefinition',STRSUBSTNO('BEGIN TableNo:%1', TableNumber),gWebPageElement);

      //Module mapping
      CASE GetModuleNo(WebPageElementField."Web Page Code") OF
        0: Events.DropDownFieldDefinition();
        1: Module1.DropDownFieldDefinition();
        2: Module2.DropDownFieldDefinition();
        3: Module3.DropDownFieldDefinition();
        4: Module4.DropDownFieldDefinition();
        5: Module5.DropDownFieldDefinition();
        6: Module6.DropDownFieldDefinition();
        7: Module7.DropDownFieldDefinition();
        8: Module8.DropDownFieldDefinition();
        9: Module9.DropDownFieldDefinition();
        10: Module10.DropDownFieldDefinition();
        11: Module11.DropDownFieldDefinition();
        12: Module12.DropDownFieldDefinition();
        13: Module13.DropDownFieldDefinition();
        14: Module14.DropDownFieldDefinition();
        15: Module15.DropDownFieldDefinition();
        16: Module16.DropDownFieldDefinition();
        17: Module17.DropDownFieldDefinition();
        18: Module18.DropDownFieldDefinition();
        19: Module19.DropDownFieldDefinition();
        20: Module20.DropDownFieldDefinition();
      END;

      // Output Values
      GETVALUES();
      "Field#1" := "gField#1";
      "Field#2" := "gField#2";

      Mgt.Log('DropDownFieldDefinition',STRSUBSTNO('END Field#1:%1 Field#2:%2',"Field#1","Field#2"));
    END;

    PROCEDURE CustomWebPageRelation@1000000027(VAR RecRef@1000000007 : RecordRef;VAR DestRecRef@1000000010 : RecordRef;SrcCustomTableRelationRecRef@1000000001 : RecordRef;"CustomTableRelFrom4.Tier"@1000000003 : Code[20];WebPageElement@1000000005 : Record 5327101;DestWebPageElement@5326062 : Record 5327101;VAR WindowRecRef@5326064 : RecordRef);
    VAR
      WebPageElementField@5326065 : Record 5327103;
      CustomTableRelationFldRef@5326067 : FieldRef;
      FldRef@5326066 : FieldRef;
      RelationCode@5326063 : Code[20];
    BEGIN
      gModuleNo := GetModuleNo(DestWebPageElement."Web Page Code");
      Mgt.Log('CustomWebPageRelation', STRSUBSTNO('BEGIN WebPageElement:%1 %2 DestWebPageElement:%3 %4 Module %5:%6',
        WebPageElement."Web Page Code", WebPageElement."Line No.",
        DestWebPageElement."Web Page Code", DestWebPageElement."Line No.",
        gModuleNo, GetModuleName(gModuleNo)));

      CASE SrcCustomTableRelationRecRef.NUMBER OF
        DATABASE::"ACF Web Page Element Field": BEGIN
          SrcCustomTableRelationRecRef.SETTABLE(WebPageElementField);
          IF WebPageElementField.Type = WebPageElementField.Type::Button THEN
            FldRef := SrcCustomTableRelationRecRef.FIELD(203)
          ELSE
            FldRef := SrcCustomTableRelationRecRef.FIELD(110);
        END;
        DATABASE::"ACF Menu": FldRef := SrcCustomTableRelationRecRef.FIELD(21);
        ELSE
          FldRef := SrcCustomTableRelationRecRef.FIELD(110);
      END;

      IF "CustomTableRelFrom4.Tier" <> '' THEN BEGIN
        CustomTableRelationFldRef := SrcCustomTableRelationRecRef.FIELD(FldRef.NUMBER);
        CustomTableRelationFldRef.VALUE := "CustomTableRelFrom4.Tier";
        RelationCode := "CustomTableRelFrom4.Tier";
      END
      ELSE
        RelationCode := UPPERCASE(FORMAT(FldRef.VALUE));

      // Input Parameters
      gWebPageElement := WebPageElement;
      gRecRef := RecRef;
      gWindowRecRef := WindowRecRef;
      gDestWebPageElement := DestWebPageElement;
      gDestRecRef := DestRecRef;
      gCustomTableRelationRecRef := SrcCustomTableRelationRecRef;
      gRelationCode := RelationCode;
      CLEARVALUES();
      tWebPageElement := WebPageElement;
      tRecRef := RecRef;
      tWindowRecRef := WindowRecRef;
      tDestWebPageElement := DestWebPageElement;
      tDestRecRef := DestRecRef;
      tCustomTableRelationRecRef := SrcCustomTableRelationRecRef;
      tRelationCode := RelationCode;
      SETVALUES();

      //Module mapping
      CASE gModuleNo OF
        0: Events.CustomWebPageRelation();
        1: Module1.CustomWebPageRelation();
        2: Module2.CustomWebPageRelation();
        3: Module3.CustomWebPageRelation();
        4: Module4.CustomWebPageRelation();
        5: Module5.CustomWebPageRelation();
        6: Module6.CustomWebPageRelation();
        7: Module7.CustomWebPageRelation();
        8: Module8.CustomWebPageRelation();
        9: Module9.CustomWebPageRelation();
        10: Module10.CustomWebPageRelation();
        11: Module11.CustomWebPageRelation();
        12: Module12.CustomWebPageRelation();
        13: Module13.CustomWebPageRelation();
        14: Module14.CustomWebPageRelation();
        15: Module15.CustomWebPageRelation();
        16: Module16.CustomWebPageRelation();
        17: Module17.CustomWebPageRelation();
        18: Module18.CustomWebPageRelation();
        19: Module19.CustomWebPageRelation();
        20: Module20.CustomWebPageRelation();
      END;

      // Output Values
      GETVALUES();
      RecRef := gRecRef;
      DestRecRef := gDestRecRef;

      Mgt.Log('CustomWebPageRelation','END');
    END;

    PROCEDURE CustomWebPageRelationWrapper@5326078();
    BEGIN
      CustomWebPageRelation(gRecRef, gDestRecRef, gCustomTableRelationRecRef, gRelationCode, gWebPageElement,
        gDestWebPageElement, gWindowRecRef);
    END;

    LOCAL PROCEDURE "-- External Set/Get Functions"@5326080();
    BEGIN
    END;

    PROCEDURE SetWebPageElement@5326065(WebPageElement@5326062 : Record 5327101);
    BEGIN
      gWebPageElement := WebPageElement;
    END;

    PROCEDURE SetDestWebPageElement@5326066(DestWebPageElement@5326062 : Record 5327101);
    BEGIN
      gDestWebPageElement := DestWebPageElement;
    END;

    PROCEDURE SetDestRecRef@5326067(DestRecRef@5326062 : RecordRef);
    BEGIN
      gDestRecRef := DestRecRef;
    END;

    PROCEDURE SetRecRef@5326068(RecRef@5326062 : RecordRef);
    BEGIN
      gRecRef := RecRef;
    END;

    PROCEDURE SetWindowRecRef@5326069(WindowRecRef@5326062 : RecordRef);
    BEGIN
      gWindowRecRef := WindowRecRef;
    END;

    PROCEDURE SetCustomTableRelationRecRef@5326070(CustomTableRelationRecRef@5326062 : RecordRef);
    BEGIN
      gCustomTableRelationRecRef := CustomTableRelationRecRef;
    END;

    PROCEDURE SetRelationCode@5326063(RelationCode@5326062 : Code[20]);
    BEGIN
      gRelationCode := RelationCode;
    END;

    PROCEDURE GetWebPageElement@5326076(VAR WebPageElement@5326062 : Record 5327101);
    BEGIN
      WebPageElement := gWebPageElement;
    END;

    PROCEDURE GetDestWebPageElement@5326075(VAR DestWebPageElement@5326062 : Record 5327101);
    BEGIN
      DestWebPageElement := gDestWebPageElement;
    END;

    PROCEDURE GetDestRecRef@5326074(VAR DestRecRef@5326062 : RecordRef);
    BEGIN
      DestRecRef := gDestRecRef;
    END;

    PROCEDURE GetRecRef@5326073(VAR RecRef@5326062 : RecordRef);
    BEGIN
      RecRef := gRecRef;
    END;

    PROCEDURE GetWindowRecRef@5326072(VAR WindowRecRef@5326062 : RecordRef);
    BEGIN
      WindowRecRef := gWindowRecRef;
    END;

    PROCEDURE GetCustomTableRelationRecRef@5326071(VAR CustomTableRelationRef@5326062 : RecordRef);
    BEGIN
      CustomTableRelationRef := gCustomTableRelationRecRef;
    END;

    PROCEDURE GetRelationCode@5326077() RelationCode : Code[20];
    BEGIN
      RelationCode := gRelationCode;
    END;

    LOCAL PROCEDURE "-- Set/Get-Functions Events"@5326079();
    BEGIN
    END;

    LOCAL PROCEDURE SETVALUES@5326081();
    BEGIN
      // This function is created automatically. Do not edit manually.

      CASE gModuleNo OF
       0: BEGIN
        Events.SETVALUES1(tWebPageElement,tWebPageElementField,tRecRef,tFldRef,tFldNo, txRecRef,txFldRef,txFldNo,tWindowRecRef,
         tDestWebPageElement,tDestRecRef,tCustomTableRelationRecRef,tFunctionCode,tRelationCode,tFieldName,tTableNumber);
        Events.SETVALUES2(tClosedByNAV, tInitStyle);
       END;
       1: BEGIN
        Module1.SETVALUES1(tWebPageElement,tWebPageElementField,tRecRef,tFldRef,tFldNo, txRecRef,txFldRef,txFldNo,tWindowRecRef,
         tDestWebPageElement,tDestRecRef,tCustomTableRelationRecRef,tFunctionCode,tRelationCode,tFieldName,tTableNumber);
        Module1.SETVALUES2(tClosedByNAV, tInitStyle);
       END;
       2: BEGIN
        Module2.SETVALUES1(tWebPageElement,tWebPageElementField,tRecRef,tFldRef,tFldNo, txRecRef,txFldRef,txFldNo,tWindowRecRef,
         tDestWebPageElement,tDestRecRef,tCustomTableRelationRecRef,tFunctionCode,tRelationCode,tFieldName,tTableNumber);
        Module2.SETVALUES2(tClosedByNAV, tInitStyle);
       END;
       3: BEGIN
        Module3.SETVALUES1(tWebPageElement,tWebPageElementField,tRecRef,tFldRef,tFldNo, txRecRef,txFldRef,txFldNo,tWindowRecRef,
         tDestWebPageElement,tDestRecRef,tCustomTableRelationRecRef,tFunctionCode,tRelationCode,tFieldName,tTableNumber);
        Module3.SETVALUES2(tClosedByNAV, tInitStyle);
       END;
       4: BEGIN
        Module4.SETVALUES1(tWebPageElement,tWebPageElementField,tRecRef,tFldRef,tFldNo, txRecRef,txFldRef,txFldNo,tWindowRecRef,
         tDestWebPageElement,tDestRecRef,tCustomTableRelationRecRef,tFunctionCode,tRelationCode,tFieldName,tTableNumber);
        Module4.SETVALUES2(tClosedByNAV, tInitStyle);
       END;
       5: BEGIN
        Module5.SETVALUES1(tWebPageElement,tWebPageElementField,tRecRef,tFldRef,tFldNo, txRecRef,txFldRef,txFldNo,tWindowRecRef,
         tDestWebPageElement,tDestRecRef,tCustomTableRelationRecRef,tFunctionCode,tRelationCode,tFieldName,tTableNumber);
        Module5.SETVALUES2(tClosedByNAV, tInitStyle);
       END;
       6: BEGIN
        Module6.SETVALUES1(tWebPageElement,tWebPageElementField,tRecRef,tFldRef,tFldNo, txRecRef,txFldRef,txFldNo,tWindowRecRef,
         tDestWebPageElement,tDestRecRef,tCustomTableRelationRecRef,tFunctionCode,tRelationCode,tFieldName,tTableNumber);
        Module6.SETVALUES2(tClosedByNAV, tInitStyle);
       END;
       7: BEGIN
        Module7.SETVALUES1(tWebPageElement,tWebPageElementField,tRecRef,tFldRef,tFldNo, txRecRef,txFldRef,txFldNo,tWindowRecRef,
         tDestWebPageElement,tDestRecRef,tCustomTableRelationRecRef,tFunctionCode,tRelationCode,tFieldName,tTableNumber);
        Module7.SETVALUES2(tClosedByNAV, tInitStyle);
       END;
       8: BEGIN
        Module8.SETVALUES1(tWebPageElement,tWebPageElementField,tRecRef,tFldRef,tFldNo, txRecRef,txFldRef,txFldNo,tWindowRecRef,
         tDestWebPageElement,tDestRecRef,tCustomTableRelationRecRef,tFunctionCode,tRelationCode,tFieldName,tTableNumber);
        Module8.SETVALUES2(tClosedByNAV, tInitStyle);
       END;
       9: BEGIN
        Module9.SETVALUES1(tWebPageElement,tWebPageElementField,tRecRef,tFldRef,tFldNo, txRecRef,txFldRef,txFldNo,tWindowRecRef,
         tDestWebPageElement,tDestRecRef,tCustomTableRelationRecRef,tFunctionCode,tRelationCode,tFieldName,tTableNumber);
        Module9.SETVALUES2(tClosedByNAV, tInitStyle);
       END;
       10: BEGIN
        Module10.SETVALUES1(tWebPageElement,tWebPageElementField,tRecRef,tFldRef,tFldNo, txRecRef,txFldRef,txFldNo,tWindowRecRef,
         tDestWebPageElement,tDestRecRef,tCustomTableRelationRecRef,tFunctionCode,tRelationCode,tFieldName,tTableNumber);
        Module10.SETVALUES2(tClosedByNAV, tInitStyle);
       END;
       11: BEGIN
        Module11.SETVALUES1(tWebPageElement,tWebPageElementField,tRecRef,tFldRef,tFldNo, txRecRef,txFldRef,txFldNo,tWindowRecRef,
         tDestWebPageElement,tDestRecRef,tCustomTableRelationRecRef,tFunctionCode,tRelationCode,tFieldName,tTableNumber);
        Module11.SETVALUES2(tClosedByNAV, tInitStyle);
       END;
       12: BEGIN
        Module12.SETVALUES1(tWebPageElement,tWebPageElementField,tRecRef,tFldRef,tFldNo, txRecRef,txFldRef,txFldNo,tWindowRecRef,
         tDestWebPageElement,tDestRecRef,tCustomTableRelationRecRef,tFunctionCode,tRelationCode,tFieldName,tTableNumber);
        Module12.SETVALUES2(tClosedByNAV, tInitStyle);
       END;
       13: BEGIN
        Module13.SETVALUES1(tWebPageElement,tWebPageElementField,tRecRef,tFldRef,tFldNo, txRecRef,txFldRef,txFldNo,tWindowRecRef,
         tDestWebPageElement,tDestRecRef,tCustomTableRelationRecRef,tFunctionCode,tRelationCode,tFieldName,tTableNumber);
        Module13.SETVALUES2(tClosedByNAV, tInitStyle);
       END;
       14: BEGIN
        Module14.SETVALUES1(tWebPageElement,tWebPageElementField,tRecRef,tFldRef,tFldNo, txRecRef,txFldRef,txFldNo,tWindowRecRef,
         tDestWebPageElement,tDestRecRef,tCustomTableRelationRecRef,tFunctionCode,tRelationCode,tFieldName,tTableNumber);
        Module14.SETVALUES2(tClosedByNAV, tInitStyle);
       END;
       15: BEGIN
        Module15.SETVALUES1(tWebPageElement,tWebPageElementField,tRecRef,tFldRef,tFldNo, txRecRef,txFldRef,txFldNo,tWindowRecRef,
         tDestWebPageElement,tDestRecRef,tCustomTableRelationRecRef,tFunctionCode,tRelationCode,tFieldName,tTableNumber);
        Module15.SETVALUES2(tClosedByNAV, tInitStyle);
       END;
       16: BEGIN
        Module16.SETVALUES1(tWebPageElement,tWebPageElementField,tRecRef,tFldRef,tFldNo, txRecRef,txFldRef,txFldNo,tWindowRecRef,
         tDestWebPageElement,tDestRecRef,tCustomTableRelationRecRef,tFunctionCode,tRelationCode,tFieldName,tTableNumber);
        Module16.SETVALUES2(tClosedByNAV, tInitStyle);
       END;
       17: BEGIN
        Module17.SETVALUES1(tWebPageElement,tWebPageElementField,tRecRef,tFldRef,tFldNo, txRecRef,txFldRef,txFldNo,tWindowRecRef,
         tDestWebPageElement,tDestRecRef,tCustomTableRelationRecRef,tFunctionCode,tRelationCode,tFieldName,tTableNumber);
        Module17.SETVALUES2(tClosedByNAV, tInitStyle);
       END;
       18: BEGIN
        Module18.SETVALUES1(tWebPageElement,tWebPageElementField,tRecRef,tFldRef,tFldNo, txRecRef,txFldRef,txFldNo,tWindowRecRef,
         tDestWebPageElement,tDestRecRef,tCustomTableRelationRecRef,tFunctionCode,tRelationCode,tFieldName,tTableNumber);
        Module18.SETVALUES2(tClosedByNAV, tInitStyle);
       END;
       19: BEGIN
        Module19.SETVALUES1(tWebPageElement,tWebPageElementField,tRecRef,tFldRef,tFldNo, txRecRef,txFldRef,txFldNo,tWindowRecRef,
         tDestWebPageElement,tDestRecRef,tCustomTableRelationRecRef,tFunctionCode,tRelationCode,tFieldName,tTableNumber);
        Module19.SETVALUES2(tClosedByNAV, tInitStyle);
       END;
       20: BEGIN
        Module20.SETVALUES1(tWebPageElement,tWebPageElementField,tRecRef,tFldRef,tFldNo, txRecRef,txFldRef,txFldNo,tWindowRecRef,
         tDestWebPageElement,tDestRecRef,tCustomTableRelationRecRef,tFunctionCode,tRelationCode,tFieldName,tTableNumber);
        Module20.SETVALUES2(tClosedByNAV, tInitStyle);
       END;
      END;
    END;

    LOCAL PROCEDURE GETVALUES@5326082();
    BEGIN
      // This function is created automatically. Do not edit manually.
      CASE gModuleNo OF
       0: Events.GETVALUES(gRecRef,gFldRef,gDestRecRef,"gField#1","gField#2", gCSS);
       1: Module1.GETVALUES(gRecRef,gFldRef,gDestRecRef,"gField#1","gField#2", gCSS);
       2: Module2.GETVALUES(gRecRef,gFldRef,gDestRecRef,"gField#1","gField#2", gCSS);
       3: Module3.GETVALUES(gRecRef,gFldRef,gDestRecRef,"gField#1","gField#2", gCSS);
       4: Module4.GETVALUES(gRecRef,gFldRef,gDestRecRef,"gField#1","gField#2", gCSS);
       5: Module5.GETVALUES(gRecRef,gFldRef,gDestRecRef,"gField#1","gField#2", gCSS);
       6: Module6.GETVALUES(gRecRef,gFldRef,gDestRecRef,"gField#1","gField#2", gCSS);
       7: Module7.GETVALUES(gRecRef,gFldRef,gDestRecRef,"gField#1","gField#2", gCSS);
       8: Module8.GETVALUES(gRecRef,gFldRef,gDestRecRef,"gField#1","gField#2", gCSS);
       9: Module9.GETVALUES(gRecRef,gFldRef,gDestRecRef,"gField#1","gField#2", gCSS);
       10: Module10.GETVALUES(gRecRef,gFldRef,gDestRecRef,"gField#1","gField#2", gCSS);
       11: Module11.GETVALUES(gRecRef,gFldRef,gDestRecRef,"gField#1","gField#2", gCSS);
       12: Module12.GETVALUES(gRecRef,gFldRef,gDestRecRef,"gField#1","gField#2", gCSS);
       13: Module13.GETVALUES(gRecRef,gFldRef,gDestRecRef,"gField#1","gField#2", gCSS);
       14: Module14.GETVALUES(gRecRef,gFldRef,gDestRecRef,"gField#1","gField#2", gCSS);
       15: Module15.GETVALUES(gRecRef,gFldRef,gDestRecRef,"gField#1","gField#2", gCSS);
       16: Module16.GETVALUES(gRecRef,gFldRef,gDestRecRef,"gField#1","gField#2", gCSS);
       17: Module17.GETVALUES(gRecRef,gFldRef,gDestRecRef,"gField#1","gField#2", gCSS);
       18: Module18.GETVALUES(gRecRef,gFldRef,gDestRecRef,"gField#1","gField#2", gCSS);
       19: Module19.GETVALUES(gRecRef,gFldRef,gDestRecRef,"gField#1","gField#2", gCSS);
       20: Module20.GETVALUES(gRecRef,gFldRef,gDestRecRef,"gField#1","gField#2", gCSS);
      END;
    END;

    PROCEDURE CLEARVALUES@5326085();
    BEGIN
      CLEAR(tWebPageElement);
      CLEAR(tWebPageElementField);
      CLEAR(tRecRef);
      CLEAR(tFldRef);
      CLEAR(txRecRef);
      CLEAR(txFldRef);
      CLEAR(tWindowRecRef);
      CLEAR(tDestWebPageElement);
      CLEAR(tDestRecRef);
      CLEAR(tCustomTableRelationRecRef);
      CLEAR(tFunctionCode);
      CLEAR(tRelationCode);
      CLEAR(tFieldName);
      CLEAR(tTableNumber);
      CLEAR(tClosedByNAV);
      CLEAR(tInitStyle);
      CLEAR(tFldNo);
      CLEAR(txFldNo);
    END;

    LOCAL PROCEDURE SetModuleNoFromWebPageElement@5326084();
    BEGIN
      gModuleNo := GetModuleNo(gWebPageElement."Web Page Code");
    END;

    BEGIN
    {
      ** Events module mapping codeunit

      Web Page specific C/AL code (events) can be grouped into modules.
      Online documentation for module concept: //www.navwebclient.com/anveo-help-modules/
    }
    END.
  }
}

