OBJECT Codeunit 50231 Home24 Test Functions
{
  OBJECT-PROPERTIES
  {
    Date=08.11.13;
    Time=14:56:23;
    Version List=HME0659;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      GLSetup@1000000001 : Record 98;
      Text001@1000000000 : TextConst 'ENU=Sample Item Created Automatically';
      MyNiceCount@1000000002 : Integer;

    PROCEDURE ProcessXMLRequest@1000000000(VAR RequestMessage@1000000000 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{88D96A05-F192-11D4-A65F-0040963251E5}:'Microsoft XML, v6.0'.DOMDocument60";VAR ResponseMessage@1000000001 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{88D96A05-F192-11D4-A65F-0040963251E5}:'Microsoft XML, v6.0'.DOMDocument60") WebOrderNo : Code[20];
    VAR
      Webshop@1000000008 : Record 5251553;
      ApplicationServer@1000000007 : Record 5251552;
      Item@1000000011 : Record 27;
      NavConMgt@1000000006 : Codeunit 50061;
      XmlUtil@1000000005 : Codeunit 5095995;
      RootNode@1000000003 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF86-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMElement";
      bodyNode@1000000010 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF86-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMElement";
      ShopCode@1000000004 : Code[10];
      SKU@1000000009 : Code[20];
      Success@1000000002 : Boolean;
    BEGIN
      ApplicationServer.GET('NAS1');
      NavConMgt.SetAppCode('NAS1');
      CLEAR(ResponseMessage);
      CREATE(ResponseMessage);
      NavConMgt.logRequestXml(RequestMessage);
      NavConMgt.validateRequestXml(RequestMessage);
      RootNode := RequestMessage.documentElement;
      ShopCode := XmlUtil.GetElementAttributeText(RootNode, 'Header', 'AppDom');

      IF XmlUtil.GetNode(RootNode, 'Body/CreateDocumentRequest/Document', bodyNode) THEN
        WebOrderNo := XmlUtil.GetElementText(bodyNode, 'ExternalDocumentNo');

      {
      IF XmlUtil.GetNode(RootNode, 'Body/CreateDocumentRequest/Document/Lines/Line', bodyNode) THEN
        IF NOT Item.GET(XmlUtil.GetElementText(bodyNode, 'SKU')) THEN
          CreateItem(XmlUtil.GetElementText(bodyNode, 'SKU'));

      NavConMgt.logResponseXml(ResponseMessage, NavConMgt.DispatchRequestXml(RequestMessage, ResponseMessage));
      }

      NavConMgt.logResponseXml(ResponseMessage, NavConMgt.DispatchRequestXml(RequestMessage, ResponseMessage));
    END;

    PROCEDURE ProcessXMLRequestPmt@1000000003(VAR RequestMessage@1000000000 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{88D96A05-F192-11D4-A65F-0040963251E5}:'Microsoft XML, v6.0'.DOMDocument60";VAR ResponseMessage@1000000001 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{88D96A05-F192-11D4-A65F-0040963251E5}:'Microsoft XML, v6.0'.DOMDocument60") WebOrderNo : Code[20];
    VAR
      Webshop@1000000008 : Record 5251553;
      ApplicationServer@1000000007 : Record 5251552;
      NavConMgt@1000000006 : Codeunit 50061;
      XmlUtil@1000000005 : Codeunit 5095995;
      RootNode@1000000003 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF86-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMElement";
      bodyNode@1000000010 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF86-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMElement";
      ShopCode@1000000004 : Code[10];
      Success@1000000002 : Boolean;
    BEGIN
      ApplicationServer.GET('NAS1');
      NavConMgt.SetAppCode('NAS1');
      CLEAR(ResponseMessage);
      CREATE(ResponseMessage);
      NavConMgt.logRequestXml(RequestMessage);
      NavConMgt.validateRequestXml(RequestMessage);
      RootNode := RequestMessage.documentElement;
      ShopCode := XmlUtil.GetElementAttributeText(RootNode, 'Header', 'AppDom');
      IF XmlUtil.GetNode(RootNode, 'Body/PaymentUpdateRequest/Payment', bodyNode) THEN
        WebOrderNo := XmlUtil.GetElementText(bodyNode, 'OrderNo');

      NavConMgt.logResponseXml(ResponseMessage, NavConMgt.DispatchRequestXml(RequestMessage, ResponseMessage));
    END;

    PROCEDURE InitOrderDimValue@1000000001(SalesHeaderV@1000000000 : Record 36);
    VAR
      Text001@1000000001 : TextConst 'ENU=1. Dimension creation error in Sales Order %1.';
      SalesHeaderL@1000000007 : Record 36;
      SalesHeaderArchiveL@1000000006 : Record 5107;
      DimensionValueL@1000000005 : Record 349;
      DocumentDimensionL@1000000004 : Record 357;
      eBayNavCSalesHeaderL@1000000003 : Record 5251571;
      OrderNoL@1000000002 : Code[20];
      Text002@1000000008 : TextConst 'ENU=2. Dimension creation error in Sales Order %1.';
    BEGIN
      GLSetup.GET;
      GLSetup.TESTFIELD("Shortcut Dimension 3 Code");

      CASE COPYSTR(SalesHeaderV."No.", 1, 2) OF
        'SO':
          BEGIN
            IF COPYSTR(SalesHeaderV."External Document No.",1,2) = 'SR' THEN BEGIN
              IF SalesHeaderL.GET(SalesHeaderL."Document Type"::"Return Order",SalesHeaderV."External Document No.") THEN
                OrderNoL := SalesHeaderL."External Document No."
              ELSE BEGIN
                SalesHeaderArchiveL.SETRANGE("Document Type",SalesHeaderArchiveL."Document Type"::"Return Order");
                SalesHeaderArchiveL.SETRANGE("No.",SalesHeaderV."External Document No.");
                IF SalesHeaderArchiveL.FINDFIRST THEN
                  OrderNoL := SalesHeaderArchiveL."External Document No.";
              END;
            END ELSE
              OrderNoL := SalesHeaderV."External Document No.";
          END;
        'SR':OrderNoL := SalesHeaderV."External Document No.";
      ELSE
        OrderNoL := SalesHeaderV."No.";
      END;

      IF OrderNoL = '' THEN
        ERROR(Text001, SalesHeaderV."No.");

      IF (COPYSTR(OrderNoL, 1, 2) <> 'SO') AND (COPYSTR(OrderNoL, 1, 2) <> 'SR') THEN BEGIN
        eBayNavCSalesHeaderL.SETCURRENTKEY("No.");
        eBayNavCSalesHeaderL.SETRANGE("No.", OrderNoL);
        IF eBayNavCSalesHeaderL.ISEMPTY THEN
          ERROR(Text002, SalesHeaderV."No.");
      END;

      DimensionValueL.INIT;
      DimensionValueL.VALIDATE("Dimension Code", GLSetup."Shortcut Dimension 3 Code");
      DimensionValueL.Code := OrderNoL;
      DimensionValueL.Name := STRSUBSTNO('Order %1', OrderNoL);
      DimensionValueL."Shortcut Dimension No." := 3;
      DimensionValueL.INSERT;

      DocumentDimensionL.INIT;
      DocumentDimensionL.VALIDATE("Table ID", DATABASE::"Sales Header");
      DocumentDimensionL.VALIDATE("Document Type", SalesHeaderV."Document Type");
      DocumentDimensionL.VALIDATE("Document No.", SalesHeaderV."No.");
      DocumentDimensionL.VALIDATE("Line No.", 0);
      DocumentDimensionL.VALIDATE("Dimension Code",GLSetup."Shortcut Dimension 3 Code");
      DocumentDimensionL.VALIDATE("Dimension Value Code", DimensionValueL.Code);
      DocumentDimensionL.INSERT(TRUE);
    END;

    PROCEDURE InsertBuffer@1000000002(FieldType@1000000000 : ',Customer,SalesOrder,Shipment,PurchOrder';FieldValue@1000000001 : Code[20]);
    VAR
      TestBuffer@1000000002 : Record 80008;
      TestBuffer2@1000000003 : Record 80008;
    BEGIN
      {
      1: Customer No.
      2: Sales Order No.
      3: Sales Shipment No.
      4: Purchase Order No.
      5: Sales Invoice No.
      6: Item
      }

      TestBuffer.INIT;
      TestBuffer."Entry Type" := FieldType;
      TestBuffer."Entry Timestamp" := CURRENTDATETIME;
      TestBuffer."Entry Value Code" := FieldValue;
      TestBuffer."Use for Test" := TRUE;
      IF NOT TestBuffer.INSERT THEN
        TestBuffer.MODIFY;
    END;

    PROCEDURE CreateItem@1000000004(ItemNo@1000000000 : Code[20]);
    VAR
      Item@1000000001 : Record 27;
      ItemImportLog@1000000002 : Record 50002;
      Vendor@1000000004 : Record 23;
      CreateItemMgt@1000000005 : Codeunit 50004;
      IILEntryNo@1000000003 : Integer;
    BEGIN
      ItemImportLog.FINDLAST;
      IILEntryNo := ItemImportLog."Entry No." + 1;
      ItemImportLog.INIT;
      ItemImportLog."Entry No." := IILEntryNo;
      ItemImportLog."Item No." := ItemNo;
      ItemImportLog."Item Description" := Text001;
      ItemImportLog."Base Unit of Measure" := 'STK';
      ItemImportLog."VAT Class" := 0;
      Vendor.SETFILTER(Blocked, '%1', Vendor.Blocked::" ");
      Vendor.NEXT(RANDOM(Vendor.COUNT));
      ItemImportLog.Manufacturer := Vendor.Name;
      ItemImportLog."Manufacturer Item No.":= 'XXX';
      ItemImportLog."Original Description" := 'XXX';
      ItemImportLog."Vendor No." := Vendor."No.";
      ItemImportLog."EAN Code" := '0000000000000';
      ItemImportLog."Freight Type" := '2123';
      ItemImportLog."Net Weight" := 1;
      ItemImportLog."Units per Parcel" := 1;
      ItemImportLog."Unit Volume" := 1;
      ItemImportLog."Ext. Item No." := 818314;
      ItemImportLog."Import Status" := ItemImportLog."Import Status"::Inserted;
      ItemImportLog.INSERT;

      WITH ItemImportLog DO BEGIN

        COMMIT;
        CLEARLASTERROR;
        IF CreateItemMgt.RUN(ItemImportLog) THEN BEGIN
          "Import Status" := "Import Status"::Used;
          "Import Error Text" := '';
        END ELSE BEGIN
          "Import Status" := "Import Status"::Error;
          "Import Error Text" := COPYSTR(GETLASTERRORTEXT,1,MAXSTRLEN("Import Error Text"));
        END;
        "Modified on" := CURRENTDATETIME;
        MODIFY;

      END;
    END;

    BEGIN
    {
      +--------------------------------------------+
      |                                            |
      |                  Home24                    |
      |       Internal Customizing by NAV-Team     |
      |                                            |
      +--------------------------------------------+

      Project No. Date      Shortcut  Description
      _____________________________________________
      *** Module: Test Toolset ***
      H0513       03.09.13  FX        Simulates creation of a webshop sales order
    }
    END.
  }
}

