OBJECT Codeunit 50093 Channel Management
{
  OBJECT-PROPERTIES
  {
    Date=05.03.15;
    Time=12:36:07;
    Modified=Yes;
    Version List=#HME2164,GOB;
  }
  PROPERTIES
  {
    TableNo=36;
    OnRun=BEGIN
            // S/P1266
            IF IsBatch THEN
              MakeChangeChannel(Rec);
            // E/P1266
          END;

  }
  CODE
  {
    VAR
      Text001@1000000002 : TextConst 'DEU=Dieser Fall einer Kanalumbuchung ist nicht definiert.;ENU=This case of changing channels is not defined.';
      Text002@1000000004 : TextConst 'DEU=Bestellung ist storniert.;ENU=Purchase Order was canceled.';
      Text003@1000000001 : TextConst 'DEU=Es gibt keine Bestellung zur Archivierung.;ENU=There is no Purchase Order to archive.';
      Text004@1000000000 : TextConst 'DEU=Der Kommissionierkanal %1 ist kein Drop Shipment.;ENU=%1 is not a drop shipment channel.';
      ChangeChannelCase@1000000007 : Code[10];
      Text005@1000000005 : TextConst 'DEU="Fr den Kanalwechsel muss der Return Reason Code gefllt sein (z.B.: CHANCHANGE). M”chten Sie eine Žnderungs-EMail zur Dropship Bestellung an den Hersteller schicken? ";ENU="For changing channel the field ""Return Reason Code"" must be filled. Do you want to send a purchase order modification e-mail to the dropship manufacturer? "';
      Text006@1000000006 : TextConst 'DEU=Vorgang wurde abgebrochen.;ENU=Process aborted.';
      Text007@1000000003 : TextConst 'DEU="Vorgang ";ENU=Return reason or cancelation code is missing.';
      IstChannChange@1000000008 : Boolean;
      CUParcelStatusHistoryMgmt@1000000009 : Codeunit 80011;
      FPCGeneralSetup@1000000010 : Record 50055;
      BoolCancelOrder@1000000011 : Boolean;
      "*HME**************************"@1000000012 : Integer;
      BypassConfirmCancelLine@1000000013 : Boolean;
      CancellationMode@1000000014 : ' ,ManualRequestCancel,ManualConfirmCancel';
      IsBatch@1000000015 : Boolean;
      "**HME*************************"@1000000016 : TextConst;
      TextHME001@1000000017 : TextConst 'ENU="""%1"" is neither a dropshipment nor a crossdocking channel."';
      BoolIsError@1000000018 : Boolean;

    PROCEDURE "***HME************************"@1000000000();
    BEGIN
    END;

    PROCEDURE GetChangeChannelCase@1000000001(OldPurchCodeV@1000000001 : Code[10];NewPurchCodeV@1000000000 : Code[10]) CurrentChannelCase : Code[10];
    VAR
      CurrentCaseL@1000000002 : Code[10];
      FPCGenSetup@1000000003 : Record 50055;
    BEGIN
      // GetChangeChannelCase
      // S/P1156
      FPCGenSetup.GET;
      FPCGenSetup.TESTFIELD("Purchasing Code GB CD-GER");
      FPCGenSetup.TESTFIELD("Purchasing Code GB CD-FRA");
      FPCGenSetup.TESTFIELD("Purchasing Code GB CD-NL");
      FPCGenSetup.TESTFIELD("Purchasing Code GB CD-AT");
      FPCGenSetup.TESTFIELD("Purchasing Code 99 CD-GER");
      FPCGenSetup.TESTFIELD("Purchasing Code 99 CD-FRA");
      FPCGenSetup.TESTFIELD("Purchasing Code 99 CD-NL");
      FPCGenSetup.TESTFIELD("Purchasing Code 99 CD-AT");
      // E/P1156
      // S/P1194
      FPCGenSetup.TESTFIELD("Purchasing Code GB CD-CH");
      FPCGenSetup.TESTFIELD("Purchasing Code 99 CD-CH");
      // E/P1194

      //H0006 04.10.12 RHO ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

      //H0041 19.10.12 RHO ++++++++++++++++++++++++++++++++++++++++++++
      //From Channel 1 to...
      // S/P1136
      //IF OldPurchCodeV IN ['GER-1','FRA-1','NL-1'] THEN BEGIN
      IF OldPurchCodeV IN ['GER-1','FRA-1','NL-1','CH-1'] THEN BEGIN
      // E/P1136
        CASE NewPurchCodeV OF
          'GER-2' : CurrentCaseL := 'UNKNOWN';
          'GER-3' : CurrentCaseL := 'UNKNOWN';
          'GER-4' : CurrentCaseL := 'UNKNOWN';
          'GER-5' : CurrentCaseL := 'UNKNOWN';
          'GER-6' : CurrentCaseL := 'UNKNOWN';
          'GER-7' : CurrentCaseL := 'UNKNOWN';
          'GER-8' : CurrentCaseL := 'UNKNOWN';
          'GER-9' : CurrentCaseL := 'UNKNOWN';
          'GER-10': CurrentCaseL := 'UNKNOWN';
          //A/gob-rste/31.10.12/P0538
          'GER-12': CurrentCaseL := 'UNKNOWN';
          'GER-13': CurrentCaseL := 'UNKNOWN';
          //E/gob-rste/31.10.12/P0538
          // S/P1156
          // 'GER-99': CurrentCaseL := 'INTFCANCEL';
          FPCGenSetup."Purchasing Code GB CD-GER": CurrentCaseL := 'INTFCANCEL';
          FPCGenSetup."Purchasing Code 99 CD-GER": CurrentCaseL := 'INTFCANCEL';
          // E/P1156
          //S/P0892
          'FRA-7' : CurrentCaseL := 'UNKNOWN';
          'FRA-12': CurrentCaseL := 'UNKNOWN';
          'FRA-13': CurrentCaseL := 'UNKNOWN';
          //E/P0892
          // S/P1156
          // 'FRA-99': CurrentCaseL := 'UNKNOWN';
          FPCGenSetup."Purchasing Code GB CD-FRA": CurrentCaseL := 'UNKNOWN';
          FPCGenSetup."Purchasing Code 99 CD-FRA": CurrentCaseL := 'UNKNOWN';
          // E/P1156
          //S/P0892
          'NL-7' : CurrentCaseL := 'UNKNOWN';
          'NL-12': CurrentCaseL := 'UNKNOWN';
          'NL-13': CurrentCaseL := 'UNKNOWN';
          //E/P0892
          // S/P1156
          // 'NL-99': CurrentCaseL := 'UNKNOWN';
          FPCGenSetup."Purchasing Code GB CD-NL": CurrentCaseL := 'UNKNOWN';
          FPCGenSetup."Purchasing Code 99 CD-NL": CurrentCaseL := 'UNKNOWN';
          // E/P1156
          // S/P1136
          'CH-1' : CurrentCaseL := 'UNKNOWN';
          'CH-2' : CurrentCaseL := 'UNKNOWN';
          'CH-9' : CurrentCaseL := 'UNKNOWN';
          'CH-10' : CurrentCaseL := 'UNKNOWN';
          'CH-11' : CurrentCaseL := 'UNKNOWN';
          // E/P1136
          // S/P1194
          FPCGenSetup."Purchasing Code GB CD-CH": CurrentCaseL := 'INTFCANCEL';
          FPCGenSetup."Purchasing Code 99 CD-CH": CurrentCaseL := 'INTFCANCEL';
          // E/P1194
          ELSE
            ERROR(Text001);
        END;
      END;

      //From Channel 2 to...
      // S/P1136
      //IF OldPurchCodeV IN ['GER-2','FRA-2','NL-2'] THEN BEGIN
      IF OldPurchCodeV IN ['GER-2','FRA-2','NL-2','CH-2'] THEN BEGIN
      // E/P1136
        CASE NewPurchCodeV OF
          'GER-1' : CurrentCaseL := 'UNKNOWN';
          'GER-3' : CurrentCaseL := 'UNKNOWN';
          'GER-4' : CurrentCaseL := 'UNKNOWN';
          'GER-5' : CurrentCaseL := 'UNKNOWN';
          'GER-6' : CurrentCaseL := 'UNKNOWN';
          'GER-7' : CurrentCaseL := 'UNKNOWN';
          'GER-8' : CurrentCaseL := 'UNKNOWN';
          'GER-9' : CurrentCaseL := 'UNKNOWN';
          'GER-10': CurrentCaseL := 'UNKNOWN';
          //A/gob-rste/31.10.12/P0538
          'GER-12': CurrentCaseL := 'UNKNOWN';
          'GER-13': CurrentCaseL := 'UNKNOWN';
          //E/gob-rste/31.10.12/P0538
          // S/P1156
          // 'GER-99': CurrentCaseL := 'INTFCANCEL';
          FPCGenSetup."Purchasing Code GB CD-GER": CurrentCaseL := 'INTFCANCEL';
          FPCGenSetup."Purchasing Code 99 CD-GER": CurrentCaseL := 'INTFCANCEL';
          // E/P1156
          //S/P0892
          'FRA-7' : CurrentCaseL := 'UNKNOWN';
          'FRA-12': CurrentCaseL := 'UNKNOWN';
          'FRA-13': CurrentCaseL := 'UNKNOWN';
          //E/P0892
          // S/P1156
          // 'FRA-99': CurrentCaseL := 'UNKNOWN';
          FPCGenSetup."Purchasing Code GB CD-FRA": CurrentCaseL := 'UNKNOWN';
          FPCGenSetup."Purchasing Code 99 CD-FRA": CurrentCaseL := 'UNKNOWN';
          // E/P1156
          //S/P0892
          'NL-7' : CurrentCaseL := 'UNKNOWN';
          'NL-12': CurrentCaseL := 'UNKNOWN';
          'NL-13': CurrentCaseL := 'UNKNOWN';
          //E/P0892
          // S/P1156
          // 'NL-99': CurrentCaseL := 'UNKNOWN';
          FPCGenSetup."Purchasing Code GB CD-NL": CurrentCaseL := 'UNKNOWN';
          FPCGenSetup."Purchasing Code 99 CD-NL": CurrentCaseL := 'UNKNOWN';
          // E/P1156
          // S/P1136
          'CH-1' : CurrentCaseL := 'UNKNOWN';
          'CH-2' : CurrentCaseL := 'UNKNOWN';
          'CH-9' : CurrentCaseL := 'UNKNOWN';
          'CH-10' : CurrentCaseL := 'UNKNOWN';
          'CH-11' : CurrentCaseL := 'UNKNOWN';
          // E/P1136
          // S/P1194
          FPCGenSetup."Purchasing Code GB CD-CH": CurrentCaseL := 'UNKNOWN';
          FPCGenSetup."Purchasing Code 99 CD-CH": CurrentCaseL := 'UNKNOWN';
          // E/P1194
          ELSE
            ERROR(Text001);
        END;
      END;
      //H0041 19.10.12 RHO --------------------------------------------

      //From Channel 4 to...
      IF OldPurchCodeV IN ['GER-4','FRA-4','NL-4'] THEN BEGIN
        CASE NewPurchCodeV OF
          'GER-1' : CurrentCaseL := 'UNKNOWN';
          'GER-2' : CurrentCaseL := 'UNKNOWN';
          'GER-3' : CurrentCaseL := 'UNKNOWN';
          'GER-5' : CurrentCaseL := 'UNKNOWN';
          'GER-6' : CurrentCaseL := 'UNKNOWN';
          'GER-7' : CurrentCaseL := 'UNKNOWN';
          'GER-8' : CurrentCaseL := 'UNKNOWN';
          'GER-9' : CurrentCaseL := 'UNKNOWN';
          'GER-10': CurrentCaseL := 'UNKNOWN';
          //A/gob-rste/31.10.12/P0538
          'GER-12': CurrentCaseL := 'UNKNOWN';
          'GER-13': CurrentCaseL := 'UNKNOWN';
          //E/gob-rste/31.10.12/P0538
          //S/P0892
          'FRA-7' : CurrentCaseL := 'UNKNOWN';
          'FRA-12': CurrentCaseL := 'UNKNOWN';
          'FRA-13': CurrentCaseL := 'UNKNOWN';
          //E/P0892
          // S/P1156
          // 'FRA-99': CurrentCaseL := 'UNKNOWN';
          FPCGenSetup."Purchasing Code GB CD-FRA": CurrentCaseL := 'UNKNOWN';
          FPCGenSetup."Purchasing Code 99 CD-FRA": CurrentCaseL := 'UNKNOWN';
          // E/P1156
          //S/P0892
          'NL-7' : CurrentCaseL := 'UNKNOWN';
          'NL-12': CurrentCaseL := 'UNKNOWN';
          'NL-13': CurrentCaseL := 'UNKNOWN';
          //E/P0892
          // S/P1156
          // 'NL-99' : CurrentCaseL := 'UNKNOWN';
          // 'GER-99': CurrentCaseL := 'MODIFYPO';
          FPCGenSetup."Purchasing Code GB CD-NL": CurrentCaseL := 'UNKNOWN';
          FPCGenSetup."Purchasing Code GB CD-GER": CurrentCaseL := 'MODIFYPO';
          FPCGenSetup."Purchasing Code 99 CD-NL": CurrentCaseL := 'UNKNOWN';
          FPCGenSetup."Purchasing Code 99 CD-GER": CurrentCaseL := 'MODIFYPO';
          // E/P1156
          // S/P1136
          'CH-1' : CurrentCaseL := 'UNKNOWN';
          'CH-2' : CurrentCaseL := 'UNKNOWN';
          'CH-9' : CurrentCaseL := 'UNKNOWN';
          'CH-10' : CurrentCaseL := 'UNKNOWN';
          'CH-11' : CurrentCaseL := 'UNKNOWN';
          // E/P1136
          // S/P1194
          FPCGenSetup."Purchasing Code GB CD-CH": CurrentCaseL := 'UNKNOWN';
          FPCGenSetup."Purchasing Code 99 CD-CH": CurrentCaseL := 'UNKNOWN';
          // E/P1194
          ELSE
            ERROR(Text001);
        END;
      END;

      //From Channel 7 to...
      IF OldPurchCodeV IN ['GER-7','FRA-7','NL-7'] THEN BEGIN
        CASE NewPurchCodeV OF
          'GER-1' : CurrentCaseL := 'UNKNOWN';
          'GER-2' : CurrentCaseL := 'UNKNOWN';
          'GER-3' : CurrentCaseL := 'UNKNOWN';
          'GER-4':  CurrentCaseL := 'UNKNOWN';
          'GER-5' : CurrentCaseL := 'UNKNOWN';
          'GER-6' : CurrentCaseL := 'UNKNOWN';
          'GER-8' : CurrentCaseL := 'UNKNOWN';
          'GER-9' : CurrentCaseL := 'UNKNOWN';
          'GER-10': CurrentCaseL := 'UNKNOWN';
          //A/gob-rste/31.10.12/P0538
          'GER-12': CurrentCaseL := 'SENDLABEL'; //???
          'GER-13': CurrentCaseL := 'UNKNOWN';
          //E/gob-rste/31.10.12/P0538
          //S/P0892
          'FRA-7' : CurrentCaseL := 'UNKNOWN';
          'FRA-12': CurrentCaseL := 'UNKNOWN';
          'FRA-13': CurrentCaseL := 'UNKNOWN';
          //E/P0892
          // S/P1156
          // 'FRA-99': CurrentCaseL := 'UNKNOWN';
          FPCGenSetup."Purchasing Code GB CD-FRA": CurrentCaseL := 'UNKNOWN';
          FPCGenSetup."Purchasing Code 99 CD-FRA": CurrentCaseL := 'UNKNOWN';
          // E/P1156
          //S/P0892
          'NL-7' : CurrentCaseL := 'UNKNOWN';
          'NL-12': CurrentCaseL := 'UNKNOWN';
          'NL-13': CurrentCaseL := 'UNKNOWN';
          //E/P0892
          // S/P1156
          // 'NL-99' : CurrentCaseL := 'UNKNOWN';
          // 'GER-99': CurrentCaseL := 'MODIFYPO';
          FPCGenSetup."Purchasing Code GB CD-NL": CurrentCaseL := 'UNKNOWN';
          FPCGenSetup."Purchasing Code GB CD-GER": CurrentCaseL := 'MODIFYPO';
          FPCGenSetup."Purchasing Code 99 CD-NL": CurrentCaseL := 'UNKNOWN';
          FPCGenSetup."Purchasing Code 99 CD-GER": CurrentCaseL := 'MODIFYPO';
          // E/P1156
          // S/P1136
          'CH-1' : CurrentCaseL := 'UNKNOWN';
          'CH-2' : CurrentCaseL := 'UNKNOWN';
          'CH-9' : CurrentCaseL := 'UNKNOWN';
          'CH-10' : CurrentCaseL := 'UNKNOWN';
          'CH-11' : CurrentCaseL := 'UNKNOWN';
          // E/P1136
          // S/P1194
          FPCGenSetup."Purchasing Code GB CD-CH": CurrentCaseL := 'UNKNOWN';
          FPCGenSetup."Purchasing Code 99 CD-CH": CurrentCaseL := 'UNKNOWN';
          // E/P1194
          ELSE
            ERROR(Text001);
        END;
      END;

      //From Channel 8 to...
      IF OldPurchCodeV IN ['GER-8','FRA-8','NL-8'] THEN BEGIN
        CASE NewPurchCodeV OF
          'GER-1' : CurrentCaseL := 'UNKNOWN';
          'GER-2' : CurrentCaseL := 'UNKNOWN';
          'GER-3' : CurrentCaseL := 'UNKNOWN';
          'GER-4':  CurrentCaseL := 'UNKNOWN';
          'GER-5' : CurrentCaseL := 'UNKNOWN';
          'GER-6' : CurrentCaseL := 'UNKNOWN';
          'GER-7':  CurrentCaseL := 'SENDLABEL';
          'GER-8' : CurrentCaseL := 'UNKNOWN';
          'GER-9' : CurrentCaseL := 'UNKNOWN';
          'GER-10': CurrentCaseL := 'UNKNOWN';
          //A/gob-rste/31.10.12/P0538
          'GER-12': CurrentCaseL := 'SENDLABEL';
          'GER-13': CurrentCaseL := 'UNKNOWN';
          //E/gob-rste/31.10.12/P0538
          //S/P0892
          'FRA-7' : CurrentCaseL := 'UNKNOWN';
          'FRA-12': CurrentCaseL := 'UNKNOWN';
          'FRA-13': CurrentCaseL := 'UNKNOWN';
          //E/P0892
          // S/P1156
          // 'FRA-99': CurrentCaseL := 'UNKNOWN';
          FPCGenSetup."Purchasing Code GB CD-FRA": CurrentCaseL := 'UNKNOWN';
          FPCGenSetup."Purchasing Code 99 CD-FRA": CurrentCaseL := 'UNKNOWN';
          // E/P1156
          //S/P0892
          'NL-7' : CurrentCaseL := 'UNKNOWN';
          'NL-12': CurrentCaseL := 'UNKNOWN';
          'NL-13': CurrentCaseL := 'UNKNOWN';
          //E/P0892
          // S/P1156
          // 'NL-99' : CurrentCaseL := 'UNKNOWN';
          // 'GER-99': CurrentCaseL := 'MODIFYPO';
          FPCGenSetup."Purchasing Code GB CD-NL": CurrentCaseL := 'UNKNOWN';
          FPCGenSetup."Purchasing Code GB CD-GER": CurrentCaseL := 'MODIFYPO';
          FPCGenSetup."Purchasing Code 99 CD-NL": CurrentCaseL := 'UNKNOWN';
          FPCGenSetup."Purchasing Code 99 CD-GER": CurrentCaseL := 'MODIFYPO';
          // E/P1156
          // S/P1136
          'CH-1' : CurrentCaseL := 'UNKNOWN';
          'CH-2' : CurrentCaseL := 'UNKNOWN';
          'CH-9' : CurrentCaseL := 'UNKNOWN';
          'CH-10' : CurrentCaseL := 'UNKNOWN';
          'CH-11' : CurrentCaseL := 'UNKNOWN';
          // E/P1136
          // S/P1194
          FPCGenSetup."Purchasing Code GB CD-CH": CurrentCaseL := 'UNKNOWN';
          FPCGenSetup."Purchasing Code 99 CD-CH": CurrentCaseL := 'UNKNOWN';
          // E/P1194
          ELSE
            ERROR(Text001);
        END;
      END;

      //H0041 19.10.12 RHO ++++++++++++++++++++++++++++++++++++++++++
      //From Channel10 to...
      // S/P1136
      //IF OldPurchCodeV IN ['GER-10','FRA-10','NL-10'] THEN BEGIN
      IF OldPurchCodeV IN ['GER-10','FRA-10','NL-10','CH-10'] THEN BEGIN
      // E/P1136
        CASE NewPurchCodeV OF
          'GER-1' : CurrentCaseL := 'UNKNOWN';
          'GER-2' : CurrentCaseL := 'UNKNOWN';
          'GER-3' : CurrentCaseL := 'UNKNOWN';
          'GER-4':  CurrentCaseL := 'UNKNOWN';
          'GER-5' : CurrentCaseL := 'UNKNOWN';
          'GER-6' : CurrentCaseL := 'UNKNOWN';
          'GER-8' : CurrentCaseL := 'UNKNOWN';
          'GER-9' : CurrentCaseL := 'UNKNOWN';
          //A/gob-rste/31.10.12/P0538
          'GER-12': CurrentCaseL := 'UNKNOWN';
          'GER-13': CurrentCaseL := 'UNKNOWN';
          //E/gob-rste/31.10.12/P0538
          // S/P1156
          // 'GER-99': CurrentCaseL := 'INTFCANCEL';
          FPCGenSetup."Purchasing Code GB CD-GER": CurrentCaseL := 'INTFCANCEL';
          FPCGenSetup."Purchasing Code 99 CD-GER": CurrentCaseL := 'INTFCANCEL';
          // E/P1156
          //S/P0892
          'FRA-7' : CurrentCaseL := 'UNKNOWN';
          'FRA-12': CurrentCaseL := 'UNKNOWN';
          'FRA-13': CurrentCaseL := 'UNKNOWN';
          //E/P0892
          // S/P1156
          // 'FRA-99': CurrentCaseL := 'UNKNOWN';
          FPCGenSetup."Purchasing Code GB CD-FRA": CurrentCaseL := 'UNKNOWN';
          FPCGenSetup."Purchasing Code 99 CD-FRA": CurrentCaseL := 'UNKNOWN';
          // E/P1156
          //S/P0892
          'NL-7' : CurrentCaseL := 'UNKNOWN';
          'NL-12': CurrentCaseL := 'UNKNOWN';
          'NL-13': CurrentCaseL := 'UNKNOWN';
          //E/P0892
          // S/P1156
          // 'NL-99' : CurrentCaseL := 'UNKNOWN';
          // 'GER-99': CurrentCaseL := 'MODIFYPO';
          FPCGenSetup."Purchasing Code GB CD-NL": CurrentCaseL := 'UNKNOWN';
          FPCGenSetup."Purchasing Code GB CD-GER": CurrentCaseL := 'MODIFYPO';
          FPCGenSetup."Purchasing Code 99 CD-NL": CurrentCaseL := 'UNKNOWN';
          FPCGenSetup."Purchasing Code 99 CD-GER": CurrentCaseL := 'MODIFYPO';
          // E/P1156
          // S/P1136
          'CH-1' : CurrentCaseL := 'UNKNOWN';
          'CH-2' : CurrentCaseL := 'UNKNOWN';
          'CH-9' : CurrentCaseL := 'UNKNOWN';
          'CH-10' : CurrentCaseL := 'UNKNOWN';
          'CH-11' : CurrentCaseL := 'UNKNOWN';
          // E/P1136
          // S/P1194
          FPCGenSetup."Purchasing Code GB CD-CH": CurrentCaseL := 'UNKNOWN';
          FPCGenSetup."Purchasing Code 99 CD-CH": CurrentCaseL := 'UNKNOWN';
          // E/P1194
          ELSE
            ERROR(Text001);
        END;
      END;

      //A/gob-rste/31.10.12/P0538
      IF OldPurchCodeV IN ['GER-12','FRA-12','NL-12'] THEN BEGIN
        CASE NewPurchCodeV OF
          'GER-1' : CurrentCaseL := 'UNKNOWN';
          'GER-2' : CurrentCaseL := 'UNKNOWN';
          'GER-3' : CurrentCaseL := 'UNKNOWN';
          'GER-4' : CurrentCaseL := 'UNKNOWN';
          'GER-5' : CurrentCaseL := 'UNKNOWN';
          'GER-6' : CurrentCaseL := 'UNKNOWN';
          'GER-7' : CurrentCaseL := 'UNKNOWN';
          'GER-8' : CurrentCaseL := 'UNKNOWN';
          'GER-9' : CurrentCaseL := 'UNKNOWN';
          'GER-10': CurrentCaseL := 'UNKNOWN';
          'GER-13': CurrentCaseL := 'UNKNOWN';
          //S/P0892
          'FRA-7' : CurrentCaseL := 'UNKNOWN';
          'FRA-12': CurrentCaseL := 'UNKNOWN';
          'FRA-13': CurrentCaseL := 'UNKNOWN';
          //E/P0892
          // S/P1156
          // 'FRA-99': CurrentCaseL := 'UNKNOWN';
          FPCGenSetup."Purchasing Code GB CD-FRA": CurrentCaseL := 'UNKNOWN';
          FPCGenSetup."Purchasing Code 99 CD-FRA": CurrentCaseL := 'UNKNOWN';
          // E/P1156
          //S/P0892
          'NL-7' : CurrentCaseL := 'UNKNOWN';
          'NL-13': CurrentCaseL := 'UNKNOWN';
          //E/P0892
          // S/P1156
          // 'NL-99' : CurrentCaseL := 'UNKNOWN';
          // 'GER-99': CurrentCaseL := 'MODIFYPO';
          FPCGenSetup."Purchasing Code GB CD-NL": CurrentCaseL := 'UNKNOWN';
          FPCGenSetup."Purchasing Code GB CD-GER": CurrentCaseL := 'MODIFYPO';
          FPCGenSetup."Purchasing Code 99 CD-NL": CurrentCaseL := 'UNKNOWN';
          FPCGenSetup."Purchasing Code 99 CD-GER": CurrentCaseL := 'MODIFYPO';
          // E/P1156
          // S/P1136
          'CH-1' : CurrentCaseL := 'UNKNOWN';
          'CH-2' : CurrentCaseL := 'UNKNOWN';
          'CH-9' : CurrentCaseL := 'UNKNOWN';
          'CH-10' : CurrentCaseL := 'UNKNOWN';
          'CH-11' : CurrentCaseL := 'UNKNOWN';
          // E/P1136
          // S/P1194
          FPCGenSetup."Purchasing Code GB CD-CH": CurrentCaseL := 'UNKNOWN';
          FPCGenSetup."Purchasing Code 99 CD-CH": CurrentCaseL := 'UNKNOWN';
          // E/P1194
          ELSE
            ERROR(Text001);
        END;
      END;

      IF OldPurchCodeV IN ['GER-13','FRA-13','NL-13'] THEN BEGIN
        CASE NewPurchCodeV OF
          'GER-1' : CurrentCaseL := 'UNKNOWN';
          'GER-2' : CurrentCaseL := 'UNKNOWN';
          'GER-3' : CurrentCaseL := 'UNKNOWN';
          'GER-4' : CurrentCaseL := 'UNKNOWN';
          'GER-5' : CurrentCaseL := 'UNKNOWN';
          'GER-6' : CurrentCaseL := 'UNKNOWN';
          'GER-7' : CurrentCaseL := 'SENDLABEL';
          'GER-8' : CurrentCaseL := 'UNKNOWN';
          'GER-9' : CurrentCaseL := 'UNKNOWN';
          'GER-10': CurrentCaseL := 'UNKNOWN';
          'GER-12': CurrentCaseL := 'SENDLABEL';
          //S/P0892
          'FRA-7' : CurrentCaseL := 'UNKNOWN';
          'FRA-12': CurrentCaseL := 'UNKNOWN';
          //E/P0892
          // S/P1156
          // 'FRA-99': CurrentCaseL := 'UNKNOWN';
          FPCGenSetup."Purchasing Code GB CD-FRA": CurrentCaseL := 'UNKNOWN';
          FPCGenSetup."Purchasing Code 99 CD-FRA": CurrentCaseL := 'UNKNOWN';
          // E/P1156
          //S/P0892
          'NL-7' : CurrentCaseL := 'UNKNOWN';
          'NL-12': CurrentCaseL := 'UNKNOWN';
          //E/P0892
          // S/P1156
          // 'NL-99' : CurrentCaseL := 'UNKNOWN';
          // 'GER-99': CurrentCaseL := 'MODIFYPO';
          FPCGenSetup."Purchasing Code GB CD-NL": CurrentCaseL := 'UNKNOWN';
          FPCGenSetup."Purchasing Code GB CD-GER": CurrentCaseL := 'MODIFYPO';
          FPCGenSetup."Purchasing Code 99 CD-NL": CurrentCaseL := 'UNKNOWN';
          FPCGenSetup."Purchasing Code 99 CD-GER": CurrentCaseL := 'MODIFYPO';
          // E/P1156
          // S/P1136
          'CH-1' : CurrentCaseL := 'UNKNOWN';
          'CH-2' : CurrentCaseL := 'UNKNOWN';
          'CH-9' : CurrentCaseL := 'UNKNOWN';
          'CH-10' : CurrentCaseL := 'UNKNOWN';
          'CH-11' : CurrentCaseL := 'UNKNOWN';
          // E/P1136
          // S/P1194
          FPCGenSetup."Purchasing Code GB CD-CH": CurrentCaseL := 'UNKNOWN';
          FPCGenSetup."Purchasing Code 99 CD-CH": CurrentCaseL := 'UNKNOWN';
          // E/P1194
          ELSE
            ERROR(Text001);
        END;
      END;
      //E/gob-rste/31.10.12/P0538

      //H0041 19.10.12 RHO ------------------------------------------
      EXIT(CurrentCaseL);
      //H0006 04.10.12 RHO ----------------------------------------------------------------------------------------------------------
    END;

    PROCEDURE ChangeChannel@1000000004(p_SalesHeader@1000000001 : Record 36);
    VAR
      SalesHeader@1000000004 : Record 36;
      SalesLine@1000000002 : Record 37;
      PurchaseHeaderL@1000000018 : Record 38;
      BatchPostDoc@1000000017 : Record 50043;
      SalesLine2@1000000008 : Record 37;
      CommentLine@1000000006 : Record 97;
      RhenusChangeLog@1000000000 : Record 50070;
      ChangeChannelForm@1000000003 : Form 50143;
      ReleaseSalesDocument@1000000005 : Codeunit 414;
      LocText001@1000000009 : TextConst 'ENU=Not all orders Rhenus Interface Records are processed. Please try again later.';
      LocText002@1000000007 : TextConst 'ENU=Channel change: %1 --> %2 Item %3.';
      LocText003@1000000011 : TextConst 'DEU=Bitte berprfen Sie den Zeilenstatus ob der Artikel noch nicht verarbeitet wurde und somit nicht automatisch storniert werden kann. Wollen Sie fortfahren?;ENU=Please check line status if articles are not already being processed and can thus not be automatically cancelled. Continue?';
      LocText004@1000000010 : TextConst 'DEU=Channel Change canceled.;ENU=Channel Change cancelled.';
      LocText005@1000000012 : TextConst 'DEU=Kanalumbuchungen sind nur 1 mal pro Auftrag m”glich.\Vorgang abgebrochen.;ENU=Channel change is only allowed once.\Change canceled.';
      LocText006@1000000014 : TextConst 'ENU=The order date is before 05.09.12. \Change Channel is only allowed in consultation with Arthur Berganski.\Have you asked Arthur Berganski?';
      LocText007@1000000013 : TextConst 'DEU=Sie k”nnen diese Auftrag nicht mehr automatisiert ber die Rhenus Schnittstelle stornieren.\ Sie mssen bei Rhenus erfragen, ob eine Stornierung weiterhin m”glich ist. Wollen Sie fortfahren?;ENU=You can''t cancel this order via Rhenus interface. You have to check if a cancelation is still possible. Continue?';
      HasBadRhenusPos@1000000015 : Boolean;
      SpecialOrderL@1000000019 : Boolean;
      InterfaceProcessMgt@1000000022 : Codeunit 50087;
      FPCGeneralSetup@1000000023 : Record 50055;
      TEMPSalesLine@1000000016 : TEMPORARY Record 37;
      "***HME**********************"@1000000020 : Integer;
      eBayNavCWebshopItemL@1000000021 : Record 5251566;
    BEGIN
      // ChangeChannel

      // S/P1156
      FPCGeneralSetup.GET;
      FPCGeneralSetup.TESTFIELD("Purchasing Code GB CD-GER");
      FPCGeneralSetup.TESTFIELD("Purchasing Code 99 CD-GER");
      // E/P1156

      //H0006 06.10.12 RHO ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
      //Copied from CU500003 ChangeChannel2 -> Renaming to 'Change Channel' -> Redesigning and new enhancements

      //A/gob-rste/09.05.12/
      IF p_SalesHeader."Order Date" <= 050912D THEN
        IF NOT CONFIRM(LocText006,FALSE) THEN
          ERROR(LocText004);
      //E/gob-rste/09.05.12/
      IF NOT CONFIRM(LocText003,FALSE) THEN
        ERROR(LocText004);

      //H0006 26.09.12 rho +++++++++++++++++++++++
      //p_SalesHeader.CALCFIELDS("Order History");
      //H0006 26.09.12 rho -----------------------
      //IF p_SalesHeader."Order History" THEN
        //ERROR(LocText005);

      //S/P1196
      //RhenusChangeLog.RESET;
      //RhenusChangeLog.SETRANGE("Source Type",RhenusChangeLog."Source Type"::Sales);
      //RhenusChangeLog.SETRANGE("Document Type",RhenusChangeLog."Document Type"::Order);
      //RhenusChangeLog.SETRANGE("Document No.",p_SalesHeader."No.");
      //RhenusChangeLog.SETRANGE(Processed,FALSE);
      //IF NOT RhenusChangeLog.ISEMPTY THEN
        //ERROR(LocText001);

      SalesLine.RESET;
      SalesLine.SETRANGE("Document Type",p_SalesHeader."Document Type");
      SalesLine.SETRANGE("Document No.",p_SalesHeader."No.");
      IF SalesLine.FIND('-') THEN BEGIN
        CLEAR(ChangeChannelForm);
        ChangeChannelForm.SETTABLEVIEW(SalesLine);
        ChangeChannelForm.LOOKUPMODE := TRUE;
        IF ChangeChannelForm.RUNMODAL = ACTION::LookupOK THEN BEGIN
          ChangeChannelForm.GETRECORD(SalesLine);
          // H0665 FX 13.03.14 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
          MakeChangeChannel(p_SalesHeader);
          // H0665 FX 13.03.14 ----------------------------------------------------------
        END;
      END;
      //H0006 05.10.12 RHO -------------------------------------------------------------------------------------------------------------
    END;

    PROCEDURE MakeChangeChannel@1000000005(SalesHeaderV@1000000000 : Record 36);
    VAR
      SalesHeader@1000000015 : Record 36;
      SalesLine@1000000014 : Record 37;
      PurchaseHeaderL@1000000013 : Record 38;
      BatchPostDoc@1000000012 : Record 50043;
      SalesLine2@1000000011 : Record 37;
      CommentLine@1000000010 : Record 97;
      RhenusChangeLog@1000000009 : Record 50070;
      ChanChangeL@1000000025 : Record 80021;
      ChangeChannelForm@1000000008 : Form 50143;
      ReleaseSalesDocument@1000000007 : Codeunit 414;
      HasBadRhenusPos@1000000006 : Boolean;
      SpecialOrderL@1000000005 : Boolean;
      InterfaceProcessMgt@1000000004 : Codeunit 50087;
      FPCGeneralSetup@1000000003 : Record 50055;
      TEMPSalesLine@1000000002 : TEMPORARY Record 37;
      TestToolSetup@1000000001 : Record 80006;
      LocText001@1000000022 : TextConst 'ENU=Not all orders Rhenus Interface Records are processed. Please try again later.';
      LocText002@1000000021 : TextConst 'ENU=Channel change: %1 --> %2 for Item %3.';
      LocText003@1000000020 : TextConst 'DEU=Bitte berprfen Sie den Zeilenstatus ob der Artikel noch nicht verarbeitet wurde und somit nicht automatisch storniert werden kann. Wollen Sie fortfahren?;ENU=Please check line status if articles are not already being processed and can thus not be automatically cancelled. Continue?';
      LocText004@1000000019 : TextConst 'DEU=Channel Change canceled.;ENU=Channel Change canceled.';
      LocText005@1000000018 : TextConst 'DEU=Kanalumbuchungen sind nur 1 mal pro Auftrag m”glich.\Vorgang abgebrochen.;ENU=Channel change is only allowed once.\Change canceled.';
      LocText006@1000000017 : TextConst 'ENU=The order date is before 05.09.12. \Change Channel is only allowed in consultation with Arthur Berganski.\Have you asked Arthur Berganski?';
      LocText007@1000000016 : TextConst 'DEU=Sie k”nnen diese Auftrag nicht mehr automatisiert ber die Rhenus Schnittstelle stornieren.\ Sie mssen bei Rhenus erfragen, ob eine Stornierung weiterhin m”glich ist. Wollen Sie fortfahren?;ENU=You can''t cancel this order via Rhenus interface. You have to check if a cancelation is still possible. Continue?';
      TestBuffer@1000000023 : Record 80008;
      ChangeIsInSetup@1000000024 : Boolean;
    BEGIN
      // MakeChangeChannel
      // H0665 FX 13.03.14 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
      SalesLine.RESET;
      SalesLine.SETRANGE("Document Type", SalesHeaderV."Document Type");
      SalesLine.SETRANGE("Document No.", SalesHeaderV."No.");
      SalesLine.SETFILTER("New Purchasing Code",'<>%1','');
      IF NOT SalesLine.ISEMPTY THEN BEGIN
        HasBadRhenusPos := FALSE;
        SalesLine.SETRANGE("Status Code");
        SalesLine.SETRANGE("Status Code",'50');
        IF SalesLine.FINDFIRST THEN
          HasBadRhenusPos := TRUE;
        SalesLine.SETRANGE("Status Code");
        SalesLine.SETRANGE("Status Code",'11');
        IF SalesLine.FINDFIRST THEN
          HasBadRhenusPos := TRUE;
        SalesLine.SETRANGE("Status Code");
        SalesLine.SETRANGE("Status Code",'10');
        IF SalesLine.FINDFIRST THEN
          HasBadRhenusPos := TRUE;
        SalesLine.SETRANGE("Status Code");
        SalesLine.SETRANGE("Status Code",'1');
        IF SalesLine.FINDFIRST THEN
          HasBadRhenusPos := TRUE;
        IF HasBadRhenusPos THEN
          IF NOT CONFIRM(LocText007,FALSE) THEN
            ERROR(LocText004);
        SalesLine.SETRANGE("Status Code");
        IF SalesLine.FINDSET THEN;

        SalesHeader.RESET;
        SalesHeader.GET(SalesHeaderV."Document Type", SalesHeaderV."No.");
        SalesHeader.TESTFIELD(Status,SalesHeader.Status::Released);
        IF SalesHeader.Status <> SalesHeader.Status::Open THEN BEGIN
          ReleaseSalesDocument.PerformManualReopen(SalesHeader);
          SalesHeader.MODIFY;
          COMMIT;
        END;
        TEMPSalesLine.DELETEALL;
        REPEAT
          IstChannChange := FALSE;
          IF SalesLine."Purchasing Code" <> SalesLine."New Purchasing Code" THEN BEGIN
            IF (SalesLine."New Purchasing Code" = FPCGeneralSetup."Purchasing Code GB CD-GER") OR
               (SalesLine."New Purchasing Code" = FPCGeneralSetup."Purchasing Code 99 CD-GER")
            THEN BEGIN
              IF GetChangeChannelCase(SalesLine."Purchasing Code",SalesLine."New Purchasing Code") = 'MODIFYPO' THEN BEGIN
                SalesLine2.GET(SalesLine."Document Type",SalesLine."Document No.",SalesLine."Line No.");
                IF CONFIRM(Text005) THEN BEGIN
                  SalesLine2.TESTFIELD(SalesLine2."Return Reason Code");
                  SalesLine2."Send Update Mail" := TRUE;
                  IstChannChange := TRUE;
                  CancelDropShipment(SalesLine2,TRUE);
                  // S/P1266
                  IF GetIsError THEN
                    EXIT;
                  // E/P1266
                  IstChannChange := FALSE;
                END ELSE BEGIN
                  SalesLine2.TESTFIELD(SalesLine2."Return Reason Code");
                  SalesLine2."Send Update Mail" := FALSE;
                  IstChannChange := TRUE;
                  CancelDropShipment(SalesLine2,TRUE);
                  // S/P1266
                  IF GetIsError THEN
                    EXIT;
                  // E/P1266
                  IstChannChange := FALSE;
                END;
              END;
            END;
            SalesHeader.RESET;
            SalesHeader.GET(SalesHeaderV."Document Type",SalesHeaderV."No.");
            IF SalesHeader.Status <> SalesHeader.Status::Open THEN BEGIN
              ReleaseSalesDocument.PerformManualReopen(SalesHeader);
              SalesHeader.MODIFY;
            END;
            SalesLine2.RESET;
            SalesLine2.GET(SalesLine."Document Type",SalesLine."Document No.",SalesLine."Line No.");
            SalesLine2."Line Status" := '';
            SalesLine2."Old Purchasing Code" := SalesLine."Purchasing Code";
            //S/P1230
            SalesLine2.SetCallFromChanChange(TRUE);
            //E/P1230
            SalesLine2.VALIDATE("Purchasing Code",SalesLine."New Purchasing Code");
            SalesLine2.VALIDATE(Quantity,1);
            SalesLine2."New Purchasing Code" := '';
            SalesLine2.MODIFY;

            FPCGeneralSetup.GET;
            FPCGeneralSetup.TESTFIELD("Status Pick");
            FPCGeneralSetup.TESTFIELD("Status Cancel");
            FPCGeneralSetup.TESTFIELD("Trigger Channel Change");
            IF InterfaceProcessMgt.TriggerActive(FPCGeneralSetup."Trigger Channel Change") THEN BEGIN
              InterfaceProcessMgt.InsertInterfaceRecords(
                0,
                SalesLine2."Document Type",
                SalesLine2."Document No.",
                SalesLine2."Line No.",
                InterfaceProcessMgt.GetInterfaceFromPurchCode(
                  SalesLine2."Old Purchasing Code"),
                  FPCGeneralSetup."Status Cancel",
                  FPCGeneralSetup."Trigger Channel Change");
              TEMPSalesLine.TRANSFERFIELDS(SalesLine2);
              IF TEMPSalesLine.INSERT THEN;
            END;
            //H2164 03.03.15 DMO ++++++++++++++++++++++++++++++++++++
            IF ChanChangeL.GET(SalesLine2."Old Purchasing Code",SalesLine2."Purchasing Code") THEN
              CommentLine.SetUpdateKAD(SalesLine2."Line No.",ChanChangeL."Update KAD");
            //H2164 03.03.15 DMO ------------------------------------
            CommentLine.InsertOrderHistory(
              SalesLine2."Document No.",
              'CHANCHANGE',
              STRSUBSTNO(
                LocText002,
                SalesLine2."Old Purchasing Code",
                SalesLine2."Purchasing Code",
                SalesLine2."No."));
          END;
        UNTIL SalesLine.NEXT = 0;

        IF SalesHeader.Kommissionierung THEN BEGIN
          CLEAR(ReleaseSalesDocument);
          ReleaseSalesDocument.CalledFromCancel(TRUE);
          ReleaseSalesDocument.InitiateOrder2DDInterface(SalesHeader,2);
        END;

        CLEAR(ReleaseSalesDocument);
        ReleaseSalesDocument.RUN(SalesHeader);
        TEMPSalesLine.RESET;

        IF TEMPSalesLine.FINDSET THEN BEGIN
          REPEAT
            InterfaceProcessMgt.SetInserFromChanChange(TRUE);
            InterfaceProcessMgt.InsertInterfaceRecords(
              0,
              TEMPSalesLine."Document Type",
              TEMPSalesLine."Document No.",
              TEMPSalesLine."Line No.",
              InterfaceProcessMgt.GetInterfaceFromPurchCode(TEMPSalesLine."Purchasing Code"),
              FPCGeneralSetup."Status Pick",
              FPCGeneralSetup."Trigger Channel Change");
            InterfaceProcessMgt.SetInserFromChanChange(FALSE);
          UNTIL TEMPSalesLine.NEXT = 0;
        END;
      END;
      // H0665 FX 13.03.14 ----------------------------------------------------
    END;

    PROCEDURE CheckIfDropShipmentOrCrossDock@1000000110(VAR SalesLine@1000000000 : Record 37) : Boolean;
    VAR
      FPCGenSetup@1000000002 : Record 50055;
      PurchasingL@1000000003 : Record 5721;
    BEGIN
      // CheckIfDropShipmentOrCrossDock
      //P1156,P1194,H0587 21.07.14 HCN +++++++++++++++++++++++++++++
      EXIT(
        PurchasingL.GET(SalesLine."Purchasing Code") AND
        (PurchasingL."Drop Shipment" OR PurchasingL."Special Order"));
      //P1156,P1194,H0587 21.07.14 HCN -----------------------------
    END;

    PROCEDURE CancelDropShipment@1000000007(VAR SalesLineR@1000000000 : Record 37;ChangeChannelV@1000000013 : Boolean);
    VAR
      SalesHeaderL@1000000008 : Record 36;
      SalesLineL@1000000010 : Record 37;
      CommentLineL@1000000004 : Record 97;
      PurchaseHeaderL@1000000002 : Record 38;
      PurchaseLineL@1000000006 : Record 39;
      OrderStatusLogL@1000000007 : Record 50069;
      DHLStatusLogL@1000000005 : Record 50021;
      ArchMgtL@1000000003 : Codeunit 5063;
      ErrorL@1000000001 : Boolean;
      SpecialOrderL@1000000009 : Boolean;
      processed@1000000011 : Boolean;
      ChangeChannelL@1000000012 : Boolean;
      cRHDPurchInterfaceMgt@1000000097 : Codeunit 50156;
      FPCGenSetup@1000000014 : Record 50055;
      "****HME***********************"@1000000015 : Integer;
      PurchasingL@1000000017 : Record 5721;
      FPCManagementL@1000000016 : Codeunit 50003;
    BEGIN
      // CancelDropShipment
      //P1156,P1203,H0587 21.07.14 HCN +++++++++++++++++++++++++++++
      CheckIfDSorCD(SalesLineR,SpecialOrderL);
      //P1156,P1203,H0587 21.07.14 HCN -----------------------------


      //Run Purchase Order Cancelation
      IF SpecialOrderL THEN BEGIN
      //Save Original Purch. Order No.
        IF SalesLineR."Send Update Mail" THEN
          SalesLineR."Orig. Purch. Order No." := SalesLineR."Special Order Purchase No.";

        IF PurchaseHeaderL.GET(PurchaseHeaderL."Document Type"::Order,SalesLineR."Special Order Purchase No.") THEN BEGIN
          PurchaseHeaderL."Shipment Comment" := 'SO:' + SalesLineR."Document No." + ' ' + FORMAT(SalesLineR."Line No.") + ' cancelled';
          PurchaseHeaderL."Sales Order No." := SalesLineR."Document No.";
          PurchaseHeaderL.MODIFY(TRUE);
          IF CancelDropShipmentLine(SalesLineR) THEN
            processed := TRUE;
          //A,gob-dst,19.11.2013,P1109
          IF processed THEN
            IF PurchaseLineL.GET(
                 PurchaseHeaderL."Document Type",SalesLineR."Special Order Purchase No.",
                 SalesLineR."Special Order Purch. Line No.")
            THEN
              cRHDPurchInterfaceMgt.TriggerRhenusInterface(PurchaseLineL,1); // 1 = cancel
          //E,gob-dst,19.11.2013,P1109
        END;
      END ELSE BEGIN
      //Save Original Purch. Order No.
        IF SalesLineR."Send Update Mail" THEN
          SalesLineR."Orig. Purch. Order No.":=SalesLineR."Purchase Order No.";

        IF PurchaseHeaderL.GET(PurchaseHeaderL."Document Type"::Order,SalesLineR."Purchase Order No.") THEN BEGIN
          PurchaseHeaderL."Shipment Comment" := 'SO:' + SalesLineR."Document No." + ' ' + FORMAT(SalesLineR."Line No.") + ' cancelled';
          PurchaseHeaderL."Sales Order No." := SalesLineR."Document No.";
          PurchaseHeaderL.MODIFY(TRUE);
          IF CancelDropShipmentLine(SalesLineR) THEN
            processed:=TRUE;
        END;
      END;

      //Disconnect Sales Line -> Purchase Line
      IF processed THEN BEGIN
        SalesLineR."Purchase Order No." :='';
        SalesLineR."Purch. Order Line No." :=0;
        SalesLineR."Special Order Purchase No.":='';
        SalesLineR."Special Order Purch. Line No.":=0;
        //H1104 08.07.14 ARI +++++++++++++++++++++++++++++
        SalesLineR."Drop Shipment" := FALSE;
        SalesLineR."Dropship No." := '';
        SalesLineR."Special Order" := FALSE;
        //H1104 08.07.14 ARI -----------------------------
      END;

      SalesLineR.MODIFY;

      //Run Magento Cancel and Payment Processes
      IF IstChannChange THEN
        SalesLineR.DontSetStatusCanceled(TRUE);
      IF NOT ChangeChannelV THEN BEGIN
        // P1092, H0587 23.05.14 HCN +++++++++++++++++++++++++++++
        SalesLineR.SetCancellationMode(CancellationMode);
        IF BoolCancelOrder THEN
          SalesLineR.MagentoCancel(TRUE,FALSE)
        ELSE
          SalesLineR.MagentoCancel(FALSE,FALSE);
        // P1092, H0587 23.05.14 HCN -----------------------------
        // S/P1266
        IF SalesLineR.GetisError THEN BEGIN
          SetIsError;
          EXIT;
        END;
        // E/P1266
      END;
      SalesLineR.DontSetStatusCanceled(FALSE);
    END;

    PROCEDURE CancelDropShipmentLine@1000000012(parSalesLine@1000000007 : Record 37) : Boolean;
    VAR
      CommentLineL@1000000006 : Record 97;
      PurchaseHeaderL@1000000005 : Record 38;
      PurchaseLineL@1000000004 : Record 39;
      OrderStatusLogL@1000000003 : Record 50069;
      DHLStatusLogL@1000000002 : Record 50021;
      ArchMgtL@1000000001 : Codeunit 5063;
      ErrorL@1000000008 : Boolean;
      SpecialOrderL@1000000000 : Boolean;
      RecRef@1000000009 : RecordRef;
      FPCGenSetup@1000000010 : Record 50055;
      "****HME***********************"@1000000011 : Integer;
      PurchasingL@1000000012 : Record 5721;
    BEGIN
      // CancelDropShipmentLine
      //P1156,P1203,H0587 21.07.14 HCN +++++++++++++++++++++++++++++
      CheckIfDSorCD(parSalesLine,SpecialOrderL);

      CLEAR(OrderStatusLogL);
      FPCGeneralSetup.GET;
      //P1156,P1203,H0587 21.07.14 HCN -----------------------------

      //Archive of PO
      IF (parSalesLine."Special Order") OR (parSalesLine."Special Order Purchase No."<>'') THEN BEGIN
        IF PurchaseHeaderL.GET(parSalesLine."Document Type"::Order,parSalesLine."Special Order Purchase No.") THEN
          ArchMgtL.ArchPurchDocumentNoConfirm(PurchaseHeaderL);
      END ELSE
        IF PurchaseHeaderL.GET(parSalesLine."Document Type"::Order,parSalesLine."Document No.") THEN
          ArchMgtL.ArchPurchDocumentNoConfirm(PurchaseHeaderL);

      IF SpecialOrderL THEN BEGIN
        IF PurchaseLineL.GET(
             PurchaseLineL."Document Type"::Order,
             parSalesLine."Special Order Purchase No.",
             parSalesLine."Special Order Purch. Line No.")
        THEN BEGIN
          //H1104 16.05.14 ARI ++++++++++++++++++++++++++++++++
          OrderStatusLogL.SetQuantitytoZero(PurchaseLineL);
          //H1104 16.05.14 ARI --------------------------------
          //PO Logging DHL and Order Status
          OrderStatusLogL.CreateOrderStatus(
            1,parSalesLine."Special Order Purchase No.",
            parSalesLine."Special Order Purch. Line No.",
            '60','CANCELED');
          EXIT(TRUE);
        END;
      END ELSE
        IF PurchaseLineL.GET(
             PurchaseLineL."Document Type"::Order,
             parSalesLine."Purchase Order No.",
             parSalesLine."Purch. Order Line No.")
        THEN BEGIN
          //H1104 16.05.14 ARI ++++++++++++++++++++++++++++++++
          OrderStatusLogL.SetQuantitytoZero(PurchaseLineL);
          //H1104 16.05.14 ARI --------------------------------
          //PO Logging DHL and Order Status
          OrderStatusLogL.CreateOrderStatus(
            1,parSalesLine."Purchase Order No.",parSalesLine."Purch. Order Line No.",'60','CANCELED');
          EXIT(TRUE);
        END;
      //SO Order History Comments
      CommentLineL.InsertOrderHistory(parSalesLine."Document No.",'CANCDSHIP',STRSUBSTNO(Text004,parSalesLine."Line No."));
      //SO-DHL Status Logging
      //S/P1117
      //S/P1133
      IF FPCGeneralSetup."Active Parcel Status History" IN
        [FPCGeneralSetup."Active Parcel Status History"::"Use Only Old DHL Parcel Status History",
        FPCGeneralSetup."Active Parcel Status History"::"Fill Both But Show And Use Old",
        FPCGeneralSetup."Active Parcel Status History"::"Fill Both But Show And Use New"]
      THEN BEGIN
      //E/P1133
        CLEAR(DHLStatusLogL);
        DHLStatusLogL.INIT;
        DHLStatusLogL."Time Stamp":= CURRENTDATETIME;
        DHLStatusLogL."Document Type" := 1;
        DHLStatusLogL."Document No." := parSalesLine."Document No.";
        DHLStatusLogL."Document Line No.":=parSalesLine."Line No.";
        DHLStatusLogL."Status Drop Shipment":=TRUE;
        DHLStatusLogL."Drop Shipment Status Desc." := 'DS-/Special Order canceled';
        DHLStatusLogL.INSERT;
      //S/P1133
      END;

      IF FPCGeneralSetup."Active Parcel Status History" IN
        [FPCGeneralSetup."Active Parcel Status History"::"Fill Both But Show And Use Old",
         FPCGeneralSetup."Active Parcel Status History"::"Fill Both But Show And Use New",
         FPCGeneralSetup."Active Parcel Status History"::"Use Only New Parcel Status History"]
      THEN BEGIN
      //E/P1133
        CLEAR(CUParcelStatusHistoryMgmt);
        RecRef.GETTABLE(parSalesLine);
        CUParcelStatusHistoryMgmt.FillHistoryByDocLine(
          RecRef,                         // Rec
          0,                              // p_Command
          1,                              // p_InfoDirection::  Incoming,Outgoing
          4,                              // p_UsedInterface::  ,EDI,DHL,DocData,Drop Shipment,Rhenus,UPS
          '',                             // p_ShippingAgentCode
          '',                             // p_TrackingCode
          '',                             // p_PieceCode
          '',                             // p_StatusCode
          '',                             // p_StatusRICCode
          'DS-/Special Order canceled',   // p_Comment
          2);                             // p_HowToHandleStatusDescription
      //S/P1133
      END;
      //E/P1133
      //E/P1117
    END;

    PROCEDURE CancelOrder@1000000002();
    BEGIN
      // CancelOrder
      // hcn 14.5.2014: according to R.Stegmann this function is and will not be used
      // S/P1092
      BoolCancelOrder := TRUE;
      // E/P1092
    END;

    PROCEDURE SetBypassConfirmCancelLine@1000000003();
    BEGIN
      // SetBypassFinalizeCancelLine
      //H0587 14.05.14 HCN +++++++++++++++++++++++++++++
      BypassConfirmCancelLine := TRUE;
      //H0587 14.05.14 HCN -----------------------------
    END;

    PROCEDURE SetCancellationMode@1000000025(CancellationModeV@1000000000 : ' ,ManualRequestCancel,ManualConfirmCancel');
    BEGIN
      // SetCancellationMode
      //H0587 18.06.14 HCN +++++++++++++++++++++++++++++
      CancellationMode := CancellationModeV
      //H0587 18.06.14 HCN -----------------------------
    END;

    PROCEDURE UploadChannelChange@1000000006(VAR ImpSLChannelChange@1000000000 : Record 50174);
    VAR
      ImpSLChannelChange2@1000000006 : Record 50174;
      SalesHeaderTemp@1000000001 : TEMPORARY Record 36;
      SalesHeader@1000000003 : Record 36;
      SalesLine@1000000002 : Record 37;
      Error001@1000000004 : TextConst 'ENU=There is no imported line that could be processed.';
      ChannelMgt@1000000005 : Codeunit 50093;
      Text001@1000000007 : TextConst 'ENU=Channel Change finished.';
    BEGIN
      // S/P1266
      //ImpSLChannelChange.SETRANGE("Import Status",ImpSLChannelChange."Import Status"::Open);
      //ImpSLChannelChange.SETRANGE("Process Status",ImpSLChannelChange."Process Status"::" ");

      // Collect all affected sales orders
      IF ImpSLChannelChange.FINDSET THEN
        REPEAT
          SalesHeaderTemp.INIT;
          SalesHeaderTemp."Document Type" := SalesHeaderTemp."Document Type"::Order;
          SalesHeaderTemp."No." := ImpSLChannelChange."Order No.";
          IF SalesHeaderTemp.INSERT THEN;
        UNTIL ImpSLChannelChange.NEXT = 0
      ELSE
        ERROR(Error001);

      IF SalesHeaderTemp.FINDSET THEN
        REPEAT
          // Clear New Purchasing Codes in Sales Lines
          SalesLine.SETRANGE("Document Type",SalesHeaderTemp."Document Type");
          SalesLine.SETRANGE("Document No.",SalesHeaderTemp."No.");
          SalesLine.MODIFYALL("New Purchasing Code",'');

          // Find all imported Sales Lines Channel Change by Sales Header
          ImpSLChannelChange.SETRANGE("Order No.",SalesHeaderTemp."No.");
          IF ImpSLChannelChange.FINDSET THEN
            REPEAT
              // Set New Purchasing Code in affected Sales Lines
              IF SalesLine.GET(SalesHeaderTemp."Document Type",ImpSLChannelChange."Order No.",ImpSLChannelChange."Order Line No.")
              THEN BEGIN
                SalesLine."New Purchasing Code" := ImpSLChannelChange."New Purchasing Code";
                SalesLine.MODIFY;
              END;
            UNTIL ImpSLChannelChange.NEXT = 0;

            // Make Channel Change
            IF SalesHeader.GET(SalesHeaderTemp."Document Type",SalesHeaderTemp."No.") THEN BEGIN
              // Check and Set Posting Date in Sales Header
              CheckAndSetPostingDate(SalesHeader);
              // !!!
              COMMIT; // For "New Purchase Code" in Sales Line and "Posting Date" in Sales Header
              ChannelMgt.SetIsBatch;
              IF ChannelMgt.RUN(SalesHeader) THEN BEGIN
                // Set Finish Status
                IF ImpSLChannelChange.FINDSET THEN
                  REPEAT
                    SetImportStatus(ImpSLChannelChange."Entry No.",1,'',0);
                    SetProcessStatus(ImpSLChannelChange."Entry No.",1,'',0);
                  UNTIL ImpSLChannelChange.NEXT = 0;
              END ELSE
                // Set Error Status
                IF ImpSLChannelChange.FINDSET THEN
                  REPEAT
                    SetImportStatus(ImpSLChannelChange."Entry No.",1,'',0);
                    SetProcessStatus(
                      ImpSLChannelChange."Entry No.",2,COPYSTR(GETLASTERRORTEXT,1,250),
                      GetNextErrorNo(ImpSLChannelChange."Entry No."));
                  UNTIL ImpSLChannelChange.NEXT = 0;
                END;
        UNTIL SalesHeaderTemp.NEXT = 0;
      MESSAGE(Text001);
      // E/P1266
    END;

    PROCEDURE CheckChannelChange@1000000008(VAR ImpSLChannelChange@1000000000 : Record 50174;OldChannel@1000000004 : Code[10];NewChannel@1000000011 : Code[10]);
    VAR
      SalesLine@1000000001 : Record 37;
      Error001@1000000003 : TextConst 'ENU=Sales Line not found.';
      Error002@1000000012 : TextConst 'ENU=The selected old channel during the import and the imported old channel are not equal.';
      Error003@1000000013 : TextConst 'ENU=The selected new channel during the import and the imported new channel are not equal.';
      Error004@1000000002 : TextConst 'ENU=Line yet cancelled.';
      SalesLine2@1000000008 : Record 37;
      DHLParcelStatusHistory@1000000007 : Record 50021;
      Error005@1000000005 : TextConst 'ENU=Line already on target channel.';
      Error006@1000000006 : TextConst 'ENU=Line with pending cancellation.';
      Error007@1000000010 : TextConst 'ENU=One or more DD positions are already transmitted, but not shipped. Please check this manually.';
      Error008@1000000014 : TextConst 'ENU=Channel in sales line is not equal to old channel in imported file.';
      SalesHeader@1000000015 : Record 36;
      Error009@1000000016 : TextConst 'ENU=The order line is associated with purchase order %1 line %2.';
      Error010@1000000017 : TextConst 'ENU="Status must be Released in Sales Header Document Type=''Order'', No.=''%1''."';
      DDLine@1000000018 : Record 50062;
    BEGIN
      // S/P1266

      SetImportStatus(ImpSLChannelChange."Entry No.",0,'',0);

      // 1. Check if sales line exists
      IF NOT SalesLine.GET(SalesLine."Document Type"::Order,ImpSLChannelChange."Order No.",ImpSLChannelChange."Order Line No.") THEN
      BEGIN
        SetImportStatus(ImpSLChannelChange."Entry No.",2,Error001,GetNextErrorNo(ImpSLChannelChange."Entry No."));
        EXIT;
      END;
      // 2. Check if old and new channel are correct
      IF ImpSLChannelChange."Old Purchasing Code" <> OldChannel THEN
        SetImportStatus(ImpSLChannelChange."Entry No.",2,Error002,GetNextErrorNo(ImpSLChannelChange."Entry No."));
      IF ImpSLChannelChange."New Purchasing Code" <> NewChannel THEN
        SetImportStatus(ImpSLChannelChange."Entry No.",2,Error003,GetNextErrorNo(ImpSLChannelChange."Entry No."));

      // 3. Check if quantity of line is zero
      IF SalesLine.Quantity = 0 THEN
        SetImportStatus(ImpSLChannelChange."Entry No.",2,Error004,GetNextErrorNo(ImpSLChannelChange."Entry No."));

      // 4. Check if the line is already on the target channel
      IF SalesLine."Purchasing Code" = ImpSLChannelChange."New Purchasing Code" THEN
        SetImportStatus(ImpSLChannelChange."Entry No.",2,Error005,GetNextErrorNo(ImpSLChannelChange."Entry No."));

      // 5. Check if the line has a pending cancellation
      IF (SalesLine."Return Type" = SalesLine."Return Type"::Cancelation) AND
         (SalesLine."Customer Prevention" = SalesLine."Customer Prevention"::"Not offered") AND
         (SalesLine.Quantity = 1)
      THEN
        SetImportStatus(ImpSLChannelChange."Entry No.",2,Error006,GetNextErrorNo(ImpSLChannelChange."Entry No."));

      // 6. Check DocData status for lines with channel -9 (min. status = 18)
      {
      SalesLine2.SETRANGE("Document Type",SalesLine2."Document Type"::Order);
      SalesLine2.SETRANGE("Document No.",SalesLine."Document No.");
      SalesLine2.SETFILTER("Line No.",'<>%1',SalesLine."Line No.");
      SalesLine2.SETFILTER("Purchasing Code",'*-9');
      IF NOT SalesLine2.ISEMPTY THEN
        IF SalesLine2.FINDSET THEN
          REPEAT
            DHLParcelStatusHistory.SETRANGE("Sale Order Code",SalesLine2."Document No.");
            DHLParcelStatusHistory.SETRANGE("Line No.",SalesLine2."Line No.");
            IF DHLParcelStatusHistory.FINDLAST THEN BEGIN
              IF DHLParcelStatusHistory."Docdate Status Code" <> '' THEN
                EVALUATE(IntStatusCode,DHLParcelStatusHistory."Docdate Status Code");
              IF IntStatusCode < 18 THEN
                SetImportStatus(ImpSLChannelChange."Entry No.",2,Error007,GetNextErrorNo(ImpSLChannelChange."Entry No."));
                EXIT;
            END;
          UNTIL SalesLine2.NEXT = 0;
      }
      SalesLine2.SETRANGE("Document Type",SalesLine2."Document Type"::Order);
      SalesLine2.SETRANGE("Document No.",SalesLine."Document No.");
      SalesLine2.SETFILTER("Line No.",'<>%1',SalesLine."Line No.");
      SalesLine2.SETFILTER("Purchasing Code",'*-9');
      IF NOT SalesLine2.ISEMPTY THEN
        IF SalesLine2.FINDSET THEN
          REPEAT
            DDLine.SETFILTER("Document No.",'%1',STRSUBSTNO('%1%2',FORMAT(SalesLine2."Document No."),'9*'));
            DDLine.SETRANGE("DD Pos. No.",SalesLine2."DD Pos No.");
            DDLine.SETRANGE("Record ID",'18');
            IF DDLine.ISEMPTY THEN BEGIN
              SetImportStatus(ImpSLChannelChange."Entry No.",2,Error007,GetNextErrorNo(ImpSLChannelChange."Entry No."));
              EXIT;
            END;
          UNTIL SalesLine2.NEXT = 0;

      // 7. Check if the old channel in sales line is equal to old channel in imported file
      IF SalesLine."Purchasing Code" <> ImpSLChannelChange."Old Purchasing Code" THEN
        SetImportStatus(ImpSLChannelChange."Entry No.",2,Error008,GetNextErrorNo(ImpSLChannelChange."Entry No."));

      // 8. Check if Sales Order is associated with purchase order
      IF  SalesLine."Purch. Order Line No." <> 0 THEN
        SetImportStatus(
          ImpSLChannelChange."Entry No.",2,
          STRSUBSTNO(Error009,SalesLine."Purchase Order No.",SalesLine."Purch. Order Line No."),
          GetNextErrorNo(ImpSLChannelChange."Entry No."));
      IF  SalesLine."Special Order Purch. Line No." <> 0 THEN
        SetImportStatus(
          ImpSLChannelChange."Entry No.",2,
          STRSUBSTNO(Error009,SalesLine."Special Order Purchase No.",SalesLine."Special Order Purch. Line No."),
          GetNextErrorNo(ImpSLChannelChange."Entry No."));

      // 9. Check is status is not released
      SalesHeader.GET(SalesLine."Document Type",SalesLine."Document No.");
      IF SalesHeader.Status <> SalesHeader.Status::Released THEN
        SetImportStatus(
          ImpSLChannelChange."Entry No.",2,STRSUBSTNO(Error010,SalesHeader."No."),
          GetNextErrorNo(ImpSLChannelChange."Entry No."));

      // E/P1266
    END;

    PROCEDURE SetImportStatus@1000000013(EntryNo@1000000004 : Integer;Status@1000000000 : Integer;Errortext@1000000001 : Text[250];ErrorNo@1000000002 : Integer);
    VAR
      ImpSLChannelChangeForErrors@1000000003 : Record 50174;
    BEGIN
      // S/P1266
      ImpSLChannelChangeForErrors.GET(EntryNo);
      CASE ErrorNo OF
        1: ImpSLChannelChangeForErrors."Error 1" := Errortext;
        2: ImpSLChannelChangeForErrors."Error 2" := Errortext;
        3: ImpSLChannelChangeForErrors."Error 3" := Errortext;
        4: ImpSLChannelChangeForErrors."Error 4" := Errortext;
        5: ImpSLChannelChangeForErrors."Error 5" := Errortext;
        6: ImpSLChannelChangeForErrors."Error 6" := Errortext;
        7: ImpSLChannelChangeForErrors."Error 7" := Errortext;
        8: ImpSLChannelChangeForErrors."Error 8" := Errortext;
      END;

      ImpSLChannelChangeForErrors."Import Datetime" := CURRENTDATETIME;
      ImpSLChannelChangeForErrors."Import User" := USERID;
      ImpSLChannelChangeForErrors."Import Status" := Status;    //0: Open, 1: Processed, 2: Failed
      ImpSLChannelChangeForErrors.MODIFY;
      // E/P1266
    END;

    PROCEDURE SetProcessStatus@1000000009(EntryNo@1000000004 : Integer;Status@1000000000 : Integer;Errortext@1000000001 : Text[250];ErrorNo@1000000002 : Integer);
    VAR
      ImpSLChannelChangeForErrors@1000000003 : Record 50174;
    BEGIN
      // S/P1266
      ImpSLChannelChangeForErrors.GET(EntryNo);
      CASE ErrorNo OF
        1: ImpSLChannelChangeForErrors."Error 1" := Errortext;
        2: ImpSLChannelChangeForErrors."Error 2" := Errortext;
        3: ImpSLChannelChangeForErrors."Error 3" := Errortext;
        4: ImpSLChannelChangeForErrors."Error 4" := Errortext;
        5: ImpSLChannelChangeForErrors."Error 5" := Errortext;
        6: ImpSLChannelChangeForErrors."Error 6" := Errortext;
        7: ImpSLChannelChangeForErrors."Error 7" := Errortext;
        8: ImpSLChannelChangeForErrors."Error 8" := Errortext;
      END;

      ImpSLChannelChangeForErrors."Process Datetime" := CURRENTDATETIME;
      ImpSLChannelChangeForErrors."Process User" := USERID;
      ImpSLChannelChangeForErrors."Process Status" := Status;    //0: '', 1: Finished, 2: Failed
      ImpSLChannelChangeForErrors.MODIFY;
      // E/P1266
    END;

    PROCEDURE GetNextErrorNo@1000000011(EntryNo@1000000000 : Integer) NextErrorNo : Integer;
    VAR
      ImpSLChannelChangeForErrors@1000000001 : Record 50174;
    BEGIN
      // S/P1266
      ImpSLChannelChangeForErrors.GET(EntryNo);
      IF ImpSLChannelChangeForErrors."Error 8" = '' THEN
        NextErrorNo := 8;

      IF ImpSLChannelChangeForErrors."Error 7" = '' THEN
        NextErrorNo := 7;

      IF ImpSLChannelChangeForErrors."Error 6" = '' THEN
        NextErrorNo := 6;

      IF ImpSLChannelChangeForErrors."Error 5" = '' THEN
        NextErrorNo := 5;

      IF ImpSLChannelChangeForErrors."Error 4" = '' THEN
        NextErrorNo := 4;

      IF ImpSLChannelChangeForErrors."Error 3" = '' THEN
        NextErrorNo := 3;

      IF ImpSLChannelChangeForErrors."Error 2" = '' THEN
        NextErrorNo := 2;

      IF ImpSLChannelChangeForErrors."Error 1" = '' THEN
        NextErrorNo := 1;
      // E/P1266
    END;

    PROCEDURE CheckAndSetPostingDate@1000000010(VAR SalesHeader@1000000000 : Record 36);
    BEGIN
      // S/P1266
      IF SalesHeader."Posting Date" <= DMY2DATE(14,DATE2DMY(WORKDATE,2),DATE2DMY(WORKDATE,3)) THEN BEGIN
        SalesHeader."Posting Date" := WORKDATE;
        SalesHeader.MODIFY;
      END;
      // E/P1266
    END;

    PROCEDURE SetIsBatch@1000000014();
    BEGIN
      // S/P1266
      IsBatch := TRUE;
      // E/P1266
    END;

    PROCEDURE CheckIfDSorCD@1000000100(SalesLineV@1000000000 : Record 37;VAR IsSpecialOrderR@1000000001 : Boolean);
    VAR
      PurchasingL@1000000002 : Record 5721;
    BEGIN
      // CheckIfDSorCD
      //H0587 21.07.14 HCN +++++++++++++++++++++++++++++
      PurchasingL.GET(SalesLineV."Purchasing Code");
      IF NOT (PurchasingL."Drop Shipment" OR PurchasingL."Special Order") THEN
        ERROR(TextHME001,SalesLineV."Purchasing Code");
      IsSpecialOrderR := PurchasingL."Special Order";
      //H0587 21.07.14 HCN -----------------------------
    END;

    PROCEDURE SetIsError@1000000015();
    BEGIN
      // S/P1266
      BoolIsError := TRUE;
      // E/P1266
    END;

    PROCEDURE GetIsError@1000000016() : Boolean;
    BEGIN
      // S/P1266
      EXIT(BoolIsError);
      // E/P1266
    END;

    BEGIN
    {
      +--------------------------------------------+
      |                                            |
      |                  Home24                    |
      |     Cooperation GOB & Home24 NAV Team      |
      |                                            |
      +--------------------------------------------+

      Project No. Date      Shortcut  Description

      _____________________________________________
      P0444       12.10.12  gob-dst   Nachziehen DD Bugfix Kanalumbuchung
      P0538       31.10.12  gob-rste  New Code for Channels GER-12, GER-13
      P0564       27.11.12  gob-rste  Fill Open Log for Changed Sales Line
      P0668       18.12.12  gob-sfe   DD Storno Bugfix
      P0751       22.01.12  gob-rste  Dont Cancel Order only if ChannelChange
      p0892       03.06.13  gob-mab   NewChannels Int. DS
      P1117       30.09.13  gob-mlan  - Redesign of "DHL Parcel Status History"
                                      - Code within with //S/P1117/++S+++++++ and //E/P1117/--E-------
                                        will be replaced by the new code and/or it will be deactivated
      P1133       07.11.13  gob-mlan  - Redesign of "DHL Parcel Status History"
      P1092       20.11.13  gob-ael   Wenn Auftragsstorno, soll MagentoCancel auch so aufgerufen werden
      P1136       20.11.13  gob-lku   Erweiterung fr CH Kan„le
      P1156       25.11.13  gob-ael   Crossdocking variabler mir Feldern
      P1156       03.12.13  gob-ael   CD Erweiterung fr šbergangsphase
      P1194       05.02.14  gob-lku   CD Erweiterung fr CH
      P1196       07.02.14  gob-rste  Don't check old rhenus interface
      P1203       14.02.14  gob-lku   CH-3 fix Cancellation
      P1230       09.04.14  gob-rste  Update Shipping Agent on Channel Change
      P1266       02.07.14  gob-ael   New functions: UploadChannelChange, CheckChannelChange, SetImportStatus, SetProcessStatus

      +--------------------------------------------+
      |                                            |
      |                  Home24                    |
      |       Internal Customizing by NAV-Team     |
      |                                            |
      +--------------------------------------------+

      Project No. Date     Shortcut   Description
      _____________________________________________

      H0006       09.10.12 RHO        Enhancements and Redesign of Function ChangeChannel - Change Channel 8->7;8->4;8->99
      H0065       29.10.12 RHO        Don't send E-Mail after changing to Channel99 if not conirmed
      H0001       28.09.12 RHO        New Functions for Cancelation of Drop Shipments: CancelDropShipment, AssignFunctionCode
                                      Moved from CU50003
      H0026       14.10.12 RHO        Bugfix for Function CancelDropShipment
      H0037       17.10.12 RHO        Skip MagentoCancel in ChangeChannel
      H0041       19.10.12 RHO        Change Channel 1,2,10 to 99
      H0665       13.03.14 FX         Change Channel Test
      H0639       28.10.13 FX         Extension of the Channel Change Comment in the Order History
      H1104       12.05.14 ARI        Proper cancellation of dropship Orders: Set Qty to Zero
      H0587       23.05.14 HCN        Redesign Cancellation Process
                                      Cleanup: all change marks older than 2013; functions cleaned: CancelDropShipment
      H1389       11.08.14 MSL        Carrier via SMT: 3) Validate proposed carrier per line
      H2164       03.03.03 DMO        MakeChangeChannel is modified: Order History creation for channel change is extended;
    }
    END.
  }
}

