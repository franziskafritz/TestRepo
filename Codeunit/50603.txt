OBJECT Codeunit 50603 IWS App Domain Data Handling
{
  OBJECT-PROPERTIES
  {
    Date=16.07.15;
    Time=12:05:55;
    Modified=Yes;
    Version List=HME4465,T0100;
  }
  PROPERTIES
  {
    TableNo=50601;
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text50000@1000000002 : TextConst 'ENU="Evaluation of Lead Time Calculation failed;"';
      Text50001@1000000001 : TextConst 'ENU=Compared to previous %1 Data there was no difference, Record will not be updated';
      Text50002@1000000003 : TextConst 'ENU=Error occurs during %1 of the current Entry in ebayNAVCWebshopItem';
      FPCGeneralSetup@1000000000 : Record 50055;
      ItemImportLogGlobalData@1000000007 : Record 50600;
      ErrorText@1000000004 : Text[250];
      Text50003@1000000005 : TextConst 'ENU=Error occurs during %1 the Data in Item Table!';
      Text50004@1000000006 : TextConst 'ENU="Transportation Type not found;"';
      TextHME001@1000000008 : TextConst 'ENU="Mapping of Shipping Agent Code failed;"';
      PurchSetup@1000000009 : Record 312;
      CurrencyCode@1000000010 : Code[10];

    PROCEDURE CompareEvaluatedEntries@1000000001(VAR ItemImportAppDomData@1000000003 : Record 50601);
    VAR
      ItemImportAppDomL@1000000007 : Record 50601;
    BEGIN
      //This Function compares the evaluated Entries with the latest evaluated entries.

      ItemImportAppDomL.SETFILTER("Attached to Request ID",'<%1',ItemImportAppDomData."Attached to Request ID");
      ItemImportAppDomL.SETRANGE(ItemNo,ItemImportAppDomData.ItemNo);
      ItemImportAppDomL.SETRANGE("Import Status",ItemImportAppDomL."Import Status"::Finished);
      ItemImportAppDomL.SETRANGE("App Domain",ItemImportAppDomData."App Domain");

      IF ItemImportAppDomL.FIND('+') THEN BEGIN
        IF (ItemImportAppDomData."Assembly Service" <> ItemImportAppDomL."Assembly Service") OR
           (ItemImportAppDomData."Destinations Custom Tariff No." <> ItemImportAppDomL."Destinations Custom Tariff No.") OR
           (ItemImportAppDomData."Preferential Product" <> ItemImportAppDomL."Preferential Product") OR
           (ItemImportAppDomData."Preferential Number" <> ItemImportAppDomL."Preferential Number") OR
           (ItemImportAppDomData.Price <> ItemImportAppDomL.Price) OR
           (ItemImportAppDomData."Special Price" <> ItemImportAppDomL."Special Price") OR
           (ItemImportAppDomData."Shop Currency" <> ItemImportAppDomL."Shop Currency") OR
           (ItemImportAppDomData.Currency <> ItemImportAppDomL.Currency) OR
           (ItemImportAppDomData."DS Cost" <> ItemImportAppDomL."DS Cost") OR
           (ItemImportAppDomData."DS Truck Haul" <> ItemImportAppDomL."DS Truck Haul") OR
           (ItemImportAppDomData."DS Customs Duties" <> ItemImportAppDomL."DS Customs Duties") OR
           (ItemImportAppDomData."DS Net Purch Price per Piece" <> ItemImportAppDomL."DS Net Purch Price per Piece") OR
           (ItemImportAppDomData."DS Net Purch Price per SKU" <> ItemImportAppDomL."DS Net Purch Price per SKU") OR
           (ItemImportAppDomData."DS Purchase Invoice Price" <> ItemImportAppDomL."DS Purchase Invoice Price") OR
           (ItemImportAppDomData."DS Net Net Purchase Price" <> ItemImportAppDomL."DS Net Net Purchase Price") OR
           (ItemImportAppDomData."DS Profit Contribution 2" <> ItemImportAppDomL."DS Profit Contribution 2") OR
           (ItemImportAppDomData."Rep Shipping Cost" <> ItemImportAppDomL."Rep Shipping Cost") OR
           (ItemImportAppDomData."Rep Truck Haul" <> ItemImportAppDomL."Rep Truck Haul") OR
           (ItemImportAppDomData."Rep Customs Duties" <> ItemImportAppDomL."Rep Customs Duties") OR
           (ItemImportAppDomData."Rep Net Purch Price per Piece" <> ItemImportAppDomL."Rep Net Purch Price per Piece") OR
           (ItemImportAppDomData."Rep Net Purch Price per SKU" <> ItemImportAppDomL."Rep Net Purch Price per SKU") OR
           (ItemImportAppDomData."Rep Purchase Invoice Price" <> ItemImportAppDomL."Rep Purchase Invoice Price") OR
           (ItemImportAppDomData."Rep Net Net Purchase Price" <> ItemImportAppDomL."Rep Net Net Purchase Price") OR
           (ItemImportAppDomData."Rep Profit Contribution 2" <> ItemImportAppDomL."Rep Profit Contribution 2") OR
           (ItemImportAppDomData."Transportation Type" <> ItemImportAppDomL."Transportation Type") OR
           (ItemImportAppDomData."Transportation Time" <> ItemImportAppDomL."Transportation Time") OR
           (ItemImportAppDomData."Evaluated Lead Time Calc min" <> ItemImportAppDomL."Evaluated Lead Time Calc min") OR
           (ItemImportAppDomData."Evaluated Lead Time Calc max" <> ItemImportAppDomL."Evaluated Lead Time Calc max") OR
           //H1388 25.08.14 MSL +++++++++++++++++++++++++++++++
           (ItemImportAppDomData."Webshop Shipping Module" <> ItemImportAppDomL."Webshop Shipping Module") OR
           //H1388 25.08.14 MSL -------------------------------
           //H1376       12.01.15  JM +++++++++++++++
           (ItemImportAppDomData."DS Line Discount Rate" <> ItemImportAppDomL."DS Line Discount Rate") OR
           (ItemImportAppDomData."Rep Line Discount Rate" <> ItemImportAppDomL."Rep Line Discount Rate") OR
           (ItemImportAppDomData."DS Invoice Discount Rate" <> ItemImportAppDomL."DS Invoice Discount Rate") OR
           (ItemImportAppDomData."Rep Invoice Discount Rate" <> ItemImportAppDomL."Rep Invoice Discount Rate") OR
           //H4165 21.05.15 TST +++++++++++++++++++++++++++++++
           //(ItemImportAppDomData."DS Actual Net Unit Costs" <> ItemImportAppDomL."DS Actual Net Unit Costs") OR
           //(ItemImportAppDomData."Rep Actual Net Unit Costs" <> ItemImportAppDomL."Rep Actual Net Unit Costs") OR
           (ItemImportAppDomData."DS Order Extra Cost" <> ItemImportAppDomL."DS Order Extra Cost") OR
           (ItemImportAppDomData."Rep Order Extra Cost" <> ItemImportAppDomL."Rep Order Extra Cost") OR
           //H4165 21.05.15 TST -------------------------------
           (ItemImportAppDomData."DS Payment Discount Rate" <> ItemImportAppDomL."DS Payment Discount Rate") OR
           (ItemImportAppDomData."Rep Payment Discount Rate" <> ItemImportAppDomL."Rep Payment Discount Rate") OR
           (ItemImportAppDomData."DS Extra Cost Supplier" <> ItemImportAppDomL."DS Extra Cost Supplier") OR
           (ItemImportAppDomData."Rep Extra Cost Supplier" <> ItemImportAppDomL."Rep Extra Cost Supplier") OR
           (ItemImportAppDomData."DS Purchase Currency" <> ItemImportAppDomL."DS Purchase Currency") OR
           (ItemImportAppDomData."Rep Purchase Currency" <> ItemImportAppDomL."Rep Purchase Currency") OR
           (ItemImportAppDomData."DS Simple Extra Costs" <> ItemImportAppDomL."DS Simple Extra Costs") OR
           (ItemImportAppDomData."Rep Simple Extra Costs" <> ItemImportAppDomL."Rep Simple Extra Costs") OR
           //H1376       12.01.15  JM ---------------
           //H1503 08.09.14 ARI +++++++++++++++++++++++++++++++
           (ItemImportAppDomData."Spare Part available" <> ItemImportAppDomL."Spare Part available") OR
           //H1503 08.09.14 ARI -------------------------------

           (ItemImportAppDomData."Evaluated Unit Price" <> ItemImportAppDomL."Evaluated Unit Price") THEN BEGIN
          ItemImportAppDomData."Import Status" := ItemImportAppDomData."Import Status"::Evaluated;
        END ELSE BEGIN
          ItemImportAppDomData."Import Status" := ItemImportAppDomData."Import Status"::Finished;
          ItemImportAppDomData."Import Error Text" := STRSUBSTNO(Text50001,'App Domain');
          ItemImportAppDomData."Modified on" := CURRENTDATETIME;
        END;
      END ELSE BEGIN
        ItemImportAppDomData."Import Status" := ItemImportAppDomData."Import Status"::Evaluated;
      END;
    END;

    PROCEDURE UpdateItemValues@1000000000(VAR ItemImportAppDomDataR@1000000000 : Record 50601);
    VAR
      NAVCWebShopItemL@1000000001 : Record 5251566;
    BEGIN
      //H1216 17.06.14 ARI +++++++++++++++++++++++++++++++
      NAVCWebShopItemL.LOCKTABLE;
      ItemImportLogGlobalData.GET(ItemImportAppDomDataR."Attached to Request ID");
      IF NAVCWebShopItemL.GET(FORMAT(ItemImportAppDomDataR."App Domain"),ItemImportAppDomDataR.ItemNo) THEN BEGIN
        ModifyWebShopItem(NAVCWebShopItemL,ItemImportAppDomDataR);
      END ELSE BEGIN
        InsertWebShopItem(ItemImportAppDomDataR);
      END;
      ModifyItem(ItemImportAppDomDataR);

      //H1590 26.02.15 TST +++++++++++++++++++++++++++++++
      UpdatePurchPrice(ItemImportAppDomDataR);
      //H1590 26.02.15 TST -------------------------------

      IF ErrorText <> '' THEN
        ERROR(ErrorText);
      //H1216 17.06.14 ARI -------------------------------
    END;

    PROCEDURE ModifyWebShopItem@1000000002(VAR NAVCWebShopItemR@1000000000 : Record 5251566;VAR ItemImportAppDomDataR@1000000001 : Record 50601);
    VAR
      DoModifyL@1000000002 : Boolean;
    BEGIN
      //H1216 17.06.14 ARI +++++++++++++++++++++++++++++++
      IF NAVCWebShopItemR."Tariff No. Destination" <> ItemImportAppDomDataR."Destinations Custom Tariff No." THEN BEGIN
        NAVCWebShopItemR."Tariff No. Destination" := ItemImportAppDomDataR."Destinations Custom Tariff No.";
        DoModifyL := TRUE;
      END;

      IF NAVCWebShopItemR."Item Unit of Measure Code" <> ItemImportLogGlobalData."Evaluated Unit of Measure" THEN BEGIN
         NAVCWebShopItemR."Item Unit of Measure Code" := ItemImportLogGlobalData."Evaluated Unit of Measure";
        DoModifyL := TRUE;
      END;

      IF NAVCWebShopItemR."Preferential Product" <> ItemImportAppDomDataR."Preferential Product" THEN BEGIN
        NAVCWebShopItemR."Preferential Product" := ItemImportAppDomDataR."Preferential Product";
        DoModifyL := TRUE;
      END;

      IF NAVCWebShopItemR."No. Preferential Product" <> ItemImportAppDomDataR."Preferential Number" THEN BEGIN
        NAVCWebShopItemR."No. Preferential Product" := ItemImportAppDomDataR."Preferential Number";
        DoModifyL := TRUE;
      END;

      IF NAVCWebShopItemR."Custom Duties DS" <> ItemImportAppDomDataR."DS Customs Duties" THEN BEGIN
        NAVCWebShopItemR."Custom Duties DS" := ItemImportAppDomDataR."DS Customs Duties";
        DoModifyL := TRUE;
      END;

      IF NAVCWebShopItemR."Custom Duties RE" <> ItemImportAppDomDataR."Rep Customs Duties" THEN BEGIN
        NAVCWebShopItemR."Custom Duties RE" := ItemImportAppDomDataR."Rep Customs Duties";
        DoModifyL := TRUE;
      END;

      IF NAVCWebShopItemR."Actual Absolute PC2 (Dropship)" <> ItemImportAppDomDataR."DS Profit Contribution 2" THEN BEGIN
        NAVCWebShopItemR."Actual Absolute PC2 (Dropship)" := ItemImportAppDomDataR."DS Profit Contribution 2";
        DoModifyL := TRUE;
      END;

      IF NAVCWebShopItemR."Actual Absolute PC2 (Reposito)" <> ItemImportAppDomDataR."Rep Profit Contribution 2" THEN BEGIN
        NAVCWebShopItemR."Actual Absolute PC2 (Reposito)" := ItemImportAppDomDataR."Rep Profit Contribution 2";
        DoModifyL := TRUE;
      END;

      IF NAVCWebShopItemR."Repository Net PP piece" <> ItemImportAppDomDataR."Rep Net Purch Price per Piece" THEN BEGIN
        NAVCWebShopItemR."Repository Net PP piece" := ItemImportAppDomDataR."Rep Net Purch Price per Piece";
        DoModifyL := TRUE;
      END;

      IF NAVCWebShopItemR."Repository Net PP SKU" <> ItemImportAppDomDataR."Rep Net Purch Price per SKU" THEN BEGIN
        NAVCWebShopItemR."Repository Net PP SKU" := ItemImportAppDomDataR."Rep Net Purch Price per SKU";
        DoModifyL := TRUE;
      END;

      IF NAVCWebShopItemR."Repository PP after Disc." <> ItemImportAppDomDataR."Rep Net Net Purchase Price" THEN BEGIN
        NAVCWebShopItemR."Repository PP after Disc." := ItemImportAppDomDataR."Rep Net Net Purchase Price";
        DoModifyL := TRUE;
      END;

      IF NAVCWebShopItemR."Repostory Purchase Inv. Price" <> ItemImportAppDomDataR."Rep Purchase Invoice Price" THEN BEGIN
        NAVCWebShopItemR."Repostory Purchase Inv. Price" := ItemImportAppDomDataR."Rep Purchase Invoice Price";
        DoModifyL := TRUE;
      END;

      IF NAVCWebShopItemR."DS Net PP piece" <> ItemImportAppDomDataR."DS Net Purch Price per Piece" THEN BEGIN
        NAVCWebShopItemR."DS Net PP piece" := ItemImportAppDomDataR."DS Net Purch Price per Piece";
        DoModifyL := TRUE;
      END;

      IF NAVCWebShopItemR."DS Net PP SKU" <> ItemImportAppDomDataR."DS Net Purch Price per SKU" THEN BEGIN
        NAVCWebShopItemR."DS Net PP SKU" := ItemImportAppDomDataR."DS Net Purch Price per SKU";
        DoModifyL := TRUE;
      END;

      IF NAVCWebShopItemR."DS PP after Disc." <> ItemImportAppDomDataR."DS Net Net Purchase Price" THEN BEGIN
        NAVCWebShopItemR."DS PP after Disc." := ItemImportAppDomDataR."DS Net Net Purchase Price";
        DoModifyL := TRUE;
      END;

      IF NAVCWebShopItemR."DS Purchase Inv. Price" <> ItemImportAppDomDataR."DS Purchase Invoice Price" THEN BEGIN
        NAVCWebShopItemR."DS Purchase Inv. Price" := ItemImportAppDomDataR."DS Purchase Invoice Price";
        DoModifyL := TRUE;
      END;

      IF NAVCWebShopItemR."Shop Currency" <> ItemImportAppDomDataR."Shop Currency" THEN BEGIN
        NAVCWebShopItemR."Shop Currency" := ItemImportAppDomDataR."Shop Currency";
        DoModifyL := TRUE;
      END;

      IF NAVCWebShopItemR.Currency <> ItemImportAppDomDataR.Currency THEN BEGIN
        NAVCWebShopItemR.Currency := ItemImportAppDomDataR.Currency;
        DoModifyL := TRUE;
      END;

      IF NAVCWebShopItemR."Transportation Type" <> ItemImportAppDomDataR."Evaluated Freight Type" THEN BEGIN
        NAVCWebShopItemR."Transportation Type" := ItemImportAppDomDataR."Evaluated Freight Type";
        DoModifyL := TRUE;
      END;

      IF NAVCWebShopItemR."Lead Time Calc min" <> ItemImportAppDomDataR."Evaluated Lead Time Calc min" THEN BEGIN
        NAVCWebShopItemR."Lead Time Calc min" := ItemImportAppDomDataR."Evaluated Lead Time Calc min";
        DoModifyL := TRUE;
      END;

      IF NAVCWebShopItemR."Lead Time Calc max" <> ItemImportAppDomDataR."Evaluated Lead Time Calc max" THEN BEGIN
        NAVCWebShopItemR."Lead Time Calc max" := ItemImportAppDomDataR."Evaluated Lead Time Calc max";
        DoModifyL := TRUE;
      END;

      IF NAVCWebShopItemR."Assembly Service SKU" <> ItemImportAppDomDataR."Assembly Service" THEN BEGIN
        NAVCWebShopItemR."Assembly Service SKU" := ItemImportAppDomDataR."Assembly Service";
        DoModifyL := TRUE;
      END;

      IF NAVCWebShopItemR."Truck Haul Cost DS" <> ItemImportAppDomDataR."DS Truck Haul" THEN BEGIN
        NAVCWebShopItemR.VALIDATE("Truck Haul Cost DS", ItemImportAppDomDataR."DS Truck Haul");
        DoModifyL := TRUE;
      END;

      IF NAVCWebShopItemR."Truck Haul Cost RE" <> ItemImportAppDomDataR."Rep Truck Haul" THEN BEGIN
        NAVCWebShopItemR.VALIDATE("Truck Haul Cost RE", ItemImportAppDomDataR."Rep Truck Haul");
        DoModifyL := TRUE;
      END;
      //H1376       12.01.15  JM +++++++++++++++ store AppDoamin depending Data, for static Data use Item
      IF NAVCWebShopItemR."DS Line Discount Rate" <> ItemImportAppDomDataR."DS Line Discount Rate" THEN BEGIN
        NAVCWebShopItemR.VALIDATE("DS Line Discount Rate", ItemImportAppDomDataR."DS Line Discount Rate");
        DoModifyL := TRUE;
      END;

      IF NAVCWebShopItemR."Rep Line Discount Rate" <> ItemImportAppDomDataR."Rep Line Discount Rate" THEN BEGIN
        NAVCWebShopItemR.VALIDATE("Rep Line Discount Rate", ItemImportAppDomDataR."Rep Line Discount Rate");
        DoModifyL := TRUE;
      END;

      IF NAVCWebShopItemR."DS Invoice Discount Rate" <> ItemImportAppDomDataR."DS Invoice Discount Rate" THEN BEGIN
        NAVCWebShopItemR.VALIDATE("DS Invoice Discount Rate", ItemImportAppDomDataR."DS Invoice Discount Rate");
        DoModifyL := TRUE;
      END;

      IF NAVCWebShopItemR."Rep Invoice Discount Rate" <> ItemImportAppDomDataR."Rep Invoice Discount Rate" THEN BEGIN
        NAVCWebShopItemR.VALIDATE("Rep Invoice Discount Rate", ItemImportAppDomDataR."Rep Invoice Discount Rate");
        DoModifyL := TRUE;
      END;

      //H4165 21.05.15 TST +++++++++++++++++++++++++++++++
      //IF NAVCWebShopItemR."DS Actual Net Unit Costs" <> ItemImportAppDomDataR."DS Actual Net Unit Costs" THEN BEGIN
      //  NAVCWebShopItemR.VALIDATE("DS Actual Net Unit Costs", ItemImportAppDomDataR."DS Actual Net Unit Costs");
      //  DoModifyL := TRUE;
      //END;
      //
      //IF NAVCWebShopItemR."Rep Actual Net Unit Costs" <> ItemImportAppDomDataR."Rep Actual Net Unit Costs" THEN BEGIN
      //  NAVCWebShopItemR.VALIDATE("Rep Actual Net Unit Costs", ItemImportAppDomDataR."Rep Actual Net Unit Costs");
      //  DoModifyL := TRUE;
      //END;
      IF NAVCWebShopItemR."DS Order Extra Cost" <> ItemImportAppDomDataR."DS Order Extra Cost" THEN BEGIN
        NAVCWebShopItemR.VALIDATE("DS Order Extra Cost", ItemImportAppDomDataR."DS Order Extra Cost");
        DoModifyL := TRUE;
      END;

      IF NAVCWebShopItemR."Rep Order Extra Cost" <> ItemImportAppDomDataR."Rep Order Extra Cost" THEN BEGIN
        NAVCWebShopItemR.VALIDATE("Rep Order Extra Cost", ItemImportAppDomDataR."Rep Order Extra Cost");
        DoModifyL := TRUE;
      END;
      //H4165 21.05.15 TST -------------------------------

      IF NAVCWebShopItemR."DS Payment Discount Rate" <> ItemImportAppDomDataR."DS Payment Discount Rate" THEN BEGIN
        NAVCWebShopItemR.VALIDATE("DS Payment Discount Rate", ItemImportAppDomDataR."DS Payment Discount Rate");
        DoModifyL := TRUE;
      END;

      IF NAVCWebShopItemR."Rep Payment Discount Rate" <> ItemImportAppDomDataR."Rep Payment Discount Rate" THEN BEGIN
        NAVCWebShopItemR.VALIDATE("Rep Payment Discount Rate", ItemImportAppDomDataR."Rep Payment Discount Rate");
        DoModifyL := TRUE;
      END;

      IF NAVCWebShopItemR."DS Delivery Costs Supplier" <> ItemImportAppDomDataR."DS Extra Cost Supplier" THEN BEGIN
        NAVCWebShopItemR.VALIDATE("DS Delivery Costs Supplier", ItemImportAppDomDataR."DS Extra Cost Supplier");
        DoModifyL := TRUE;
      END;

      IF NAVCWebShopItemR."Rep Delivery Costs Supplier" <> ItemImportAppDomDataR."Rep Extra Cost Supplier" THEN BEGIN
        NAVCWebShopItemR.VALIDATE("Rep Delivery Costs Supplier", ItemImportAppDomDataR."Rep Extra Cost Supplier");
        DoModifyL := TRUE;
      END;

      IF NAVCWebShopItemR."DS Purchase Currency" <> ItemImportAppDomDataR."DS Purchase Currency" THEN BEGIN
        NAVCWebShopItemR.VALIDATE("DS Purchase Currency", ItemImportAppDomDataR."DS Purchase Currency");
        DoModifyL := TRUE;
      END;

      IF NAVCWebShopItemR."Rep Purchase Currency" <> ItemImportAppDomDataR."Rep Purchase Currency" THEN BEGIN
        NAVCWebShopItemR.VALIDATE("Rep Purchase Currency", ItemImportAppDomDataR."Rep Purchase Currency");
        DoModifyL := TRUE;
      END;

      IF NAVCWebShopItemR."DS Simple Extra Costs" <> ItemImportAppDomDataR."DS Simple Extra Costs" THEN BEGIN
        NAVCWebShopItemR.VALIDATE("DS Simple Extra Costs", ItemImportAppDomDataR."DS Simple Extra Costs");
        DoModifyL := TRUE;
      END;

      IF NAVCWebShopItemR."Rep Simple Extra Costs" <> ItemImportAppDomDataR."Rep Simple Extra Costs" THEN BEGIN
        NAVCWebShopItemR.VALIDATE("Rep Simple Extra Costs", ItemImportAppDomDataR."Rep Simple Extra Costs");
        DoModifyL := TRUE;
      END;
      //H1376       12.01.15  JM ---------------

      //H1846,H1834,H1388 09.12.14 MSL +++++++++++++++++++++++++++++++
      IF NAVCWebShopItemR."Shipping Agent Code" <> ItemImportAppDomDataR."Evaluated Ship. Agent Code" THEN BEGIN
        NAVCWebShopItemR.VALIDATE("Shipping Agent Code",ItemImportAppDomDataR."Evaluated Ship. Agent Code");
        DoModifyL := TRUE;
      END;
      //H1846,H1834,H1388 09.12.14 MSL -------------------------------


      //H1503 08.09.14 ARI +++++++++++++++++++++++++++++++
      IF NAVCWebShopItemR."Spare Part available" <> ItemImportAppDomDataR."Spare Part available" THEN BEGIN
        NAVCWebShopItemR."Spare Part available" := ItemImportAppDomDataR."Spare Part available";
        DoModifyL := TRUE;
      END;
      //H1503 08.09.14 ARI -------------------------------

      //T0100 26.02.15 RST +++++++++++++++++++++++++++++++
      IF NAVCWebShopItemR."Repurchase Rate" <> ItemImportAppDomDataR."Repurchase Rate" THEN BEGIN
        NAVCWebShopItemR."Repurchase Rate" := ItemImportAppDomDataR."Repurchase Rate";
        DoModifyL := TRUE;
      END;
      //T0100 26.02.15 RST -------------------------------
      IF DoModifyL THEN
        IF NAVCWebShopItemR.MODIFY THEN BEGIN
          ItemImportAppDomDataR."Import Status" := ItemImportAppDomDataR."Import Status"::Finished;
          ItemImportAppDomDataR."Modified on" := CURRENTDATETIME;
        END ELSE BEGIN
          ErrorText := STRSUBSTNO(Text50002,'modifiying');
          ItemImportAppDomDataR."Modified on" := CURRENTDATETIME;
        END;
      //H1216 17.06.14 -------------------------------
    END;

    PROCEDURE InsertWebShopItem@1000000004(VAR ItemImportAppDomDataR@1000000000 : Record 50601);
    VAR
      NAVCWebShopItemL@1000000001 : Record 5251566;
    BEGIN
      //H1216 17.06.14 +++++++++++++++++++++++++++++++
      NAVCWebShopItemL.INIT;
      NAVCWebShopItemL.SKU := ItemImportAppDomDataR.ItemNo;
      NAVCWebShopItemL."Webshop Code" := FORMAT(ItemImportAppDomDataR."App Domain");

      IF NAVCWebShopItemL.INSERT THEN BEGIN
        ItemImportAppDomDataR."Import Status" := ItemImportAppDomDataR."Import Status"::Finished;
        ItemImportAppDomDataR."Modified on" := CURRENTDATETIME;
      END ELSE BEGIN
        ErrorText := STRSUBSTNO(Text50002,'insertion');
        ItemImportAppDomDataR."Modified on" := CURRENTDATETIME;
      END;

      NAVCWebShopItemL.VALIDATE("Item No.",ItemImportAppDomDataR.ItemNo);
      NAVCWebShopItemL.SKU := ItemImportAppDomDataR.ItemNo;
      NAVCWebShopItemL."Item Unit of Measure Code" := ItemImportLogGlobalData."Evaluated Unit of Measure";
      NAVCWebShopItemL."Tariff No. Destination" := ItemImportAppDomDataR."Destinations Custom Tariff No.";
      NAVCWebShopItemL."Preferential Product" := ItemImportAppDomDataR."Preferential Product";
      NAVCWebShopItemL."No. Preferential Product" := ItemImportAppDomDataR."Preferential Number";
      NAVCWebShopItemL."Custom Duties DS" := ItemImportAppDomDataR."DS Customs Duties";
      NAVCWebShopItemL."Custom Duties RE" := ItemImportAppDomDataR."Rep Customs Duties";
      NAVCWebShopItemL."Actual Absolute PC2 (Dropship)" := ItemImportAppDomDataR."DS Profit Contribution 2";
      NAVCWebShopItemL."Actual Absolute PC2 (Reposito)" := ItemImportAppDomDataR."Rep Profit Contribution 2";
      NAVCWebShopItemL."Repository Net PP piece" := ItemImportAppDomDataR."Rep Net Purch Price per Piece";
      NAVCWebShopItemL."Repository Net PP SKU" := ItemImportAppDomDataR."Rep Net Purch Price per SKU";
      NAVCWebShopItemL."Repository PP after Disc." := ItemImportAppDomDataR."Rep Net Net Purchase Price";
      NAVCWebShopItemL."Repostory Purchase Inv. Price" := ItemImportAppDomDataR."Rep Purchase Invoice Price";
      NAVCWebShopItemL."DS Net PP piece" := ItemImportAppDomDataR."DS Net Purch Price per Piece";
      NAVCWebShopItemL."DS Net PP SKU" := ItemImportAppDomDataR."DS Net Purch Price per SKU";
      NAVCWebShopItemL."DS PP after Disc." := ItemImportAppDomDataR."DS Net Net Purchase Price";
      NAVCWebShopItemL."DS Purchase Inv. Price" := ItemImportAppDomDataR."DS Purchase Invoice Price";
      NAVCWebShopItemL."Shop Currency" := ItemImportAppDomDataR."Shop Currency";
      NAVCWebShopItemL.Currency := ItemImportAppDomDataR.Currency;
      NAVCWebShopItemL."Transportation Type" := ItemImportAppDomDataR."Evaluated Freight Type";
      NAVCWebShopItemL."Lead Time Calc min" := ItemImportAppDomDataR."Evaluated Lead Time Calc min";
      NAVCWebShopItemL."Lead Time Calc max" := ItemImportAppDomDataR."Evaluated Lead Time Calc max";
      NAVCWebShopItemL."Assembly Service SKU" := ItemImportAppDomDataR."Assembly Service";
      //H1846,H1834,H1388 09.12.14 MSL +++++++++++++++++++++++++++++++
      NAVCWebShopItemL."Shipping Agent Code" := ItemImportAppDomDataR."Evaluated Ship. Agent Code";
      //H1846,H1834,H1388 09.12.14 MSL -------------------------------
      //H1503 08.09.14 ARI +++++++++++++++++++++++++++++++
      NAVCWebShopItemL."Spare Part available" := ItemImportAppDomDataR."Spare Part available";
      //H1503 08.09.14 ARI -------------------------------

      //T0100 26.02.15 RST +++++++++++++++++++++++++++++++
      NAVCWebShopItemL."Repurchase Rate" := ItemImportAppDomDataR."Repurchase Rate";
      //T0100 26.02.15 RST -------------------------------

      NAVCWebShopItemL.VALIDATE("Truck Haul Cost DS",ItemImportAppDomDataR."DS Truck Haul");
      NAVCWebShopItemL.VALIDATE("Truck Haul Cost RE",ItemImportAppDomDataR."Rep Truck Haul");
      //H1376       12.01.15  JM +++++++++++++++ store AppDoamin depending Data, for static Data use Item
      NAVCWebShopItemL.VALIDATE("DS Line Discount Rate", ItemImportAppDomDataR."DS Line Discount Rate");
      NAVCWebShopItemL.VALIDATE("Rep Line Discount Rate", ItemImportAppDomDataR."Rep Line Discount Rate");
      NAVCWebShopItemL.VALIDATE("DS Invoice Discount Rate", ItemImportAppDomDataR."DS Invoice Discount Rate");
      NAVCWebShopItemL.VALIDATE("Rep Invoice Discount Rate", ItemImportAppDomDataR."Rep Invoice Discount Rate");
      //H4165 21.05.15 TST +++++++++++++++++++++++++++++++
      //NAVCWebShopItemL.VALIDATE("DS Actual Net Unit Costs", ItemImportAppDomDataR."DS Actual Net Unit Costs");
      //NAVCWebShopItemL.VALIDATE("Rep Actual Net Unit Costs", ItemImportAppDomDataR."Rep Actual Net Unit Costs");
      NAVCWebShopItemL.VALIDATE("DS Order Extra Cost", ItemImportAppDomDataR."DS Order Extra Cost");
      NAVCWebShopItemL.VALIDATE("Rep Order Extra Cost", ItemImportAppDomDataR."Rep Order Extra Cost");
      //H4165 21.05.15 TST -------------------------------
      NAVCWebShopItemL.VALIDATE("DS Payment Discount Rate", ItemImportAppDomDataR."DS Payment Discount Rate");
      NAVCWebShopItemL.VALIDATE("Rep Payment Discount Rate", ItemImportAppDomDataR."Rep Payment Discount Rate");
      NAVCWebShopItemL.VALIDATE("DS Delivery Costs Supplier", ItemImportAppDomDataR."DS Extra Cost Supplier");
      NAVCWebShopItemL.VALIDATE("Rep Delivery Costs Supplier", ItemImportAppDomDataR."Rep Extra Cost Supplier");
      NAVCWebShopItemL.VALIDATE("DS Purchase Currency", ItemImportAppDomDataR."DS Purchase Currency");
      NAVCWebShopItemL.VALIDATE("Rep Purchase Currency", ItemImportAppDomDataR."Rep Purchase Currency");
      NAVCWebShopItemL.VALIDATE("DS Simple Extra Costs", ItemImportAppDomDataR."DS Simple Extra Costs");
      NAVCWebShopItemL.VALIDATE("Rep Simple Extra Costs", ItemImportAppDomDataR."Rep Simple Extra Costs");
      //H1376       12.01.15  JM ---------------

      NAVCWebShopItemL.MODIFY;
      //H1216 17.06.14 -------------------------------
    END;

    PROCEDURE ModifyItem@1000000006(VAR ItemImportAppDomDataR@1000000000 : Record 50601);
    VAR
      ItemL@1000000001 : Record 27;
      DoModifyL@1000000002 : Boolean;
    BEGIN
      //H1216 17.06.14 +++++++++++++++++++++++++++++++
      IF ItemImportAppDomDataR."App Domain" = 1 THEN BEGIN
        ItemL.LOCKTABLE;
        IF ItemL.GET(ItemImportAppDomDataR.ItemNo) THEN BEGIN

          IF ItemL."Net PP piece" <> ItemImportAppDomDataR."DS Net Purch Price per Piece" THEN BEGIN
            ItemL."Net PP piece" := ItemImportAppDomDataR."DS Net Purch Price per Piece";
            DoModifyL := TRUE
          END;

          IF ItemL."Net PP SKU" <> ItemImportAppDomDataR."DS Net Purch Price per SKU" THEN BEGIN
            ItemL.VALIDATE(ItemL."Net PP SKU",ItemImportAppDomDataR."DS Net Purch Price per SKU");
            DoModifyL := TRUE
          END;

          IF ItemL."PP after Discount" <> ItemImportAppDomDataR."DS Net Net Purchase Price" THEN BEGIN
            ItemL."PP after Discount" := ItemImportAppDomDataR."DS Net Net Purchase Price";
            DoModifyL := TRUE
          END;

          IF ItemL."Repository Net PP piece" <> ItemImportAppDomDataR."Rep Net Purch Price per Piece" THEN BEGIN
            ItemL."Repository Net PP piece" := ItemImportAppDomDataR."Rep Net Purch Price per Piece";
            DoModifyL := TRUE
          END;

          IF ItemL."Repository Net PP SKU" <> ItemImportAppDomDataR."Rep Net Purch Price per SKU" THEN BEGIN
            ItemL.VALIDATE("Repository Net PP SKU",ItemImportAppDomDataR."Rep Net Purch Price per SKU");
            DoModifyL := TRUE
          END;

          IF ItemL."Repository PP after Disc." <> ItemImportAppDomDataR."Rep Net Net Purchase Price" THEN BEGIN
            ItemL."Repository PP after Disc." := ItemImportAppDomDataR."Rep Net Net Purchase Price";
            DoModifyL := TRUE
          END;

          IF ItemL."Assembly Service Code" <> ItemImportAppDomDataR."Assembly Service" THEN BEGIN
            ItemL."Assembly Service Code" := ItemImportAppDomDataR."Assembly Service";
            DoModifyL := TRUE
          END;

          IF ItemL."Unit Price" <> ItemImportAppDomDataR."Evaluated Unit Price" THEN BEGIN
            ItemL."Unit Price" := ItemImportAppDomDataR."Evaluated Unit Price";
            DoModifyL := TRUE
          END;

          IF ItemL."Shipping Code" <> ItemImportAppDomDataR."Evaluated Freight Type" THEN BEGIN
            ItemL."Shipping Code" := ItemImportAppDomDataR."Evaluated Freight Type";
            DoModifyL := TRUE
          END;

          IF ItemL."Lead Time Calculation (min.)" <> ItemImportAppDomDataR."Evaluated Lead Time Calc min" THEN BEGIN
            ItemL."Lead Time Calculation (min.)" := ItemImportAppDomDataR."Evaluated Lead Time Calc min";
            DoModifyL := TRUE
          END;

          IF ItemL."Lead Time Calculation (max.)" <> ItemImportAppDomDataR."Evaluated Lead Time Calc max" THEN BEGIN
            ItemL."Lead Time Calculation (max.)" := ItemImportAppDomDataR."Evaluated Lead Time Calc max";
            DoModifyL := TRUE
          END;

          IF DoModifyL THEN
            IF NOT ItemL.MODIFY THEN
              ErrorText := STRSUBSTNO(Text50003,'modifiying');
        END;
      END;
      //H1216 17.06.14 -------------------------------
    END;

    PROCEDURE EvaluateData@1000000005(VAR IILAppDomDataR@1000000000 : Record 50601;VAR ErrorMessageR@1000000003 : Text[250]);
    VAR
      DateFormularL@1000000002 : DateFormula;
      eBayCodeL@1000000001 : Record 5095817;
    BEGIN
      //H1422 19.09.14 ARI ++++++++++++++++++++++++++++++++++++++++++++
      ErrorMessageR := '';

      IF EVALUATE(DateFormularL,'<'+ FORMAT(IILAppDomDataR."Transportation Time") + 'D>') THEN BEGIN
        IILAppDomDataR."Evaluated Lead Time Calc min" := DateFormularL;
        IILAppDomDataR."Evaluated Lead Time Calc max" := DateFormularL;
      END ELSE BEGIN
        ErrorMessageR := ErrorMessageR + COPYSTR(Text50000,1,MAXSTRLEN(IILAppDomDataR."Import Error Text"));
      END;

      IF IILAppDomDataR."Special Price" <> 0 THEN
        IILAppDomDataR."Evaluated Unit Price" := ROUND(IILAppDomDataR."Special Price", 0.01)
      ELSE
        IILAppDomDataR."Evaluated Unit Price" := ROUND(IILAppDomDataR.Price, 0.01);

      eBayCodeL.SETRANGE(Type,eBayCodeL.Type::"Shipping Code");
      eBayCodeL.SETRANGE("WS Match Shipping Code",UPPERCASE(IILAppDomDataR."Transportation Type"));
      IF eBayCodeL.FIND('-') THEN
        IILAppDomDataR."Evaluated Freight Type" := eBayCodeL.Code
      ELSE
        ErrorMessageR := ErrorMessageR + COPYSTR(Text50004,1,MAXSTRLEN(IILAppDomDataR."Import Error Text"));

      //H1846 09.12.14 MSL ++++++++++++++++++++++++++++++++
      ApplyShippingAgentMapping(IILAppDomDataR, ErrorMessageR);
      //H1846 09.12.14 MSL --------------------------------

      IILAppDomDataR."Modified on" := CURRENTDATETIME;

      IF ErrorMessageR = '' THEN BEGIN
        IILAppDomDataR."Import Status" := IILAppDomDataR."Import Status"::Evaluated;
        IILAppDomDataR.MODIFY;
      END;
      //H1422 19.09.14 ARI --------------------------------------------
    END;

    PROCEDURE ApplyShippingAgentMapping@1119455022(VAR ItemImportAppDomDataR@1119455000 : Record 50601;VAR ErrorMessageR@1000000000 : Text[250]);
    VAR
      eBayNavCShippingModuleL@1119455002 : Record 5251557;
      eBayNavCWebshopL@1119455003 : Record 5251553;
    BEGIN
      //H1846,H1834 20.11.14 MSL ++++++++++++++++++++++++++++++++++++++++
      eBayNavCWebshopL.GET(FORMAT(ItemImportAppDomDataR."App Domain"));
      IF NOT eBayNavCWebshopL."Ignore Webshop Shipping Types" THEN
        IF eBayNavCShippingModuleL.GET(FORMAT(ItemImportAppDomDataR."App Domain"),ItemImportAppDomDataR."Webshop Shipping Module") THEN
          ItemImportAppDomDataR.VALIDATE("Evaluated Ship. Agent Code",eBayNavCShippingModuleL."Shipping Agent Code")
        ELSE
          ErrorMessageR := ErrorMessageR + COPYSTR(TextHME001,1,MAXSTRLEN(ItemImportAppDomDataR."Import Error Text"));
      //H1846,H1834 20.11.14 MSL ----------------------------------------
    END;

    PROCEDURE UpdatePurchPrice@1000000003(IWSAppDomainDataV@1000000000 : Record 50601);
    VAR
      IWSGlobalDataL@1000000006 : Record 50600;
      VendInvDiscL@1000000001 : Record 24;
      PurchPriceL@1000000002 : Record 7012;
      PurchLineDiscL@1000000003 : Record 7014;
      ChargePerItemL@1000000004 : Record 50606;
      ItemL@1000000007 : Record 27;
      VendPurchPriceSetupL@1000000008 : Record 50805;
      GLSetup@1000000005 : Record 98;
      PurchasePriceSetupL@1000000009 : Record 50840;
      RepositoryInvoiceDiscountRateL@1000000010 : Decimal;
      DropshipInvoiceDiscountRateL@1000000011 : Decimal;
      RepositoryPaymentDiscountRateL@1000000012 : Decimal;
      DropshipPaymentDiscountRateL@1000000013 : Decimal;
    BEGIN
      //H1590 26.02.15 TST +++++++++++++++++++++++++++++++
      GetPurchSetup();

      IF IWSGlobalDataL."Request ID" <> IWSAppDomainDataV."Attached to Request ID" THEN
        IWSGlobalDataL.GET(IWSAppDomainDataV."Attached to Request ID");

      IF NOT VendPurchPriceSetupL.GET(IWSGlobalDataL."Vendor No.") THEN
        CLEAR(VendPurchPriceSetupL);

      IF NOT ItemL.GET(IWSAppDomainDataV.ItemNo) THEN
        EXIT;

      CurrencyCode := IWSAppDomainDataV.Currency;

      GLSetup.GET;

      IF CurrencyCode = GLSetup."LCY Code" THEN
        CurrencyCode := '';


      //H4334 05.06.15 ARI +++++++++++++++++++++++++++
      CLEAR(RepositoryInvoiceDiscountRateL);
      CLEAR(DropshipInvoiceDiscountRateL);
      CLEAR(RepositoryPaymentDiscountRateL);
      CLEAR(DropshipPaymentDiscountRateL);
      CLEAR(PurchasePriceSetupL);

      PurchasePriceSetupL.GET;

      IF PurchasePriceSetupL."Vendor Invoice Discount Factor" <> 0 THEN BEGIN
        RepositoryInvoiceDiscountRateL := (IWSAppDomainDataV."Rep Invoice Discount Rate" /
                                          PurchasePriceSetupL."Vendor Invoice Discount Factor");

        DropshipInvoiceDiscountRateL := (IWSAppDomainDataV."DS Invoice Discount Rate" /
                                        PurchasePriceSetupL."Vendor Invoice Discount Factor");
      END ELSE BEGIN
        RepositoryInvoiceDiscountRateL := IWSAppDomainDataV."Rep Invoice Discount Rate";
        DropshipInvoiceDiscountRateL := IWSAppDomainDataV."DS Invoice Discount Rate";
      END;

      IF PurchasePriceSetupL."Vendor Payment Discount Factor" <> 0 THEN BEGIN
        RepositoryPaymentDiscountRateL := (IWSAppDomainDataV."Rep Payment Discount Rate" /
                                          PurchasePriceSetupL."Vendor Payment Discount Factor");

        DropshipPaymentDiscountRateL := (IWSAppDomainDataV."DS Payment Discount Rate" /
                                        PurchasePriceSetupL."Vendor Payment Discount Factor");
      END ELSE BEGIN
        RepositoryPaymentDiscountRateL := IWSAppDomainDataV."Rep Payment Discount Rate";
        DropshipPaymentDiscountRateL := IWSAppDomainDataV."DS Payment Discount Rate";
      END;

      UpdateVendorInvoiceDiscount(IWSAppDomainDataV,IWSGlobalDataL."Vendor No.",1,RepositoryInvoiceDiscountRateL,
                                  RepositoryPaymentDiscountRateL);

      UpdateVendorInvoiceDiscount(IWSAppDomainDataV,IWSGlobalDataL."Vendor No.",2,DropshipInvoiceDiscountRateL,
                                  DropshipPaymentDiscountRateL);

      //H4334 05.06.15 ARI ---------------------------

      //H4165 21.05.15 TST +++++++++++++++++++++++++++++++
      //H4465 16.07.15 TST +++++++++++++++++++++++++++++++
      //SetPurchasePrice(IWSAppDomainDataV,ItemL."Purch. Unit of Measure",IWSGlobalDataL."Vendor No.",1,
      //                 IWSAppDomainDataV."Rep Net Purch Price per SKU",IWSAppDomainDataV."Rep Actual Net Unit Costs");
      //H4465 16.07.15 TST +++++++++++++++++++++++++++++++

      //SetPurchasePrice(IWSAppDomainDataV,ItemL."Purch. Unit of Measure",IWSGlobalDataL."Vendor No.",2,
      //                 IWSAppDomainDataV."DS Net Purch Price per SKU",IWSAppDomainDataV."DS Actual Net Unit Costs");
      //
      SetPurchasePrice(IWSAppDomainDataV,ItemL."Purch. Unit of Measure",IWSGlobalDataL."Vendor No.",1,
                       IWSAppDomainDataV."Rep Net Purch Price per SKU",0);
      SetPurchasePrice(IWSAppDomainDataV,ItemL."Purch. Unit of Measure",IWSGlobalDataL."Vendor No.",2,
                       IWSAppDomainDataV."DS Net Purch Price per SKU",0);
      //H4165 21.05.15 TST -------------------------------

      SetPurchaseLineDiscounts(IWSAppDomainDataV,ItemL."Purch. Unit of Measure",IWSGlobalDataL."Vendor No.",1,
                               IWSAppDomainDataV."Rep Line Discount Rate");

      SetPurchaseLineDiscounts(IWSAppDomainDataV,ItemL."Purch. Unit of Measure",IWSGlobalDataL."Vendor No.",2,
                               IWSAppDomainDataV."DS Line Discount Rate");

      //H4317 08.06.15 TST +++++++++++++++++++++++++++++++
      SetItemChargesperItem(IWSAppDomainDataV,ItemL."Purch. Unit of Measure",IWSGlobalDataL."Vendor No.",1,
                            IWSAppDomainDataV."Rep Simple Extra Costs",PurchSetup."Item Charge Simple Cost");

      SetItemChargesperItem(IWSAppDomainDataV,ItemL."Purch. Unit of Measure",IWSGlobalDataL."Vendor No.",2,
                            IWSAppDomainDataV."DS Simple Extra Costs",PurchSetup."Item Charge Simple Cost");

      SetItemChargesperItem(IWSAppDomainDataV,ItemL."Purch. Unit of Measure",IWSGlobalDataL."Vendor No.",1,
                            IWSAppDomainDataV."Rep Extra Cost Supplier",PurchSetup."Item Charge Suppl. Extra Cost");

      SetItemChargesperItem(IWSAppDomainDataV,ItemL."Purch. Unit of Measure",IWSGlobalDataL."Vendor No.",2,
                            IWSAppDomainDataV."DS Extra Cost Supplier",PurchSetup."Item Charge Suppl. Extra Cost");
      //H4317 08.06.15 TST -------------------------------
      //H1590 26.02.15 TST -------------------------------
    END;

    PROCEDURE GetPurchSetup@1000000019();
    BEGIN
      //H1590 26.02.15 TST +++++++++++++++++++++++++++++++
      IF (PurchSetup."Item Charge Simple Cost" = '') AND (PurchSetup."Item Charge Suppl. Extra Cost" = '') THEN
        PurchSetup.GET;
      //H1590 26.02.15 TST -------------------------------
    END;

    PROCEDURE UpdateVendorInvoiceDiscount@1000000007(IWSAppDomainDataV@1000000002 : Record 50601;VendorNoV@1000000007 : Code[20];WHStartegyV@1000000003 : ' ,Repository,Drop Shipment';InvoiceDiscountV@1000000004 : Decimal;PaymentDiscountV@1000000005 : Decimal);
    VAR
      IWSGlobalDataL@1000000001 : Record 50600;
      VendInvDiscL@1000000000 : Record 24;
      VendPurchPriceSetupL@1000000006 : Record 50805;
    BEGIN
      //H1590 26.02.15 TST +++++++++++++++++++++++++++++++
      IF NOT VendPurchPriceSetupL.GET(VendorNoV) THEN
        CLEAR(VendPurchPriceSetupL);

      IF VendPurchPriceSetupL."Get Prices from MDB" THEN BEGIN
        IF VendInvDiscL.GET(VendorNoV,CurrencyCode,0,IWSAppDomainDataV."App Domain",WHStartegyV) THEN BEGIN
          IF ((VendInvDiscL."Discount %" <> InvoiceDiscountV) OR
             (VendInvDiscL."Payment Discount Rate" <> PaymentDiscountV))
          THEN BEGIN
            VendInvDiscL."Discount %" := InvoiceDiscountV;
            VendInvDiscL."Payment Discount Rate" := PaymentDiscountV;
            VendInvDiscL.MODIFY;
          END;
        END ELSE BEGIN
          VendInvDiscL.INIT;
          VendInvDiscL.Code := VendorNoV;
          VendInvDiscL."Currency Code" := CurrencyCode;
          VendInvDiscL."Minimum Amount" := 0;
          VendInvDiscL."App Domain" := IWSAppDomainDataV."App Domain";
          VendInvDiscL."WH Strategy" := WHStartegyV;
          VendInvDiscL."Discount %" := InvoiceDiscountV;
          VendInvDiscL."Payment Discount Rate" := PaymentDiscountV;
          VendInvDiscL.INSERT;
        END;
      END ELSE BEGIN
        VendInvDiscL.SETRANGE(Code,VendorNoV);
        VendInvDiscL.SETFILTER("App Domain",'<>%1',0);
        IF NOT VendInvDiscL.ISEMPTY THEN
          VendInvDiscL.DELETEALL;
      END;
      //H1590 26.02.15 TST -------------------------------
    END;

    PROCEDURE SetPurchasePrice@1000000009(IWSAppDomainDataV@1000000002 : Record 50601;ItemUoMV@1000000007 : Code[10];VendorNoV@1000000006 : Code[20];WHStrategyV@1000000001 : ' ,Repository,Drop Shipment';NetPurchasePriceperSKUV@1000000003 : Decimal;ActualNetUnitCostsV@1000000004 : Decimal);
    VAR
      PurchPriceL@1000000000 : Record 7012;
      DoInsertL@1000000005 : Boolean;
      VendPurchPriceSetupL@1000000008 : Record 50805;
    BEGIN
      //H1590 26.02.15 TST +++++++++++++++++++++++++++++++
      IF NOT VendPurchPriceSetupL.GET(VendorNoV) THEN
        CLEAR(VendPurchPriceSetupL);

      IF VendPurchPriceSetupL."Get Prices from MDB" THEN BEGIN

        DoInsertL := FALSE;

        IF PurchPriceL.GET(IWSAppDomainDataV.ItemNo, VendorNoV,0D, CurrencyCode,'',
                           ItemUoMV,0,IWSAppDomainDataV."App Domain",WHStrategyV)
        THEN BEGIN
          IF NetPurchasePriceperSKUV <> 0 THEN BEGIN
            //H4465 16.07.15 TST +++++++++++++++++++++++++++++++
            IF (NetPurchasePriceperSKUV <> PurchPriceL."Direct Unit Cost") THEN
            //H4465 16.07.15 TST +++++++++++++++++++++++++++++++
            BEGIN
              //Delete first - avoid Modify because it will end up in Rename
              PurchPriceL.DELETE(TRUE);

              //Insert Again
              DoInsertL := TRUE;

            END;
          END ELSE BEGIN
            PurchPriceL.DELETE(TRUE);
          END;
        END ELSE BEGIN
          DoInsertL := TRUE;
        END;

        //H4465 16.07.15 TST +++++++++++++++++++++++++++++++
        IF (DoInsertL) AND (NetPurchasePriceperSKUV <> 0) THEN BEGIN
        //H4465 16.07.15 TST +++++++++++++++++++++++++++++++
          PurchPriceL.INIT;
          PurchPriceL."Item No." := IWSAppDomainDataV.ItemNo;
          PurchPriceL."Vendor No." := VendorNoV;
          PurchPriceL."Currency Code" := CurrencyCode;
          PurchPriceL."Unit of Measure Code" := ItemUoMV;
          PurchPriceL."App Domain" := IWSAppDomainDataV."App Domain";
          PurchPriceL."WH Strategy" := WHStrategyV;
          PurchPriceL."Direct Unit Cost" := NetPurchasePriceperSKUV;
          PurchPriceL."Actual Unit Cost" := ActualNetUnitCostsV;
          PurchPriceL.INSERT(TRUE);
        END;
      END ELSE BEGIN
        PurchPriceL.RESET;
        PurchPriceL.SETRANGE("Item No.",IWSAppDomainDataV.ItemNo);
        PurchPriceL.SETRANGE("Vendor No.", VendorNoV);
        PurchPriceL.SETFILTER("App Domain",'<>%1',0);
        IF NOT PurchPriceL.ISEMPTY THEN
          PurchPriceL.DELETEALL;
      END;
      //H1590 26.02.15 TST -------------------------------
    END;

    PROCEDURE SetPurchaseLineDiscounts@1000000010(IWSAppDomainDataV@1000000002 : Record 50601;ItemUoMV@1000000003 : Code[10];VendorNoV@1000000000 : Code[20];WHStrategyV@1000000007 : ' ,Repository,Drop Shipment';LineDiscountRateV@1000000004 : Decimal);
    VAR
      PurchLineDiscL@1000000006 : Record 7014;
      DoInsertL@1000000005 : Boolean;
      VendPurchPriceSetupL@1000000001 : Record 50805;
    BEGIN
      //H1590 26.02.15 TST +++++++++++++++++++++++++++++++
      IF NOT VendPurchPriceSetupL.GET(VendorNoV) THEN
        CLEAR(VendPurchPriceSetupL);

      IF VendPurchPriceSetupL."Get Prices from MDB" THEN BEGIN

        DoInsertL := FALSE;

        IF PurchLineDiscL.GET(IWSAppDomainDataV.ItemNo, VendorNoV,0D, CurrencyCode,'',
                              ItemUoMV,0,IWSAppDomainDataV."App Domain",WHStrategyV)
        THEN BEGIN
          IF LineDiscountRateV <> 0 THEN BEGIN
            IF (LineDiscountRateV <> PurchLineDiscL."Line Discount %") THEN BEGIN
              //Delete first - avoid Modify because it will end up in Rename
              PurchLineDiscL.DELETE(TRUE);

              //Insert Again
              DoInsertL := TRUE;

            END;
          END ELSE BEGIN
            PurchLineDiscL.DELETE(TRUE);
          END;
        END ELSE BEGIN
          DoInsertL := TRUE;
        END;

        //H4317 08.06.15 TST +++++++++++++++++++++++++++++++
        IF (DoInsertL) AND (LineDiscountRateV <> 0) THEN BEGIN
        //H4317 08.06.15 TST -------------------------------
          PurchLineDiscL.INIT;
          PurchLineDiscL."Item No." := IWSAppDomainDataV.ItemNo;
          PurchLineDiscL."Vendor No." := VendorNoV;
          PurchLineDiscL."Currency Code" := CurrencyCode;
          PurchLineDiscL."Unit of Measure Code" := ItemUoMV;
          PurchLineDiscL."App Domain" := IWSAppDomainDataV."App Domain";
          PurchLineDiscL."WH Strategy" := WHStrategyV;
          PurchLineDiscL."Line Discount %" := LineDiscountRateV;
          PurchLineDiscL.INSERT(TRUE);
        END;
      END ELSE BEGIN
         PurchLineDiscL.RESET;
         PurchLineDiscL.SETRANGE("Item No.", IWSAppDomainDataV.ItemNo);
         PurchLineDiscL.SETRANGE("Vendor No.", VendorNoV);
         PurchLineDiscL.SETFILTER("App Domain",'<>%1',0);
         IF NOT PurchLineDiscL.ISEMPTY THEN
           PurchLineDiscL.DELETEALL;
      END;
      //H1590 26.02.15 TST -------------------------------
    END;

    PROCEDURE SetItemChargesperItem@1000000011(IWSAppDomainDataV@1000000002 : Record 50601;ItemUoMV@1000000006 : Code[10];VendorNoV@1000000000 : Code[20];WHStrategyV@1000000001 : ' ,Repository,Drop Shipment';ExtraCostsV@1000000004 : Decimal;ItemChargeCodeV@1000000008 : Code[20]);
    VAR
      ChargePerItemL@1000000003 : Record 50606;
      DoInsertL@1000000005 : Boolean;
      VendPurchPriceSetupL@1000000007 : Record 50805;
    BEGIN
      //H1590 26.02.15 TST +++++++++++++++++++++++++++++++
      IF NOT VendPurchPriceSetupL.GET(VendorNoV) THEN
        CLEAR(VendPurchPriceSetupL);

      IF VendPurchPriceSetupL."Get Prices from MDB" THEN BEGIN

        DoInsertL := FALSE;

        //H4317,H1590 08.06.15 TST +++++++++++++++++++++++++++++++
        IF ChargePerItemL.GET(IWSAppDomainDataV.ItemNo, VendorNoV, CurrencyCode,ItemChargeCodeV,0,
                              IWSAppDomainDataV."App Domain",WHStrategyV)
        THEN BEGIN
          IF ExtraCostsV <> 0 THEN BEGIN
            IF ExtraCostsV <> ChargePerItemL."Charge Amount" THEN BEGIN
              //Delete first - avoid Modify because it will end up in Rename
              ChargePerItemL.DELETE(TRUE);

              //Insert Again
              DoInsertL := TRUE;
            END;
          END ELSE BEGIN
            ChargePerItemL.DELETE(TRUE);
          END;
        END ELSE BEGIN
          DoInsertL := TRUE;
        END;

      //H4235 13.05.15 TST ++++++++++++++++++++++++
        IF DoInsertL AND (ExtraCostsV <> 0) THEN BEGIN
      //H4235 13.05.15 TST ------------------------
          ChargePerItemL.INIT;
          ChargePerItemL."Item No." := IWSAppDomainDataV.ItemNo;
          ChargePerItemL."Vendor No." := VendorNoV;
          ChargePerItemL."Currency Code" := CurrencyCode;
          ChargePerItemL."Item Charge Code" := ItemChargeCodeV;
          ChargePerItemL."App Domain" := IWSAppDomainDataV."App Domain";
          ChargePerItemL."WH Strategy" := WHStrategyV;
          ChargePerItemL."Charge Amount" := ExtraCostsV;
          ChargePerItemL.INSERT(TRUE);
        END;
      END ELSE BEGIN
        ChargePerItemL.RESET;
        ChargePerItemL.SETRANGE("Item No.", IWSAppDomainDataV.ItemNo);
        ChargePerItemL.SETRANGE("Vendor No.", VendorNoV);
        ChargePerItemL.SETFILTER("App Domain",'<>%1',0);
        IF NOT ChargePerItemL.ISEMPTY THEN
          ChargePerItemL.DELETEALL;
        //H4317,H1590 08.06.15 TST -------------------------------
      END;
      //H1590 26.02.15 TST -------------------------------
    END;

    LOCAL PROCEDURE SetVendorCharge@1000000008(IWSAppDomainDataV@1000000004 : Record 50601;VendorNoV@1000000002 : Code[20];WHStrategyV@1000000001 : ' ,Repository,Drop Shipment';DeliveryCostV@1000000000 : Decimal);
    VAR
      EdiPartnerL@1000000008 : Record 82851;
      EdiPartnerDocTypeL@1000000007 : Record 82852;
      UseVendorSetupChargeL@1000000005 : Boolean;
      ChargePerVendorL@1000000006 : Record 50607;
      IWSGlobalDataL@1000000009 : Record 50600;
      VendPurchPriceSetupL@1000000003 : Record 50805;
    BEGIN
      { Changed logic in H4317. This function can't be used until there is a new specification
      //H1590 26.02.15 TST +++++++++++++++++++++++++++++++
      IF NOT VendPurchPriceSetupL.GET(VendorNoV) THEN
        CLEAR(VendPurchPriceSetupL);

      IF VendPurchPriceSetupL."Get Prices from MDB" THEN BEGIN

        UseVendorSetupChargeL := FALSE;

        EdiPartnerL.RESET;
        CLEAR(EdiPartnerDocTypeL);
        EdiPartnerL.SETCURRENTKEY("Partner Type","Partner No.");
        EdiPartnerL.SETRANGE("Partner Type",EdiPartnerL."Partner Type"::Vendor);
        EdiPartnerL.SETRANGE("Partner No.",IWSGlobalDataL."Vendor No.");
        IF EdiPartnerL.FINDLAST THEN
          IF EdiPartnerDocTypeL.GET(EdiPartnerL.Code,EdiPartnerDocTypeL."Document Direction"::Inbound,'INVOIC') THEN;

        IF (EdiPartnerDocTypeL."Charge Freight" <> '') AND (EdiPartnerDocTypeL."Charge Freight" <>
            PurchSetup."Item Charge Suppl. Extra Cost") THEN BEGIN
          UseVendorSetupChargeL := TRUE;
          ChargePerVendorL.RESET;
          ChargePerVendorL.SETRANGE("Vendor No.",VendorNoV);
          ChargePerVendorL.SETRANGE("Currency Code",CurrencyCode);
          ChargePerVendorL.SETRANGE("App Domain",IWSAppDomainDataV."App Domain");
          ChargePerVendorL.SETRANGE("Service Charge Code", PurchSetup."Item Charge Suppl. Extra Cost");
          IF NOT ChargePerVendorL.ISEMPTY THEN
            ChargePerVendorL.DELETEALL(TRUE);
        END;

        IF UseVendorSetupChargeL THEN
          InsertModifyVendorCharge(IWSAppDomainDataV,VendorNoV,WHStrategyV,DeliveryCostV,
                                   EdiPartnerDocTypeL."Charge Freight")
        ELSE
          InsertModifyVendorCharge(IWSAppDomainDataV,VendorNoV,WHStrategyV,DeliveryCostV,
                                   PurchSetup."Item Charge Suppl. Extra Cost");

      END ELSE BEGIN
        ChargePerVendorL.RESET;
        ChargePerVendorL.SETRANGE("Vendor No.",VendorNoV);
        ChargePerVendorL.SETFILTER("App Domain",'<>%1',0);
        IF NOT ChargePerVendorL.ISEMPTY THEN
          ChargePerVendorL.DELETEALL;

      END;
      //H1590 26.02.15 TST -------------------------------
      }
    END;

    PROCEDURE InsertModifyVendorCharge@1000000018(IWSAppDomainDataV@1000000004 : Record 50601;VendorNoV@1000000002 : Code[20];WHStrategyV@1000000001 : ' ,Repository,Drop Shipment';DeliveryCostV@1000000000 : Decimal;VendorChargeV@1000000005 : Code[20]);
    VAR
      ChargePerVendorL@1000000007 : Record 50607;
      IWSGlobalDataL@1000000006 : Record 50600;
    BEGIN
      //H1590 26.02.15 TST +++++++++++++++++++++++++++++++
      ChargePerVendorL.RESET;
      ChargePerVendorL.SETRANGE("Vendor No.",VendorNoV);
      ChargePerVendorL.SETRANGE("Currency Code",CurrencyCode);
      ChargePerVendorL.SETRANGE("App Domain",IWSAppDomainDataV."App Domain");
      ChargePerVendorL.SETRANGE("Service Charge Code", VendorChargeV);
      ChargePerVendorL.SETRANGE("WH Strategy", WHStrategyV);
      IF ChargePerVendorL.FINDLAST THEN BEGIN
        IF DeliveryCostV = 0 THEN
          ChargePerVendorL.DELETE(TRUE)
        ELSE IF DeliveryCostV <> ChargePerVendorL."Charge Amount" THEN BEGIN
          ChargePerVendorL."Charge Amount" := DeliveryCostV;
          ChargePerVendorL.MODIFY(TRUE);
        END;
      //H4235 12.05.15 TST +++++++++++++++++++++++++++++++
      END ELSE IF DeliveryCostV <> 0 THEN BEGIN
      //H4235 12.05.15 TST -------------------------------
        ChargePerVendorL.INIT;
        ChargePerVendorL."Vendor No." := VendorNoV;
        ChargePerVendorL."Currency Code" := CurrencyCode;
        ChargePerVendorL."Service Charge Code" := VendorChargeV;
        ChargePerVendorL."App Domain" := IWSAppDomainDataV."App Domain";
        ChargePerVendorL."WH Strategy" := WHStrategyV;
        ChargePerVendorL."Charge Amount" := DeliveryCostV;
        ChargePerVendorL."Assigment Type" := PurchSetup."Service Charge Assignment Type";
        ChargePerVendorL.INSERT(TRUE);
      END;
      //H1590 26.02.15 TST -------------------------------
    END;

    BEGIN
    {
      +--------------------------------------------+
      |                                            |
      |                  Home24                    |
      |       Internal Customizing by NAV-Team     |
      |                                            |
      +--------------------------------------------+

      Project No. Date      Shortcut  Description
      _____________________________________________

      H0566       30.01.14  ARI       Created
      H1021       27.03.14  ARI       Do not fill "last direct cost" and "unit cost"
      H1092       06.05.14  ARI       Adjust calculation and display of Transfer Price CH: Use Validate to fill relevant Fields
      H1158       14.05.14  ARI       Bugfix: Modify Transferprices (CH) for Itemwebservice
      H1170       19.05.14  ARI       Bugfix for H1158, WebshopCode was not inserted
      H1216       16.06.14  ARI       Redesign of Update/Insert Logic
      H1388       25.07.14  MSL       Carrier via SMT: 2) Carrier per static article
      H1503       08.09.14  ARI       FTTC 3 - Phase 8 Customer Request: Code Change
      H1422       25.09.14  ARI       Redesign Item Webservice: Renumber Object,New Function
      H1834       19.11.13  MSL       Extend Shop-to-Nav carrier mapping (H1710): added local func. "ApplyShippingServiceIWS"
      H1846       09.12.14  MSL       IWS: Carrier Translation Improvement
      H1376       12.01.15  JM        Import MDB prices into NAV, copy new Fields to webshopitem
      T0100       26.02.15  CC_RST    Modified Functions ModifyWebShopItem and InsertWebShopItem with Repurchase Rate
      H1590       26.02.15  TST       Update Purchase Prices, H1376 deleted
      H4235       12.05.15  TST       Bugfix
      H4165       21.05.15  TST       Delete fields "DS Actual Net Unit Costs" and "Rep Actual Net Unit Costs"
                                      Add fields "DS Order Extra Cost" and "Rep Order Extra Cost"
      H4334       05.06.15  ARI       MDB2NAV - calculate Vendor discounts  - Use Factor to corect transfered values
      H4317       08.06.15  TST       Create Item Charge Lines for Extra Cost Supplier
      H4465       16.07.15  TST       Avoid creation of purchasse prices with value 0, and correction of H4165
    }
    END.
  }
}

