OBJECT Codeunit 50300 Whse. LF Sales JobQueue Mgt.
{
  OBJECT-PROPERTIES
  {
    Date=10.04.15;
    Time=12:00:00;
    Modified=Yes;
    Version List=HME2180;
  }
  PROPERTIES
  {
    TableNo=472;
    OnRun=VAR
            FPCInterSetupL@1000000910 : Record 50014;
            WhseLFSetupL@1000000009 : Record 50300;
            ImportFileL@1000000008 : Record 2000000022;
            WhseLFSalesExpHeaderL@1000000004 : Record 50304;
            WhseLFSalesExpHeader2L@1000000003 : Record 50304;
            WhseLFSalesImportL@1000000002 : Record 50306;
            WhseLFSalesImport2L@1000000001 : Record 50306;
            WhseH24SubInterfaceL@1000000012 : Record 50506;
            WhseLFSalesImpMgtL@1000000000 : Codeunit 50302;
            WhseLFSalesExpMgtL@1000000005 : Codeunit 50301;
            WhseLFSalesInterfaceMgtL@1000000010 : Codeunit 50303;
            StarttimeL@1000000007 : Time;
            EndtimeL@1000000006 : Time;
            FileL@1000000912 : File;
          BEGIN
            WhseLFSetupL.GET;
            WhseLFSetupL.TESTFIELD("Record Type - Post Code");
            //H2157 18.02.15 DMO ++++++++++++++++++++++++++
            WhseLFSetupL.TESTFIELD("Record Type STA");
            //H2157 18.02.15 DMO --------------------------
            WhseLFSetupL.TESTFIELD("Interface ID KAD");
            WhseLFSetupL.TESTFIELD("STA-Processing Parameter");

            CASE "Parameter String" OF
              // POSTCODE
              WhseLFSetupL."Record Type - Post Code":
                BEGIN
                  //H2158 25.02.15 DMO ++++++++++++++++++++++++++
                  WhseH24SubInterfaceL.RESET;
                  WhseH24SubInterfaceL.SETRANGE("File Type",WhseLFSetupL."Record Type - Post Code");
                  WhseH24SubInterfaceL.FINDSET;
                  REPEAT
                    FPCInterSetupL.GET(WhseH24SubInterfaceL."FPC Interface Setup Code");
                  //H2158 25.02.15 DMO --------------------------
                    FPCInterSetupL.TESTFIELD("Import Folder");
                    FPCInterSetupL.TESTFIELD("Archive Root Folder");
                    ImportFileL.SETRANGE(Path,FPCInterSetupL."Import Folder");
                    ImportFileL.SETRANGE("Is a file",TRUE);
                    IF ImportFileL.FINDSET THEN
                      REPEAT  // for each file in import-directory
                        CLEARLASTERROR;
                        CLEAR(WhseLFSalesImpMgtL);
                        WhseLFSalesImpMgtL.SetRecFile(ImportFileL);
                        //H2158 25.02.15 DMO ++++++++++++++++++++++++++
                        WhseLFSalesImpMgtL.SetRecTypeAndFPCInterface(WhseLFSetupL."Record Type - Post Code",FPCInterSetupL.Code);
                        //H2158 25.02.15 DMO --------------------------
                        IF WhseLFSalesImpMgtL.RUN THEN;
                        IF NOT WhseLFSalesImpMgtL.GetNoImport THEN  // log, if trying to import (File=ZIP)
                          //H2158 25.02.15 DMO ++++++++++++++++++++++++++
                          CreateSalesLog(TRUE,1,WhseLFSalesImpMgtL.GetFilename,WhseH24SubInterfaceL."Whse. H24 Identifier Code");    // ZIP
                          //H2158 25.02.15 DMO --------------------------
                      UNTIL ImportFileL.NEXT = 0;
                  //H2158 25.02.15 DMO ++++++++++++++++++++++++++
                  UNTIL WhseH24SubInterfaceL.NEXT = 0;
                  //H2158 25.02.15 DMO --------------------------
                END;
              // STA-IMPORT
              //H2157 18.02.15 DMO ++++++++++++++++++++++++++
              WhseLFSetupL."Record Type STA" :
              //H2157 18.02.15 DMO --------------------------
                BEGIN
                  //H2157 18.02.15 DMO ++++++++++++++++++++++++++
                  WhseH24SubInterfaceL.RESET;
                  WhseH24SubInterfaceL.SETRANGE("File Type",WhseLFSetupL."Record Type STA");
                  WhseH24SubInterfaceL.FINDSET;
                  REPEAT
                    FPCInterSetupL.GET(WhseH24SubInterfaceL."FPC Interface Setup Code");
                  //H2157 18.02.15 DMO --------------------------
                    FPCInterSetupL.TESTFIELD("Import Folder");
                    FPCInterSetupL.TESTFIELD("Archive Root Folder");
                    ImportFileL.RESET;
                    IF ImportFileL.FIND('-') THEN;
                    ImportFileL.RESET;
                    ImportFileL.SETRANGE(Path,FPCInterSetupL."Import Folder");
                    ImportFileL.SETRANGE("Is a file",TRUE);
                    IF ImportFileL.FINDSET THEN
                      REPEAT  // for each file in import-directory
                        CLEARLASTERROR;
                        CLEAR(WhseLFSalesImpMgtL);
                        WhseLFSalesImpMgtL.SetRecFile(ImportFileL);
                        //H2157 18.02.15 DMO ++++++++++++++++++++++++++
                        WhseLFSalesImpMgtL.SetRecTypeAndFPCInterface(WhseLFSetupL."Record Type STA",FPCInterSetupL.Code);
                        //H2157 18.02.15 DMO --------------------------
                        IF WhseLFSalesImpMgtL.RUN THEN;
                        IF NOT WhseLFSalesImpMgtL.GetNoImport THEN  // Log, if trying to import (File = STA)
                          //H2157 18.02.15 DMO ++++++++++++++++++++++++++
                          CreateSalesLog(TRUE,2,WhseLFSalesImpMgtL.GetFilename,WhseH24SubInterfaceL."Whse. H24 Identifier Code");   // STA
                          //H2157 18.02.15 DMO --------------------------
                      UNTIL ImportFileL.NEXT = 0;
                  //H2157 18.02.15 DMO ++++++++++++++++++++++++++
                  UNTIL WhseH24SubInterfaceL.NEXT = 0;
                  //H2157 18.02.15 DMO --------------------------
                END;
              // KAD-EXPORT
              WhseLFSetupL."Interface ID KAD":
                BEGIN
                  // H2127  03.03.15  MKR ++++++++++++++++++++++++++++++++++++++
                  WhseH24SubInterfaceL.RESET;
                  WhseH24SubInterfaceL.SETRANGE("File Type", WhseLFSetupL."Record Type KAD");
                  WhseH24SubInterfaceL.FIND('-');
                  REPEAT
                    FPCInterSetupL.GET(WhseH24SubInterfaceL."FPC Interface Setup Code");
                // H2127  03.03.15  MKR --------------------------------------
                    FPCInterSetupL.TESTFIELD("Export Folder");
                    FPCInterSetupL.TESTFIELD("Archive Root Folder");
                    WhseLFSalesExpHeaderL.SETRANGE("Record Type",WhseLFSetupL."Record Type KAK");
                    // H2127  03.03.15  MKR ++++++++++++++++++++++++++++++++++++++++
                    WhseLFSalesExpHeaderL.SETRANGE("Whse. H24 Identifier Code", WhseH24SubInterfaceL."Whse. H24 Identifier Code");
                    // H2127  03.03.15  MKR ----------------------------------------
                    WhseLFSalesExpHeaderL.SETRANGE(Status,WhseLFSalesExpHeaderL.Status::Unprocessed);
                    IF WhseLFSalesExpHeaderL.FINDSET THEN
                      REPEAT
                        CLEARLASTERROR;
                        CLEAR(WhseLFSalesExpMgtL);
                        WhseLFSalesExpMgtL.SetWhseLFSalesExpHeader(WhseLFSalesExpHeaderL);
                        // H2127  03.03.15  MKR +++++++++++++++++++++++++++++++++++++++++++++
                        WhseLFSalesExpMgtL.SetInterfaceCode(WhseH24SubInterfaceL."File Type");
                        // H2127  03.03.15  MKR ---------------------------------------------
                        IF WhseLFSalesExpMgtL.RUN THEN BEGIN
                          IF WhseLFSalesExpHeader2L.GET(WhseLFSalesExpHeaderL."Entry No.") THEN BEGIN
                            IF WhseLFSalesExpHeader2L.Status = WhseLFSalesExpHeader2L.Status::Unprocessed THEN BEGIN
                              WhseLFSalesExpHeader2L.Status := WhseLFSalesExpHeader2L.Status::Exported;
                              IF NOT WhseLFSalesExpHeader2L.MODIFY THEN
                                WhseLFSalesExpMgtL.DeleteFileAfterError;
                            END ELSE
                              WhseLFSalesExpMgtL.DeleteFileAfterError;
                          END ELSE
                            WhseLFSalesExpMgtL.DeleteFileAfterError;
                        END ELSE BEGIN
                          IF WhseLFSalesExpHeader2L.GET(WhseLFSalesExpHeaderL."Entry No.") THEN BEGIN
                            WhseLFSalesExpHeader2L.Status := WhseLFSalesExpHeader2L.Status::Error;
                            IF NOT WhseLFSalesExpHeader2L.MODIFY THEN
                              WhseLFSalesExpMgtL.DeleteFileAfterError;
                          END ELSE
                            WhseLFSalesExpMgtL.DeleteFileAfterError;
                        END;
                        //H2157 18.02.15 DMO ++++++++++++++++++++++++++
                        CreateSalesLog(FALSE,3,WhseLFSalesExpMgtL.GetFilename,WhseLFSalesExpHeaderL."Whse. H24 Identifier Code");
            //Has a COMMIT
                        //H2157 18.02.15 DMO --------------------------
                      UNTIL WhseLFSalesExpHeaderL.NEXT = 0;
                  // H2127  03.03.15  MKR +++++++++++++++++++++++++++++++++++++++++
                  UNTIL WhseH24SubInterfaceL.NEXT=0;
                  // H2127  03.03.15  MKR ------------------------------------
                END;
              // STA-Processing
              WhseLFSetupL."STA-Processing Parameter":
                BEGIN
                  WhseLFSalesImportL.SETRANGE("Record Type",WhseLFSetupL."Record Type STA");
                  WhseLFSalesImportL.SETRANGE("Import Status",WhseLFSalesImportL."Import Status"::Unprocessed);
                  IF WhseLFSalesImportL.FINDSET THEN BEGIN
                    WhseLFSalesInterfaceMgtL.SetParameterCode(WhseLFSetupL."STA-Processing Parameter");
                    REPEAT
                      CLEARLASTERROR;
                      WhseLFSalesInterfaceMgtL.SetImportSales(WhseLFSalesImportL);
                      IF WhseLFSalesInterfaceMgtL.RUN THEN;

                      WhseLFSalesImport2L.GET(WhseLFSalesImportL."Entry No.");
                      IF GETLASTERRORTEXT = '' THEN
                        WhseLFSalesImport2L."Import Status" := WhseLFSalesImport2L."Import Status"::Processed
                      ELSE BEGIN
                        WhseLFSalesImport2L."Import Status" := WhseLFSalesImport2L."Import Status"::Error;
                        WhseLFSalesImport2L."Error Description 1" := COPYSTR(GETLASTERRORTEXT,1,250);
                        WhseLFSalesImport2L."Error Description 2" := COPYSTR(GETLASTERRORTEXT,251,250);
                        WhseLFSalesImport2L."Error Description 3" := COPYSTR(GETLASTERRORTEXT,501,250);
                        WhseLFSalesImport2L."Error Description 4" := COPYSTR(GETLASTERRORTEXT,751,250);
                      END;
                      WhseLFSalesImport2L.MODIFY;
                      COMMIT;
                    UNTIL WhseLFSalesImportL.NEXT = 0;
                  END;
                END;
            END;
          END;

  }
  CODE
  {

    PROCEDURE CreateSalesLog@1000000001(ParImportV@1000000002 : Boolean;ParTypeV@1000000003 : ' ,ZIP,STA,KAK';ParFilenameV@1000000000 : Text[250];WhseH24IdentifierV@1000000004 : Code[10]);
    VAR
      SalesLogL@1000000001 : Record 50312;
    BEGIN
      // Creates a sales log entry for error and succes, import and export
      // ParType: Option has to be equal to table "Whse. LW Sales Log"

      WITH SalesLogL DO BEGIN
        INIT;
        INSERT;
        IF ParImportV THEN
          "Action Type" := "Action Type"::Import
        ELSE
          "Action Type" := "Action Type"::Export;

        "Action Subtype" := ParTypeV;
        //H2180 23.02.15 DMA +++++++++++++++++++++++
        Filename := ParFilenameV;

        IF GETLASTERRORTEXT = '' THEN BEGIN
          Status := Status::Success;
        END ELSE BEGIN
          Status := Status::Error;
          "Error Description" := COPYSTR(GETLASTERRORTEXT,1,250);
          "Error Description 2" := COPYSTR(GETLASTERRORTEXT,251,250);
          "Error Description 3" := COPYSTR(GETLASTERRORTEXT,501,250);
          "Error Description 4" := COPYSTR(GETLASTERRORTEXT,751,250);
        END;

        "Processing Date" := TODAY;
        "Processing Time" := TIME;
        "Processed By" := USERID;
        //H2157 18.02.15 DMO ++++++++++++++++++++++++++
        "Whse. H24 Identifier Code" := WhseH24IdentifierV;
        //H2157 18.02.15 DMO --------------------------
        MODIFY;
      END;

      COMMIT;
    END;

    PROCEDURE SecondToWait@1000000000(StarttimeV@1000000000 : Time;EndtimeV@1000000001 : Time);
    BEGIN
      // Wait max. 1 second for different filename
      IF EndtimeV - StarttimeV < 1000 THEN
        SLEEP(1000 - (EndtimeV-StarttimeV));
    END;

    BEGIN
    {
      +--------------------------------------------+
      |                                            |
      |                  Home24                    |
      |       Internal Customizing by NAV-Team     |
      |                                            |
      +--------------------------------------------+

      Project No. Date     Shortcut  Description
      _____________________________________________
      H1408     05.08.14   DMA       Copy RHD Interface, rename and implement as Whs LF Interface
      H2157     18.02.15   DMO       CODECHANGE: "Interface Code STA" field is deleted in Whse.LF Setup and not used any more;
                                     CreateSalesLog takes additional parameter;
      H2180     23.02.15   DMA       BUG: WHSLF Files with Error are not moved to Error Path and Filename in Sales Import Log is missing
      H2158     25.02.15   DMO       CODECHANGE: "Interface ID Post Code" field is deleted in Whse.LF Setup and not used any more;
      H2127     03.03.15   MKR       Dynamic location for all home24 operated warehouses in KAD
    }
    END.
  }
}

