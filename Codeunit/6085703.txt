OBJECT Codeunit 6085703 Purch. Doc. - Full Capture
{
  OBJECT-PROPERTIES
  {
    Date=17.07.13;
    Time=01:00:00;
    Version List=DCW13.70.00.3.50;
  }
  PROPERTIES
  {
    TableNo=6085590;
    OnRun=VAR
            GLSetup@1000000015 : Record 98;
            Field@161024020 : Record 6085580;
            TemplField@161024019 : Record 6085580;
            TemplField2@1000000006 : Record 6085580;
            Value@1000000002 : Record 6085593;
            Value2@1000000007 : Record 6085593;
            Template@161024012 : Record 6085579;
            FieldRule@1000000000 : Record 6085583;
            PurchDocMatch@161024013 : Record 6085700;
            Comment@1000000005 : Record 6085594;
            Vendor@1000000003 : Record 23;
            PaymentTerms@1000000004 : Record 3;
            TemplFieldCaption@1000000008 : Record 6085581;
            PurchHeader@161024022 : Record 38;
            CaptionStartWord@1000000011 : ARRAY [100] OF Record 6085592;
            CaptionEndWord@1000000012 : ARRAY [100] OF Record 6085592;
            DataTransl@161024018 : Record 6085584;
            CaptureEngine@1000000010 : Codeunit 6085575;
            CaptionFound@1000000013 : Boolean;
            OrderNo@161024021 : Code[20];
            CodePart@161024014 : Code[250];
            TopMostCodePart@161024017 : Code[250];
            CaptionPart@161024015 : Text[250];
            TopMostY@161024016 : Integer;
            DocType@161024023 : Integer;
          BEGIN
            DeleteComments(Comment.Area::Capture);

            PurchDocMatch.SETRANGE("Document No.","No.");
            PurchDocMatch.DELETEALL(TRUE);

            GLSetup.GET;
            Vendor.GET(GetSourceID);

            // *********************************************************************************************************************************
            // IF CURRENCY CODE HAS NOT BEEN RECOGNIZED, THEN GO GET IT FROM THE VENDOR
            // *********************************************************************************************************************************
            IF Field.GET(Rec."Template No.",Field.Type::Header,Text003) THEN BEGIN
              IF (NOT CaptureMgnt.GetFieldValue(Rec,Field,0,Value)) OR (Value."Value (Text)" = '') THEN BEGIN
                IF Vendor."Currency Code" <> '' THEN BEGIN
                  CaptureMgnt.UpdateFieldValue(Rec."No.",0,0,Field,Vendor."Currency Code",TRUE);
                  Comment.Add(Rec,Field,0,Comment.Area::Capture,Comment."Comment Type"::Warning,STRSUBSTNO(Text001,Field."Field Name",
                    LOWERCASE(Vendor.TABLECAPTION)));
                END ELSE
                  CaptureMgnt.UpdateFieldValue(Rec."No.",0,0,Field,GLSetup."LCY Code",TRUE);
              END;
            END;


            // *********************************************************************************************************************************
            // FIND THE DOCUMENT TYPE
            // *********************************************************************************************************************************
            Field.GET(Rec."Template No.",Field.Type::Header,Text006);
            IF CaptureMgnt.GetText(Rec,Field.Type::Header,Field.Code,0) = '' THEN BEGIN
              TemplFieldCaption.SETRANGE("Template No.",Rec."Template No.");
              TemplFieldCaption.SETRANGE(Type,Field.Type);
              TemplFieldCaption.SETRANGE(Code,Field.Code);
              IF TemplFieldCaption.FINDSET(FALSE,FALSE) THEN
                REPEAT
                  IF STRPOS(TemplFieldCaption.Caption,':') <> 0 THEN BEGIN
                    CodePart := DELCHR(COPYSTR(TemplFieldCaption.Caption,1,STRPOS(TemplFieldCaption.Caption,':')-1),'<>',' ');
                    CaptionPart := DELCHR(COPYSTR(TemplFieldCaption.Caption,STRPOS(TemplFieldCaption.Caption,':')+1),'<>',' ');
                    IF (CodePart <> '') AND (CaptionPart <> '') THEN BEGIN
                      TemplFieldCaption.Caption := CaptionPart;
                      IF CaptureEngine.FindCaption(Rec."No.",1,Field,TemplFieldCaption,CaptionStartWord,CaptionEndWord) THEN BEGIN
                        IF (CaptionStartWord[1].Top < TopMostY) OR (TopMostY = 0) THEN BEGIN
                          TopMostY := CaptionStartWord[1].Top;
                          TopMostCodePart := CodePart;
                        END;
                      END;
                    END;
                  END;
                UNTIL TemplFieldCaption.NEXT = 0;

              CaptureMgnt.UpdateFieldValue(Rec."No.",0,0,Field,TopMostCodePart,TRUE)
            END;


            // *********************************************************************************************************************************
            // IF DUE DATE HAS NOT BEEN RECOGNIZED, THEN CALCULATE IT BASED ON THE DOCUMENT DATE AND VENDOR PAYMENT TERMS
            // *********************************************************************************************************************************
            IF Field.GET(Rec."Template No.",Field.Type::Header,Text004) THEN BEGIN
              IF (NOT CaptureMgnt.GetFieldValue(Rec,Field,0,Value)) OR (Value."Value (Date)" = 0D) THEN BEGIN
                IF PurchDocMgnt.GetIsInvoice(Rec) THEN BEGIN
                  TemplField.GET(Rec."Template No.",Field.Type::Header,Text005);
                  IF (CaptureMgnt.GetFieldValue(Rec,TemplField,0,Value2)) AND (Value2."Value (Date)" <> 0D) THEN BEGIN
                    IF PaymentTerms.GET(Vendor."Payment Terms Code") AND (FORMAT(PaymentTerms."Due Date Calculation") <> '') THEN BEGIN
                      Value."Value (Date)" := CALCDATE(PaymentTerms."Due Date Calculation",Value2."Value (Date)");
                      Value."Is Valid" := TRUE;
                      Value.MODIFY;
                      Comment.Add(Rec,Field,0,Comment.Area::Capture,Comment."Comment Type"::Warning,STRSUBSTNO(Text002,Field."Field Name",
                        LOWERCASE(TemplField."Field Name")));
                    END;
                  END;
                END ELSE BEGIN
                  Value."Value (Date)" := TODAY;
                  Value."Is Valid" := TRUE;
                  Value.MODIFY;
                  Comment.Add(Rec,Field,0,Comment.Area::Capture,Comment."Comment Type"::Warning,STRSUBSTNO(Text012,Field."Field Name"));
                END;
              END;
            END;


            // *********************************************************************************************************************************
            // IF PURCHASER HAS NOT BEEN FOUND THEN GET IT FROM FROM THE ORDER
            // *********************************************************************************************************************************
            IF Field.GET(Rec."Template No.",Field.Type::Header,Text011) THEN BEGIN
              OrderNo := COPYSTR(PurchDocMgnt.GetOurDocumentNo(Rec),1,MAXSTRLEN(OrderNo));
              IF (OrderNo <> '') AND (PurchDocMgnt.GetOurContact(Rec) = '') THEN BEGIN
                IF PurchDocMgnt.GetIsInvoice(Rec) THEN
                  DocType := PurchHeader."Document Type"::Order
                ELSE
                  DocType := PurchHeader."Document Type"::"Return Order";

                IF PurchHeader.GET(DocType,OrderNo) THEN
                  CaptureMgnt.UpdateFieldValue(Rec."No.",0,0,Field,PurchHeader."Purchaser Code",TRUE);
              END;
            END;


            // *********************************************************************************************************************************
            // UPDATE POSTING ACCOUNTS FROM DATA TRANSLATION TABLE
            // *********************************************************************************************************************************
            Field.SETRANGE("Template No.",Rec."Template No.");
            Field.SETRANGE(Type,Field.Type::Header);
            Field.SETFILTER("Purch. Account Field Code",'<>%1','');
            IF Field.FINDFIRST THEN
              REPEAT
                IF TemplField2.GET(Field."Template No.",Field.Type,Field."Purch. Account Field Code") THEN BEGIN
                  IF (NOT CaptureMgnt.GetFieldValue(Rec,TemplField2,0,Value)) OR (Value."Value (Text)" = '') THEN BEGIN
                    DataTransl.SETRANGE("Template No.","Template No.");
                    DataTransl.SETRANGE(Type,Field.Type);
                    DataTransl.SETRANGE("Field Code",Field.Code);

                    IF DataTransl.FINDFIRST AND (DataTransl."Translate to Type" = DataTransl."Translate to Type"::"G/L Account") AND
                      (DataTransl."Translate to No." <> '')
                    THEN
                      CaptureMgnt.UpdateFieldValue(Rec."No.",0,0,TemplField2,DataTransl."Translate to No.",TRUE);
                  END;
                END;
              UNTIL Field.NEXT = 0;

            AdjustMissingQty(Rec);

            Template.GET("Template No.");
            IF Template."Purch. Auto Match" THEN
              PurchDocMgnt.AutoMatch(Rec);
          END;

  }
  CODE
  {
    VAR
      Text001@1000000000 : TextConst 'DEU=%1 wurde aus %2 verwendet.;ENU=%1 was taken from the %2.';
      Text002@1000000001 : TextConst 'DEU=%1 wurde auf Basis von %2 berechnet.;ENU=%1 was calculated based on %2.';
      Text003@1000000002 : TextConst 'DEU=CURRCODE;ENU=CURRCODE';
      Text004@1000000003 : TextConst 'DEU=DUEDATE;ENU=DUEDATE';
      Text005@1000000004 : TextConst 'DEU=DOCDATE;ENU=DOCDATE';
      Text006@1000000005 : TextConst 'DEU=DOCTYPE;ENU=DOCTYPE';
      PurchDocMgnt@1000000007 : Codeunit 6085709;
      CaptureMgnt@1000000008 : Codeunit 6085576;
      Text008@1000000009 : TextConst 'DEU=QUANTITY;ENU=QUANTITY';
      Text009@161024012 : TextConst 'DEU=GLACCOUNTNO;ENU=GLACCOUNTNO';
      Text010@161024013 : TextConst 'DEU=NO;ENU=NO';
      Text011@161024014 : TextConst 'DEU=OURCONTACT;ENU=OURCONTACT';
      Text012@161024015 : TextConst 'DEU=%1 wurde auf Heute gestellt.;ENU=%1 was set to today.';

    PROCEDURE AdjustMissingQty@1000000000(VAR Document@1000000000 : Record 6085590);
    VAR
      DocumentLine@1000000001 : TEMPORARY Record 6085596;
      Template@1000000007 : Record 6085579;
      Field@1000000006 : Record 6085580;
      UnitCost@1000000002 : Decimal;
      DiscPct@1000000003 : Decimal;
      DiscAmount@1000000004 : Decimal;
      LineAmount@1000000005 : Decimal;
    BEGIN
      Document.BuildTempLinesTable(DocumentLine);

      IF DocumentLine.ISEMPTY THEN
        EXIT;

      Template.GET(Document."Template No.");

      DocumentLine.FINDFIRST;
      REPEAT
        IF PurchDocMgnt.GetLineQuantity(Document,DocumentLine."Line No.") = 0 THEN BEGIN
          UnitCost := PurchDocMgnt.GetLineUnitCost(Document,DocumentLine."Line No.");
          IF UnitCost <> 0 THEN BEGIN
            DiscPct := PurchDocMgnt.GetLineDiscPct(Document,DocumentLine."Line No.");
            DiscAmount := PurchDocMgnt.GetLineDiscAmount(Document,DocumentLine."Line No.");
            LineAmount := PurchDocMgnt.GetLineAmount(Document,DocumentLine."Line No.");

            IF DiscAmount <> 0 THEN
              UnitCost := UnitCost - DiscAmount
            ELSE IF DiscPct <> 0 THEN
              UnitCost := UnitCost * ((100-DiscPct) / 100);

            IF ABS(UnitCost - LineAmount) <= Template."Purch. Allowed Variance Amount" THEN BEGIN
              Field.GET(Document."Template No.",Field.Type::Line,Text008);
              CaptureMgnt.UpdateFieldValue(Document."No.",DocumentLine."Page No.",DocumentLine."Line No.",Field,FORMAT(1),TRUE);
            END;
          END;
        END;
      UNTIL DocumentLine.NEXT = 0;
    END;

    BEGIN
    {
      This codeunit performs post-capture actions on purchase documents
    }
    END.
  }
}

