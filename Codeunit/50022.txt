OBJECT Codeunit 50022 DHL Parcel Status Download FTP
{
  OBJECT-PROPERTIES
  {
    Date=20.03.14;
    Time=13:36:08;
    Modified=Yes;
    Version List=DHL,GOB,HME0686;
  }
  PROPERTIES
  {
    OnRun=VAR
            DataportImportStatus@1000000000 : Dataport 50020;
            FTPDownload@1000000002 : Automation "{42A8A505-1CD3-4CA4-A7EA-E6EBCC481DDC} 1.1:{B32A3669-654B-4CEF-980E-C7753F1FA524}:Unknown Automation Server.Unknown Class";
            FileRec@1000000003 : Record 2000000022;
            LAbrechnungsnummer@1000000028 : Text[40];
            LProduktionslinie@1000000027 : Text[20];
            LProdukt@1000000026 : Text[30];
            LErfassungszeitpunkt@1000000025 : Text[30];
            LErfassungsort@1000000024 : Text[30];
            LErfassungsland@1000000023 : Code[20];
            LPieceCodeIdentifizierer@1000000022 : Text[40];
            LEinlieferdatum@1000000021 : Text[30];
            LStatusEvent@1000000020 : Code[20];
            LStatusRIC@1000000019 : Code[20];
            LStandardereignis@1000000018 : Code[20];
            LReferenznummer1@1000000017 : Text[50];
            LEmpfangernameIST@1000000016 : Text[30];
            LEmpfangernameSOLL@1000000015 : Text[30];
            LLeitcodeRoutingcode@1000000014 : Text[40];
            LRetourensendung@1000000013 : Text[30];
            Reserved@1000000012 : Text[30];
            LZustelDatum@1000000011 : Text[30];
            LPickupDatum@1000000010 : Text[30];
            HeaderImported@1000000009 : Boolean;
            DHLParcel@1000000007 : Record 50021;
            InitialDHLParcel@1000000006 : Record 50021;
            TempSOLine@1000000005 : TEMPORARY Record 37;
            SalesLine@1000000030 : Record 37;
            NewStatusEvent@1000000029 : Code[20];
            NewStatusRic@1000000008 : Code[20];
            PurchaseLine@1000000001 : Record 39;
            ImportFile@1000000031 : File;
            TextVar@1000000032 : Text[1024];
            CurrFieldSeparator@1000000033 : Text[3];
            ResultDate@1000000037 : Date;
            TimeResult@1000000036 : Time;
            TimeStr@1000000035 : Text[30];
            DateTimeRes@1000000034 : DateTime;
            ParcelStatusHistory@1000000004 : Record 80013;
            InitialParcelStatusHistory@1000000038 : Record 80013;
            HowToHandleStatusDescription@1000000039 : ' ,Fill Parcel Status Description,See Comments';
          BEGIN
            //S/P1133
            FPCGeneralSetup.GET;
            //E/P1133

            DHLSetup.GET();
            DHLSetup.TESTFIELD("FTP Address");
            DHLSetup.TESTFIELD("FTP User Name");
            DHLSetup.TESTFIELD("FTP Password");
            DHLSetup.TESTFIELD("FTP Out Folder");
            DHLSetup.TESTFIELD("Destination In Folder");
            DHLSetup.TESTFIELD("Archived Folder");
            DHLSetup.TESTFIELD("Delivery Event Code");
            CurrFieldSeparator := ';';

            IF NOT CREATE(FTPDownload) THEN
              ERROR(Text001);
            //FileRec.SETRANGE(Path,DHLSetup."Destination In Folder");
            //FileRec.SETRANGE("Is a file",TRUE);
            //FileRec.SETFILTER(Name,'*.txt');
            //IF FileRec.FINDSET THEN REPEAT
            //  ERASE(FileRec.Path + '\' + FileRec.Name);
            //UNTIL FileRec.NEXT = 0;
            IF FTPDownload.DownloadDirectory(DHLSetup."FTP Address",DHLSetup."FTP User Name",DHLSetup."FTP Password",
                                             DHLSetup."FTP Out Folder",DHLSetup."Destination In Folder",TRUE,FALSE) THEN BEGIN
              FileRec.RESET;
              FileRec.SETRANGE(Path,DHLSetup."Destination In Folder");
              FileRec.SETRANGE("Is a file",TRUE);
              FileRec.SETFILTER(Name,'*.txt');

              IF FileRec.FINDSET THEN REPEAT
                HeaderImported := FALSE;
                TempSOLine.RESET;
                TempSOLine.DELETEALL;
                //S/P1117
                //S/P1117/++S+++++++
                InitialDHLParcel.RESET;
                InitialDHLParcel.SETCURRENTKEY("Piece-Code (Identifier)");
                //E/P1117/--E-------
                InitialParcelStatusHistory.RESET;
                InitialParcelStatusHistory.SETCURRENTKEY("Tracking Code","Piece Code");
                //E/P1117
                ImportFile.WRITEMODE(FALSE);
                ImportFile.TEXTMODE(TRUE);
                IF ImportFile.OPEN(FileRec.Path + '\' + FileRec.Name) AND (ImportFile.READ(TextVar) <> 0) THEN BEGIN
                  REPEAT
                    IF HeaderImported THEN BEGIN
                      LAbrechnungsnummer := ReadColumn(1,TextVar,CurrFieldSeparator);
                      LProduktionslinie := ReadColumn(2,TextVar,CurrFieldSeparator);
                      LProdukt := ReadColumn(3,TextVar,CurrFieldSeparator);
                      LErfassungszeitpunkt := ReadColumn(4,TextVar,CurrFieldSeparator);
                      LErfassungsort := ReadColumn(5,TextVar,CurrFieldSeparator);
                      LErfassungsland := ReadColumn(6,TextVar,CurrFieldSeparator);
                      //Reserved := ReadColumn(7,TextVar,CurrFieldSeparator);
                      //Reserved := ReadColumn(8,TextVar,CurrFieldSeparator);
                      LPieceCodeIdentifizierer := ReadColumn(9,TextVar,CurrFieldSeparator);
                      LEinlieferdatum := ReadColumn(10,TextVar,CurrFieldSeparator);
                      LZustelDatum := ReadColumn(11,TextVar,CurrFieldSeparator);
                      LPickupDatum := ReadColumn(12,TextVar,CurrFieldSeparator);
                      LStatusEvent := ReadColumn(13,TextVar,CurrFieldSeparator);
                      LStatusRIC := ReadColumn(14,TextVar,CurrFieldSeparator);
                      LStandardereignis := ReadColumn(15,TextVar,CurrFieldSeparator);
                      //Reserved := ReadColumn(16,TextVar,CurrFieldSeparator);
                      //Reserved := ReadColumn(17,TextVar,CurrFieldSeparator);
                      LReferenznummer1 := ReadColumn(18,TextVar,CurrFieldSeparator);
                      //Reserved := ReadColumn(19,TextVar,CurrFieldSeparator);
                      LEmpfangernameIST := ReadColumn(20,TextVar,CurrFieldSeparator);
                      LEmpfangernameSOLL := ReadColumn(21,TextVar,CurrFieldSeparator);
                      //Reserved := ReadColumn(22,TextVar,CurrFieldSeparator);
                      //Reserved := ReadColumn(23,TextVar,CurrFieldSeparator);
                      //Reserved := ReadColumn(24,TextVar,CurrFieldSeparator);
                      //Reserved := ReadColumn(25,TextVar,CurrFieldSeparator);
                      LLeitcodeRoutingcode := ReadColumn(26,TextVar,CurrFieldSeparator);
                      //Reserved := ReadColumn(27,TextVar,CurrFieldSeparator);
                      //Reserved := ReadColumn(28,TextVar,CurrFieldSeparator);
                      //Reserved := ReadColumn(29,TextVar,CurrFieldSeparator);
                      LRetourensendung := ReadColumn(30,TextVar,CurrFieldSeparator);
                      //Reserved := ReadColumn(31,TextVar,CurrFieldSeparator);

                      //S/P1117
                      //S/P1117/++S++++++
                      //S/P1133
                      IF FPCGeneralSetup."Active Parcel Status History" IN
                        [FPCGeneralSetup."Active Parcel Status History"::"Use Only Old DHL Parcel Status History",
                        FPCGeneralSetup."Active Parcel Status History"::"Fill Both But Show And Use Old",
                        FPCGeneralSetup."Active Parcel Status History"::"Fill Both But Show And Use New"]
                      THEN BEGIN
                      //E/P1133
                        CLEAR(DHLParcel);
                        DHLParcel."Piece-Code (Identifier)" := LPieceCodeIdentifizierer;
                        DHLParcel."Account Number" := LAbrechnungsnummer;
                        DHLParcel."Production Line" := LProduktionslinie;
                        DHLParcel.Product := LProdukt;
                        IF LErfassungszeitpunkt <> '' THEN BEGIN
                          TimeStr := COPYSTR(LErfassungszeitpunkt,STRPOS(LErfassungszeitpunkt,' '),STRLEN(LErfassungszeitpunkt));
                          IF Text2Date(COPYSTR(LErfassungszeitpunkt,1,STRPOS(LErfassungszeitpunkt,' ')),ResultDate) AND
                                       EVALUATE(TimeResult,TimeStr) THEN BEGIN
                            DateTimeRes := CREATEDATETIME(ResultDate,TimeResult);
                            DHLParcel."Time Stamp" := DateTimeRes
                          END;
                        END;
                        InitialDHLParcel.SETRANGE("Piece-Code (Identifier)",LPieceCodeIdentifizierer);
                        InitialDHLParcel.SETRANGE("Current Status",TRUE);
                        InitialDHLParcel.SETRANGE("Rhenus Entry",FALSE);
                        IF NOT InitialDHLParcel.FINDFIRST THEN
                          InitialDHLParcel.INIT
                        ELSE BEGIN
                          IF (InitialDHLParcel."Time Stamp" <= DHLParcel."Time Stamp") AND (InitialDHLParcel."Document Line No." <> 0) THEN
            Wrong
                            InitialDHLParcel."Current Status" := FALSE;
                            InitialDHLParcel.MODIFY;
                            DHLParcel."Current Status" := TRUE;
                          END;
                          //S/P1133
                          IF FPCGeneralSetup."Active Parcel Status History" IN
                            [FPCGeneralSetup."Active Parcel Status History"::"Use Only Old DHL Parcel Status History",
                            FPCGeneralSetup."Active Parcel Status History"::"Fill Both But Show And Use Old"]
                          THEN
                          //E/P113
                            IF NOT TempSOLine.GET(TempSOLine."Document Type"::Order,InitialDHLParcel."Document No.",
                                                  InitialDHLParcel."Document Line No.") THEN BEGIN
                              TempSOLine.INIT;
                              TempSOLine."Document Type" := TempSOLine."Document Type"::Order;
                              TempSOLine."Document No." := InitialDHLParcel."Document No.";
                              TempSOLine."Line No." := InitialDHLParcel."Document Line No.";
                              TempSOLine."DHL Shipment Number" := InitialDHLParcel."DHL Shipment Code";
                              TempSOLine.INSERT;
                            END;
                        END;

                        DHLParcel."Detection Location" := LErfassungsort;
                        DHLParcel."Country of Origin" := LErfassungsland;
                        IF Text2Date(LEinlieferdatum,ResultDate) THEN
                          DHLParcel."Commit at Date" := ResultDate;
                        DHLParcel."Status Event" := LStatusEvent;
                        DHLParcel."Status Code" := LStatusRIC;
                        DHLParcel."Standart Event" := LStandardereignis;
                        DHLParcel."Reference Number" := LReferenznummer1;
                        DHLParcel."Recipient Name Is" := LEmpfangernameIST;
                        DHLParcel."Recipient Name Target" := LEmpfangernameSOLL;
                        DHLParcel."Routing Code" := LLeitcodeRoutingcode;
                        IF EVALUATE(DHLParcel."Return Policies (Y/N)",LRetourensendung) THEN;
                        IF Text2Date(LZustelDatum,ResultDate) THEN
                          DHLParcel."Delivery Date" := ResultDate;
                        IF Text2Date(LPickupDatum,ResultDate) THEN
                          DHLParcel."Pickup Date" := ResultDate;
                        DHLParcel."Document No." := InitialDHLParcel."Document No.";
                        DHLParcel."Document Type" := InitialDHLParcel."Document Type"::Order;
                        DHLParcel."Document Line No." := InitialDHLParcel."Document Line No.";
                        DHLParcel."Purchase Order Code" := InitialDHLParcel."Purchase Order Code";
                        DHLParcel."PO Line No." := InitialDHLParcel."PO Line No.";
                        DHLParcel."DHL Shipment Code" := InitialDHLParcel."DHL Shipment Code";
                        //H0686  04.12.13  MBY  ++++++++++++++++++++++++++++
                        {
                        //H0686  04.12.13  MBY  ----------------------------
                        DHLParcel.INSERT;
                        //H0686  04.12.13  MBY  ++++++++++++++++++++++++++++
                        }
                        DHLParcel.INSERT(TRUE);
                        //H0686  04.12.13  MBY  ----------------------------
                      //E/P1117/--E-------
                      //S/P1133
                      END;
                      IF FPCGeneralSetup."Active Parcel Status History" IN
                        [FPCGeneralSetup."Active Parcel Status History"::"Fill Both But Show And Use Old",
                        FPCGeneralSetup."Active Parcel Status History"::"Fill Both But Show And Use New",
                        FPCGeneralSetup."Active Parcel Status History"::"Use Only New Parcel Status History"]
                      THEN BEGIN
                      //E/P1133
                      CLEAR(ParcelStatusHistory);
                      WITH ParcelStatusHistory DO BEGIN
                        INIT;
                        "Entry No." := ParcelStatusHistory.GetNextEntryNo(TRUE);
                        INSERT;
                        "Direction of Information" := "Direction of Information"::Incoming;
                        "Used Interface" := "Used Interface"::DHL;
                        "Piece Code" := LPieceCodeIdentifizierer;
                        "Account No." := LAbrechnungsnummer;
                        "Timestamp Insert" := CURRENTDATETIME;
                        IF LErfassungszeitpunkt <> '' THEN BEGIN
                          TimeStr := COPYSTR(LErfassungszeitpunkt,STRPOS(LErfassungszeitpunkt,' '),STRLEN(LErfassungszeitpunkt));
                          IF Text2Date(COPYSTR(LErfassungszeitpunkt,1,STRPOS(LErfassungszeitpunkt,' ')),ResultDate) AND
                             EVALUATE(TimeResult,TimeStr)
                          THEN BEGIN
                            DateTimeRes := CREATEDATETIME(ResultDate,TimeResult);
                            "Timestamp Interface" := DateTimeRes;
                          END;
                        END;
                        // S/P1170
                        //"Timestamp Difference" := "Timestamp Insert" - "Timestamp Interface";
                        IF "Timestamp Interface" <> 0DT THEN
                          "Timestamp Difference" := "Timestamp Insert" - "Timestamp Interface";
                        IF "Timestamp Difference" < 0 THEN
                           "Timestamp Difference" := "Timestamp Difference" * -1;
                        // E/P1170
                        IF Text2Date(LEinlieferdatum,ResultDate) THEN
                          "Date Commit" := ResultDate;
                        IF Text2Date(LZustelDatum,ResultDate) THEN
                          "Date Delivery" := ResultDate;
                        IF Text2Date(LPickupDatum,ResultDate) THEN
                          "Date Pickup" := ResultDate;
                        CUParcelStatusHistoryMgmt.CheckAndCreateShippingAgent('DHL');
                        "Shipping Agent Code" := 'DHL';
                        HowToHandleStatusDescription := HowToHandleStatusDescription::"Fill Parcel Status Description";
                        CUParcelStatusHistoryMgmt.CheckAndCreateParcelStatus(
                          HowToHandleStatusDescription,
                          'DHL',
                          LStatusEvent,
                          '',
                          LStatusRIC,
                          '');
                        "Status Code" := LStatusEvent;
                        "Status Sub Code" := LStatusRIC;
                        InitialParcelStatusHistory.SETRANGE("Piece Code",LPieceCodeIdentifizierer);
                        IF NOT InitialParcelStatusHistory.FINDLAST THEN
                          InitialParcelStatusHistory.INIT
                        ELSE BEGIN
                          //S/P1133
                          IF FPCGeneralSetup."Active Parcel Status History" IN
                            [FPCGeneralSetup."Active Parcel Status History"::"Fill Both But Show And Use New",
                            FPCGeneralSetup."Active Parcel Status History"::"Use Only New Parcel Status History"]
                          THEN
                          //E/P113
                            IF NOT TempSOLine.GET(
                                     TempSOLine."Document Type"::Order,
                                     InitialParcelStatusHistory."Document No.",
                                     InitialParcelStatusHistory."Document Line No.")
                            THEN BEGIN
                              TempSOLine.INIT;
                              TempSOLine."Document Type" := TempSOLine."Document Type"::Order;
                              TempSOLine."Document No." := InitialParcelStatusHistory."Document No.";
                              TempSOLine."Line No." := InitialParcelStatusHistory."Document Line No.";
                              TempSOLine."DHL Shipment Number" := InitialParcelStatusHistory."Tracking Code";
                              TempSOLine.INSERT;
                            END;
                        END;
                        "Document Type" := InitialParcelStatusHistory."Document Type";
                        "Document No." := InitialParcelStatusHistory."Document No.";
                        "Document Line No." := InitialParcelStatusHistory."Document Line No.";
                        "Purchase Doc. Type" := InitialParcelStatusHistory."Purchase Doc. Type";
                        "Purchase Doc. No." := InitialParcelStatusHistory."Purchase Doc. No.";
                        "Purchase Doc. Line No." := InitialParcelStatusHistory."Purchase Doc. Line No.";
                        "Tracking Code" := InitialParcelStatusHistory."Tracking Code";
                        // S/P1228
                        //MODIFY;
                        MODIFY(TRUE);
                        // E/P1228
                        // S/P1180
                        CLEAR(CUParcelStatusHistoryMgmt);
                        CUParcelStatusHistoryMgmt.CheckIfArchivedOrder("Entry No.");
                        // E/P1180
                      END;
                      //S/P1133
                      END;
                      //E/P1133
                      //E/P1117
                    END ELSE
                      HeaderImported := TRUE;
                  UNTIL (ImportFile.READ(TextVar) = 0);

                  ImportFile.CLOSE;
                  //S/P1117
                  //S/P1117/++S+++++++
                  InitialDHLParcel.RESET;
                  InitialDHLParcel.SETCURRENTKEY("Document No.","Document Line No.","Current Status","Time Stamp");
                  //E/P1117/--E-------
                  InitialParcelStatusHistory.RESET;
                  InitialParcelStatusHistory.SETCURRENTKEY("Document No.","Document Line No.","Document Type");
                  //E/P1117
                  IF TempSOLine.FINDSET THEN REPEAT
                    //S/P1117
                    //S/P1133
                    IF FPCGeneralSetup."Active Parcel Status History" IN
                      [FPCGeneralSetup."Active Parcel Status History"::"Use Only Old DHL Parcel Status History",
                      FPCGeneralSetup."Active Parcel Status History"::"Fill Both But Show And Use Old"]
                    THEN BEGIN
                    //E/P113
                      InitialDHLParcel.SETRANGE("Document No.",TempSOLine."Document No.");
                      InitialDHLParcel.SETRANGE("Document Line No.",TempSOLine."Line No.");
                      InitialDHLParcel.SETRANGE("Current Status",TRUE);
                      InitialDHLParcel.SETRANGE("DHL Shipment Code",TempSOLine."DHL Shipment Number");
                      InitialDHLParcel.SETRANGE("Rhenus Entry",FALSE);
                      IF SalesLine.GET(TempSOLine."Document Type",TempSOLine."Document No.",TempSOLine."Line No.") THEN BEGIN
                        InitialDHLParcel.SETFILTER("Status Event",'<>%1',DHLSetup."Delivery Event Code");
                        IF InitialDHLParcel.FINDLAST THEN BEGIN
                          NewStatusEvent := InitialDHLParcel."Status Event";
                          NewStatusRic := InitialDHLParcel."Status Code";
                        END ELSE BEGIN
                          InitialDHLParcel.SETRANGE("Status Event",DHLSetup."Delivery Event Code");
                          IF InitialDHLParcel.FINDLAST THEN BEGIN
                            NewStatusEvent := InitialDHLParcel."Status Event";
                            NewStatusRic := InitialDHLParcel."Status Code";
                          END;
                        END;
                      END;
                    //S/P1133
                    END ELSE BEGIN
                      InitialParcelStatusHistory.SETRANGE("Document No.",TempSOLine."Document No.");
                      InitialParcelStatusHistory.SETRANGE("Document Line No.",TempSOLine."Line No.");
                      InitialParcelStatusHistory.SETRANGE("Document Type",TempSOLine."Document Type");
                      InitialParcelStatusHistory.SETRANGE("Tracking Code",TempSOLine."DHL Shipment Number");
                      IF SalesLine.GET(TempSOLine."Document Type",TempSOLine."Document No.",TempSOLine."Line No.") THEN BEGIN
                        InitialParcelStatusHistory.SETFILTER("Status Code",'<>%1',DHLSetup."Delivery Event Code");
                        IF InitialParcelStatusHistory.FINDLAST THEN BEGIN
                          NewStatusEvent := InitialParcelStatusHistory."Status Code";
                          NewStatusRic := InitialParcelStatusHistory."Status Sub Code";
                        END ELSE BEGIN
                          InitialParcelStatusHistory.SETRANGE("Status Code",DHLSetup."Delivery Event Code");
                          IF InitialParcelStatusHistory.FINDLAST THEN BEGIN
                            NewStatusEvent := InitialParcelStatusHistory."Status Code";
                            NewStatusRic := InitialParcelStatusHistory."Status Sub Code";
                          END;
                      END;
                    END;
                    //E/P1133
                    //E/P1117
                      IF (NewStatusEvent <> '') AND (NewStatusRic <> '') THEN
                        IF (NewStatusEvent <> SalesLine."Status Event Code") OR (SalesLine."Status Code" <> NewStatusRic) THEN BEGIN
                          SalesLine."Status Event Code" := NewStatusEvent;
                          SalesLine."Status Code" :=  NewStatusRic;
                          SalesLine.MODIFY;
                          IF PurchaseLine.GET(PurchaseLine."Document Type"::Order,SalesLine."Purchase Order No.",
                                              SalesLine."Purch. Order Line No.") THEN BEGIN
                            PurchaseLine."Status Event Code" := NewStatusEvent;
                            PurchaseLine."Status Code" :=  NewStatusRic;
                            PurchaseLine.MODIFY;
                          END;
                        END;
                    END;
                  UNTIL TempSOLine.NEXT = 0;
                END;
                COMMIT;
                COPY(FileRec.Path + '\' + FileRec.Name,DHLSetup."Archived Folder" + '\' + FileRec.Name);
                ERASE(FileRec.Path + '\' + FileRec.Name);
              UNTIL FileRec.NEXT = 0;
            END ELSE
              ERROR(FTPDownload.GetLastErrorText);
          END;

  }
  CODE
  {
    VAR
      Text001@1000000000 : TextConst 'ENU=Cannot create FTP Automation.';
      DHLSetup@1000000001 : Record 50022;
      Text004@1000000002 : TextConst 'ENU=Wrong format of the file.';
      RecRef@1000000003 : RecordRef;
      CUParcelStatusHistoryMgmt@1000000004 : Codeunit 80011;
      FPCGeneralSetup@1000000005 : Record 50055;

    PROCEDURE Text2Date@1000000001(InStr@1000000000 : Text[1024];VAR Result@1000000002 : Date) : Boolean;
    VAR
      SeparatorPos@1000000001 : Integer;
      SeparatorAcc@1000000003 : Integer;
      DD@1000000004 : Integer;
      MM@1000000005 : Integer;
      YYYY@1000000006 : Integer;
      LongYear@1000000007 : Boolean;
      CurrSeparator@1000000008 : Integer;
      DateFormat@1000000009 : 'dd-mm-yyyy,mm-dd-yyyy,yyyy-dd-mm,yyyy-mm-dd';
    BEGIN
      Result := 0D;
      IF InStr = '' THEN
        EXIT(TRUE);
      DateFormat := DHLSetup."Default Date Format";
      InStr := CONVERTSTR(InStr,'.','#');
      InStr := CONVERTSTR(InStr,'/','#');
      InStr := CONVERTSTR(InStr,'\','#');
      InStr := CONVERTSTR(InStr,'-','#');
      InStr := CONVERTSTR(InStr,':','#');
      InStr := CONVERTSTR(InStr,'T','#');
      REPEAT
        SeparatorPos := STRPOS(InStr,'#');
        IF SeparatorPos <> 0 THEN BEGIN
          InStr := DELSTR(InStr,SeparatorPos,1);
          SeparatorAcc +=1;
          CurrSeparator := SeparatorPos;
        END;
      UNTIL (SeparatorPos = 0) OR (SeparatorAcc = 3);
      IF SeparatorAcc = 2 THEN
        InStr := COPYSTR(InStr,1,8)
      ELSE BEGIN
        IF CurrSeparator > 0 THEN
          CurrSeparator -= 1;
        InStr := COPYSTR(InStr,1,CurrSeparator);
      END;

      IF STRLEN(InStr) = 8 THEN
        LongYear := TRUE
      ELSE
        LongYear := FALSE;

      IF (DateFormat = DateFormat::"yyyy-dd-mm") THEN BEGIN
        IF LongYear THEN BEGIN
          IF NOT EVALUATE(YYYY,COPYSTR(InStr,1,4)) THEN
            EXIT(FALSE);
          IF NOT EVALUATE(DD,COPYSTR(InStr,5,2)) THEN
            EXIT(FALSE);
          IF NOT EVALUATE(MM,COPYSTR(InStr,7,2)) THEN
            EXIT(FALSE);
        END ELSE BEGIN
          IF NOT EVALUATE(YYYY,COPYSTR(InStr,1,2)) THEN
            EXIT(FALSE);
          IF NOT EVALUATE(DD,COPYSTR(InStr,3,2)) THEN
            EXIT(FALSE);
          IF NOT EVALUATE(MM,COPYSTR(InStr,5,2)) THEN
            EXIT(FALSE);
          YYYY += 2000;
        END;
      END ELSE IF (DateFormat = DateFormat::"yyyy-mm-dd") THEN BEGIN
        IF LongYear THEN BEGIN
          IF NOT EVALUATE(YYYY,COPYSTR(InStr,1,4)) THEN
            EXIT(FALSE);
          IF NOT EVALUATE(MM,COPYSTR(InStr,5,2)) THEN
            EXIT(FALSE);
          IF NOT EVALUATE(DD,COPYSTR(InStr,7,2)) THEN
            EXIT(FALSE);
        END ELSE BEGIN
          IF NOT EVALUATE(YYYY,COPYSTR(InStr,1,2)) THEN
            EXIT(FALSE);
          IF NOT EVALUATE(MM,COPYSTR(InStr,3,2)) THEN
            EXIT(FALSE);
          IF NOT EVALUATE(DD,COPYSTR(InStr,5,2)) THEN
            EXIT(FALSE);
          YYYY += 2000;
        END;
      END ELSE IF (DateFormat = DateFormat::"dd-mm-yyyy") THEN BEGIN
        IF NOT EVALUATE(DD,COPYSTR(InStr,1,2)) THEN
          EXIT(FALSE);
        IF NOT EVALUATE(MM,COPYSTR(InStr,3,2)) THEN
          EXIT(FALSE);
        IF NOT EVALUATE(YYYY,COPYSTR(InStr,5,4)) THEN
          EXIT(FALSE);
        IF NOT LongYear THEN
          YYYY += 2000;
      END ELSE IF (DateFormat = DateFormat::"mm-dd-yyyy") THEN BEGIN
        IF NOT EVALUATE(MM,COPYSTR(InStr,1,2)) THEN
          EXIT(FALSE);
        IF NOT EVALUATE(DD,COPYSTR(InStr,3,2)) THEN
          EXIT(FALSE);
        IF NOT EVALUATE(YYYY,COPYSTR(InStr,5,4)) THEN
          EXIT(FALSE);
        IF NOT LongYear THEN
          YYYY += 2000;

      END;
      Result := DMY2DATE(DD,MM,YYYY);
      EXIT(TRUE);
    END;

    PROCEDURE ReadColumn@1000000020(Position@1000000000 : Integer;VAR TheText@1000000001 : Text[1024];CurrFieldSeparator@1000000005 : Text[3]) : Text[255];
    VAR
      ReadPos@1000000002 : Integer;
      CurrColumnNo@1000000003 : Integer;
      DataString@1000000004 : Text[1024];
    BEGIN
      ReadPos := 0;
      CurrColumnNo := 0;
      DataString := TheText;
      IF STRPOS(DataString,CurrFieldSeparator) = 0 THEN
        ERROR(Text004);
      REPEAT
        ReadPos := STRPOS(DataString,CurrFieldSeparator);
        CurrColumnNo += 1;
        IF (ReadPos <> 0) THEN
        BEGIN
          IF CurrColumnNo = Position THEN BEGIN
            DataString := COPYSTR(DataString,1,ReadPos - 1);
            EXIT(DELCHR(DataString,'<>',' '));
          END;
          DataString := COPYSTR(DataString,ReadPos + STRLEN(CurrFieldSeparator));
        END ELSE
          IF CurrColumnNo = Position THEN
            EXIT(DELCHR(DataString,'<>',' '));
      UNTIL (ReadPos = 0) OR (CurrColumnNo > Position);

      EXIT('');
    END;

    BEGIN
    {
      DHL 29.09.11

      +--------------------------------------------+
      |                                            |
      |                  Home24                    |
      |     Cooperation GOB & Home24 NAV Team      |
      |                                            |
      +--------------------------------------------+

      Project No. Date      Shortcut  Description
      _____________________________________________
      P1117       08.10.13  gob-mlan  - Redesign of "DHL Parcel Status History"
                                      - Code within with //S/P1117/++S+++++++ and //E/P1117/--E-------
                                        will be replaced by the new code and/or it will be deactivated
      P1133       05.11.13  gob-mlan  - Redesign of "DHL Parcel Status History"
      P1170       19.12.13  gob-mlan  - Fix after test response M. Matyushenko
      P1180       21.01.13  gob-mlan  - Fix after test response M. Matyushenko
      P1228       20.03.14  gob-mlan  Adopt "Tracking Actions"-Logic (MBY) from T50021


      +--------------------------------------------+
      |                                            |
      |                  Home24                    |
      |       Internal Customizing by NAV-Team     |
      |                                            |
      +--------------------------------------------+

      Project No. Date     Shortcut  Description
      _____________________________________________
      H0686       04.12.13 MBY       Execute OnInsert trigger in "DHL Parcels Status History" table
    }
    END.
  }
}

