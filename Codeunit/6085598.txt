OBJECT Codeunit 6085598 SmtpMail Management
{
  OBJECT-PROPERTIES
  {
    Date=07.03.14;
    Time=01:00:00;
    Version List=DCW13.70.00.3.50.07;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      SmtpMail@161024012 : Automation "{D1D0B2AB-A006-4BA8-8CC8-6129957BF40A} 1.0:{3E00451D-B13C-30B3-B071-D83BE5617DB5}:'Continia Document Capture for Dynamics NAV - Common Library'.SmtpMail";

    PROCEDURE AddAttachment@161024013(Filename@161024012 : Text[1024]);
    BEGIN
      CreateVars;

      SmtpMail.AddAttachment(Filename);
    END;

    PROCEDURE AddTo@161024015(DisplayName@161024012 : Text[1024];EmailAddress@161024013 : Text[1024]);
    BEGIN
      CreateVars;

      SmtpMail.AddTo(DisplayName,EmailAddress);
    END;

    PROCEDURE AddBcc@161024014(DisplayName@161024012 : Text[1024];EmailAddress@161024013 : Text[1024]);
    BEGIN
      CreateVars;

      SmtpMail.AddBcc(DisplayName,EmailAddress);
    END;

    PROCEDURE AddCC@161024016(DisplayName@161024012 : Text[1024];EmailAddress@161024013 : Text[1024]);
    BEGIN
      CreateVars;

      SmtpMail.AddCC(DisplayName,EmailAddress);
    END;

    PROCEDURE AppendToBody@161024019(Text@161024012 : Text[1024]);
    BEGIN
      CreateVars;

      SmtpMail.AppendToBody(Text);
    END;

    PROCEDURE Send@161024021() : Boolean;
    BEGIN
      CreateVars;

      EXIT(SmtpMail.Send);
    END;

    PROCEDURE SaveLastError@161024022(Filename@161024012 : Text[1024]);
    BEGIN
      CreateVars;

      SmtpMail.SaveLastError(Filename);
    END;

    PROCEDURE SetSubject@161024030(Subject@161024012 : Text[1024]);
    BEGIN
      CreateVars;

      SmtpMail.Subject := Subject;
    END;

    PROCEDURE SetBody@161024018(Body@161024012 : Text[1024]);
    BEGIN
      CreateVars;

      SmtpMail.Body := Body;
    END;

    PROCEDURE SetBodyFromBigStringMgnt@161024024(VAR BigStringMgnt@161024012 : Codeunit 6085587);
    VAR
      BigString@161024013 : Automation "{D1D0B2AB-A006-4BA8-8CC8-6129957BF40A} 1.0:{00398031-28B6-3E6A-B270-CA54075661A6}:'Continia Document Capture for Dynamics NAV - Common Library'.BigString";
    BEGIN
      CreateVars;

      BigStringMgnt.GetBigString(BigString);
      SmtpMail.SetBodyFromBigString(BigString);
    END;

    PROCEDURE SetBodyIsHtml@161024020(BodyIsHtml@161024012 : Boolean);
    BEGIN
      CreateVars;

      SmtpMail.BodyIsHtml := BodyIsHtml;
    END;

    PROCEDURE SetFromAddress@161024023(Address@161024012 : Text[1024]);
    BEGIN
      CreateVars;

      SmtpMail.FromAddress := Address;
    END;

    PROCEDURE SetFromName@161024025(Name@161024012 : Text[1024]);
    BEGIN
      CreateVars;

      SmtpMail.FromName := Name;
    END;

    PROCEDURE SetUsername@161024031(Username@161024012 : Text[1024]);
    BEGIN
      CreateVars;

      SmtpMail.Username := Username;
    END;

    PROCEDURE SetPassword@161024026(Password@161024012 : Text[1024]);
    BEGIN
      CreateVars;

      SmtpMail.Password := Password;
    END;

    PROCEDURE SetServerAddress@161024027(Address@161024012 : Text[1024]);
    BEGIN
      CreateVars;

      SmtpMail.ServerAddress := Address;
    END;

    PROCEDURE SetServerPort@161024028(Port@161024012 : Integer);
    BEGIN
      CreateVars;

      SmtpMail.ServerPort := Port;
    END;

    PROCEDURE SetSmtpAuthMethod@161024029(AuthMethod@161024012 : Text[1024]);
    BEGIN
      CreateVars;

      SmtpMail.SmtpAuthMethod := AuthMethod;
    END;

    PROCEDURE SetStartTLS@161024032(StartTLS@161024012 : Boolean);
    BEGIN
      CreateVars;

      SmtpMail.StartTLS := StartTLS;
    END;

    PROCEDURE GetLastError@161024017() : Text[1024];
    BEGIN
      IF NOT GUIALLOWED THEN
        EXIT(COPYSTR(SmtpMail.LastErrorMessage,1,1000)) // We are most likely running in a Job Queue, and MAX error log text len is 1000
      ELSE
        EXIT(SmtpMail.LastErrorMessage);
    END;

    LOCAL PROCEDURE CreateVars@161024012();
    BEGIN
      IF ISCLEAR(SmtpMail) THEN
        CREATE(SmtpMail);
    END;

    BEGIN
    END.
  }
}

