OBJECT Codeunit 50322 Spare Part Mgt.
{
  OBJECT-PROPERTIES
  {
    Date=25.06.15;
    Time=16:44:44;
    Modified=Yes;
    Version List=HME4231;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      SalesSetup@1000000001 : Record 311;
      PurchaseSetup@1000000002 : Record 312;
      NewSalesOrderLine@1000000003 : Record 37;
      OldSalesLine@1000000008 : Record 37;
      OldSalesLineArch@1000000006 : Record 5108;
      SpareItem@1000000009 : Record 27;
      Vendor@1000000010 : Record 23;
      Country_Region@1000000005 : Record 9;
      FPCGeneralSetup@1000000016 : Record 50055;
      SalesCommentLine@1000000018 : Record 44;
      SalesCommentLineArch@1000000017 : Record 5126;
      CancRetOrderHistory@1000000024 : Record 50037;
      OrderStatusLog@1000000028 : Record 50069;
      NoSeriesMgt@1000000004 : Codeunit 396;
      TextHME001@1000000011 : TextConst 'DEU=Es ist kein Deafalt Dummy Artikel fÅr Kreditor %1 vorhanden.;ENU=There is no Default Dummy Item for Vendor %1.';
      TextHME002@1000000012 : TextConst 'DEU=Es gibt keinen Kreditor fÅr Artikel %1.;ENU="There is no Vendor for Item %1. "';
      TextHME003@1000000013 : TextConst 'DEU=Es gibt keinen Kreditor mit der Nummer %1.;ENU="There is no Vendor No. %1. "';
      TextHME004@1000000007 : TextConst 'DEU="LÑnder/Regionscode %1 ist nicht fÅr ErsatzteileauftrÑge zulÑssig. ";ENU=Country/Region %1 is not allowed for Spare Part Orders.';
      TextHME005@1000000014 : TextConst 'DEU=LÑnder/Region %1 nicht vorhanden.;ENU=Country/Region %1 is not availlable.';
      TextHME006@1000000015 : TextConst 'DEU=Der Ersatzteilauftrag mit der Nr. %1 wurde erstellt.;ENU=The Spare Part Order %1 was created.';
      TextHME007@1000000019 : TextConst 'DEU=Spare Part Order for Order %1;ENU=Spare Part Order for Order %1';
      Error021@1000000023 : TextConst 'DEU=Der Dimensionswert %1 fÅr Auftragszeile %2 ist keine gÅltige Auftragsnummer!;ENU=Dimension Value %1 to Order Line %2 is not valid.';
      Error022@1000000022 : TextConst 'DEU=Der Dimensionswert %1 fÅr Auftrag %2 ist keine gÅltige Auftragsnummer!;ENU=Dimension Value %1 to Order %2 is not valid.';
      Error023@1000000021 : TextConst 'DEU=Der Dimensionswert %1 fÅr Auftragszeile %2 ist keine gÅltige Auftragsnummer und muss manuell in der Reklamation geÑndert werden!;ENU=Dimension Value %1 to Order Line %2 is not valid and has to be change in return document.';
      Error024@1000000020 : TextConst 'DEU=Der Dimensionswert %1 fÅr Auftrag %2 ist keine gÅltige Auftragsnummer und muss manuell in der Reklamation geÑndert werden!;ENU=Dimension Value %1 to Order %2 is not valid and has to be changed in retrun document.';
      FPCManagement@1000000027 : Codeunit 50003;
      NextEntryNo@1000000025 : Integer;
      LineStatus004@1000000029 : TextConst 'DEU=Ersatzteilauftrag %1 wurde erstellt.;ENU=Sparepart Order %1 has been created.';
      TextHME008@1000000000 : TextConst 'DEU="Der Default Dummy Artikel des Kreditoren %1 ist nicht vorhanden. ";ENU=The Default Dummy Item of the Vendor %1 does not exist.';
      InvH24Mgt@1000000026 : Codeunit 50321;

    PROCEDURE InsertSOrderFromSalesHeader@1000000000(OldSalesHeader@1000000000 : Record 36;VAR NewSalesOrderHeader@1000000002 : Record 36);
    VAR
      LinenoL@1000000001 : Integer;
    BEGIN
      IF Country_Region.GET(OldSalesHeader."Ship-to Country/Region Code") THEN BEGIN
        IF Country_Region."Status Spare Part" = Country_Region."Status Spare Part"::" " THEN BEGIN
          ERROR(TextHME004,OldSalesHeader."Ship-to Country/Region Code");
        END;
      END ELSE
        ERROR(TextHME005,OldSalesHeader."Ship-to Country/Region Code");

      SalesSetup.GET;
      FPCGeneralSetup.GET;

      OldSalesLine.SETRANGE (OldSalesLine."Document Type",OldSalesHeader."Document Type");
      OldSalesLine.SETRANGE (OldSalesLine."Document No.",OldSalesHeader."No.");
      OldSalesLine.SETRANGE (OldSalesLine.Type,OldSalesLine.Type::Item);
      OldSalesLine.SETRANGE (OldSalesLine."Return Type",OldSalesLine."Return Type"::"Spare Part");
      IF OldSalesLine.FINDSET THEN BEGIN
        REPEAT
          NewSalesOrderHeader.INIT;
          NewSalesOrderHeader."No." := '';
          NewSalesOrderHeader."Document Type" := NewSalesOrderHeader."Document Type"::Order;
          NoSeriesMgt.InitSeries(SalesSetup."Spare Part Order Nos.",'',NewSalesOrderHeader."Posting Date",
                                 NewSalesOrderHeader."No.",NewSalesOrderHeader."No. Series");
          NewSalesOrderHeader.INSERT(TRUE);

          NewSalesOrderHeader.VALIDATE("Sell-to Customer No.",OldSalesHeader."Sell-to Customer No.");
          NewSalesOrderHeader.VALIDATE("Bill-to Customer No.",OldSalesHeader."Bill-to Customer No.");
          NewSalesOrderHeader."Sell-to Customer Name"       := OldSalesHeader."Ship-to Name";
          NewSalesOrderHeader."Sell-to Customer Name 2"     := OldSalesHeader."Ship-to Name 2";
          NewSalesOrderHeader."Sell-to Address"             := OldSalesHeader."Ship-to Address";
          NewSalesOrderHeader."Sell-to Address 2"           := OldSalesHeader."Ship-to Address 2";
          NewSalesOrderHeader."Sell-to City"                := OldSalesHeader."Ship-to City";
          NewSalesOrderHeader."Sell-to Contact"             := OldSalesHeader."Ship-to Contact";
          NewSalesOrderHeader."Sell-to Post Code"           := OldSalesHeader."Ship-to Post Code";
          NewSalesOrderHeader."Sell-to Country/Region Code" := OldSalesHeader."Ship-to Country/Region Code";
          NewSalesOrderHeader."Ship-to Code"                := OldSalesHeader."Ship-to Code";
          NewSalesOrderHeader."Ship-to Name"                := OldSalesHeader."Ship-to Name";
          NewSalesOrderHeader."Ship-to Name 2"              := OldSalesHeader."Ship-to Name 2";
          NewSalesOrderHeader."Ship-to Address"             := OldSalesHeader."Ship-to Address";
          NewSalesOrderHeader."Ship-to Address 2"           := OldSalesHeader."Ship-to Address 2";
          NewSalesOrderHeader."Ship-to City"                := OldSalesHeader."Ship-to City";
          NewSalesOrderHeader."Posting Date"                := TODAY;
          NewSalesOrderHeader."Account Holder"              := OldSalesHeader."Account Holder";
          NewSalesOrderHeader."Account No."                 := OldSalesHeader."Account No.";
          NewSalesOrderHeader."Account BLZ"                 := OldSalesHeader."Account BLZ";
          NewSalesOrderHeader."Payment Method Code"         := OldSalesHeader."Payment Method Code";

          //H3781 26.02.15 cc.rst +++++++++++++++++++
          NewSalesOrderHeader.VALIDATE("Location Code",OldSalesLine."Location Code");
          //H3781 26.02.15 cc.rst -------------------
          NewSalesOrderHeader."Prices Including VAT"        := OldSalesHeader."Prices Including VAT";
          NewSalesOrderHeader."Gen. Bus. Posting Group"     := OldSalesHeader."Gen. Bus. Posting Group";
          NewSalesOrderHeader."VAT Bus. Posting Group"      := OldSalesHeader."VAT Bus. Posting Group";
          NewSalesOrderHeader."Return Type"                 := NewSalesOrderHeader."Return Type"::"Spare Part";
          NewSalesOrderHeader."Status Return Order"         := NewSalesOrderHeader."Status Return Order"::open;
          NewSalesOrderHeader."External Document No." := OldSalesHeader."External Document No.";
          NewSalesOrderHeader."Sales Order Entry No." := OldSalesHeader."Sales Order Entry No.";
          IF OldSalesHeader."Is Follow-up Sales Order" THEN BEGIN
            SalesCommentLine.INIT;
            SalesCommentLine."Document Type"     := NewSalesOrderHeader."Document Type";
            SalesCommentLine."No."               := NewSalesOrderHeader."No.";
            SalesCommentLine."Document Line No." := 0;
            SalesCommentLine."Line No."          := 10000;
            SalesCommentLine.Date                := TODAY;
            SalesCommentLine.Comment             := STRSUBSTNO(TextHME007,OldSalesHeader."No.");
            SalesCommentLine.INSERT;
          END;

          NewSalesOrderHeader."Website No." := OldSalesHeader."Website No.";
          CreateDocDimForSalesHeader(NewSalesOrderHeader,OldSalesHeader);
          NewSalesOrderHeader."Return Type" := NewSalesOrderHeader."Return Type"::"Spare Part";

          NewSalesOrderHeader.MODIFY;
          LinenoL := 10000;

          IF CancRetOrderHistory.FINDLAST THEN
            NextEntryNo := CancRetOrderHistory."Entry No." + 1
          ELSE
            NextEntryNo := 1;

          NewSalesOrderLine.INIT;
          NewSalesOrderLine."Document Type" := NewSalesOrderHeader."Document Type";
          NewSalesOrderLine."Document No." := NewSalesOrderHeader."No.";
          NewSalesOrderLine."Line No." := LinenoL;
          NewSalesOrderLine.INSERT(TRUE);
          NewSalesOrderLine.VALIDATE("Sell-to Customer No.",OldSalesLine."Sell-to Customer No.");
          NewSalesOrderLine.VALIDATE(Type,NewSalesOrderLine.Type::Item);
          GetSparepartItemNo(OldSalesLine."Vendor No.");
          NewSalesOrderLine.VALIDATE("No.",SpareItem."No.");
          //NewSalesOrderLine.Description := SpareItem.Description;
          //NewSalesOrderLine.Description := COPYSTR(OldSalesLine."No."+ ' ' +SpareItem.Description,1,MAXSTRLEN(
          //       NewSalesOrderLine.Description));
          //H1472 22.10.14 tec-rhe++++++++++
          NewSalesOrderLine.Description := OldSalesLine.Description;
          NewSalesOrderLine."Description 2" := OldSalesLine."No.";
          //H1472 22.10.14 tec-rhe----------
          NewSalesOrderLine.VALIDATE("Purchasing Code",OldSalesLine."Purchasing Code");
          //H3781 26.02.15 cc.rst +++++++++++++++++++
          NewSalesOrderLine.VALIDATE("Location Code",OldSalesLine."Location Code");
          //H3781 26.02.15 cc.rst -------------------
          NewSalesOrderLine.VALIDATE(Quantity,1);
          NewSalesOrderLine.VALIDATE("Unit Price",0);
          NewSalesOrderLine.VALIDATE("Line Discount %",0);
          NewSalesOrderLine.VALIDATE("Inv. Discount Amount",0);
          NewSalesOrderLine."Gen. Bus. Posting Group"        := OldSalesLine."Gen. Bus. Posting Group";
          NewSalesOrderLine."VAT Bus. Posting Group"         := OldSalesLine."VAT Bus. Posting Group";
          NewSalesOrderLine."Return Type"                    := OldSalesLine."Return Type";
          NewSalesOrderLine."Customer Prevention"            := OldSalesLine."Customer Prevention";
          NewSalesOrderLine."Prevention discount (%)"        := OldSalesLine."Prevention discount (%)";
          NewSalesOrderLine."Prevention discount Amount"     := OldSalesLine."Prevention discount Amount";
          NewSalesOrderLine."Return Reason Code"             := OldSalesLine."Return Reason Code";
          NewSalesOrderLine."Transp. Type"                   := OldSalesLine."Transp. Type";
          NewSalesOrderLine."Linked to Sales Order No."      := OldSalesLine."Document No.";
          NewSalesOrderLine."Linked to Sales Order Line No." := OldSalesLine."Line No.";
          NewSalesOrderLine."Status Return Order"            := NewSalesOrderLine."Status Return Order"::open;
          NewSalesOrderLine.ID                               := OldSalesLine.ID;
          NewSalesOrderLine."Shipping Agent Code" := OldSalesLine."Shipping Agent Code";
          NewSalesOrderLine.VALIDATE("Parcels Number",0);

          //H1472 15.10.14  tec-RHE ++++++++++++
          NewSalesOrderLine."Spare Part Reason" := OldSalesLine."Spare Part Reason" ;
          //H1472 15.10.14  tec-rhe ------------
          // H4231       24.06.15 JM        +++++++
          InvH24Mgt.CreateDunningEntry(NewSalesOrderLine);
          // H4231       24.06.15 JM        -------
          NewSalesOrderLine.MODIFY;
      //    DunningMgt.CreateDunningEntry(NewSalesOrderLine);
      //    NewSalesOrderHeader.ConsolidateShippingAgent;
      //H1534 21.11.14  cc.rst ++++++++++++++++++++++++++++
      //    CreateDocDimForSalesLine(NewSalesOrderLine,OldSalesLine);
      //H1534 21.11.14  cc.rst ------------------------------

          CancRetOrderHistory.INIT;
          CancRetOrderHistory."Entry No."                    := NextEntryNo;
          CancRetOrderHistory."Document Type"                := CancRetOrderHistory."Document Type"::Order;
          CancRetOrderHistory."Document No."                 := NewSalesOrderLine."Document No.";
          CancRetOrderHistory."Line No."                     := NewSalesOrderLine."Line No.";
          CancRetOrderHistory."Return Type"                  := OldSalesLine."Return Type";
          CancRetOrderHistory.Type                           := OldSalesLine.Type;
          CancRetOrderHistory."No."                          := OldSalesLine."No.";
          CancRetOrderHistory.Amount                         := ABS(OldSalesLine."Line Amount" -
                                                                    OldSalesLine."Inv. Discount Amount");
          CancRetOrderHistory."Related to Document Type"     := CancRetOrderHistory."Related to Document Type"::Order;
          CancRetOrderHistory."Related to Document No."      := OldSalesLine."Document No.";
          CancRetOrderHistory."Related to Document Line No." := OldSalesLine."Line No.";
          CancRetOrderHistory."Date/Time"                    := CURRENTDATETIME;
          CancRetOrderHistory."User ID"                      := USERID;
          CancRetOrderHistory.INSERT;

          IF (NewSalesOrderLine."Customer Prevention" = NewSalesOrderLine."Customer Prevention"::Accepted) THEN BEGIN
              FPCManagement.CalcPreventionDiscountLine(NewSalesOrderLine,
                                         OldSalesLine."Document No.",
                                         OldSalesLine."Line No.");
              FPCManagement.ClearSalesAmount(NewSalesOrderLine);
          END;
          OrderStatusLog.CreateOrderStatus(0,
                 OldSalesLine."Document No.",
                 OldSalesLine."Line No.",
                 '80',
                 STRSUBSTNO(LineStatus004,NewSalesOrderHeader."No."));
          //H1472 16.10.14 tec-rhe ++++++++++
          OldSalesLine.VALIDATE("Return Type",OldSalesLine."Return Type"::" ");
          OldSalesLine.MODIFY;
          //H1472 16.10.14 tec-rhe ----------
        UNTIL OldSalesLine.NEXT = 0;
      END;
    END;

    PROCEDURE InsertSOrderFromSalesHeaderArc@1000000001(OldSalesHeaderArch@1000000000 : Record 5107;VAR NewSalesOrderHeader@1000000002 : Record 36);
    VAR
      LinenoL@1000000001 : Integer;
    BEGIN
      IF Country_Region.GET(OldSalesHeaderArch."Ship-to Country/Region Code") THEN BEGIN
        IF Country_Region."Status Spare Part" = Country_Region."Status Spare Part"::" " THEN BEGIN
          ERROR(TextHME004,OldSalesHeaderArch."Ship-to Country/Region Code");
        END;
      END ELSE
        ERROR(TextHME005,OldSalesHeaderArch."Ship-to Country/Region Code");

      SalesSetup.GET;
      OldSalesLineArch.SETRANGE (OldSalesLineArch."Document Type",OldSalesHeaderArch."Document Type");
      OldSalesLineArch.SETRANGE (OldSalesLineArch."Document No.",OldSalesHeaderArch."No.");
      OldSalesLineArch.SETRANGE (OldSalesLineArch."Doc. No. Occurrence",OldSalesHeaderArch."Doc. No. Occurrence");
      OldSalesLineArch.SETRANGE (OldSalesLineArch."Version No.",OldSalesHeaderArch."Version No.");
      OldSalesLineArch.SETRANGE (OldSalesLineArch."Return Type",OldSalesLineArch."Return Type"::"Spare Part");
      IF OldSalesLineArch.FINDSET THEN BEGIN
        REPEAT
          NewSalesOrderHeader.INIT;
          NewSalesOrderHeader."Document Type" := NewSalesOrderHeader."Document Type"::Order;
          NewSalesOrderHeader."No." := '';

          NoSeriesMgt.InitSeries(SalesSetup."Spare Part Order Nos.",'',NewSalesOrderHeader."Posting Date",
                                 NewSalesOrderHeader."No.",NewSalesOrderHeader."No. Series");
          NewSalesOrderHeader.INSERT(TRUE);

          NewSalesOrderHeader.VALIDATE("Sell-to Customer No.",OldSalesHeaderArch."Sell-to Customer No.");
          NewSalesOrderHeader.VALIDATE("Bill-to Customer No.",OldSalesHeaderArch."Bill-to Customer No.");
          NewSalesOrderHeader."Sell-to Customer Name"       := OldSalesHeaderArch."Ship-to Name";
          NewSalesOrderHeader."Sell-to Customer Name 2"     := OldSalesHeaderArch."Ship-to Name 2";
          NewSalesOrderHeader."Sell-to Address"             := OldSalesHeaderArch."Ship-to Address";
          NewSalesOrderHeader."Sell-to Address 2"           := OldSalesHeaderArch."Ship-to Address 2";
          NewSalesOrderHeader."Sell-to City"                := OldSalesHeaderArch."Ship-to City";
          NewSalesOrderHeader."Sell-to Contact"             := OldSalesHeaderArch."Ship-to Contact";
          NewSalesOrderHeader."Sell-to Post Code"           := OldSalesHeaderArch."Ship-to Post Code";
          NewSalesOrderHeader."Sell-to Country/Region Code" := OldSalesHeaderArch."Ship-to Country/Region Code";
          NewSalesOrderHeader."Ship-to Code"        := OldSalesHeaderArch."Ship-to Code";
          NewSalesOrderHeader."Ship-to Name"        := OldSalesHeaderArch."Ship-to Name";
          NewSalesOrderHeader."Ship-to Name 2"      := OldSalesHeaderArch."Ship-to Name 2";
          NewSalesOrderHeader."Ship-to Address"     := OldSalesHeaderArch."Ship-to Address";
          NewSalesOrderHeader."Ship-to Address 2"   := OldSalesHeaderArch."Ship-to Address 2";
          NewSalesOrderHeader."Ship-to City"        := OldSalesHeaderArch."Ship-to City";
          NewSalesOrderHeader."Sell-to Post Code"   := OldSalesHeaderArch."Ship-to Post Code";
          NewSalesOrderHeader."Posting Date"        := TODAY;
          NewSalesOrderHeader."Return Type"         := NewSalesOrderHeader."Return Type"::"Spare Part";
          NewSalesOrderHeader."Status Return Order" := NewSalesOrderHeader."Status Return Order"::open;
          NewSalesOrderHeader."Account Holder"      := OldSalesHeaderArch."Account Holder";
          NewSalesOrderHeader."Account No."         := OldSalesHeaderArch."Account No.";
          NewSalesOrderHeader."Account BLZ"         := OldSalesHeaderArch."Account BLZ";
          NewSalesOrderHeader."Payment Method Code" := OldSalesHeaderArch."Payment Method Code";
          //H3781 26.02.15 cc.rst +++++++++++++++++++
          NewSalesOrderHeader.VALIDATE("Location Code",OldSalesLineArch."Location Code");
          //H3781 26.02.15 cc.rst -------------------
          NewSalesOrderHeader."Prices Including VAT"    := OldSalesHeaderArch."Prices Including VAT";
          NewSalesOrderHeader."Gen. Bus. Posting Group" := OldSalesHeaderArch."Gen. Bus. Posting Group";
          NewSalesOrderHeader."VAT Bus. Posting Group"  := OldSalesHeaderArch."VAT Bus. Posting Group";
          NewSalesOrderHeader."External Document No." := OldSalesHeaderArch."External Document No.";
          NewSalesOrderHeader."Sales Order Entry No." := OldSalesHeaderArch."Sales Order Entry No.";
          IF OldSalesHeaderArch."Is Follow-up Sales Order" THEN BEGIN
             SalesCommentLine.INIT;
             SalesCommentLine."Document Type"     := NewSalesOrderHeader."Document Type";
             SalesCommentLine."No."               := NewSalesOrderHeader."No.";
             SalesCommentLine."Document Line No." := 0;
             SalesCommentLine."Line No."          := 10000;
             SalesCommentLine.Date                := WORKDATE;
             SalesCommentLine.Comment             := STRSUBSTNO(TextHME007,OldSalesHeaderArch."No.");
             SalesCommentLine.INSERT;
          END;

          NewSalesOrderHeader."Website No." := OldSalesHeaderArch."Website No.";
          CreateDocDimForSalesHeaderArch(NewSalesOrderHeader,OldSalesHeaderArch);
          NewSalesOrderHeader."Return Type" := NewSalesOrderHeader."Return Type"::"Spare Part";
          NewSalesOrderHeader.MODIFY;
          LinenoL := 10000;

          IF CancRetOrderHistory.FINDLAST THEN
            NextEntryNo := CancRetOrderHistory."Entry No." + 1
          ELSE
            NextEntryNo := 1;

          NewSalesOrderLine."Document Type" := NewSalesOrderHeader."Document Type";
          NewSalesOrderLine."Document No." := NewSalesOrderHeader."No.";
          NewSalesOrderLine."Line No." := LinenoL;
          NewSalesOrderLine.INSERT(TRUE);

          NewSalesOrderLine.VALIDATE("Sell-to Customer No.",OldSalesLineArch."Sell-to Customer No.");
          NewSalesOrderLine.VALIDATE(Type,NewSalesOrderLine.Type::Item);
          GetSparepartItemNo(OldSalesLineArch."Vendor No.");
          NewSalesOrderLine.VALIDATE("No.",SpareItem."No.");
          //H1472 22.10.14 tec-rhe++++++++++
          NewSalesOrderLine.Description := OldSalesLineArch.Description;
          NewSalesOrderLine."Description 2" := OldSalesLineArch."No.";
          //H1472 22.10.14 tec-rhe++++++++++

          NewSalesOrderLine.VALIDATE("Purchasing Code",OldSalesLineArch."Purchasing Code");
          //H3781 26.02.15 cc.rst +++++++++++++++++++
          NewSalesOrderLine.VALIDATE("Location Code",OldSalesLineArch."Location Code");
          //H3781 26.02.15 cc.rst -------------------
          NewSalesOrderLine.VALIDATE(Quantity,1);
          NewSalesOrderLine.VALIDATE("Unit Price",0);
          NewSalesOrderLine.VALIDATE("Line Discount %",0);
          NewSalesOrderLine.VALIDATE("Inv. Discount Amount",0);
          NewSalesOrderLine."Gen. Bus. Posting Group"        := OldSalesLineArch."Gen. Bus. Posting Group";
          NewSalesOrderLine."VAT Bus. Posting Group"         := OldSalesLineArch."VAT Bus. Posting Group";
          NewSalesOrderLine."Return Type"                    := OldSalesLineArch."Return Type";
          NewSalesOrderLine."Customer Prevention"            := OldSalesLineArch."Customer Prevention";
          NewSalesOrderLine."Prevention discount (%)"        := OldSalesLineArch."Prevention discount (%)";
          NewSalesOrderLine."Prevention discount Amount"     := OldSalesLineArch."Prevention discount Amount";
          NewSalesOrderLine."Return Reason Code"             := OldSalesLineArch."Return Reason Code";
          NewSalesOrderLine."Transp. Type"                   := OldSalesLineArch."Transp. Type";
          NewSalesOrderLine."Linked to Sales Order No."      := OldSalesLineArch."Document No.";
          NewSalesOrderLine."Linked to Sales Order Line No." := OldSalesLineArch."Line No.";
          NewSalesOrderLine."Status Return Order"            := NewSalesOrderLine."Status Return Order"::open;
          NewSalesOrderLine.ID                               := OldSalesLineArch.ID;

          NewSalesOrderLine."Shipping Agent Code" := OldSalesLineArch."Shipping Agent Code";
          NewSalesOrderLine.VALIDATE("Parcels Number",0);

          //H1472 15.10.14  tec-rhe ++++++++++++
          NewSalesOrderLine."Spare Part Reason" := OldSalesLineArch."Spare Part Reason" ;
          //H1472 15.10.14  tec-rhe ------------

          //H1534 21.11.14  cc.rst ++++++++++++++++++++++++++++
          //CreateDocDimForSalesLineArch(NewSalesOrderLine,OldSalesLineArch);
          //H1534 21.11.14  cc.rst -------------------------------------
          NewSalesOrderLine.MODIFY;

      //    DunningMgt.CreateDunningEntry(NewSalesOrderLine);
      //    NewSalesOrderHeader.ConsolidateShippingAgent;

          CancRetOrderHistory.INIT;
          CancRetOrderHistory."Entry No."                    := NextEntryNo;
          CancRetOrderHistory."Document Type"                := CancRetOrderHistory."Document Type"::Order;
          CancRetOrderHistory."Document No."                 := NewSalesOrderLine."Document No.";
          CancRetOrderHistory."Line No."                     := NewSalesOrderLine."Line No.";
          CancRetOrderHistory."Return Type"                  := OldSalesLineArch."Return Type";
          CancRetOrderHistory.Type                           := OldSalesLineArch.Type;
          CancRetOrderHistory."No."                          := OldSalesLineArch."No.";
          CancRetOrderHistory.Amount                         := ABS(OldSalesLineArch."Line Amount" -
                                                                    OldSalesLineArch."Inv. Discount Amount");
          CancRetOrderHistory."Related to Document Type"     := CancRetOrderHistory."Related to Document Type"::"Archiv. Order";
          CancRetOrderHistory."Related to Document No."      := OldSalesLineArch."Document No.";
          CancRetOrderHistory."Related to Document Line No." := OldSalesLineArch."Line No.";
          CancRetOrderHistory."Date/Time" := CURRENTDATETIME;
          CancRetOrderHistory."User ID" := USERID;
          CancRetOrderHistory.INSERT;

          IF (NewSalesOrderLine."Customer Prevention" = NewSalesOrderLine."Customer Prevention"::Accepted) THEN BEGIN
            FPCManagement.CalcPreventionDiscountLine(NewSalesOrderLine,
                                         OldSalesLineArch."Document No.",
                                         OldSalesLineArch."Line No.");
            FPCManagement.ClearSalesAmount(NewSalesOrderLine);
            OrderStatusLog.CreateOrderStatus(0,
                                             OldSalesLineArch."Document No.",
                                             OldSalesLineArch."Line No.",
                                             '80',
                                              STRSUBSTNO(LineStatus004,NewSalesOrderHeader."No."));
           END ELSE BEGIN
             IF (NewSalesOrderLine."Customer Prevention" = NewSalesOrderLine."Customer Prevention"::Declined) OR
                (NewSalesOrderLine."Customer Prevention" = NewSalesOrderLine."Customer Prevention"::"Not offered")
             THEN BEGIN
               OrderStatusLog.CreateOrderStatus(0,
                                                OldSalesLineArch."Document No.",
                                                OldSalesLineArch."Line No.",
                                                '80',
                                                STRSUBSTNO(LineStatus004,NewSalesOrderHeader."No."));
              END;
            END;

          MESSAGE(TextHME006,NewSalesOrderHeader."No.");
          //H1472 16.10.14 tec-rhe ++++++++++
          OldSalesLineArch.VALIDATE("Return Type",OldSalesLineArch."Return Type"::" ");
          OldSalesLineArch.MODIFY;
          //H1472 16.10.14 tec-rhe ----------
        UNTIL OldSalesLineArch.NEXT = 0;
      END;
    END;

    PROCEDURE InsertPOrderFromSalesOrder@1000000002();
    BEGIN
    END;

    LOCAL PROCEDURE GetSparepartItemNo@1000000003(VendorNoP@1000000000 : Code[20]);
    VAR
      DummyItemVendorL@1000000001 : Record 50328;
    BEGIN
      IF VendorNoP <> '' THEN BEGIN
        IF Vendor.GET (VendorNoP) THEN BEGIN
          DummyItemVendorL.SETRANGE(DummyItemVendorL."Vendor No.",VendorNoP);
          DummyItemVendorL.SETRANGE(DummyItemVendorL."Default Dummy Item",TRUE);
          IF DummyItemVendorL.FINDFIRST THEN BEGIN
            IF NOT SpareItem.GET(DummyItemVendorL."Item No.") THEN
              ERROR(TextHME008,Vendor."No.");
          END ELSE
            ERROR(TextHME001,VendorNoP);
        END ELSE
          ERROR(TextHME003,VendorNoP);
      END ELSE
        ERROR(TextHME002,OldSalesLine."No.");
    END;

    PROCEDURE CreateDocDimForSalesHeader@1000000018(VAR ToSalesHeader@1000000001 : Record 36;VAR FromSalesHeader@1000000000 : Record 36);
    VAR
      DocDim@1000000004 : Record 357;
      FromDocDim@1000000003 : Record 357;
      DimensionValue@1000000002 : Record 349;
      locGeneralLedgerSetup@1000000005 : Record 98;
      locDimValue@1000000006 : Record 349;
    BEGIN
      //A/P0745
      locGeneralLedgerSetup.GET();

      DocDim.SETRANGE("Table ID",DATABASE::"Sales Header");
      DocDim.SETRANGE("Document Type",ToSalesHeader."Document Type");
      DocDim.SETRANGE("Document No.",ToSalesHeader."No.");
      DocDim.SETRANGE("Line No.",0);
      //A/gob-adb/15.05.13
      IF NOT DocDim.ISEMPTY THEN
      //E/gob-adb/15.05.13
      DocDim.DELETEALL;
      ToSalesHeader."Shortcut Dimension 1 Code" := FromSalesHeader."Shortcut Dimension 1 Code";
      ToSalesHeader."Shortcut Dimension 2 Code" := FromSalesHeader."Shortcut Dimension 2 Code";
      FromDocDim.SETRANGE("Table ID",DATABASE::"Sales Header");
      FromDocDim.SETRANGE("Document Type",FromSalesHeader."Document Type");
      FromDocDim.SETRANGE("Document No.",FromSalesHeader."No.");
      IF FromDocDim.FIND('-') THEN BEGIN
        REPEAT
          DocDim.INIT;
          DocDim."Table ID" := DATABASE::"Sales Header";
          DocDim."Document Type" := ToSalesHeader."Document Type";
          DocDim."Document No." := ToSalesHeader."No.";
          DocDim."Line No." := 0;

          IF FromDocDim."Dimension Code" = locGeneralLedgerSetup."Shortcut Dimension 3 Code" THEN
            IF NOT CheckIsOrderNo(FromDocDim."Dimension Value Code") THEN
              ERROR(Error022,FromDocDim."Dimension Code",FromSalesHeader."No.");

          DocDim."Dimension Value Code" := FromDocDim."Dimension Value Code";
          DocDim."Dimension Code" := FromDocDim."Dimension Code";

          DocDim.INSERT;
        UNTIL FromDocDim.NEXT = 0;
      END;


      DocDim.RESET;
      DocDim.SETRANGE("Table ID",DATABASE::"Sales Header");
      DocDim.SETRANGE("Document Type",ToSalesHeader."Document Type");
      DocDim.SETRANGE("Document No.",ToSalesHeader."No.");
      DocDim.SETRANGE("Line No.",0);
      DocDim.SETRANGE("Dimension Code",locGeneralLedgerSetup."Shortcut Dimension 3 Code");
      IF DocDim.ISEMPTY THEN BEGIN
        DocDim.INIT;
        DocDim."Table ID" := DATABASE::"Sales Header";
        DocDim."Document Type" := ToSalesHeader."Document Type";
        DocDim."Document No." := ToSalesHeader."No.";
        DocDim."Line No." := 0;
        DocDim."Dimension Code" := locGeneralLedgerSetup."Shortcut Dimension 3 Code";
        IF CheckIsOrderNo(FromSalesHeader."External Document No.") THEN BEGIN
          // S/P0809
          // Wenn Dimensionswert nicht existiert, dann lege ihn an
          IF NOT locDimValue.GET(locGeneralLedgerSetup."Shortcut Dimension 3 Code",FromSalesHeader."External Document No.") THEN BEGIN
            locDimValue.INIT;
            locDimValue."Dimension Code" := locGeneralLedgerSetup."Shortcut Dimension 3 Code";
            locDimValue.Code := FromSalesHeader."External Document No.";
            locDimValue.Name := 'Order ' + FromSalesHeader."External Document No.";
            locDimValue."Shortcut Dimension No." := 3;
            locDimValue.INSERT;
          END;
          // E/P0809
          DocDim."Dimension Value Code" := FromSalesHeader."External Document No.";
        END ELSE
          ERROR(Error022,DocDim."Dimension Code",FromSalesHeader."No.");
        DocDim.INSERT;
      END;
      DocDim.SETRANGE("Dimension Code",locGeneralLedgerSetup."Shortcut Dimension 4 Code");
      IF DocDim.ISEMPTY THEN BEGIN
        DocDim.INIT;
        DocDim."Table ID" := DATABASE::"Sales Header";
        DocDim."Document Type" := ToSalesHeader."Document Type";
        DocDim."Document No." := ToSalesHeader."No.";
        DocDim."Line No." := 0;
        DocDim."Dimension Code" := locGeneralLedgerSetup."Shortcut Dimension 4 Code";
        DocDim."Dimension Value Code" := FromSalesHeader."VAT Country/Region Code";
        DocDim.INSERT;
      END;
      //E/P0745
    END;

    PROCEDURE CreateDocDimForSalesLine@1000000019(toSalesLine@1000000001 : Record 37;FromSalesLine@1000000005 : Record 37);
    VAR
      DocDim@1000000004 : Record 357;
      FromDocDim@1000000003 : Record 357;
      DimensionValue@1000000002 : Record 349;
      locGeneralLedgerSetup@1000000000 : Record 98;
      locSalesHeader@1000000006 : Record 36;
      locDimValue@1000000007 : Record 349;
      locSkip@1000000008 : Boolean;
    BEGIN
      //A/P0745
      locGeneralLedgerSetup.GET();

      DocDim.SETRANGE("Table ID",DATABASE::"Sales Line");
      DocDim.SETRANGE("Document Type",toSalesLine."Document Type");
      DocDim.SETRANGE("Document No.",toSalesLine."Document No.");
      DocDim.SETRANGE("Line No.",toSalesLine."Line No.");
      //A/gob-adb/15.05.13
      IF NOT DocDim.ISEMPTY THEN
      //E/gob-adb/15.05.13
      DocDim.DELETEALL;
      toSalesLine."Shortcut Dimension 1 Code" := FromSalesLine."Shortcut Dimension 1 Code";
      //toSalesLine."Shortcut Dimension 2 Code" := FromSalesLine."Shortcut Dimension 2 Code";
      FromDocDim.SETRANGE("Table ID",DATABASE::"Sales Line");
      FromDocDim.SETRANGE("Document Type",FromSalesLine."Document Type");
      FromDocDim.SETRANGE("Document No.",FromSalesLine."Document No.");
      FromDocDim.SETRANGE("Line No.",FromSalesLine."Line No.");
      IF FromDocDim.FIND('-') THEN BEGIN
        REPEAT
          // S/P1003
          CLEAR(locSkip);

          IF toSalesLine.Type = toSalesLine.Type::Resource THEN
            IF toSalesLine."Resource Type"IN[toSalesLine."Resource Type"::"Credit Bon",
                                             toSalesLine."Resource Type"::"Sales Bon",
                                             toSalesLine."Resource Type"::Groupon,
                                             toSalesLine."Resource Type"::"Daily Deal"] THEN
              IF FromDocDim."Dimension Code" = locGeneralLedgerSetup."Shortcut Dimension 2 Code" THEN
                locSkip := TRUE
              ELSE
                locSkip := FALSE;

          IF NOT locSkip THEN BEGIN
          // E/P1003
            DocDim.INIT;
            DocDim."Table ID" := DATABASE::"Sales Line";
            DocDim."Document Type" := toSalesLine."Document Type";
            DocDim."Document No." := toSalesLine."Document No.";
            DocDim."Line No." := toSalesLine."Line No.";

            IF FromDocDim."Dimension Code" = locGeneralLedgerSetup."Shortcut Dimension 3 Code" THEN
              IF NOT CheckIsOrderNo(FromDocDim."Dimension Value Code") THEN
                ERROR(Error021,FromDocDim."Dimension Code",FromSalesLine."Line No.");

            DocDim."Dimension Code" := FromDocDim."Dimension Code";
            DocDim."Dimension Value Code" := FromDocDim."Dimension Value Code";
            DocDim.INSERT;
          // S/P1003
          END;
          // E/P1003
        UNTIL FromDocDim.NEXT = 0;
      END;


      DocDim.RESET;
      DocDim.SETRANGE("Table ID",DATABASE::"Sales Line");
      DocDim.SETRANGE("Document Type",toSalesLine."Document Type");
      DocDim.SETRANGE("Document No.",toSalesLine."Document No.");
      DocDim.SETRANGE("Line No.",toSalesLine."Line No.");
      DocDim.SETRANGE("Dimension Code",locGeneralLedgerSetup."Shortcut Dimension 2 Code");
      IF DocDim.ISEMPTY THEN BEGIN
        // A/P1003
          IF toSalesLine.Type = toSalesLine.Type::Resource THEN
            IF toSalesLine."Resource Type"IN[toSalesLine."Resource Type"::"Credit Bon",
                                             toSalesLine."Resource Type"::"Sales Bon",
                                             toSalesLine."Resource Type"::Groupon,
                                             toSalesLine."Resource Type"::"Daily Deal"] THEN
               locSkip := TRUE
             ELSE
               locSkip := FALSE;

        IF NOT locSkip THEN BEGIN
        // E/P1003
          DocDim.INIT;
          DocDim."Table ID" := DATABASE::"Sales Line";
          DocDim."Document Type" := toSalesLine."Document Type";
          DocDim."Document No." := toSalesLine."Document No.";
          DocDim."Line No." := toSalesLine."Line No.";
          DocDim."Dimension Code" := locGeneralLedgerSetup."Shortcut Dimension 2 Code";
          DocDim."Dimension Value Code" := toSalesLine."No.";
          DocDim.INSERT;
        // A/P1003
        END;
        // E/P1003
      END;
      DocDim.SETRANGE("Dimension Code",locGeneralLedgerSetup."Shortcut Dimension 3 Code");
      IF DocDim.ISEMPTY THEN BEGIN
        DocDim.INIT;
        DocDim."Table ID" := DATABASE::"Sales Line";
        DocDim."Document Type" := toSalesLine."Document Type";
        DocDim."Document No." := toSalesLine."Document No.";
        DocDim."Line No." := toSalesLine."Line No.";
        DocDim."Dimension Code" := locGeneralLedgerSetup."Shortcut Dimension 3 Code";
        locSalesHeader.GET(toSalesLine."Document Type",toSalesLine."Document No.");
        IF CheckIsOrderNo(locSalesHeader."External Document No.") THEN BEGIN
          // A/P0809
          // Wenn Dimensionswert nicht existiert, dann lege ihn an
          IF NOT locDimValue.GET(locGeneralLedgerSetup."Shortcut Dimension 3 Code",locSalesHeader."External Document No.") THEN BEGIN
            locDimValue.INIT;
            locDimValue."Dimension Code" := locGeneralLedgerSetup."Shortcut Dimension 3 Code";
            locDimValue.Code := locSalesHeader."External Document No.";
            locDimValue.Name := 'Order ' + locSalesHeader."External Document No.";
            locDimValue."Shortcut Dimension No." := 3;
            locDimValue.INSERT;
          END;
        // E/P0809
          DocDim."Dimension Value Code" := locSalesHeader."External Document No.";
        END ELSE
          ERROR(Error021,DocDim."Dimension Code",FromSalesLine."Line No.");
        DocDim.INSERT;
      END;
      DocDim.SETRANGE("Dimension Code",locGeneralLedgerSetup."Shortcut Dimension 4 Code");
      IF DocDim.ISEMPTY THEN BEGIN
        DocDim.INIT;
        DocDim."Table ID" := DATABASE::"Sales Line";
        DocDim."Document Type" := toSalesLine."Document Type";
        DocDim."Document No." := toSalesLine."Document No.";
        DocDim."Line No." := toSalesLine."Line No.";
        DocDim."Dimension Code" := locGeneralLedgerSetup."Shortcut Dimension 4 Code";
        // S/P0930
        //locSalesHeader.GET(locSalesHeader."Document Type"::Order,toSalesLine."Document No.");
        locSalesHeader.GET(toSalesLine."Document Type",toSalesLine."Document No.");
        // E/P0930
        DocDim."Dimension Value Code" := locSalesHeader."VAT Country/Region Code";
        DocDim.INSERT;
      END;
      IF (toSalesLine."Purchasing Code" <> '') AND (toSalesLine.Type = toSalesLine.Type::Item) THEN BEGIN
        DocDim.SETRANGE("Dimension Code",locGeneralLedgerSetup."Shortcut Dimension 5 Code");
        IF DocDim.ISEMPTY THEN BEGIN
          DocDim.INIT;
          DocDim."Table ID" := DATABASE::"Sales Line";
          DocDim."Document Type" := toSalesLine."Document Type";
          DocDim."Document No." := toSalesLine."Document No.";
          DocDim."Line No." := toSalesLine."Line No.";
          DocDim."Dimension Code" := locGeneralLedgerSetup."Shortcut Dimension 5 Code";
          DocDim."Dimension Value Code" := toSalesLine."Purchasing Code";
          DocDim.INSERT;
        END;
      END;

      //E/P0745
    END;

    PROCEDURE CreateDocDimForSalesHeaderArch@1000000024(VAR ToSalesHeader@1000000001 : Record 36;VAR FromSalesHeaderArch@1000000000 : Record 5107);
    VAR
      DocDim@1000000004 : Record 357;
      FromDocDimArch@1000000003 : Record 5106;
      DimensionValue@1000000002 : Record 349;
      locGeneralLedgerSetup@1000000005 : Record 98;
      locWebDeskMgt@1000000006 : Codeunit 5327126;
      locDimValue@1000000007 : Record 349;
    BEGIN
      //A/P0745
      locGeneralLedgerSetup.GET();

      DocDim.SETRANGE("Table ID",DATABASE::"Sales Header");
      DocDim.SETRANGE("Document Type",ToSalesHeader."Document Type");
      DocDim.SETRANGE("Document No.",ToSalesHeader."No.");
      DocDim.SETRANGE("Line No.",0);
      //A/gob-adb/15.05.13
      IF NOT DocDim.ISEMPTY THEN
      //E/gob-adb/15.05.13
      DocDim.DELETEALL;
      ToSalesHeader."Shortcut Dimension 1 Code" := FromSalesHeaderArch."Shortcut Dimension 1 Code";
      ToSalesHeader."Shortcut Dimension 2 Code" := FromSalesHeaderArch."Shortcut Dimension 2 Code";
      FromDocDimArch.SETRANGE("Table ID",DATABASE::"Sales Header Archive");
      FromDocDimArch.SETRANGE("Document Type",FromSalesHeaderArch."Document Type");
      FromDocDimArch.SETRANGE("Document No.",FromSalesHeaderArch."No.");
      FromDocDimArch.SETRANGE("Doc. No. Occurrence",FromSalesHeaderArch."Doc. No. Occurrence");
      FromDocDimArch.SETRANGE("Version No.",FromSalesHeaderArch."Version No.");
      IF FromDocDimArch.FIND('-') THEN BEGIN
        REPEAT
          DocDim.INIT;
          DocDim."Table ID" := DATABASE::"Sales Header";
          DocDim."Document Type" := ToSalesHeader."Document Type";
          DocDim."Document No." := ToSalesHeader."No.";
          DocDim."Line No." := 0;

          IF FromDocDimArch."Dimension Code" = locGeneralLedgerSetup."Shortcut Dimension 3 Code" THEN
            IF NOT CheckIsOrderNo(FromDocDimArch."Dimension Value Code") THEN
              IF ISSERVICETIER THEN
                locWebDeskMgt.MESSAGE2(Error024,FromDocDimArch."Dimension Code",FromSalesHeaderArch."No.")
              ELSE
                MESSAGE(Error022,FromDocDimArch."Dimension Code",FromSalesHeaderArch."No.");
          DocDim."Dimension Value Code" := FromDocDimArch."Dimension Value Code";
          DocDim."Dimension Code" := FromDocDimArch."Dimension Code";

          DocDim.INSERT;
        UNTIL FromDocDimArch.NEXT = 0;
      END;

      DocDim.RESET;
      DocDim.SETRANGE("Table ID",DATABASE::"Sales Header");
      DocDim.SETRANGE("Document Type",ToSalesHeader."Document Type");
      DocDim.SETRANGE("Document No.",ToSalesHeader."No.");
      DocDim.SETRANGE("Line No.",0);
      DocDim.SETRANGE("Dimension Code",locGeneralLedgerSetup."Shortcut Dimension 3 Code");
      IF DocDim.ISEMPTY THEN BEGIN
        DocDim.INIT;
        DocDim."Table ID" := DATABASE::"Sales Header";
        DocDim."Document Type" := ToSalesHeader."Document Type";
        DocDim."Document No." := ToSalesHeader."No.";
        DocDim."Line No." := 0;
        DocDim."Dimension Code" := locGeneralLedgerSetup."Shortcut Dimension 3 Code";

        IF CheckIsOrderNo(FromSalesHeaderArch."External Document No.") THEN BEGIN
          // A/P0809
          // Wenn Dimensionswert nicht existiert, dann lege ihn an
          IF NOT locDimValue.GET(locGeneralLedgerSetup."Shortcut Dimension 3 Code",FromSalesHeaderArch."External Document No.") THEN
      BEGIN
            locDimValue.INIT;
            locDimValue."Dimension Code" := locGeneralLedgerSetup."Shortcut Dimension 3 Code";
            locDimValue.Code := FromSalesHeaderArch."External Document No.";
            locDimValue.Name := 'Order ' + FromSalesHeaderArch."External Document No.";
            locDimValue."Shortcut Dimension No." := 3;
            locDimValue.INSERT;
          END;
          // E/P0809
          DocDim."Dimension Value Code" := FromSalesHeaderArch."External Document No.";
        END ELSE BEGIN
          IF CheckIsOrderNo(ToSalesHeader."External Document No.") THEN BEGIN
            // A/P0809
            // Wenn Dimensionswert nicht existiert, dann lege ihn an
            IF NOT locDimValue.GET(locGeneralLedgerSetup."Shortcut Dimension 3 Code",ToSalesHeader."External Document No.") THEN BEGIN
              locDimValue.INIT;
              locDimValue."Dimension Code" := locGeneralLedgerSetup."Shortcut Dimension 3 Code";
              locDimValue.Code := ToSalesHeader."External Document No.";
              locDimValue.Name := 'Order ' + ToSalesHeader."External Document No.";
              locDimValue."Shortcut Dimension No." := 3;
              locDimValue.INSERT;
            END;
            // E/P0809
            DocDim."Dimension Value Code" := ToSalesHeader."External Document No."
          END ELSE BEGIN
            IF ISSERVICETIER THEN
              locWebDeskMgt.MESSAGE2(Error024,DocDim."Dimension Code",FromSalesHeaderArch."No.")
            ELSE
              MESSAGE(Error024,DocDim."Dimension Code",FromSalesHeaderArch."No.");
          END;
        END;


        DocDim.INSERT;
      END;
      DocDim.SETRANGE("Dimension Code",locGeneralLedgerSetup."Shortcut Dimension 4 Code");
      IF DocDim.ISEMPTY THEN BEGIN
        DocDim.INIT;
        DocDim."Table ID" := DATABASE::"Sales Header";
        DocDim."Document Type" := ToSalesHeader."Document Type";
        DocDim."Document No." := ToSalesHeader."No.";
        DocDim."Line No." := 0;
        DocDim."Dimension Code" := locGeneralLedgerSetup."Shortcut Dimension 4 Code";
        DocDim."Dimension Value Code" := FromSalesHeaderArch."VAT Country/Region Code";
        DocDim.INSERT;
      END;
      //E/P0745
    END;

    PROCEDURE CreateDocDimForSalesLineArch@1000000023(toSalesLine@1000000001 : Record 37;FromSalesLineArch@1000000005 : Record 5108);
    VAR
      DocDim@1000000004 : Record 357;
      FromDocDimArch@1000000003 : Record 5106;
      DimensionValue@1000000002 : Record 349;
      locGeneralLedgerSetup@1000000000 : Record 98;
      locSalesHeader@1000000006 : Record 36;
      locWebDeskMgt@1000000007 : Codeunit 5327126;
      locDimValue@1000000008 : Record 349;
      FromSalesHeaderArch@1000000009 : Record 5107;
      locSkip@1000000010 : Boolean;
    BEGIN
      //A/P0745
      locGeneralLedgerSetup.GET();

      DocDim.SETRANGE("Table ID",DATABASE::"Sales Line");
      DocDim.SETRANGE("Document Type",toSalesLine."Document Type");
      DocDim.SETRANGE("Document No.",toSalesLine."Document No.");
      DocDim.SETRANGE("Line No.",toSalesLine."Line No.");
      //A/gob-adb/15.05.13
      IF NOT DocDim.ISEMPTY THEN
      //E/gob-adb/15.05.13
      DocDim.DELETEALL;
      toSalesLine."Shortcut Dimension 1 Code" := FromSalesLineArch."Shortcut Dimension 1 Code";
      //toSalesLine."Shortcut Dimension 2 Code" := FromSalesLineArch."Shortcut Dimension 2 Code";
      FromDocDimArch.SETRANGE("Table ID",DATABASE::"Sales Line Archive");
      FromDocDimArch.SETRANGE("Document Type",FromSalesLineArch."Document Type");
      FromDocDimArch.SETRANGE("Document No.",FromSalesLineArch."Document No.");
      FromDocDimArch.SETRANGE("Line No.",FromSalesLineArch."Line No.");
      FromDocDimArch.SETRANGE("Doc. No. Occurrence",FromSalesLineArch."Doc. No. Occurrence");
      FromDocDimArch.SETRANGE("Version No.",FromSalesLineArch."Version No.");
      IF FromDocDimArch.FIND('-') THEN BEGIN
        REPEAT
          // S/P1003
          CLEAR(locSkip);

          IF toSalesLine.Type = toSalesLine.Type::Resource THEN
            IF toSalesLine."Resource Type"IN[toSalesLine."Resource Type"::"Credit Bon",
                                             toSalesLine."Resource Type"::"Sales Bon",
                                             toSalesLine."Resource Type"::Groupon,
                                             toSalesLine."Resource Type"::"Daily Deal"] THEN
              IF FromDocDimArch."Dimension Code" = locGeneralLedgerSetup."Shortcut Dimension 2 Code" THEN
                locSkip := TRUE
              ELSE
                locSkip := FALSE;

          IF NOT locSkip THEN BEGIN
          // E/P1003
            DocDim.INIT;
            DocDim."Table ID" := DATABASE::"Sales Line";
            DocDim."Document Type" := toSalesLine."Document Type";
            DocDim."Document No." := toSalesLine."Document No.";
            DocDim."Line No." := toSalesLine."Line No.";

            IF FromDocDimArch."Dimension Code" = locGeneralLedgerSetup."Shortcut Dimension 3 Code" THEN
              IF NOT CheckIsOrderNo(FromDocDimArch."Dimension Value Code") THEN
                IF ISSERVICETIER THEN
                  locWebDeskMgt.MESSAGE2(Error023,FromDocDimArch."Dimension Code",FromSalesLineArch."Line No.")
                ELSE
                  MESSAGE(Error023,FromDocDimArch."Dimension Code",FromSalesLineArch."Line No.");
            DocDim."Dimension Code" := FromDocDimArch."Dimension Code";
            DocDim."Dimension Value Code" := FromDocDimArch."Dimension Value Code";
            DocDim.INSERT;
          // S/P1003
          END;
          // E/P1003
        UNTIL FromDocDimArch.NEXT = 0;
      END;

      DocDim.RESET;
      DocDim.SETRANGE("Table ID",DATABASE::"Sales Line");
      DocDim.SETRANGE("Document Type",toSalesLine."Document Type");
      DocDim.SETRANGE("Document No.",toSalesLine."Document No.");
      DocDim.SETRANGE("Line No.",toSalesLine."Line No.");
      DocDim.SETRANGE("Dimension Code",locGeneralLedgerSetup."Shortcut Dimension 2 Code");
      IF DocDim.ISEMPTY THEN BEGIN
        // S/P1003
        // A/P1003
          IF toSalesLine.Type = toSalesLine.Type::Resource THEN
            IF toSalesLine."Resource Type"IN[toSalesLine."Resource Type"::"Credit Bon",
                                             toSalesLine."Resource Type"::"Sales Bon",
                                             toSalesLine."Resource Type"::Groupon,
                                             toSalesLine."Resource Type"::"Daily Deal"] THEN
               locSkip := TRUE
             ELSE
               locSkip := FALSE;

        IF NOT locSkip THEN BEGIN
        // E/P1003
          DocDim.INIT;
          DocDim."Table ID" := DATABASE::"Sales Line";
          DocDim."Document Type" := toSalesLine."Document Type";
          DocDim."Document No." := toSalesLine."Document No.";
          DocDim."Line No." := toSalesLine."Line No.";
          DocDim."Dimension Code" := locGeneralLedgerSetup."Shortcut Dimension 2 Code";
          DocDim."Dimension Value Code" := toSalesLine."No.";
          DocDim.INSERT;
        // S/P1003
        END;
        // E/P1003
      END;
      DocDim.SETRANGE("Dimension Code",locGeneralLedgerSetup."Shortcut Dimension 3 Code");
      IF DocDim.ISEMPTY THEN BEGIN
        DocDim.INIT;
        DocDim."Table ID" := DATABASE::"Sales Line";
        DocDim."Document Type" := toSalesLine."Document Type";
        DocDim."Document No." := toSalesLine."Document No.";
        DocDim."Line No." := toSalesLine."Line No.";
        DocDim."Dimension Code" := locGeneralLedgerSetup."Shortcut Dimension 3 Code";
        locSalesHeader.GET(toSalesLine."Document Type",toSalesLine."Document No.");
        IF CheckIsOrderNo(locSalesHeader."External Document No.") THEN
        // A/P0809
        BEGIN
          // Wenn Dimensionswert nicht existiert, dann lege ihn an
          IF NOT locDimValue.GET(locGeneralLedgerSetup."Shortcut Dimension 3 Code",locSalesHeader."External Document No.") THEN BEGIN
            locDimValue.INIT;
            locDimValue."Dimension Code" := locGeneralLedgerSetup."Shortcut Dimension 3 Code";
            locDimValue.Code := locSalesHeader."External Document No.";
            locDimValue.Name := 'Order ' + locSalesHeader."External Document No.";
            locDimValue."Shortcut Dimension No." := 3;
            locDimValue.INSERT;
          END;
        // E/P0809
          DocDim."Dimension Value Code" := locSalesHeader."External Document No.";
        // A/P0809
        END
        // E/P0809
        ELSE
          IF ISSERVICETIER THEN
            locWebDeskMgt.MESSAGE2(Error023,DocDim."Dimension Code",FromSalesLineArch."Line No.")
          ELSE
            MESSAGE(Error023,DocDim."Dimension Code",FromSalesLineArch."Line No.");
        DocDim.INSERT;
      END;
      DocDim.SETRANGE("Dimension Code",locGeneralLedgerSetup."Shortcut Dimension 4 Code");
      IF DocDim.ISEMPTY THEN BEGIN
        DocDim.INIT;
        DocDim."Table ID" := DATABASE::"Sales Line";
        DocDim."Document Type" := toSalesLine."Document Type";
        DocDim."Document No." := toSalesLine."Document No.";
        DocDim."Line No." := toSalesLine."Line No.";
        DocDim."Dimension Code" := locGeneralLedgerSetup."Shortcut Dimension 4 Code";

        // A/P0877
        // locSalesHeader.GET(locSalesHeader."Document Type"::Order,toSalesLine."Document No.");
        // DocDim."Dimension Value Code" := locSalesHeader."VAT Country/Region Code";
        FromSalesHeaderArch.GET(FromSalesLineArch."Document Type",
                                FromSalesLineArch."Document No.",
                                FromSalesLineArch."Doc. No. Occurrence",
                                FromSalesLineArch."Version No.");

        DocDim."Dimension Value Code" := FromSalesHeaderArch."VAT Country/Region Code";
        // A/P0877

        DocDim.INSERT;

      END;
      IF (toSalesLine."Purchasing Code" <> '') AND (toSalesLine.Type = toSalesLine.Type::Item) THEN BEGIN
        DocDim.SETRANGE("Dimension Code",locGeneralLedgerSetup."Shortcut Dimension 5 Code");
        IF DocDim.ISEMPTY THEN BEGIN
          DocDim.INIT;
          DocDim."Table ID" := DATABASE::"Sales Line";
          DocDim."Document Type" := toSalesLine."Document Type";
          DocDim."Document No." := toSalesLine."Document No.";
          DocDim."Line No." := toSalesLine."Line No.";
          DocDim."Dimension Code" := locGeneralLedgerSetup."Shortcut Dimension 5 Code";
          DocDim."Dimension Value Code" := toSalesLine."Purchasing Code";
          DocDim.INSERT;
        END;
      END;

      //E/P0745
    END;

    PROCEDURE CheckIsOrderNo@1000000022(pOrderNo@1000000000 : Code[20]) : Boolean;
    VAR
      locSalesHeader@1000000001 : Record 36;
      locSalesHeaderArch@1000000002 : Record 5107;
    BEGIN
      //A/P0745
      IF pOrderNo = '' THEN
        EXIT(FALSE);

      locSalesHeader.RESET;
      locSalesHeader.SETRANGE("Document Type",locSalesHeader."Document Type"::Order);
      locSalesHeader.SETRANGE("No.",pOrderNo);
      IF NOT locSalesHeader.ISEMPTY THEN
        EXIT(TRUE);

      locSalesHeaderArch.RESET;
      locSalesHeaderArch.SETRANGE("Document Type",locSalesHeaderArch."Document Type"::Order);
      locSalesHeaderArch.SETRANGE("No.",pOrderNo);
      IF NOT locSalesHeaderArch.ISEMPTY THEN
        EXIT(TRUE);
      //E/P0745
    END;

    PROCEDURE fuCheckDummyItem@1100409000(SalesLineV@1100409000 : Record 37) : Boolean;
    VAR
      DummyItemVendorL@1100409001 : Record 50328;
      LocationL@1100409002 : Record 14;
      SalesLineL@1000000000 : Record 37;
      HMEKADCreateL@1000000001 : Boolean;
    BEGIN
      //H1472 30.10.14  tec-rh +++++++++++
      HMEKADCreateL := TRUE;
      IF SalesLineV.Type = SalesLineV.Type::Item THEN
        IF DummyItemVendorL.GET(SalesLineV."Vendor No.",SalesLineV."No.") THEN
            HMEKADCreateL := FALSE
          ELSE
            HMEKADCreateL := TRUE;

      IF NOT HMEKADCreateL THEN
        IF LocationL.GET(SalesLineV."Location Code") THEN
          IF NOT LocationL."Commission Dummy Item" THEN
            HMEKADCreateL := FALSE
          ELSE
            HMEKADCreateL := TRUE;

      IF NOT HMEKADCreateL THEN
        IF SalesLineV."Parent ID" <> 0 THEN BEGIN
          SalesLineL.SETRANGE("Document Type", SalesLineV."Document Type");
          SalesLineL.SETRANGE("Document No.", SalesLineV."Document No.");
          SalesLineL.SETRANGE(ID, SalesLineV."Parent ID");
          IF SalesLineL.FINDSET THEN BEGIN
            IF SalesLineL.Type = SalesLineL.Type::Item THEN
              IF DummyItemVendorL.GET(SalesLineL."Vendor No.",SalesLineL."No.") THEN
                HMEKADCreateL := FALSE
              ELSE
                HMEKADCreateL := TRUE;
          END;
        END;
      EXIT(HMEKADCreateL);
      //H1472 30.10.14  tec-rh -----------
    END;

    PROCEDURE RetrieveVendPOSparePaEmailAddr@1000000004(VendorV@1000000000 : Record 23;VAR ContactTypeR@1000000001 : Record 50189);
    VAR
      TotalNoOfRecordsFound@1000000002 : Integer;
    BEGIN
      //H1534 10.12.14 RST +++++++++++++++++++++++++++++
      CLEAR(ContactTypeR);
      ContactTypeR.SETCURRENTKEY("Contact Type","Is primary Contact");
      ContactTypeR.SETRANGE("Contact Type",ContactTypeR."Contact Type"::SparePartOrder);
      ContactTypeR.SETRANGE(TableID,DATABASE::Vendor);
      ContactTypeR.SETRANGE(Code,VendorV."No.");
      ContactTypeR.SETRANGE("Contact Medium Type",ContactTypeR."Contact Medium Type"::email);
      ContactTypeR.SETFILTER("Contact Medium",'<>%1','');
      TotalNoOfRecordsFound := ContactTypeR.COUNT;
      ContactTypeR.FINDFIRST;
      CASE TotalNoOfRecordsFound OF
        0:ERROR(TextHME004,VendorV."No.",VendorV.Name);
        1:EXIT;
        ELSE BEGIN
          ContactTypeR.SETRANGE("Is primary Contact",TRUE);
          IF ContactTypeR.FINDFIRST THEN BEGIN
            EXIT;
          END ELSE BEGIN
            ContactTypeR.SETRANGE("Is primary Contact");
            ContactTypeR.FINDFIRST;
            EXIT;
          END;
        END;
      END;

      //H1534 10.12.14 RST -----------------------------
    END;

    PROCEDURE SetOldSparepartSalesLine@1000000005(OldSparpartSalesLine@1000000000 : Record 37;VAR NewSparepartSalesLine@1000000001 : Record 37);
    VAR
      TransferSparpartSalesLine@1000000002 : Record 37;
    BEGIN
      //H1472 26.01.15 RST +++++++++++++++++++++++++++++
      TransferSparpartSalesLine := OldSparpartSalesLine;
      TransferSparpartSalesLine."No." := NewSparepartSalesLine."No.";
      TransferSparpartSalesLine."Parcels Number" := NewSparepartSalesLine."Parcels Number";
      TransferSparpartSalesLine.MODIFY;
      OldSparpartSalesLine := TransferSparpartSalesLine;
      //H1472 26.01.15 RST -----------------------------
    END;

    PROCEDURE IsSparePartOrderFromPOrder@1000000006(PurchaseOrder@1000000000 : Record 38) : Boolean;
    VAR
      SalesHeader@1000000001 : Record 36;
      PurchaseLine@1000000002 : Record 39;
    BEGIN
      //H2078, H1534 05.02.15 EHN +++++++++++++++++++++++++++++
      PurchaseLine.SETRANGE(PurchaseLine."Document Type",PurchaseOrder."Document Type");
      PurchaseLine.SETRANGE(PurchaseLine."Document No.",PurchaseOrder."No.");
      IF PurchaseLine.FINDFIRST THEN BEGIN
        REPEAT
          IF SalesHeader.GET(SalesHeader."Document Type"::Order,PurchaseLine."Order No.") THEN
            IF SalesHeader."Return Type" = SalesHeader."Return Type"::"Spare Part" THEN
              EXIT(TRUE);
        UNTIL PurchaseLine.NEXT = 0;
      END;
      EXIT(FALSE);
      //H2078, H1534 05.02.15 EHN -----------------------------
    END;

    PROCEDURE "*** HME **********************"@1000000007();
    BEGIN
    END;

    PROCEDURE CheckForDefectLine@1000000009(PurchaseOrder@1000000000 : Record 38) : Boolean;
    VAR
      SalesHeader@1000000001 : Record 36;
      PurchaseLine@1000000002 : Record 39;
    BEGIN
      //H2078 04.02.15 EHN +++++++++++++++++++++++++++++
      PurchaseLine.SETRANGE(PurchaseLine."Document Type",PurchaseOrder."Document Type");
      PurchaseLine.SETRANGE(PurchaseLine."Document No.",PurchaseOrder."No.");
      PurchaseLine.SETRANGE("Spare Part Reason", PurchaseLine."Spare Part Reason"::Defect);
      IF NOT PurchaseLine.ISEMPTY THEN BEGIN
        EXIT(TRUE);
      END;
      EXIT(FALSE);
      //H2078 04.02.15 EHN -----------------------------
    END;

    BEGIN
    {
      +--------------------------------------------+
      |                                            |
      |                  Home24                    |
      |     Cooperation Tectura & Home24 NAV Team  |
      |                                            |
      +--------------------------------------------+


      Project No. Date      Shortcut  Description
      _____________________________________________
      H1472       07.10.14  cc.rst    Create Object
      H1472       15.10.14  tec.rhe  Transfer "Spare Part Reason"
      H1472       16.10.14  tec-rhe  Delete field "Return Type"
      H1472       22.10.14  tec-rhe  Itemno and Description from Original Order
      H1472       30.10.14  cc.rst   New Parameter as VAR To Return new Sales Header
      H1534       21.11.14  cc.rst   deactivate
                                     //    CreateDocDimForSalesLine(NewSalesOrderLine,OldSalesLine);
                                     //    CreateDocDimForSalesLineArch(NewSalesOrderLine,OldSalesLineArch);
      H1534       09.12.14  cc.rst   New Function RetrieveVendPOSparePaEmailAddr
      H1472       11.12.14  cc.rst   New Function SetNoOfParcels
      H1472       15.12.14  cc.rst   Update Function GetSparepartItemNo, fuCheckDummyItem
                                     Remove Function SetNoOfParcels
      H1472       08.01.15  cc.rst   Bugfixing
      H1472       26.01.15  cc.rst   Bugfixing : New Function SetOldSparepartSalesLine
      H1534       26.01.15  cc.rst   Bugfixing : New Function IsSparePartOrderFromPOrder
      H1472       12.02.15  cc.rst   Bugfixing
      H3781       26.02.15  cc.rst   Bugfixing Create SP-Order Location from Sales Line
      +--------------------------------------------+
      |                                            |
      |                  Home24                    |
      |       Internal Customizing by NAV-Team     |
      |                                            |
      +--------------------------------------------+

      Project No. Date        Shortcut  Description
      _____________________________________________
      H2078       04.02.15    EHN       Spare Part: Adjust purchase mail address & spare part reason
      H4231       24.06.15    JM        Set on hold code for RG H24 invoices when spare parts are ordered
    }
    END.
  }
}

