OBJECT Codeunit 50002 Item Functions
{
  OBJECT-PROPERTIES
  {
    Date=24.02.15;
    Time=12:00:00;
    Modified=Yes;
    Version List=DN(1),HME2056;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Item@1000000004 : Record 27;
      ItemImp@1000000000 : Record 50002;
      CreateItemMgt@1000000005 : Codeunit 50004;
      EntryNo@1000000002 : Integer;
      txtCRLF@1000000001 : Text[2];
      TextHME001@1000000003 : TextConst 'ENU=Compared to previous Item Import Log Entry there is no difference!';

    PROCEDURE UpdateItem@1000000003(ItemNo@1000000000 : Code[100];ItemDescription@1000000001 : Text[100];BaseUOM@1000000002 : Code[55];Price@1100122000 : Text[30];SpecialPrice@1000000005 : Text[30];Cost@1100122001 : Text[30];VendorNo@1100122002 : Code[54];VendorItemNo@1100122003 : Text[100];Weight@1100122004 : Decimal;ProductGroupCode@1100122005 : Code[52];ItemID@1000000010 : Integer;TaxClass@1000000006 : Integer;MarginRel@1000000007 : Decimal;ShippingCosts@1000000009 : Decimal;Manufacturer@1000000008 : Integer;AssService@1000000011 : Integer;AssAmt@1000000012 : Integer;ShippingSource@1000000013 : Integer;ShippingType@1000000014 : Code[51];Volume@1000000015 : Decimal;Pieces@1000000016 : Decimal;ShipMinDay@1000000017 : Integer;ShipMaxDay@1000000018 : Integer;OrigDiscription@1000000019 : Text[250];EAN@1000000020 : Code[100];NAVVendorNo@1000000021 : Code[20];productCategory@1000000004 : Code[50]);
    VAR
      LT_ImpItemTo@1000000003 : Record 50002;
      "***HME************************"@1000000022 : Integer;
      WebShopStockL@1000000023 : Record 50132;
      DateFormularL@1000000024 : DateFormula;
    BEGIN
      // chrmu 20.01.12
      txtCRLF := 'XX';  // define it as Text with size 2
      txtCRLF[1] := 13;
      txtCRLF[2] := 10;
      ItemDescription := DELCHR(ItemDescription, '=',txtCRLF);
      // chrmu 20.01.12


      WITH ItemImp DO BEGIN
        LOCKTABLE;
        IF FINDLAST THEN
          EntryNo := "Entry No." + 1
        ELSE
          EntryNo := 1;

        INIT;
        "Entry No." := EntryNo;
        "Item No." := ItemNo;
        "Item Description" := ItemDescription;
        "Base Unit of Measure" := BaseUOM;
        IF NOT EVALUATE("Unit Price",Price) THEN "Unit Price" := 0;
        IF NOT EVALUATE("Special Unit Price",SpecialPrice) THEN "Special Unit Price" := 0;
        IF NOT EVALUATE("Unit Cost",Cost) THEN "Unit Cost" := 0;
        Manufacturer := VendorNo;
        "Manufacturer Item No." := VendorItemNo;
        //H0369  31.05.13  ABR  +++++++++++++++++++++++++++++++++++++++++++
        Weight := Weight/100;
        //H0369  31.05.13  ABR  -------------------------------------------
        "Net Weight" := Weight;
        "Product Group" := ProductGroupCode;
        "Ext. Item No." := ItemID;
        "VAT Class" := TaxClass;
        "Profit %" := MarginRel;
        "Shipping Cost" := ShippingCosts;
        "Assembly Service Code" := FORMAT(AssService);
        "Assembly Service Amount" := AssAmt;
        "Shipping Source" := FORMAT(ShippingSource);
        "Freight Type" := ShippingType;

        //H0369  31.05.13  ABR  +++++++++++++++++++++++++++++++++++++++++++
        Volume := Volume/10000000;
        //H0369  31.05.13  ABR  -------------------------------------------

        "Unit Volume" := Volume;
        "Units per Parcel" := Pieces;
        "Lead Time Calculation (min.)" := ShipMinDay;
        "Lead Time Calculation (max.)" := ShipMaxDay;

        //H0369  31.05.13  ABR  +++++++++++++++++++++++++++++++++++++++++++
        IF (ShipMinDay = 0) AND (ShipMaxDay = 0) THEN BEGIN
          WebShopStockL.SETRANGE("Website No.",1);
          WebShopStockL.SETRANGE("Item No.",ItemNo);
          WebShopStockL.SETFILTER("Stock Location",'%1','?????');
          IF WebShopStockL.FINDSET THEN
            REPEAT
              IF EVALUATE(ShipMinDay,
                COPYSTR(FORMAT(WebShopStockL."Lead Time Calculation"),1,STRLEN(FORMAT(WebShopStockL."Lead Time Calculation"))-1)) THEN
                IF ShipMaxDay < ShipMinDay THEN
                  ShipMaxDay := ShipMinDay;
            UNTIL WebShopStockL.NEXT = 0;

          IF ShipMaxDay <> 0 THEN
            ShipMinDay := ShipMaxDay;

          IF (ShipMinDay = 0) AND (ShipMaxDay = 0) THEN BEGIN
            WebShopStockL.SETRANGE("Website No.",1);
            WebShopStockL.SETRANGE("Item No.",ItemNo);
            WebShopStockL.SETFILTER("Stock Location",'%1','2??');
            IF WebShopStockL.FINDSET THEN
              REPEAT
                IF EVALUATE(ShipMinDay,
                  COPYSTR(FORMAT(WebShopStockL."Lead Time Calculation"),1,STRLEN(FORMAT(WebShopStockL."Lead Time Calculation"))-1)) THEN
                  IF ShipMaxDay < ShipMinDay THEN
                    ShipMaxDay := ShipMinDay;
              UNTIL WebShopStockL.NEXT = 0;

            IF ShipMaxDay <> 0 THEN
              ShipMinDay := ShipMaxDay;
          END;

          IF (ShipMinDay <> 0) AND (ShipMaxDay <> 0) THEN BEGIN
            "Lead Time Calculation (min.)" := ShipMinDay;
            "Lead Time Calculation (max.)" := ShipMaxDay;
            "Lead Time incl. Corr." := TRUE;
          END;
        END;
        //H0369  31.05.13  ABR  -------------------------------------------

        "Original Description" := OrigDiscription;
        "EAN Code" := COPYSTR(EAN,1,20); // chrmu - auf 20 Stellen gekÅrzt
        "Vendor No." := NAVVendorNo;
        "Created on" := CURRENTDATETIME;
        "Product Category" := productCategory;
        INSERT;

        LT_ImpItemTo.SETCURRENTKEY("Item No.");
        LT_ImpItemTo.SETRANGE("Item No.","Item No.");
        LT_ImpItemTo.SETFILTER("Entry No.",'<%1',"Entry No.");
        IF LT_ImpItemTo.FINDLAST THEN
          IF ("Item Description" = LT_ImpItemTo."Item Description") AND
             ("Base Unit of Measure" = LT_ImpItemTo."Base Unit of Measure") AND
             ("Unit Price" = LT_ImpItemTo."Unit Price") AND
             ("Special Unit Price" = LT_ImpItemTo."Special Unit Price") AND
             ("Unit Cost" = LT_ImpItemTo."Unit Cost") AND
             (Manufacturer = LT_ImpItemTo.Manufacturer) AND
             ("Manufacturer Item No." = LT_ImpItemTo."Manufacturer Item No.") AND
             ("Net Weight" = LT_ImpItemTo."Net Weight") AND
             ("Product Group" = LT_ImpItemTo."Product Group") AND
             ("Product Category" = LT_ImpItemTo."Product Category") AND
             ("Ext. Item No." = LT_ImpItemTo."Ext. Item No.") AND
             ("VAT Class" = LT_ImpItemTo."VAT Class") AND
             ("Profit %" = LT_ImpItemTo."Profit %") AND
             ("Shipping Cost" = LT_ImpItemTo."Shipping Cost") AND
             ("Assembly Service Code" = LT_ImpItemTo."Assembly Service Code") AND
             ("Assembly Service Amount" = LT_ImpItemTo."Assembly Service Amount") AND
             ("Shipping Source" = LT_ImpItemTo."Shipping Source") AND
             ("Freight Type" = LT_ImpItemTo."Freight Type") AND
             ("Unit Volume" = LT_ImpItemTo."Unit Volume") AND
             ("Units per Parcel" = LT_ImpItemTo."Units per Parcel") AND
             ("Lead Time Calculation (min.)" = LT_ImpItemTo."Lead Time Calculation (min.)") AND
             ("Lead Time Calculation (max.)" = LT_ImpItemTo."Lead Time Calculation (max.)") AND
             ("Original Description" = LT_ImpItemTo."Original Description") AND
             ("EAN Code" = LT_ImpItemTo."EAN Code") AND
             ("Vendor No." = LT_ImpItemTo."Vendor No.") AND
             (LT_ImpItemTo."Import Status" IN [1,3,4]) THEN BEGIN
            "Import Status" := LT_ImpItemTo."Import Status"::Canceled;
            //H0392  10.06.13  ABR  +++++++++++++++++++++++++++++++++++
            "Import Error Text" := TextHME001;
            //H0392  10.06.13  ABR  -----------------------------------
            "Modified on" := CURRENTDATETIME;
            MODIFY;
          END;

      END;
    END;

    PROCEDURE TestFunction@1000000000(_ImpDec@1000000000 : Decimal) : Decimal;
    BEGIN
      EXIT(_ImpDec * 10);
    END;

    PROCEDURE "*** HME **********************"@1000000001();
    BEGIN
    END;

    PROCEDURE UpdateItemForWEAKAD@1000000002(TableNoV@1000000001 : Integer;DocumentTypeV@1000000002 : 'Quote,Order,Invoice,Credit Memo,Blanket Order,Return Order,Externe Logistik';DocumentNoV@1000000003 : Code[20];LineNoV@1000000004 : Integer) IsDocUpdateNeededO : Boolean;
    VAR
      ItemParcelsL@1000000012 : Record 50023;
      ItemL@1000000008 : Record 27;
      IWSGlobalDataL@1000000006 : Record 50600;
      IWSProcessItemImportLogL@1000000013 : Codeunit 50605;
      RecordRefL@1000000000 : RecordRef;
      FieldRefL@1000000005 : FieldRef;
      ItemNoL@1000000007 : Code[20];
      NeedsUpdateL@1000000009 : Boolean;
      CounterL@1000000010 : Integer;
      LineNoL@1000000011 : Integer;
    BEGIN
      //H1824 24.11.14 DMA +++++++++++++++++++++++++++++++++++++
      //H2056 06.02.15 DMO ++++++++++++++++++++++++++++++++
      //IsPOUpdateNeededO := FALSE;
      IsDocUpdateNeededO := FALSE;
      IF TableNoV IN [DATABASE::"Purchase Line",DATABASE::"Sales Line"] THEN BEGIN
      //H2056 06.02.15 DMO --------------------------------

        RecordRefL.OPEN(TableNoV);
        FieldRefL := RecordRefL.FIELD(1);
        FieldRefL.SETRANGE(DocumentTypeV);
        FieldRefL := RecordRefL.FIELD(3);
        FieldRefL.SETRANGE(DocumentNoV);
        FieldRefL := RecordRefL.FIELD(4);
        FieldRefL.SETRANGE(LineNoV);

        RecordRefL.FINDFIRST;

        FieldRefL := RecordRefL.FIELD(6);
        ItemNoL := FieldRefL.VALUE;

        ItemL.RESET;

        IF ItemL.GET(ItemNoL) THEN BEGIN
          IWSGlobalDataL.RESET;
          IWSGlobalDataL.SETRANGE("Item No.", ItemL."No.");
          IWSGlobalDataL.SETRANGE("Import Status", IWSGlobalDataL."Import Status"::Imported);
          IWSGlobalDataL.ASCENDING(FALSE);
          IF IWSGlobalDataL.FINDFIRST THEN BEGIN
            IWSProcessItemImportLogL.Code(IWSGlobalDataL."Request ID");
            //H2056 06.02.15 DMO +++++++++++++++++++++++++++++++++++++
            //IsPOUpdateNeededO := TRUE;
            IsDocUpdateNeededO := TRUE;
            //H2056 06.02.15 DMO -------------------------------------
          END ELSE BEGIN
            FieldRefL := RecordRefL.FIELD(11);
            NeedsUpdateL := (FORMAT(FieldRefL.VALUE) <> ItemL.Description);
            //H2056 06.02.15 DMO +++++++++++++++++++++++++++++++++++++
            IF TableNoV = DATABASE::"Sales Line" THEN BEGIN
              FieldRefL := RecordRefL.FIELD(50062);
              NeedsUpdateL := NeedsUpdateL OR (FORMAT(FieldRefL.VALUE) <> FORMAT(ItemL."Parcels Number"));
            END ELSE BEGIN
            //H2056 06.02.15 DMO -------------------------------------
              FieldRefL := RecordRefL.FIELD(70);
              NeedsUpdateL := NeedsUpdateL OR (FORMAT(FieldRefL.VALUE) <> ItemL."Vendor Item No.");
              FieldRefL := RecordRefL.FIELD(77000);
              NeedsUpdateL := NeedsUpdateL OR (FORMAT(FieldRefL.VALUE) <> FORMAT(ItemL."Parcels Number"));
            //H2056 06.02.15 DMO +++++++++++++++++++++++++++++++++++++
            END;
            //H2056 06.02.15 DMO -------------------------------------
            FieldRefL := RecordRefL.FIELD(37);
            NeedsUpdateL := NeedsUpdateL OR (FORMAT(FieldRefL.VALUE) <> FORMAT(ItemL."Unit Volume"));
            FieldRefL := RecordRefL.FIELD(34);
            NeedsUpdateL := NeedsUpdateL OR (FORMAT(FieldRefL.VALUE) <> FORMAT(ItemL."Gross Weight"));
            FieldRefL := RecordRefL.FIELD(35);
            NeedsUpdateL := NeedsUpdateL OR (FORMAT(FieldRefL.VALUE) <> FORMAT(ItemL."Net Weight"));
            FieldRefL := RecordRefL.FIELD(36);
            NeedsUpdateL := NeedsUpdateL OR (FORMAT(FieldRefL.VALUE) <> FORMAT(ItemL."Units per Parcel"));
            FieldRefL := RecordRefL.FIELD(5709);
            NeedsUpdateL := NeedsUpdateL OR (FORMAT(FieldRefL.VALUE) <> ItemL."Item Category Code");
            //H2056 06.02.15 DMO +++++++++++++++++++++++++++++++++++++
            //IsPOUpdateNeededO := NeedsUpdateL;
            IsDocUpdateNeededO := NeedsUpdateL;
            //H2056 06.02.15 DMO -------------------------------------
          END;
        END;
      //H2056 06.02.15 DMO +++++++++++++++++++++++++++++++++++++
      END;
      //EXIT(IsPOUpdateNeededO);
      EXIT(IsDocUpdateNeededO);
      //H2056 06.02.15 DMO -------------------------------------
    END;

    BEGIN
    {
      1.00  10.06.11  eich Erweiterung und ErgÑnzung um FiBu-relevante Daten

      1.01 06.01.11 - chrmu ean abgeschnitten auf 20 Zeichen.
      1.02 20.01.11 - chrmu text auf neue zeile zeichen geprÅft

      +--------------------------------------------+
      |                                            |
      |                  Home24                    |
      |       Internal Customizing by NAV-Team     |
      |                                            |
      +--------------------------------------------+

      Project No. Date     Shortcut  Description
      _____________________________________________
      *** Module: Enhancement Item Master Data ***
      H0369       31.05.13 ABR       Preparing for Itemservice
      H0392       10.06.13 ABR       Added Errortext
      H1824       24.11.14 DMA       Update item master data in purchase order on WEA creation
      H2056       06.02.15 DMO       UpdateItemForWEAKAD is modified
    }
    END.
  }
}

