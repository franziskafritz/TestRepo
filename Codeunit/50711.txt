OBJECT Codeunit 50711 Test: Sales Order GER-7
{
  OBJECT-PROPERTIES
  {
    Date=03.12.14;
    Time=12:00:00;
    Version List=HME1541;
  }
  PROPERTIES
  {
    Subtype=Test;
    OnRun=BEGIN
            isInitialized := FALSE;
          END;

  }
  CODE
  {
    VAR
      SalesProcessHelper@1000000000 : Codeunit 50715;
      ChannelCode@1000000007 : Code[10];
      isInitialized@1000000016 : Boolean;

    LOCAL PROCEDURE Initialize@1000000034();
    VAR
      BackupMgt@1001 : Codeunit 50201;
    BEGIN
      RANDOMIZE;
      IF isInitialized THEN
        EXIT;
      // BackupMgt.DefaultFixture;
      isInitialized := TRUE;
      ChannelCode := 'GER-7';
      SalesProcessHelper.InitializeHelper(1);
      COMMIT;
    END;

    [Test]
    PROCEDURE GER7_CreateSOVerifyDim@1000000074();
    BEGIN
      // Check Dimentions in Sales Header and Lines for imported Sales Order.
      Initialize;
      SalesProcessHelper.CreateSOVerifyDim(ChannelCode);
    END;

    [Test]
    PROCEDURE GER7_CreatePurchOrder@1000000004();
    BEGIN
      // Create Purchase Order for Sales Order.
      Initialize;
      SalesProcessHelper.CreatePurchOrder(ChannelCode);
    END;

    [Test]
    [HandlerFunctions(SalesPackListReportHandler)]
    PROCEDURE GER7_CreateDHLLableForPO@1000000013();
    BEGIN
      // Send Purchase Email and check DHL lable.
      Initialize;
      SalesProcessHelper.CreateDHLLableForPO(ChannelCode);
    END;

    [Test]
    PROCEDURE GER7_InvoiceSingleLineSO@1000000006();
    BEGIN
      // Ship and Invoice single line Sales Order.
      Initialize;
      SalesProcessHelper.InvoiceSingleLineSO(ChannelCode);
    END;

    [Test]
    PROCEDURE GER7_InvoiceMultiLineSO@1000000014();
    BEGIN
      // Ship and Invoice multi line Sales Order.
      Initialize;
      SalesProcessHelper.InvoiceMultiLineSO(ChannelCode);
    END;

    [Test]
    PROCEDURE GER7_InvoiceSOWithResource@1000000028();
    BEGIN
      // Ship and Invoice Sales Order with a Resource Line.
      Initialize;
      SalesProcessHelper.InvoiceSOWithResource(ChannelCode);
    END;

    [Test]
    PROCEDURE GER7_InvoiceSalesOrderKK@1000000027();
    BEGIN
      // Ship and Invoice Sales Order with Payment Method 'KK'.
      Initialize;
      SalesProcessHelper.InvoiceSalesOrderKK(ChannelCode);
    END;

    [Test]
    PROCEDURE GER7_InvoiceSalesOrderVORK@1000000020();
    BEGIN
      // Ship and Invoice Sales Order with Payment Method 'VORK'.
      Initialize;
      SalesProcessHelper.InvoiceSalesOrderVORK(ChannelCode);
    END;

    [Test]
    PROCEDURE GER7_InvoiceSalesOrderPP@1000000029();
    BEGIN
      // Ship and Invoice Sales Order with Payment Method 'PP'.
      Initialize;
      SalesProcessHelper.InvoiceSalesOrderPP(ChannelCode);
    END;

    [Test]
    PROCEDURE GER7_InvoiceSalesOrderRECHNUNG@1000000031();
    BEGIN
      // Ship and Invoice Sales Order with Payment Method 'RECHNUNG'.
      Initialize;
      SalesProcessHelper.InvoiceSalesOrderRECHNUNG(ChannelCode);
    END;

    [Test]
    [HandlerFunctions(MessageHandler)]
    PROCEDURE GER7_CreateReturnOrder@1000000023();
    BEGIN
      // Create Return Order for Sales Order.
      Initialize;
      SalesProcessHelper.CreateReturnOrder(ChannelCode);
    END;

    [Test]
    [HandlerFunctions(MessageHandler)]
    PROCEDURE GER7_PostReturnOrder@1000000052();
    BEGIN
      // Post Return Order.
      Initialize;
      SalesProcessHelper.PostReturnOrder(ChannelCode);
    END;

    [Test]
    [HandlerFunctions(MessageHandler)]
    PROCEDURE GER7_PostReturnOrderWithRes@1000000033();
    BEGIN
      // Post Return Order with Resource Line.
      Initialize;
      SalesProcessHelper.PostReturnOrderWithRes(ChannelCode);
    END;

    [Test]
    PROCEDURE GER7_ReturnWithDiscount@1000000030();
    BEGIN
      // Create Return Order with Prevention Discount and type Cancelation.
      Initialize;
      SalesProcessHelper.ReturnWithDiscount(ChannelCode);
    END;

    [Test]
    [HandlerFunctions(MessageHandler)]
    PROCEDURE GER7_ReturnOrderWithoutPrev@1000000040();
    BEGIN
      // Create Return Order without Prevention and type Return.
      Initialize;
      SalesProcessHelper.ReturnOrderWithoutPrev(ChannelCode);
    END;

    [Test]
    [HandlerFunctions(MessageHandler)]
    PROCEDURE GER7_ReturnOrderWithPrev@1000000046();
    BEGIN
      // Create Return Order with Prevention Discount and type Return.
      Initialize;
      SalesProcessHelper.ReturnOrderWithPrev(ChannelCode);
    END;

    [Test]
    [HandlerFunctions(MessageHandler)]
    PROCEDURE GER7_ChangeOfGoods@1000000047();
    BEGIN
      // Create Return Order with type Change of Goods.
      Initialize;
      SalesProcessHelper.ChangeOfGoods(ChannelCode);
    END;

    [Test]
    [HandlerFunctions(MessageHandler)]
    PROCEDURE GER7_SparePartOfGoods@1000000064();
    BEGIN
      // Create Return Order with type Spare Part.
      Initialize;
      SalesProcessHelper.SparePartOfGoods(ChannelCode);
    END;

    [Test]
    PROCEDURE GER7_CancelSalesLine@1000000049();
    BEGIN
      // Cancel Sales Line.
      Initialize;
      SalesProcessHelper.CancelSalesLine(ChannelCode);
    END;

    [Test]
    PROCEDURE GER7_CancelSalesOrder@1000000066();
    BEGIN
      // Cancel Sales Order.
      Initialize;
      SalesProcessHelper.CancelSalesOrder(ChannelCode);
    END;

    [Test]
    PROCEDURE GER7_CancelSOWithResource@1000000051();
    BEGIN
      // Cancel Sales Order with Resource Line.
      Initialize;
      SalesProcessHelper.CancelSOWithResource(ChannelCode);
    END;

    [Test]
    PROCEDURE GER7_CancelShippedSalesLine@1000000053();
    BEGIN
      // Cancel shipped Sales Line (negative).
      Initialize;
      SalesProcessHelper.CancelShippedSalesLine(ChannelCode);
    END;

    [Test]
    PROCEDURE GER7_CancelPurchOrderDifVend@1000000056();
    BEGIN
      // Cancel one out of two Purchase Orders.
      Initialize;
      SalesProcessHelper.CancelPurchOrderDifVend(ChannelCode);
    END;

    [MessageHandler]
    PROCEDURE MessageHandler@1000000001(Msg@1000000000 : Text[1024]);
    BEGIN
    END;

    [ReportHandler]
    PROCEDURE SalesPackListReportHandler@1000000007(VAR SalesPackingListRep@1000000000 : Report 50020);
    BEGIN
      SalesPackingListRep.SAVEASXML('C:\test.xml');
    END;

    BEGIN
    {
      +--------------------------------------------+
      |                                            |
      |                  Home24                    |
      |       Internal Customizing by NAV-Team     |
      |                                            |
      +--------------------------------------------+

      Project No. Date      Shortcut  Description
      _____________________________________________
      *** Module: Testautomation ***
      H0795       07.01.14  MM        Testautomation: Create a test function for a DropShipment process
      H0844       06.02.14  MM        Testautomation: Main business processes - Channel 7
      H0584       256.03.14 HCN       Field changes incorporated
      H0939       14.03.14  MM        Testautomation: Main business cases - Channel 3
      H1541       28.11.14  MM        Testautomation: Cover Rhenus Interface

      Base Tests for Order Process (Channel GER-7):
      1.  Check Dimentions in Sales Header and Lines for imported Sales Order.
      2.  Create Purchase Order for Sales Order.
      3.  Send Purchase Email and check DHL lable.
      4.  Ship and Invoice single line Sales Order.
      5.  Ship and Invoice multi line Sales Order.
      6.  Ship and Invoice Sales Order with a Resource Line.
      7.  Ship and Invoice Sales Order with Payment Method 'KK'.
      8.  Ship and Invoice Sales Order with Payment Method 'VORK'.
      9.  Ship and Invoice Sales Order with Payment Method 'PP'.
      10. Ship and Invoice Sales Order with Payment Method 'RECHNUNG'.
      11. Create Return Order for Sales Order.
      12. Post Return Order.
      13. Post Return Order with Resource Line.
      14. Create Return Order with Prevention Discount and type Cancelation.
      15. Create Return Order without Prevention and type Return.
      16. Create Return Order with Prevention Discount and type Return.
      17. Create Return Order with type Change of Goods.
      18. Create Return Order with type Spare Part.
      19. Cancel Sales Line.
      20. Cancel Sales Order.
      21. Cancel Sales Order with Resource Line.
      22. Cancel shipped Sales Line (negative).
      23. Cancel one out of two Purchase Orders.
    }
    END.
  }
}

