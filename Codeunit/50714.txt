OBJECT Codeunit 50714 Test: Sales Order GER-11
{
  OBJECT-PROPERTIES
  {
    Date=11.12.14;
    Time=12:00:00;
    Version List=HME1917;
  }
  PROPERTIES
  {
    Subtype=Test;
    OnRun=BEGIN
            isInitialized := FALSE;
          END;

  }
  CODE
  {
    VAR
      SalesProcessHelper@1000000002 : Codeunit 50715;
      RHDInterfaceHelper@1000000003 : Codeunit 50716;
      ChannelCode@1000000001 : Code[10];
      isInitialized@1000000000 : Boolean;

    LOCAL PROCEDURE Initialize@1000000034();
    VAR
      BackupMgt@1001 : Codeunit 50201;
    BEGIN
      RANDOMIZE;
      IF isInitialized THEN
        EXIT;
      //BackupMgt.DefaultFixture;
      isInitialized := TRUE;
      ChannelCode := 'GER-11';
      SalesProcessHelper.InitializeHelper(1);
      RHDInterfaceHelper.InitializeHelper(1);
      COMMIT;
    END;

    [Test]
    PROCEDURE SetPaymentReceived@1000000019();
    VAR
      TestBuffer@1000000000 : Record 80008;
      SalesHeader@1000000001 : Record 36;
    BEGIN
      TestBuffer.SETRANGE("Entry Type",SalesHeader."Document Type"::Order);
      TestBuffer.SETRANGE("Use for Test",TRUE);
      IF TestBuffer.FINDSET THEN
        REPEAT
          SalesProcessHelper.PaymentReceived(TestBuffer."Entry Value Code");
        UNTIL TestBuffer.NEXT = 0;
    END;

    [Test]
    PROCEDURE GER11_CreateSOVerifyDim@1000000074();
    BEGIN
      // Check Dimentions in Sales Header and Lines for imported Sales Order.
      Initialize;
      SalesProcessHelper.CreateSOVerifyDim(ChannelCode);
    END;

    [Test]
    PROCEDURE GER11_InvoiceSingleLineSO@1000000006();
    BEGIN
      // Ship and Invoice single line Sales Order.
      Initialize;
      SalesProcessHelper.InvoiceSingleLineSO(ChannelCode);
    END;

    [Test]
    PROCEDURE GER11_InvoiceMultiLineSO@1000000014();
    BEGIN
      // Ship and Invoice multi line Sales Order.
      Initialize;
      SalesProcessHelper.InvoiceMultiLineSO(ChannelCode);
    END;

    [Test]
    PROCEDURE GER11_InvoiceSOWithResource@1000000028();
    BEGIN
      // Ship and Invoice Sales Order with a Resource Line.
      Initialize;
      SalesProcessHelper.InvoiceSOWithResource(ChannelCode);
    END;

    [Test]
    PROCEDURE GER11_InvoiceSalesOrderKK@1000000027();
    BEGIN
      // Ship and Invoice Sales Order with Payment Method 'KK'.
      Initialize;
      SalesProcessHelper.InvoiceSalesOrderKK(ChannelCode);
    END;

    [Test]
    PROCEDURE GER11_InvoiceSalesOrderVORK@1000000020();
    BEGIN
      // Ship and Invoice Sales Order with Payment Method 'VORK'.
      Initialize;
      SalesProcessHelper.InvoiceSalesOrderVORK(ChannelCode);
    END;

    [Test]
    PROCEDURE GER11_InvoiceSalesOrderPP@1000000029();
    BEGIN
      // Ship and Invoice Sales Order with Payment Method 'PP'.
      Initialize;
      SalesProcessHelper.InvoiceSalesOrderPP(ChannelCode);
    END;

    [Test]
    PROCEDURE GER11_InvoiceSalesOrderRECHNUN@1000000031();
    BEGIN
      // Ship and Invoice Sales Order with Payment Method 'RECHNUNG'.
      Initialize;
      SalesProcessHelper.InvoiceSalesOrderRECHNUNG(ChannelCode);
    END;

    [Test]
    [HandlerFunctions(MessageHandler)]
    PROCEDURE GER11_CreateReturnOrder@1000000023();
    BEGIN
      // Create Return Order for Sales Order.
      Initialize;
      SalesProcessHelper.CreateReturnOrder(ChannelCode);
    END;

    [Test]
    [HandlerFunctions(MessageHandler)]
    PROCEDURE GER11_PostReturnOrder@1000000052();
    BEGIN
      // Post Return Order.
      Initialize;
      SalesProcessHelper.PostReturnOrder(ChannelCode);
    END;

    [Test]
    [HandlerFunctions(MessageHandler)]
    PROCEDURE GER11_PostReturnOrderWithRes@1000000033();
    BEGIN
      // Post Return Order with Resource Line.
      Initialize;
      SalesProcessHelper.PostReturnOrderWithRes(ChannelCode);
    END;

    [Test]
    PROCEDURE GER11_ReturnWithDiscount@1000000030();
    BEGIN
      // Create Return Order with Prevention Discount and type Cancelation.
      Initialize;
      SalesProcessHelper.ReturnWithDiscount(ChannelCode);
    END;

    [Test]
    [HandlerFunctions(MessageHandler,CancelConfirmHandler)]
    PROCEDURE GER11_ReturnOrderWithoutPrev@1000000040();
    BEGIN
      // Create Return Order without Prevention and type Return.
      Initialize;
      SalesProcessHelper.ReturnOrderWithoutPrev(ChannelCode);
    END;

    [Test]
    [HandlerFunctions(MessageHandler)]
    PROCEDURE GER11_ReturnOrderWithPrev@1000000046();
    BEGIN
      // Create Return Order with Prevention Discount and type Return.
      Initialize;
      SalesProcessHelper.ReturnOrderWithPrev(ChannelCode);
    END;

    [Test]
    [HandlerFunctions(MessageHandler)]
    PROCEDURE GER11_ChangeOfGoods@1000000047();
    BEGIN
      // Create Return Order with type Change of Goods.
      Initialize;
      SalesProcessHelper.ChangeOfGoods(ChannelCode);
    END;

    [Test]
    [HandlerFunctions(MessageHandler)]
    PROCEDURE GER11_SparePartOfGoods@1000000064();
    BEGIN
      // Create Return Order with type Spare Part.
      Initialize;
      SalesProcessHelper.SparePartOfGoods(ChannelCode);
    END;

    [Test]
    PROCEDURE GER11_CancelSalesLine@1000000049();
    BEGIN
      // Cancel Sales Line.
      Initialize;
      SalesProcessHelper.CancelSalesLine(ChannelCode);
    END;

    [Test]
    PROCEDURE GER11_CancelSalesOrder@1000000066();
    BEGIN
      // Cancel Sales Order.
      Initialize;
      SalesProcessHelper.CancelSalesOrder(ChannelCode);
    END;

    [Test]
    PROCEDURE GER11_CancelSOWithResource@1000000051();
    BEGIN
      // Cancel Sales Order with Resource Line.
      Initialize;
      SalesProcessHelper.CancelSOWithResource(ChannelCode);
    END;

    [Test]
    PROCEDURE GER11_CancelShippedSalesLine@1000000053();
    BEGIN
      // Cancel shipped Sales Line (negative).
      Initialize;
      SalesProcessHelper.CancelShippedSalesLine(ChannelCode);
    END;

    [Test]
    PROCEDURE GER11_ChangeChannel@1000000000();
    BEGIN
      // Change Channel and verify Dimentions.
      Initialize;
      SalesProcessHelper.ChangeChannelVerifyDim(ChannelCode,'GER-1',FALSE);
    END;

    [Test]
    PROCEDURE GER11_ChangeChannelMultiLine@1000000002();
    BEGIN
      // Change Channel and verify Dimentions (multiline Order).
      Initialize;
      SalesProcessHelper.ChangeChannelVerifyDim(ChannelCode,'GER-7',TRUE);
    END;

    [MessageHandler]
    PROCEDURE MessageHandler@1000000001(Msg@1000000000 : Text[1024]);
    BEGIN
    END;

    [ConfirmHandler]
    PROCEDURE CancelConfirmHandler@1000000015(Question@1000000000 : Text[1024];VAR Reply@1000000001 : Boolean);
    BEGIN
      Reply := TRUE;
    END;

    BEGIN
    {
      +--------------------------------------------+
      |                                            |
      |                  Home24                    |
      |       Internal Customizing by NAV-Team     |
      |                                            |
      +--------------------------------------------+

      Project No. Date      Shortcut  Description
      _____________________________________________
      *** Module: TestTool ***
      H1276       04.09.14  MM        Testautomation: Main business cases - Channel 11
      H1541       28.11.14  MM        Testautomation: Cover Rhenus Interface
      H1917       11.12.14  MM        Testing: Add Channel Change to the RHD Interface (cleanup).

      Base Tests for Order Process (Channel GER-11):
      1.  Check Dimentions in Sales Header and Lines for imported Sales Order.
      2.  Ship and Invoice single line Sales Order.
      3.  Ship and Invoice multi line Sales Order.
      4.  Ship and Invoice Sales Order with a Resource Line.
      5.  Ship and Invoice Sales Order with Payment Method 'KK'.
      6.  Ship and Invoice Sales Order with Payment Method 'VORK'.
      7.  Ship and Invoice Sales Order with Payment Method 'PP'.
      8.  Ship and Invoice Sales Order with Payment Method 'RECHNUNG'.
      9.  Create Return Order for Sales Order.
      10. Post Return Order.
      11. Post Return Order with Resource Line.
      12. Create Return Order with Prevention Discount and type Cancelation.
      13. Create Return Order without Prevention and type Return.
      14. Create Return Order with Prevention Discount and type Return.
      15. Create Return Order with type Change of Goods.
      16. Create Return Order with type Spare Part.
      17. Cancel Sales Line.
      18. Cancel Sales Order.
      19. Cancel Sales Order with Resource Line.
      20. Cancel shipped Sales Line (negative).
      21. Change Channel and verify Dimentions.
      22. Change Channel and verify Dimentions (multiline Order).
    }
    END.
  }
}

