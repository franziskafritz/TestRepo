OBJECT Codeunit 6085702 Purch. Doc. - Identification
{
  OBJECT-PROPERTIES
  {
    Date=24.11.13;
    Time=01:00:00;
    Version List=DCW13.70.00.3.50.05;
  }
  PROPERTIES
  {
    TableNo=6085590;
    OnRun=VAR
            Template@1000000000 : Record 6085579;
            Field@1000000001 : Record 6085580;
            Vendor@1000000002 : Record 23;
            SourceExcl@161024012 : Record 6085598;
            DocCat@161024015 : Record 6085575;
            CaptureEngine@1000000004 : Codeunit 6085575;
            RecIDMgt@161024014 : Codeunit 6085604;
            VATRegNo@1000000003 : Code[20];
            Found@161024013 : Boolean;
            RecIDTreeID@161024016 : Integer;
          BEGIN
            CODEUNIT.RUN(CODEUNIT::"Doc. - Search Word Identifier",Rec);
            IF Rec."Template No." <> '' THEN
              EXIT;

            // *********************************************************************************************************************************
            // SOURCE NO ALREADY IDENTIFIED. VALIDATING THE NO. WILL MAKE THE SYSTEM INSERT THE DEFAULT TEMPLATE
            // *********************************************************************************************************************************
            IF "Source Record ID Tree ID" <> 0 THEN BEGIN
              VALIDATE("Source Record ID Tree ID","Source Record ID Tree ID");
              MODIFY(TRUE);
              EXIT;
            END;

            // *********************************************************************************************************************************
            // FIND THE IDENTIFICATION TEMPLATE
            // *********************************************************************************************************************************
            Template.RESET;
            Template.SETCURRENTKEY("Category Code","Source Sub Type");
            Template.SETRANGE("Category Code","Document Category Code");
            Template.SETRANGE("Source Sub Type",Template."Source Sub Type"::Identification);
            IF NOT Template.FINDFIRST THEN
              EXIT;

            Field.SETRANGE("Template No.",Template."No.");
            IF NOT Field.FINDFIRST THEN
              EXIT;

            DocCat.GET("Document Category Code");

            // *********************************************************************************************************************************
            // CAPTURE THE VAT REG. NO FROM THE DOCUMENT VALUES
            // *********************************************************************************************************************************
            VATRegNo := COPYSTR(CaptureEngine.CaptureField(Rec,Field),1,MAXSTRLEN(Vendor."VAT Registration No."));

            // *********************************************************************************************************************************
            // IF REGISTRATION NO. WAS FOUND THEN TRY TO FIND A VENDOR WITH THE NO.
            // *********************************************************************************************************************************
            VATRegNo := RecIDMgt.FormatFilterValue(VATRegNo,MAXSTRLEN(VATRegNo));
            IF VATRegNo <> '' THEN BEGIN
              Vendor.SETCURRENTKEY("VAT Registration No.");
              Vendor.SETRANGE("VAT Registration No.",VATRegNo);
              IF Vendor.FINDFIRST THEN
                REPEAT
                  RecIDTreeID := RecIDMgt.GetRecIDTreeID2(
                    DocCat."Source Table No.",Vendor.FIELDNO("No."),DocCat."Source Table Filter GUID",Vendor."No.");
                  Found := NOT SourceExcl.GET("Document Category Code",RecIDTreeID);
                UNTIL Found OR (Vendor.NEXT = 0);

              IF NOT Found THEN BEGIN
                VATRegNo := RemoveLeadingLetters(VATRegNo);
                IF (STRLEN(VATRegNo) > 6) THEN BEGIN
                  Vendor.SETRANGE("VAT Registration No.",VATRegNo);

                  IF Vendor.FINDFIRST THEN
                    REPEAT
                      RecIDTreeID := RecIDMgt.GetRecIDTreeID2(
                        DocCat."Source Table No.",Vendor.FIELDNO("No."),DocCat."Source Table Filter GUID",Vendor."No.");
                      Found := NOT SourceExcl.GET("Document Category Code",RecIDTreeID);
                    UNTIL Found OR (Vendor.NEXT = 0);


                  IF NOT Found THEN BEGIN
                    Vendor.SETFILTER("VAT Registration No.",'%1','*' + VATRegNo + '*');
                    IF Vendor.FINDFIRST THEN
                      REPEAT
                        RecIDTreeID := RecIDMgt.GetRecIDTreeID2(
                          DocCat."Source Table No.",Vendor.FIELDNO("No."),DocCat."Source Table Filter GUID",Vendor."No.");
                        Found := NOT SourceExcl.GET("Document Category Code",RecIDTreeID);
                      UNTIL Found OR (Vendor.NEXT = 0);
                  END;
                END;
              END;
            END;

            IF NOT Found THEN
              EXIT;

            VALIDATE("Source Record ID Tree ID",RecIDMgt.GetRecIDTreeID2(DATABASE::Vendor,Vendor.FIELDNO("No."),
              DocCat."Source Table Filter GUID",Vendor."No."));
            MODIFY(TRUE);
          END;

  }
  CODE
  {

    PROCEDURE CaptureVATNo@161024012(VAR CaptureFieldVal@161024012 : Record 6085597);
    VAR
      CompInfo@161024013 : Record 79;
    BEGIN
      // *********************************************************************************************************************************
      // THIS FUNCTION IS CALLED DURING IDENTIFICATION. IF THE SYSTEM FINDS OUR OWN VAT REG. NO, IT WILL CONTINUE SEARCHING THE DOCUMENT
      // FOR THE VENDOR VAT NO.
      // *********************************************************************************************************************************
      CompInfo.GET;
      WITH CaptureFieldVal DO BEGIN
        // WE ONLY WAN'T TO VALIDATE THE VALUE IF THE VALUE ALREADY CONFORMS TO THE SPECIFIED REGEX-RULES
        IF "File Rule Entry No." = 0 THEN
          EXIT;

        // REMOVE ALL LETTERS FROM THE VAT NO. AND COMPARE ONLY THE NUMBER-SEQUENCE
        "Is Valid" := RemoveLeadingLetters(Value) <> RemoveLeadingLetters(CompInfo."VAT Registration No.")
      END;
    END;

    PROCEDURE RemoveLeadingLetters@1000000000(Text@1000000000 : Text[1024]) : Text[1024];
    BEGIN
      WHILE Text <> '' DO BEGIN
        IF (COPYSTR(Text,1,1) >= 'A') AND (COPYSTR(Text,1,1) <= 'Z') THEN
          Text := COPYSTR(Text,2)
        ELSE
          EXIT(Text);
      END;
      EXIT(Text);
    END;

    BEGIN
    {
      This codeunit identifies the template to be used vendor specific documents.
      1) It first tries to identify the template from the template search words.
      2) If not template is found it will try to find the vendor and template from the VAT no. on the document
    }
    END.
  }
}

