OBJECT Codeunit 90198 PTB CleanUp
{
  OBJECT-PROPERTIES
  {
    Date=07.01.13;
    Time=12:00:00;
    Version List=SSI/PTB;
  }
  PROPERTIES
  {
    OnRun=BEGIN
            IF NOT CONFIRM('CAUTION: This will erase the data from the "NAV/SQL Performance Toolbox" tables.\' +
                           'This code will DELETEALL data from specific PTB tables, according to the DEFAULT (!) Object IDs.\' +
                           'Any CHANGES or RENUMBERING could result in accidentally erasing non-PTB data!\' +
                           'Make sure the proper PTB tables are cleaned, if you have doubts contact your System Administrator.\' +
                           'In any case you should create a BACKUP of the database before cleaning up.\\' +
                           'Do you want to continue this process?', FALSE)
            THEN
              EXIT;

            CASE STRMENU('&1 Current Company,&2 All Companies') OF
              1: CleanUpSingle(COMPANYNAME);
              2: CleanUpAll;
            END;
          END;

  }
  CODE
  {
    VAR
      Companies@1000000000 : Record 2000000006;
      Objects@1000000005 : Record 2000000001;
      RecRef@1000000004 : RecordRef;
      Window@1000000001 : Dialog;
      c@1000000002 : Integer;
      i@1000000003 : Integer;

    PROCEDURE CleanUpAll@1000000002();
    BEGIN
      IF Companies.FINDSET THEN BEGIN
        Window.OPEN('Erasing "NAV/SQL Perfromance Toolbox" data ...\' +
                    'Company #1##################\' +
                    '@2@@@@@@@@@@@@@@@@@@@@@@@@@@');
        c := Companies.COUNT;
        REPEAT
          i := i + 1;
          Window.UPDATE(1, Companies.Name);
          Window.UPDATE(2, ROUND(10000 / c * i, 1));
          CleanUpSingle(Companies.Name);
        UNTIL Companies.NEXT = 0;
        Window.CLOSE;
      END;
    END;

    PROCEDURE CleanUpSingle@1000000001(CompName@1000000000 : Text[50]);
    BEGIN
      RecRef.OPEN(90100, FALSE, CompName);
      RecRef.DELETEALL(TRUE);
      RecRef.CLOSE;
      COMMIT;
      RecRef.OPEN(90101, FALSE, CompName);
      RecRef.DELETEALL(TRUE);
      RecRef.CLOSE;
      COMMIT;
      RecRef.OPEN(90104, FALSE, CompName);
      RecRef.DELETEALL(TRUE);
      RecRef.CLOSE;
      COMMIT;
      RecRef.OPEN(90105, FALSE, CompName);
      RecRef.DELETEALL(TRUE);
      RecRef.CLOSE;
      COMMIT;
      RecRef.OPEN(90113, FALSE, CompName);
      RecRef.DELETEALL(TRUE);
      RecRef.CLOSE;
      COMMIT;
      RecRef.OPEN(90121, FALSE, CompName);
      RecRef.DELETEALL(TRUE);
      RecRef.CLOSE;
      COMMIT;
      RecRef.OPEN(90124, FALSE, CompName);
      RecRef.DELETEALL(TRUE);
      RecRef.CLOSE;
      COMMIT;
      RecRef.OPEN(90151, FALSE, CompName);
      RecRef.DELETEALL(TRUE);
      RecRef.CLOSE;
      COMMIT;
      RecRef.OPEN(90152, FALSE, CompName);
      RecRef.DELETEALL(TRUE);
      RecRef.CLOSE;
      COMMIT;
    END;

    BEGIN
    END.
  }
}

