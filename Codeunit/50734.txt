OBJECT Codeunit 50734 Test: WHLF Interface
{
  OBJECT-PROPERTIES
  {
    Date=26.03.15;
    Time=12:00:00;
    Version List=HME3925;
  }
  PROPERTIES
  {
    Subtype=Test;
    OnRun=BEGIN
            isInitialized := FALSE;
          END;

  }
  CODE
  {
    VAR
      LibrarySales@1000000006 : Codeunit 50701;
      WHLFInterfaceHelper@1000000004 : Codeunit 50733;
      ChannelCode@1000000003 : Code[10];
      ChannelCodeFR@1000000001 : Code[10];
      ChannelCodeNL@1000000002 : Code[10];
      ChannelCodeAT@1000000005 : Code[10];
      ChannelCodeCH@1000000007 : Code[10];
      ChannelCodeBE@1000000008 : Code[10];
      ChannelCodeIT@1000000009 : Code[10];
      isInitialized@1000000000 : Boolean;

    LOCAL PROCEDURE Initialize@1000000034();
    VAR
      BackupMgt@1001 : Codeunit 50201;
    BEGIN
      RANDOMIZE(1);
      IF isInitialized THEN
        EXIT;
      // BackupMgt.DefaultFixture;

      IF NOT LibrarySales.FindNoSeries('TEST') THEN
        LibrarySales.CreateNoSeries('TEST');

      isInitialized := TRUE;
      ChannelCode := 'GER-14';
      ChannelCodeFR := 'FRA-14';
      ChannelCodeNL := 'NL-14';
      ChannelCodeAT := 'AT-14';
      ChannelCodeCH := 'CH-14';
      ChannelCodeBE := 'BE-14';
      ChannelCodeIT := 'IT-14';
      COMMIT;
    END;

    [Test]
    PROCEDURE CheckWHLFSetup@1000000026();
    BEGIN
      // Check basic WHLF Setup.
      Initialize;
      WHLFInterfaceHelper.CheckWHLFSetup;
    END;

    [Test]
    PROCEDURE "----DE----"@1000000215();
    BEGIN
    END;

    [Test]
    PROCEDURE GER14_LFInitInterface@1000000001();
    BEGIN
      // Trigger WHLF Interface, verify WHLF Sales Header.
      Initialize;
      WHLFInterfaceHelper.WHLFInitializeInterface(ChannelCode,'Ger14Single');
    END;

    [Test]
    PROCEDURE GER14_WHLFReserveSingleLine@1000000024();
    BEGIN
      // Check WHLF Reservation, KAD reserve.
      Initialize;
      WHLFInterfaceHelper.ReserveOrderLF(ChannelCode,'Ger14SingleVORK');
    END;

    [Test]
    PROCEDURE GER14_WHLFReserveMultiLine@1000000027();
    BEGIN
      // Check WHLF Reservation, KAD reserve for multi-line Sales Order.
      Initialize;
      WHLFInterfaceHelper.ReserveOrderLF(ChannelCode,'Ger14MultiVORK');
    END;

    [Test]
    PROCEDURE GER14_WHLFReserveUpdatePmt@1000000025();
    BEGIN
      // Check Update WHLF Interface after received Payment.
      Initialize;
      WHLFInterfaceHelper.ReserveOrderLFUpdPtm(ChannelCode,'Ger14SingleVORK');
    END;

    [Test]
    PROCEDURE GER14_CreateKADSingleLine@1000000000();
    BEGIN
      // Create KAD File for Single Line Order.
      Initialize;
      WHLFInterfaceHelper.CreateKADFile(ChannelCode,'Ger14Single');
    END;

    [Test]
    PROCEDURE GER14_CreateKADSingleLineRes@1000000016();
    BEGIN
      // Create KAD File for Single Line Order with Resource = Credit Bon.
      Initialize;
      WHLFInterfaceHelper.CreateKADFileResource(ChannelCode,'Ger14SingleVoucher');
    END;

    [Test]
    PROCEDURE GER14_CreateKADMultiLine@1000000017();
    BEGIN
      // Create KAD File for Multi-Line Order.
      Initialize;
      WHLFInterfaceHelper.CreateKADFile(ChannelCode,'Ger14Multi');
    END;

    [Test]
    PROCEDURE GER14_CreateKADMultiLineRes@1000000018();
    BEGIN
      // Create KAD File for Multi-Line Order with Resource = Credit Bon.
      Initialize;
      WHLFInterfaceHelper.CreateKADFileResource(ChannelCode,'Ger14MultiVoucher');
    END;

    [Test]
    PROCEDURE GER14_CancelNotPaidWHLFOrder@1000000095();
    BEGIN
      // Cancel WHLF Order without Payment after xx days.
      Initialize;
      WHLFInterfaceHelper.CancelReservation(ChannelCode,'Ger14SingleVORK');
    END;

    [Test]
    PROCEDURE GER14_CancelNotPaidMultLFOrder@1000000097();
    BEGIN
      // Cancel Multi-line WHLF Order without Payment after xx days.
      Initialize;
      WHLFInterfaceHelper.CancelReservation(ChannelCode,'Ger14MultiVORK');
    END;

    [Test]
    PROCEDURE GER14_ImportSTAFileStatus0@1000000002();
    BEGIN
      // Import WHLF STA File with Status 0.
      Initialize;
      WHLFInterfaceHelper.ImportSTAFileStatus0(ChannelCode,'Ger14Single');
    END;

    [Test]
    PROCEDURE GER14_ImportSTAFileStatus0Mult@1000000007();
    BEGIN
      // Import WHLF STA File with Status 0 (multi Line Order).
      Initialize;
      WHLFInterfaceHelper.ImportSTAFileStatus0(ChannelCode,'Ger14Multi');
    END;

    [Test]
    PROCEDURE GER14_ImportSTAFileStatus41@1000000004();
    BEGIN
      // Import WHLF STA File with Status 50.
      Initialize;
      WHLFInterfaceHelper.ImportSTAFileStatus41(ChannelCode,'Ger14Single');
    END;

    [Test]
    PROCEDURE GER14_ImportSTAFileStatus41Mul@1000000003();
    BEGIN
      // Import WHLF STA File with Status 50.
      Initialize;
      WHLFInterfaceHelper.ImportSTAFileStatus41(ChannelCode,'Ger14Multi');
    END;

    [Test]
    PROCEDURE GER14_ImportSTAFileToArchive@1000000033();
    BEGIN
      // Import WHLF Status to Archived SO.
      Initialize;
      WHLFInterfaceHelper.ImportSTAFileStatusToArchived(ChannelCode,'Ger14Single');
    END;

    [Test]
    PROCEDURE GER14_ShipSalesOrderWithJob@1000000009();
    BEGIN
      // Import WHLF STA File with Status 50 -> Ship SO.
      Initialize;
      WHLFInterfaceHelper.ShipSalesOrderWithJob(ChannelCode,'Ger14Single');
    END;

    [Test]
    PROCEDURE GER14_ImportDHLProactivFile@1000000037();
    BEGIN
      // Import DHL Proactiv File.
      Initialize;
      WHLFInterfaceHelper.ImportDHLProactivFileSRTD(ChannelCode,'Ger14Single');
    END;

    [Test]
    PROCEDURE GER14_ImportDHLProactivFileDLV@1000000036();
    BEGIN
      // Import DHL Proactiv File with Status DLVRD.
      Initialize;
      WHLFInterfaceHelper.ImportDHLProactivFileDLVRD(ChannelCode,'Ger14Single');
    END;

    [Test]
    PROCEDURE GER14_ImportDHLProactivFileSI@1000000035();
    BEGIN
      // Import DHL Proactiv File -> Ship&Invoice SO.
      Initialize;
      WHLFInterfaceHelper.ImportDHLProactivFileShipInv(ChannelCode,'Ger14Single');
    END;

    [Test]
    PROCEDURE GER14_CancelWHLFInterface@1000000028();
    BEGIN
      // Check Cancelation of WHLF Interface.
      Initialize;
      WHLFInterfaceHelper.CancelWHLFInterface(ChannelCode,'Ger14Single');
    END;

    [Test]
    PROCEDURE GER14_CancelWHLFInterfaceMulti@1000000005();
    BEGIN
      // Check Cancelation of WHLF Interface.
      Initialize;
      WHLFInterfaceHelper.CancelWHLFInterface(ChannelCode,'Ger14Multi');
    END;

    [Test]
    [HandlerFunctions(MessageHandler)]
    PROCEDURE GER14_WHLFInterfaceToReturn@1000000020();
    BEGIN
      // Trigger WHLF Interface for Sales Return Order.
      Initialize;
      WHLFInterfaceHelper.WHLFInterfaceToReturn(ChannelCode,'Ger14Single');
    END;

    [Test]
    [HandlerFunctions(MessageHandler)]
    PROCEDURE GER14_WHLFInterfaceToChange@1000000032();
    BEGIN
      // Trigger WHLF Interface for Sales Follow On Order.
      Initialize;
      WHLFInterfaceHelper.WHLFInterfaceToChange(ChannelCode,'Ger14Single');
    END;

    [Test]
    PROCEDURE GER14_ChangeChannelToGER7@1000000064();
    BEGIN
      // Change Channel GER-1 -> GER-7.
      Initialize;
      WHLFInterfaceHelper.ChangeChannelCancelInterface(ChannelCode,'GER-7','Ger14Single');
    END;

    [Test]
    PROCEDURE GER14_ImportSTADHLTrackingCode@1000000008();
    BEGIN
      // Import STA File with DHL Tracking Code.
      Initialize;
      WHLFInterfaceHelper.ImportSTAFileTrackingCode(ChannelCode,'Ger14Single');
    END;

    [Test]
    PROCEDURE GER14_ImportSTADHLTrCodeMulti@1000000006();
    BEGIN
      // Import STA File with DHL Tracking Code for multi-line Sales Order.
      Initialize;
      WHLFInterfaceHelper.ImportSTAFileTrackingCode(ChannelCode,'Ger14Multi');
    END;

    [Test]
    PROCEDURE GER14_ImportSTADPDTrackingCode@1000000010();
    BEGIN
      // Import STA File with DPD Tracking Code.
      Initialize;
      WHLFInterfaceHelper.ImportSTAFileTrackingCode(ChannelCode,'Ger14SingleDPD');
    END;

    [Test]
    PROCEDURE GER14_ImportSTADPDTrCodeMulti@1000000015();
    BEGIN
      // Import STA File with DPD Tracking Code for multi-line Sales Order.
      Initialize;
      WHLFInterfaceHelper.ImportSTAFileTrackingCode(ChannelCode,'Ger14MultiDPD');
    END;

    [Test]
    PROCEDURE GER14_ImportDPDScanInfoFile@1000000011();
    BEGIN
      // Import DPD SCANINFO File.
      Initialize;
      WHLFInterfaceHelper.ImportDPDScanInfoFile(ChannelCode,'Ger14SingleDPD');
    END;

    [Test]
    PROCEDURE GER14_ImportDPDScanInfoMulti@1000000019();
    BEGIN
      // Import DPD SCANINFO File for multi-line Sales Order.
      Initialize;
      WHLFInterfaceHelper.ImportDPDScanInfoFile(ChannelCode,'Ger14MultiDPD');
    END;

    [Test]
    PROCEDURE GER14_ImportDPDScanInfoFileADD@1000000012();
    BEGIN
      // Import DPD SCANINFO File and trigger ADD.
      Initialize;
      WHLFInterfaceHelper.ImportDPDScanInfoFileADD(ChannelCode,'Ger14SingleDPD');
    END;

    [Test]
    PROCEDURE GER14_ImportDPDScanInfoADDMult@1000000023();
    BEGIN
      // Import DPD SCANINFO File and trigger ADD for multi-line Sales Order.
      Initialize;
      WHLFInterfaceHelper.ImportDPDScanInfoFileADD(ChannelCode,'Ger14MultiDPD');
    END;

    [Test]
    PROCEDURE GER14_ImportDPDScanInfoFileSI@1000000013();
    BEGIN
      // Import DPD SCANINFO File and trigger Ship&Invoice.
      Initialize;
      WHLFInterfaceHelper.ImportDPDScanInfoFileShipInv(ChannelCode,'Ger14SingleDPD');
    END;

    [Test]
    PROCEDURE GER14_ImportDPDScanInfoSIMulti@1000000029();
    BEGIN
      // Import DPD SCANINFO File and trigger Ship&Invoice for multi-line Sales Order.
      Initialize;
      WHLFInterfaceHelper.ImportDPDScanInfoFileShipInv(ChannelCode,'Ger14MultiDPD');
    END;

    [Test]
    PROCEDURE "----FR----"@1000000014();
    BEGIN
      // H3925  26.03.15  MM +++++++++++++++
      // All functions for FR
      // H3925  26.03.15  MM ---------------
    END;

    [Test]
    PROCEDURE FRA14_LFInitInterface@1000000074();
    BEGIN
      // Trigger WHLF Interface, verify WHLF Sales Header.
      Initialize;
      WHLFInterfaceHelper.WHLFInitializeInterface(ChannelCodeFR,'FR14Single');
    END;

    [Test]
    PROCEDURE FRA14_CheckChannel@1000000214();
    BEGIN
      // Check Channel against German.
      Initialize;
      WHLFInterfaceHelper.CheckChannel(ChannelCodeFR);
    END;

    [Test]
    PROCEDURE FRA14_WHLFReserveSingleLine@1000000073();
    BEGIN
      // Check WHLF Reservation, KAD reserve.
      Initialize;
      WHLFInterfaceHelper.ReserveOrderLF(ChannelCodeFR,'FR14SingleVORK');
    END;

    [Test]
    PROCEDURE FRA14_WHLFReserveMultiLine@1000000072();
    BEGIN
      // Check WHLF Reservation, KAD reserve for multi-line Sales Order.
      Initialize;
      WHLFInterfaceHelper.ReserveOrderLF(ChannelCodeFR,'FR14MultiVORK');
    END;

    [Test]
    PROCEDURE FRA14_WHLFReserveUpdatePmt@1000000071();
    BEGIN
      // Check Update WHLF Interface after received Payment.
      Initialize;
      WHLFInterfaceHelper.ReserveOrderLFUpdPtm(ChannelCodeFR,'FR14SingleVORK');
    END;

    [Test]
    PROCEDURE FRA14_CreateKADSingleLine@1000000070();
    BEGIN
      // Create KAD File for Single Line Order.
      Initialize;
      WHLFInterfaceHelper.CreateKADFile(ChannelCodeFR,'FR14Single');
    END;

    [Test]
    PROCEDURE FRA14_CreateKADSingleLineRes@1000000069();
    BEGIN
      // Create KAD File for Single Line Order with Resource = Credit Bon.
      Initialize;
      WHLFInterfaceHelper.CreateKADFileResource(ChannelCodeFR,'FR14SingleVoucher');
    END;

    [Test]
    PROCEDURE FRA14_CreateKADMultiLine@1000000068();
    BEGIN
      // Create KAD File for Multi-Line Order.
      Initialize;
      WHLFInterfaceHelper.CreateKADFile(ChannelCodeFR,'FR14Multi');
    END;

    [Test]
    PROCEDURE FRA14_CreateKADMultiLineRes@1000000067();
    BEGIN
      // Create KAD File for Multi-Line Order with Resource = Credit Bon.
      Initialize;
      WHLFInterfaceHelper.CreateKADFileResource(ChannelCodeFR,'FR14MultiVoucher');
    END;

    [Test]
    PROCEDURE FRA14_CancelNotPaidWHLFOrder@1000000066();
    BEGIN
      // Cancel WHLF Order without Payment after xx days.
      Initialize;
      WHLFInterfaceHelper.CancelReservation(ChannelCodeFR,'FR14SingleVORK');
    END;

    [Test]
    PROCEDURE FRA14_CancelNotPaidMultLFOrder@1000000065();
    BEGIN
      // Cancel Multi-line WHLF Order without Payment after xx days.
      Initialize;
      WHLFInterfaceHelper.CancelReservation(ChannelCodeFR,'FR14MultiVORK');
    END;

    [Test]
    PROCEDURE FRA14_ImportSTAFileStatus0@1000000063();
    BEGIN
      // Import WHLF STA File with Status 0.
      Initialize;
      WHLFInterfaceHelper.ImportSTAFileStatus0(ChannelCodeFR,'FR14Single');
    END;

    [Test]
    PROCEDURE FRA14_ImportSTAFileStatus0Mult@1000000062();
    BEGIN
      // Import WHLF STA File with Status 0 (multi Line Order).
      Initialize;
      WHLFInterfaceHelper.ImportSTAFileStatus0(ChannelCodeFR,'FR14Multi');
    END;

    [Test]
    PROCEDURE FRA14_ImportSTAFileStatus41@1000000061();
    BEGIN
      // Import WHLF STA File with Status 50.
      Initialize;
      WHLFInterfaceHelper.ImportSTAFileStatus41(ChannelCodeFR,'FR14Single');
    END;

    [Test]
    PROCEDURE FRA14_ImportSTAFileStatus41Mul@1000000060();
    BEGIN
      // Import WHLF STA File with Status 50.
      Initialize;
      WHLFInterfaceHelper.ImportSTAFileStatus41(ChannelCodeFR,'FR14Multi');
    END;

    [Test]
    PROCEDURE FRA14_ImportSTAFileToArchive@1000000059();
    BEGIN
      // Import WHLF Status to Archived SO.
      Initialize;
      WHLFInterfaceHelper.ImportSTAFileStatusToArchived(ChannelCodeFR,'FR14Single');
    END;

    [Test]
    PROCEDURE FRA14_ShipSalesOrderWithJob@1000000058();
    BEGIN
      // Import WHLF STA File with Status 50 -> Ship SO.
      Initialize;
      WHLFInterfaceHelper.ShipSalesOrderWithJob(ChannelCodeFR,'FR14Single');
    END;

    [Test]
    PROCEDURE FRA14_CancelWHLFInterface@1000000054();
    BEGIN
      // Check Cancelation of WHLF Interface.
      Initialize;
      WHLFInterfaceHelper.CancelWHLFInterface(ChannelCodeFR,'FR14Single');
    END;

    [Test]
    PROCEDURE FRA14_CancelWHLFInterfaceMulti@1000000053();
    BEGIN
      // Check Cancelation of WHLF Interface.
      Initialize;
      WHLFInterfaceHelper.CancelWHLFInterface(ChannelCodeFR,'FR14Multi');
    END;

    [Test]
    [HandlerFunctions(MessageHandler)]
    PROCEDURE FRA14_WHLFInterfaceToReturn@1000000052();
    BEGIN
      // Trigger WHLF Interface for Sales Return Order.
      Initialize;
      WHLFInterfaceHelper.WHLFInterfaceToReturn(ChannelCodeFR,'FR14Single');
    END;

    [Test]
    [HandlerFunctions(MessageHandler)]
    PROCEDURE FRA14_WHLFInterfaceToChange@1000000051();
    BEGIN
      // Trigger WHLF Interface for Sales Follow On Order.
      Initialize;
      WHLFInterfaceHelper.WHLFInterfaceToChange(ChannelCodeFR,'FR14Single');
    END;

    [Test]
    PROCEDURE FRA14_ChangeChannelToFRA7@1000000050();
    BEGIN
      // Change Channel FRA-14 -> FRA-7.
      Initialize;
      WHLFInterfaceHelper.ChangeChannelCancelInterface(ChannelCodeFR,'FRA-7','FR14Single');
    END;

    [Test]
    PROCEDURE FRA14_ImportSTADPDTrackingCode@1000000047();
    BEGIN
      // Import STA File with DPD Tracking Code.
      Initialize;
      WHLFInterfaceHelper.ImportSTAFileTrackingCode(ChannelCodeFR,'FR14Single');
    END;

    [Test]
    PROCEDURE FRA14_ImportSTADPDTrCodeMulti@1000000046();
    BEGIN
      // Import STA File with DPD Tracking Code for multi-line Sales Order.
      Initialize;
      WHLFInterfaceHelper.ImportSTAFileTrackingCode(ChannelCodeFR,'FR14Multi');
    END;

    [Test]
    PROCEDURE FRA14_ImportDPDScanInfoFile@1000000045();
    BEGIN
      // Import DPD SCANINFO File.
      Initialize;
      WHLFInterfaceHelper.ImportDPDScanInfoFile(ChannelCodeFR,'FR14Single');
    END;

    [Test]
    PROCEDURE FRA14_ImportDPDScanInfoMulti@1000000044();
    BEGIN
      // Import DPD SCANINFO File for multi-line Sales Order.
      Initialize;
      WHLFInterfaceHelper.ImportDPDScanInfoFile(ChannelCodeFR,'FR14Multi');
    END;

    [Test]
    PROCEDURE FRA14_ImportDPDScanInfoFileADD@1000000043();
    BEGIN
      // Import DPD SCANINFO File and trigger ADD.
      Initialize;
      WHLFInterfaceHelper.ImportDPDScanInfoFileADD(ChannelCodeFR,'FR14Single');
    END;

    [Test]
    PROCEDURE FRA14_ImportDPDScanInfoADDMult@1000000042();
    BEGIN
      // Import DPD SCANINFO File and trigger ADD for multi-line Sales Order.
      Initialize;
      WHLFInterfaceHelper.ImportDPDScanInfoFileADD(ChannelCodeFR,'FR14Multi');
    END;

    [Test]
    PROCEDURE FRA14_ImportDPDScanInfoFileSI@1000000041();
    BEGIN
      // Import DPD SCANINFO File and trigger Ship&Invoice.
      Initialize;
      WHLFInterfaceHelper.ImportDPDScanInfoFileShipInv(ChannelCodeFR,'FR14Single');
    END;

    [Test]
    PROCEDURE FRA14_ImportDPDScanInfoSIMulti@1000000040();
    BEGIN
      // Import DPD SCANINFO File and trigger Ship&Invoice for multi-line Sales Order.
      Initialize;
      WHLFInterfaceHelper.ImportDPDScanInfoFileShipInv(ChannelCodeFR,'FR14Multi');
    END;

    [Test]
    PROCEDURE "----NL----"@1000000021();
    BEGIN
      // H3925  26.03.15  MM +++++++++++++++
      // All functions for NL
      // H3925  26.03.15  MM ---------------
    END;

    [Test]
    PROCEDURE NL14_LFInitInterface@1000000100();
    BEGIN
      // Trigger WHLF Interface, verify WHLF Sales Header.
      Initialize;
      WHLFInterfaceHelper.WHLFInitializeInterface(ChannelCodeNL,'NL14Single');
    END;

    [Test]
    PROCEDURE NL14_CheckChannel@1000000217();
    BEGIN
      // Check Channel against German.
      Initialize;
      WHLFInterfaceHelper.CheckChannel(ChannelCodeNL);
    END;

    [Test]
    PROCEDURE NL14_CreateKADSingleLine@1000000094();
    BEGIN
      // Create KAD File for Single Line Order.
      Initialize;
      WHLFInterfaceHelper.CreateKADFile(ChannelCodeNL,'NL14Single');
    END;

    [Test]
    PROCEDURE NL14_CreateKADSingleLineRes@1000000093();
    BEGIN
      // Create KAD File for Single Line Order with Resource = Credit Bon.
      Initialize;
      WHLFInterfaceHelper.CreateKADFileResource(ChannelCodeNL,'NL14SingleVoucher');
    END;

    [Test]
    PROCEDURE NL14_CreateKADMultiLine@1000000092();
    BEGIN
      // Create KAD File for Multi-Line Order.
      Initialize;
      WHLFInterfaceHelper.CreateKADFile(ChannelCodeNL,'NL14Multi');
    END;

    [Test]
    PROCEDURE NL14_CreateKADMultiLineRes@1000000091();
    BEGIN
      // Create KAD File for Multi-Line Order with Resource = Credit Bon.
      Initialize;
      WHLFInterfaceHelper.CreateKADFileResource(ChannelCodeNL,'NL14MultiVoucher');
    END;

    [Test]
    PROCEDURE NL14_ImportSTAFileStatus0@1000000088();
    BEGIN
      // Import WHLF STA File with Status 0.
      Initialize;
      WHLFInterfaceHelper.ImportSTAFileStatus0(ChannelCodeNL,'NL14Single');
    END;

    [Test]
    PROCEDURE NL14_ImportSTAFileStatus0Mult@1000000087();
    BEGIN
      // Import WHLF STA File with Status 0 (multi Line Order).
      Initialize;
      WHLFInterfaceHelper.ImportSTAFileStatus0(ChannelCodeNL,'NL14Multi');
    END;

    [Test]
    PROCEDURE NL14_ImportSTAFileStatus41@1000000086();
    BEGIN
      // Import WHLF STA File with Status 50.
      Initialize;
      WHLFInterfaceHelper.ImportSTAFileStatus41(ChannelCodeNL,'NL14Single');
    END;

    [Test]
    PROCEDURE NL14_ImportSTAFileStatus41Mul@1000000085();
    BEGIN
      // Import WHLF STA File with Status 50.
      Initialize;
      WHLFInterfaceHelper.ImportSTAFileStatus41(ChannelCodeNL,'NL14Multi');
    END;

    [Test]
    PROCEDURE NL14_ImportSTAFileToArchive@1000000084();
    BEGIN
      // Import WHLF Status to Archived SO.
      Initialize;
      WHLFInterfaceHelper.ImportSTAFileStatusToArchived(ChannelCodeNL,'NL14Single');
    END;

    [Test]
    PROCEDURE NL14_ShipSalesOrderWithJob@1000000083();
    BEGIN
      // Import WHLF STA File with Status 50 -> Ship SO.
      Initialize;
      WHLFInterfaceHelper.ShipSalesOrderWithJob(ChannelCodeNL,'NL14Single');
    END;

    [Test]
    PROCEDURE NL14_CancelWHLFInterface@1000000082();
    BEGIN
      // Check Cancelation of WHLF Interface.
      Initialize;
      WHLFInterfaceHelper.CancelWHLFInterface(ChannelCodeNL,'NL14Single');
    END;

    [Test]
    PROCEDURE NL14_CancelWHLFInterfaceMulti@1000000081();
    BEGIN
      // Check Cancelation of WHLF Interface.
      Initialize;
      WHLFInterfaceHelper.CancelWHLFInterface(ChannelCodeNL,'NL14Multi');
    END;

    [Test]
    [HandlerFunctions(MessageHandler)]
    PROCEDURE NL14_WHLFInterfaceToReturn@1000000080();
    BEGIN
      // Trigger WHLF Interface for Sales Return Order.
      Initialize;
      WHLFInterfaceHelper.WHLFInterfaceToReturn(ChannelCodeNL,'NL14Single');
    END;

    [Test]
    [HandlerFunctions(MessageHandler)]
    PROCEDURE NL14_WHLFInterfaceToChange@1000000079();
    BEGIN
      // Trigger WHLF Interface for Sales Follow On Order.
      Initialize;
      WHLFInterfaceHelper.WHLFInterfaceToChange(ChannelCodeNL,'NL14Single');
    END;

    [Test]
    PROCEDURE NL14_ChangeChannelToNL7@1000000078();
    BEGIN
      // Change Channel NL-14 -> NL-7.
      Initialize;
      WHLFInterfaceHelper.ChangeChannelCancelInterface(ChannelCodeNL,'NL-7','NL14Single');
    END;

    [Test]
    PROCEDURE NL14_ImportSTADPDTrackingCode@1000000077();
    BEGIN
      // Import STA File with DPD Tracking Code.
      Initialize;
      WHLFInterfaceHelper.ImportSTAFileTrackingCode(ChannelCodeNL,'NL14Single');
    END;

    [Test]
    PROCEDURE NL14_ImportSTADPDTrCodeMulti@1000000076();
    BEGIN
      // Import STA File with DPD Tracking Code for multi-line Sales Order.
      Initialize;
      WHLFInterfaceHelper.ImportSTAFileTrackingCode(ChannelCodeNL,'NL14Multi');
    END;

    [Test]
    PROCEDURE NL14_ImportDPDScanInfoFile@1000000075();
    BEGIN
      // Import DPD SCANINFO File.
      Initialize;
      WHLFInterfaceHelper.ImportDPDScanInfoFile(ChannelCodeNL,'NL14Single');
    END;

    [Test]
    PROCEDURE NL14_ImportDPDScanInfoMulti@1000000057();
    BEGIN
      // Import DPD SCANINFO File for multi-line Sales Order.
      Initialize;
      WHLFInterfaceHelper.ImportDPDScanInfoFile(ChannelCodeNL,'NL14Multi');
    END;

    [Test]
    PROCEDURE NL14_ImportDPDScanInfoFileADD@1000000056();
    BEGIN
      // Import DPD SCANINFO File and trigger ADD.
      Initialize;
      WHLFInterfaceHelper.ImportDPDScanInfoFileADD(ChannelCodeNL,'NL14Single');
    END;

    [Test]
    PROCEDURE NL14_ImportDPDScanInfoADDMult@1000000055();
    BEGIN
      // Import DPD SCANINFO File and trigger ADD for multi-line Sales Order.
      Initialize;
      WHLFInterfaceHelper.ImportDPDScanInfoFileADD(ChannelCodeNL,'NL14Multi');
    END;

    [Test]
    PROCEDURE NL14_ImportDPDScanInfoFileSI@1000000049();
    BEGIN
      // Import DPD SCANINFO File and trigger Ship&Invoice.
      Initialize;
      WHLFInterfaceHelper.ImportDPDScanInfoFileShipInv(ChannelCodeNL,'NL14Single');
    END;

    [Test]
    PROCEDURE NL14_ImportDPDScanInfoSIMulti@1000000048();
    BEGIN
      // Import DPD SCANINFO File and trigger Ship&Invoice for multi-line Sales Order.
      Initialize;
      WHLFInterfaceHelper.ImportDPDScanInfoFileShipInv(ChannelCodeNL,'NL14Multi');
    END;

    [Test]
    PROCEDURE "----AT----"@1000000022();
    BEGIN
      // H3925  26.03.15  MM +++++++++++++++
      // All functions for AT
      // H3925  26.03.15  MM ---------------
    END;

    [Test]
    PROCEDURE AT14_LFInitInterface@1000000125();
    BEGIN
      // Trigger WHLF Interface, verify WHLF Sales Header.
      Initialize;
      WHLFInterfaceHelper.WHLFInitializeInterface(ChannelCodeAT,'AT14Single');
    END;

    [Test]
    PROCEDURE AT14_CheckChannel@1000000219();
    BEGIN
      // Check Channel against German.
      Initialize;
      WHLFInterfaceHelper.CheckChannel(ChannelCodeAT);
    END;

    [Test]
    PROCEDURE AT14_WHLFReserveSingleLine@1000000124();
    BEGIN
      // Check WHLF Reservation, KAD reserve.
      Initialize;
      WHLFInterfaceHelper.ReserveOrderLF(ChannelCodeAT,'AT14SingleVORK');
    END;

    [Test]
    PROCEDURE AT14_WHLFReserveMultiLine@1000000123();
    BEGIN
      // Check WHLF Reservation, KAD reserve for multi-line Sales Order.
      Initialize;
      WHLFInterfaceHelper.ReserveOrderLF(ChannelCodeAT,'AT14MultiVORK');
    END;

    [Test]
    PROCEDURE AT14_WHLFReserveUpdatePmt@1000000122();
    BEGIN
      // Check Update WHLF Interface after received Payment.
      Initialize;
      WHLFInterfaceHelper.ReserveOrderLFUpdPtm(ChannelCodeAT,'AT14SingleVORK');
    END;

    [Test]
    PROCEDURE AT14_CreateKADSingleLine@1000000121();
    BEGIN
      // Create KAD File for Single Line Order.
      Initialize;
      WHLFInterfaceHelper.CreateKADFile(ChannelCodeAT,'AT14Single');
    END;

    [Test]
    PROCEDURE AT14_CreateKADSingleLineRes@1000000120();
    BEGIN
      // Create KAD File for Single Line Order with Resource = Credit Bon.
      Initialize;
      WHLFInterfaceHelper.CreateKADFileResource(ChannelCodeAT,'AT14SingleVoucher');
    END;

    [Test]
    PROCEDURE AT14_CreateKADMultiLine@1000000119();
    BEGIN
      // Create KAD File for Multi-Line Order.
      Initialize;
      WHLFInterfaceHelper.CreateKADFile(ChannelCodeAT,'AT14Multi');
    END;

    [Test]
    PROCEDURE AT14_CreateKADMultiLineRes@1000000118();
    BEGIN
      // Create KAD File for Multi-Line Order with Resource = Credit Bon.
      Initialize;
      WHLFInterfaceHelper.CreateKADFileResource(ChannelCodeAT,'AT14MultiVoucher');
    END;

    [Test]
    PROCEDURE AT14_CancelNotPaidWHLFOrder@1000000117();
    BEGIN
      // Cancel WHLF Order without Payment after xx days.
      Initialize;
      WHLFInterfaceHelper.CancelReservation(ChannelCodeAT,'AT14SingleVORK');
    END;

    [Test]
    PROCEDURE AT14_CancelNotPaidMultLFOrder@1000000116();
    BEGIN
      // Cancel Multi-line WHLF Order without Payment after xx days.
      Initialize;
      WHLFInterfaceHelper.CancelReservation(ChannelCodeAT,'AT14MultiVORK');
    END;

    [Test]
    PROCEDURE AT14_ImportSTAFileStatus0@1000000115();
    BEGIN
      // Import WHLF STA File with Status 0.
      Initialize;
      WHLFInterfaceHelper.ImportSTAFileStatus0(ChannelCodeAT,'AT14Single');
    END;

    [Test]
    PROCEDURE AT14_ImportSTAFileStatus0Mult@1000000114();
    BEGIN
      // Import WHLF STA File with Status 0 (multi Line Order).
      Initialize;
      WHLFInterfaceHelper.ImportSTAFileStatus0(ChannelCodeAT,'AT14Multi');
    END;

    [Test]
    PROCEDURE AT14_ImportSTAFileStatus41@1000000113();
    BEGIN
      // Import WHLF STA File with Status 50.
      Initialize;
      WHLFInterfaceHelper.ImportSTAFileStatus41(ChannelCodeAT,'AT14Single');
    END;

    [Test]
    PROCEDURE AT14_ImportSTAFileStatus41Mul@1000000112();
    BEGIN
      // Import WHLF STA File with Status 50.
      Initialize;
      WHLFInterfaceHelper.ImportSTAFileStatus41(ChannelCodeAT,'AT14Multi');
    END;

    [Test]
    PROCEDURE AT14_ImportSTAFileToArchive@1000000111();
    BEGIN
      // Import WHLF Status to Archived SO.
      Initialize;
      WHLFInterfaceHelper.ImportSTAFileStatusToArchived(ChannelCodeAT,'AT14Single');
    END;

    [Test]
    PROCEDURE AT14_ShipSalesOrderWithJob@1000000110();
    BEGIN
      // Import WHLF STA File with Status 50 -> Ship SO.
      Initialize;
      WHLFInterfaceHelper.ShipSalesOrderWithJob(ChannelCodeAT,'AT14Single');
    END;

    [Test]
    PROCEDURE AT14_CancelWHLFInterface@1000000109();
    BEGIN
      // Check Cancelation of WHLF Interface.
      Initialize;
      WHLFInterfaceHelper.CancelWHLFInterface(ChannelCodeAT,'AT14Single');
    END;

    [Test]
    PROCEDURE AT14_CancelWHLFInterfaceMulti@1000000108();
    BEGIN
      // Check Cancelation of WHLF Interface.
      Initialize;
      WHLFInterfaceHelper.CancelWHLFInterface(ChannelCodeAT,'AT14Multi');
    END;

    [Test]
    [HandlerFunctions(MessageHandler)]
    PROCEDURE AT14_WHLFInterfaceToReturn@1000000107();
    BEGIN
      // Trigger WHLF Interface for Sales Return Order.
      Initialize;
      WHLFInterfaceHelper.WHLFInterfaceToReturn(ChannelCodeAT,'AT14Single');
    END;

    [Test]
    [HandlerFunctions(MessageHandler)]
    PROCEDURE AT14_WHLFInterfaceToChange@1000000106();
    BEGIN
      // Trigger WHLF Interface for Sales Follow On Order.
      Initialize;
      WHLFInterfaceHelper.WHLFInterfaceToChange(ChannelCodeAT,'AT14Single');
    END;

    [Test]
    PROCEDURE AT14_ChangeChannelToAT7@1000000105();
    BEGIN
      // Change Channel AT-14 -> AT-7.
      Initialize;
      WHLFInterfaceHelper.ChangeChannelCancelInterface(ChannelCodeAT,'AT-7','AT14Single');
    END;

    [Test]
    PROCEDURE AT14_ImportSTADPDTrackingCode@1000000104();
    BEGIN
      // Import STA File with DPD Tracking Code.
      Initialize;
      WHLFInterfaceHelper.ImportSTAFileTrackingCode(ChannelCodeAT,'AT14Single');
    END;

    [Test]
    PROCEDURE AT14_ImportSTADPDTrCodeMulti@1000000103();
    BEGIN
      // Import STA File with DPD Tracking Code for multi-line Sales Order.
      Initialize;
      WHLFInterfaceHelper.ImportSTAFileTrackingCode(ChannelCodeAT,'AT14Multi');
    END;

    [Test]
    PROCEDURE AT14_ImportDPDScanInfoFile@1000000102();
    BEGIN
      // Import DPD SCANINFO File.
      Initialize;
      WHLFInterfaceHelper.ImportDPDScanInfoFile(ChannelCodeAT,'AT14Single');
    END;

    [Test]
    PROCEDURE AT14_ImportDPDScanInfoMulti@1000000101();
    BEGIN
      // Import DPD SCANINFO File for multi-line Sales Order.
      Initialize;
      WHLFInterfaceHelper.ImportDPDScanInfoFile(ChannelCodeAT,'AT14Multi');
    END;

    [Test]
    PROCEDURE AT14_ImportDPDScanInfoFileADD@1000000099();
    BEGIN
      // Import DPD SCANINFO File and trigger ADD.
      Initialize;
      WHLFInterfaceHelper.ImportDPDScanInfoFileADD(ChannelCodeAT,'AT14Single');
    END;

    [Test]
    PROCEDURE AT14_ImportDPDScanInfoADDMult@1000000098();
    BEGIN
      // Import DPD SCANINFO File and trigger ADD for multi-line Sales Order.
      Initialize;
      WHLFInterfaceHelper.ImportDPDScanInfoFileADD(ChannelCodeAT,'AT14Multi');
    END;

    [Test]
    PROCEDURE AT14_ImportDPDScanInfoFileSI@1000000096();
    BEGIN
      // Import DPD SCANINFO File and trigger Ship&Invoice.
      Initialize;
      WHLFInterfaceHelper.ImportDPDScanInfoFileShipInv(ChannelCodeAT,'AT14Single');
    END;

    [Test]
    PROCEDURE AT14_ImportDPDScanInfoSIMulti@1000000090();
    BEGIN
      // Import DPD SCANINFO File and trigger Ship&Invoice for multi-line Sales Order.
      Initialize;
      WHLFInterfaceHelper.ImportDPDScanInfoFileShipInv(ChannelCodeAT,'AT14Multi');
    END;

    [Test]
    PROCEDURE "----CH----"@1000000031();
    BEGIN
      // H3925  26.03.15  MM +++++++++++++++
      // All functions for CH
      // H3925  26.03.15  MM ---------------
    END;

    [Test]
    PROCEDURE CH14_LFInitInterface@1000000153();
    BEGIN
      // Trigger WHLF Interface, verify WHLF Sales Header.
      Initialize;
      WHLFInterfaceHelper.WHLFInitializeInterface(ChannelCodeCH,'CH14Single');
    END;

    [Test]
    PROCEDURE CH14_CheckChannel@1000000220();
    BEGIN
      // Check Channel against German.
      Initialize;
      WHLFInterfaceHelper.CheckChannel(ChannelCodeCH);
    END;

    [Test]
    PROCEDURE CH14_WHLFReserveSingleLine@1000000152();
    BEGIN
      // Check WHLF Reservation, KAD reserve.
      Initialize;
      WHLFInterfaceHelper.ReserveOrderLF(ChannelCodeCH,'CH14SingleVORK');
    END;

    [Test]
    PROCEDURE CH14_WHLFReserveMultiLine@1000000151();
    BEGIN
      // Check WHLF Reservation, KAD reserve for multi-line Sales Order.
      Initialize;
      WHLFInterfaceHelper.ReserveOrderLF(ChannelCodeCH,'CH14MultiVORK');
    END;

    [Test]
    PROCEDURE CH14_WHLFReserveUpdatePmt@1000000150();
    BEGIN
      // Check Update WHLF Interface after received Payment.
      Initialize;
      WHLFInterfaceHelper.ReserveOrderLFUpdPtm(ChannelCodeCH,'CH14SingleVORK');
    END;

    [Test]
    PROCEDURE CH14_CreateKADSingleLine@1000000149();
    BEGIN
      // Create KAD File for Single Line Order.
      Initialize;
      WHLFInterfaceHelper.CreateKADFile(ChannelCodeCH,'CH14Single');
    END;

    [Test]
    PROCEDURE CH14_CreateKADSingleLineRes@1000000148();
    BEGIN
      // Create KAD File for Single Line Order with Resource = Credit Bon.
      Initialize;
      WHLFInterfaceHelper.CreateKADFileResource(ChannelCodeCH,'CH14SingleVoucher');
    END;

    [Test]
    PROCEDURE CH14_CreateKADMultiLine@1000000147();
    BEGIN
      // Create KAD File for Multi-Line Order.
      Initialize;
      WHLFInterfaceHelper.CreateKADFile(ChannelCodeCH,'CH14Multi');
    END;

    [Test]
    PROCEDURE CH14_CreateKADMultiLineRes@1000000146();
    BEGIN
      // Create KAD File for Multi-Line Order with Resource = Credit Bon.
      Initialize;
      WHLFInterfaceHelper.CreateKADFileResource(ChannelCodeCH,'CH14MultiVoucher');
    END;

    [Test]
    PROCEDURE CH14_CancelNotPaidWHLFOrder@1000000145();
    BEGIN
      // Cancel WHLF Order without Payment after xx days.
      Initialize;
      WHLFInterfaceHelper.CancelReservation(ChannelCodeCH,'CH14SingleVORK');
    END;

    [Test]
    PROCEDURE CH14_CancelNotPaidMultLFOrder@1000000144();
    BEGIN
      // Cancel Multi-line WHLF Order without Payment after xx days.
      Initialize;
      WHLFInterfaceHelper.CancelReservation(ChannelCodeCH,'CH14MultiVORK');
    END;

    [Test]
    PROCEDURE CH14_ImportSTAFileStatus0@1000000143();
    BEGIN
      // Import WHLF STA File with Status 0.
      Initialize;
      WHLFInterfaceHelper.ImportSTAFileStatus0(ChannelCodeCH,'CH14Single');
    END;

    [Test]
    PROCEDURE CH14_ImportSTAFileStatus0Mult@1000000142();
    BEGIN
      // Import WHLF STA File with Status 0 (multi Line Order).
      Initialize;
      WHLFInterfaceHelper.ImportSTAFileStatus0(ChannelCodeCH,'CH14Multi');
    END;

    [Test]
    PROCEDURE CH14_ImportSTAFileStatus40@1000000154();
    BEGIN
      // Import WHLF STA File with Status 50.
      Initialize;
      WHLFInterfaceHelper.ImportSTAFileStatus40(ChannelCodeCH,'CH14Single');
    END;

    [Test]
    PROCEDURE CH14_ImportSTAFileStatus40Mul@1000000155();
    BEGIN
      // Import WHLF STA File with Status 50.
      Initialize;
      WHLFInterfaceHelper.ImportSTAFileStatus40(ChannelCodeCH,'CH14Multi');
    END;

    [Test]
    PROCEDURE CH14_ImportSTAFileStatus41@1000000141();
    BEGIN
      // Import WHLF STA File with Status 50.
      Initialize;
      WHLFInterfaceHelper.ImportSTAFileStatus41(ChannelCodeCH,'CH14Single');
    END;

    [Test]
    PROCEDURE CH14_ImportSTAFileStatus41Mul@1000000140();
    BEGIN
      // Import WHLF STA File with Status 50.
      Initialize;
      WHLFInterfaceHelper.ImportSTAFileStatus41(ChannelCodeCH,'CH14Multi');
    END;

    [Test]
    PROCEDURE CH14_ImportSTAFileToArchive@1000000139();
    BEGIN
      // Import WHLF Status to Archived SO.
      Initialize;
      WHLFInterfaceHelper.ImportSTAFileStatusToArchived(ChannelCodeCH,'CH14Single');
    END;

    [Test]
    PROCEDURE CH14_ShipSalesOrderWithJob@1000000138();
    BEGIN
      // Import WHLF STA File with Status 50 -> Ship SO.
      Initialize;
      WHLFInterfaceHelper.ShipSalesOrderWithJob(ChannelCodeCH,'CH14Single');
    END;

    [Test]
    PROCEDURE CH14_CancelWHLFInterface@1000000137();
    BEGIN
      // Check Cancelation of WHLF Interface.
      Initialize;
      WHLFInterfaceHelper.CancelWHLFInterface(ChannelCodeCH,'CH14Single');
    END;

    [Test]
    PROCEDURE CH14_CancelWHLFInterfaceMulti@1000000136();
    BEGIN
      // Check Cancelation of WHLF Interface.
      Initialize;
      WHLFInterfaceHelper.CancelWHLFInterface(ChannelCodeCH,'CH14Multi');
    END;

    [Test]
    [HandlerFunctions(MessageHandler)]
    PROCEDURE CH14_WHLFInterfaceToReturn@1000000135();
    BEGIN
      // Trigger WHLF Interface for Sales Return Order.
      Initialize;
      WHLFInterfaceHelper.WHLFInterfaceToReturn(ChannelCodeCH,'CH14Single');
    END;

    [Test]
    [HandlerFunctions(MessageHandler)]
    PROCEDURE CH14_WHLFInterfaceToChange@1000000134();
    BEGIN
      // Trigger WHLF Interface for Sales Follow On Order.
      Initialize;
      WHLFInterfaceHelper.WHLFInterfaceToChange(ChannelCodeCH,'CH14Single');
    END;

    [Test]
    PROCEDURE CH14_ChangeChannelToCH8@1000000133();
    BEGIN
      // Change Channel CH-14 -> CH-8.
      Initialize;
      WHLFInterfaceHelper.ChangeChannelCancelInterface(ChannelCodeCH,'CH-8','CH14Single');
    END;

    [Test]
    PROCEDURE CH14_ImportSTADPDTrackingCode@1000000132();
    BEGIN
      // Import STA File with DPD Tracking Code.
      Initialize;
      WHLFInterfaceHelper.ImportSTAFileTrackingCode(ChannelCodeCH,'CH14Single');
    END;

    [Test]
    PROCEDURE CH14_ImportSTADPDTrCodeMulti@1000000131();
    BEGIN
      // Import STA File with DPD Tracking Code for multi-line Sales Order.
      Initialize;
      WHLFInterfaceHelper.ImportSTAFileTrackingCode(ChannelCodeCH,'CH14Multi');
    END;

    [Test]
    PROCEDURE CH14_ImportDPDScanInfoFile@1000000130();
    BEGIN
      // Import DPD SCANINFO File.
      Initialize;
      WHLFInterfaceHelper.ImportDPDScanInfoFile(ChannelCodeCH,'CH14Single');
    END;

    [Test]
    PROCEDURE CH14_ImportDPDScanInfoMulti@1000000129();
    BEGIN
      // Import DPD SCANINFO File for multi-line Sales Order.
      Initialize;
      WHLFInterfaceHelper.ImportDPDScanInfoFile(ChannelCodeCH,'CH14Multi');
    END;

    [Test]
    PROCEDURE CH14_ImportDPDScanInfoFileADD@1000000128();
    BEGIN
      // Import DPD SCANINFO File and trigger ADD.
      Initialize;
      WHLFInterfaceHelper.ImportDPDScanInfoFileADD(ChannelCodeCH,'CH14Single');
    END;

    [Test]
    PROCEDURE CH14_ImportDPDScanInfoADDMult@1000000127();
    BEGIN
      // Import DPD SCANINFO File and trigger ADD for multi-line Sales Order.
      Initialize;
      WHLFInterfaceHelper.ImportDPDScanInfoFileADD(ChannelCodeCH,'CH14Multi');
    END;

    [Test]
    PROCEDURE CH14_ImportDPDScanInfoFileSI@1000000126();
    BEGIN
      // Import DPD SCANINFO File and trigger Ship&Invoice.
      Initialize;
      WHLFInterfaceHelper.ImportDPDScanInfoFileShipInv(ChannelCodeCH,'CH14Single');
    END;

    [Test]
    PROCEDURE CH14_ImportDPDScanInfoSIMulti@1000000089();
    BEGIN
      // Import DPD SCANINFO File and trigger Ship&Invoice for multi-line Sales Order.
      Initialize;
      WHLFInterfaceHelper.ImportDPDScanInfoFileShipInv(ChannelCodeCH,'CH14Multi');
    END;

    [Test]
    PROCEDURE "----BE----"@1000000038();
    BEGIN
      // H3925  26.03.15  MM +++++++++++++++
      // All functions for BE
      // H3925  26.03.15  MM ---------------
    END;

    [Test]
    PROCEDURE BE14_LFInitInterface@1000000184();
    BEGIN
      // Trigger WHLF Interface, verify WHLF Sales Header.
      Initialize;
      WHLFInterfaceHelper.WHLFInitializeInterface(ChannelCodeBE,'BE14Single');
    END;

    [Test]
    PROCEDURE BE14_CheckChannel@1000000221();
    BEGIN
      // Check Channel against German.
      Initialize;
      WHLFInterfaceHelper.CheckChannel(ChannelCodeBE);
    END;

    [Test]
    PROCEDURE BE14_WHLFReserveSingleLine@1000000183();
    BEGIN
      // Check WHLF Reservation, KAD reserve.
      Initialize;
      WHLFInterfaceHelper.ReserveOrderLF(ChannelCodeBE,'BE14SingleVORK');
    END;

    [Test]
    PROCEDURE BE14_WHLFReserveMultiLine@1000000182();
    BEGIN
      // Check WHLF Reservation, KAD reserve for multi-line Sales Order.
      Initialize;
      WHLFInterfaceHelper.ReserveOrderLF(ChannelCodeBE,'BE14MultiVORK');
    END;

    [Test]
    PROCEDURE BE14_WHLFReserveUpdatePmt@1000000181();
    BEGIN
      // Check Update WHLF Interface after received Payment.
      Initialize;
      WHLFInterfaceHelper.ReserveOrderLFUpdPtm(ChannelCodeBE,'BE14SingleVORK');
    END;

    [Test]
    PROCEDURE BE14_CreateKADSingleLine@1000000180();
    BEGIN
      // Create KAD File for Single Line Order.
      Initialize;
      WHLFInterfaceHelper.CreateKADFile(ChannelCodeBE,'BE14Single');
    END;

    [Test]
    PROCEDURE BE14_CreateKADSingleLineRes@1000000179();
    BEGIN
      // Create KAD File for Single Line Order with Resource = Credit Bon.
      Initialize;
      WHLFInterfaceHelper.CreateKADFileResource(ChannelCodeBE,'BE14SingleVoucher');
    END;

    [Test]
    PROCEDURE BE14_CreateKADMultiLine@1000000178();
    BEGIN
      // Create KAD File for Multi-Line Order.
      Initialize;
      WHLFInterfaceHelper.CreateKADFile(ChannelCodeBE,'BE14Multi');
    END;

    [Test]
    PROCEDURE BE14_CreateKADMultiLineRes@1000000177();
    BEGIN
      // Create KAD File for Multi-Line Order with Resource = Credit Bon.
      Initialize;
      WHLFInterfaceHelper.CreateKADFileResource(ChannelCodeBE,'BE14MultiVoucher');
    END;

    [Test]
    PROCEDURE BE14_CancelNotPaidWHLFOrder@1000000176();
    BEGIN
      // Cancel WHLF Order without Payment after xx days.
      Initialize;
      WHLFInterfaceHelper.CancelReservation(ChannelCodeBE,'BE14SingleVORK');
    END;

    [Test]
    PROCEDURE BE14_CancelNotPaidMultLFOrder@1000000175();
    BEGIN
      // Cancel Multi-line WHLF Order without Payment after xx days.
      Initialize;
      WHLFInterfaceHelper.CancelReservation(ChannelCodeBE,'BE14MultiVORK');
    END;

    [Test]
    PROCEDURE BE14_ImportSTAFileStatus0@1000000174();
    BEGIN
      // Import WHLF STA File with Status 0.
      Initialize;
      WHLFInterfaceHelper.ImportSTAFileStatus0(ChannelCodeBE,'BE14Single');
    END;

    [Test]
    PROCEDURE BE14_ImportSTAFileStatus0Mult@1000000173();
    BEGIN
      // Import WHLF STA File with Status 0 (multi Line Order).
      Initialize;
      WHLFInterfaceHelper.ImportSTAFileStatus0(ChannelCodeBE,'BE14Multi');
    END;

    [Test]
    PROCEDURE BE14_ImportSTAFileStatus41@1000000172();
    BEGIN
      // Import WHLF STA File with Status 50.
      Initialize;
      WHLFInterfaceHelper.ImportSTAFileStatus41(ChannelCodeBE,'BE14Single');
    END;

    [Test]
    PROCEDURE BE14_ImportSTAFileStatus41Mul@1000000171();
    BEGIN
      // Import WHLF STA File with Status 50.
      Initialize;
      WHLFInterfaceHelper.ImportSTAFileStatus41(ChannelCodeBE,'BE14Multi');
    END;

    [Test]
    PROCEDURE BE14_ImportSTAFileToArchive@1000000170();
    BEGIN
      // Import WHLF Status to Archived SO.
      Initialize;
      WHLFInterfaceHelper.ImportSTAFileStatusToArchived(ChannelCodeBE,'BE14Single');
    END;

    [Test]
    PROCEDURE BE14_ShipSalesOrderWithJob@1000000169();
    BEGIN
      // Import WHLF STA File with Status 50 -> Ship SO.
      Initialize;
      WHLFInterfaceHelper.ShipSalesOrderWithJob(ChannelCodeBE,'BE14Single');
    END;

    [Test]
    PROCEDURE BE14_CancelWHLFInterface@1000000168();
    BEGIN
      // Check Cancelation of WHLF Interface.
      Initialize;
      WHLFInterfaceHelper.CancelWHLFInterface(ChannelCodeBE,'BE14Single');
    END;

    [Test]
    PROCEDURE BE14_CancelWHLFInterfaceMulti@1000000167();
    BEGIN
      // Check Cancelation of WHLF Interface.
      Initialize;
      WHLFInterfaceHelper.CancelWHLFInterface(ChannelCodeBE,'BE14Multi');
    END;

    [Test]
    [HandlerFunctions(MessageHandler)]
    PROCEDURE BE14_WHLFInterfaceToReturn@1000000166();
    BEGIN
      // Trigger WHLF Interface for Sales Return Order.
      Initialize;
      WHLFInterfaceHelper.WHLFInterfaceToReturn(ChannelCodeBE,'BE14Single');
    END;

    [Test]
    [HandlerFunctions(MessageHandler)]
    PROCEDURE BE14_WHLFInterfaceToChange@1000000165();
    BEGIN
      // Trigger WHLF Interface for Sales Follow On Order.
      Initialize;
      WHLFInterfaceHelper.WHLFInterfaceToChange(ChannelCodeBE,'BE14Single');
    END;

    [Test]
    PROCEDURE BE14_ChangeChannelToBE7@1000000164();
    BEGIN
      // Change Channel BE-14 -> BE-7.
      Initialize;
      WHLFInterfaceHelper.ChangeChannelCancelInterface(ChannelCodeBE,'BE-7','BE14Single');
    END;

    [Test]
    PROCEDURE BE14_ImportSTADPDTrackingCode@1000000163();
    BEGIN
      // Import STA File with DPD Tracking Code.
      Initialize;
      WHLFInterfaceHelper.ImportSTAFileTrackingCode(ChannelCodeBE,'BE14Single');
    END;

    [Test]
    PROCEDURE BE14_ImportSTADPDTrCodeMulti@1000000162();
    BEGIN
      // Import STA File with DPD Tracking Code for multi-line Sales Order.
      Initialize;
      WHLFInterfaceHelper.ImportSTAFileTrackingCode(ChannelCodeBE,'BE14Multi');
    END;

    [Test]
    PROCEDURE BE14_ImportDPDScanInfoFile@1000000161();
    BEGIN
      // Import DPD SCANINFO File.
      Initialize;
      WHLFInterfaceHelper.ImportDPDScanInfoFile(ChannelCodeBE,'BE14Single');
    END;

    [Test]
    PROCEDURE BE14_ImportDPDScanInfoMulti@1000000160();
    BEGIN
      // Import DPD SCANINFO File for multi-line Sales Order.
      Initialize;
      WHLFInterfaceHelper.ImportDPDScanInfoFile(ChannelCodeBE,'BE14Multi');
    END;

    [Test]
    PROCEDURE BE14_ImportDPDScanInfoFileADD@1000000159();
    BEGIN
      // Import DPD SCANINFO File and trigger ADD.
      Initialize;
      WHLFInterfaceHelper.ImportDPDScanInfoFileADD(ChannelCodeBE,'BE14Single');
    END;

    [Test]
    PROCEDURE BE14_ImportDPDScanInfoADDMult@1000000158();
    BEGIN
      // Import DPD SCANINFO File and trigger ADD for multi-line Sales Order.
      Initialize;
      WHLFInterfaceHelper.ImportDPDScanInfoFileADD(ChannelCodeBE,'BE14Multi');
    END;

    [Test]
    PROCEDURE BE14_ImportDPDScanInfoFileSI@1000000157();
    BEGIN
      // Import DPD SCANINFO File and trigger Ship&Invoice.
      Initialize;
      WHLFInterfaceHelper.ImportDPDScanInfoFileShipInv(ChannelCodeBE,'BE14Single');
    END;

    [Test]
    PROCEDURE BE14_ImportDPDScanInfoSIMulti@1000000156();
    BEGIN
      // Import DPD SCANINFO File and trigger Ship&Invoice for multi-line Sales Order.
      Initialize;
      WHLFInterfaceHelper.ImportDPDScanInfoFileShipInv(ChannelCodeBE,'BE14Multi');
    END;

    [Test]
    PROCEDURE "----IT----"@1000000039();
    BEGIN
      // H3925  26.03.15  MM +++++++++++++++
      // All functions for IT
      // H3925  26.03.15  MM ---------------
    END;

    [Test]
    PROCEDURE IT14_LFInitInterface@1000000213();
    BEGIN
      // Trigger WHLF Interface, verify WHLF Sales Header.
      Initialize;
      WHLFInterfaceHelper.WHLFInitializeInterface(ChannelCodeIT,'IT14Single');
    END;

    [Test]
    PROCEDURE IT14_CheckChannel@1000000222();
    BEGIN
      // Check Channel against German.
      Initialize;
      WHLFInterfaceHelper.CheckChannel(ChannelCodeIT);
    END;

    [Test]
    PROCEDURE IT14_WHLFReserveSingleLine@1000000212();
    BEGIN
      // Check WHLF Reservation, KAD reserve.
      Initialize;
      WHLFInterfaceHelper.ReserveOrderLF(ChannelCodeIT,'IT14SingleVORK');
    END;

    [Test]
    PROCEDURE IT14_WHLFReserveMultiLine@1000000211();
    BEGIN
      // Check WHLF Reservation, KAD reserve for multi-line Sales Order.
      Initialize;
      WHLFInterfaceHelper.ReserveOrderLF(ChannelCodeIT,'IT14MultiVORK');
    END;

    [Test]
    PROCEDURE IT14_WHLFReserveUpdatePmt@1000000210();
    BEGIN
      // Check Update WHLF Interface after received Payment.
      Initialize;
      WHLFInterfaceHelper.ReserveOrderLFUpdPtm(ChannelCodeIT,'IT14SingleVORK');
    END;

    [Test]
    PROCEDURE IT14_CreateKADSingleLine@1000000209();
    BEGIN
      // Create KAD File for Single Line Order.
      Initialize;
      WHLFInterfaceHelper.CreateKADFile(ChannelCodeIT,'IT14Single');
    END;

    [Test]
    PROCEDURE IT14_CreateKADSingleLineRes@1000000208();
    BEGIN
      // Create KAD File for Single Line Order with Resource = Credit Bon.
      Initialize;
      WHLFInterfaceHelper.CreateKADFileResource(ChannelCodeIT,'IT14SingleVoucher');
    END;

    [Test]
    PROCEDURE IT14_CreateKADMultiLine@1000000207();
    BEGIN
      // Create KAD File for Multi-Line Order.
      Initialize;
      WHLFInterfaceHelper.CreateKADFile(ChannelCodeIT,'IT14Multi');
    END;

    [Test]
    PROCEDURE IT14_CreateKADMultiLineRes@1000000206();
    BEGIN
      // Create KAD File for Multi-Line Order with Resource = Credit Bon.
      Initialize;
      WHLFInterfaceHelper.CreateKADFileResource(ChannelCodeIT,'IT14MultiVoucher');
    END;

    [Test]
    PROCEDURE IT14_CancelNotPaidWHLFOrder@1000000205();
    BEGIN
      // Cancel WHLF Order without Payment after xx days.
      Initialize;
      WHLFInterfaceHelper.CancelReservation(ChannelCodeIT,'IT14SingleVORK');
    END;

    [Test]
    PROCEDURE IT14_CancelNotPaidMultLFOrder@1000000204();
    BEGIN
      // Cancel Multi-line WHLF Order without Payment after xx days.
      Initialize;
      WHLFInterfaceHelper.CancelReservation(ChannelCodeIT,'IT14MultiVORK');
    END;

    [Test]
    PROCEDURE IT14_ImportSTAFileStatus0@1000000203();
    BEGIN
      // Import WHLF STA File with Status 0.
      Initialize;
      WHLFInterfaceHelper.ImportSTAFileStatus0(ChannelCodeIT,'IT14Single');
    END;

    [Test]
    PROCEDURE IT14_ImportSTAFileStatus0Mult@1000000202();
    BEGIN
      // Import WHLF STA File with Status 0 (multi Line Order).
      Initialize;
      WHLFInterfaceHelper.ImportSTAFileStatus0(ChannelCodeIT,'IT14Multi');
    END;

    [Test]
    PROCEDURE IT14_ImportSTAFileStatus41@1000000201();
    BEGIN
      // Import WHLF STA File with Status 50.
      Initialize;
      WHLFInterfaceHelper.ImportSTAFileStatus41(ChannelCodeIT,'IT14Single');
    END;

    [Test]
    PROCEDURE IT14_ImportSTAFileStatus41Mul@1000000200();
    BEGIN
      // Import WHLF STA File with Status 50.
      Initialize;
      WHLFInterfaceHelper.ImportSTAFileStatus41(ChannelCodeIT,'IT14Multi');
    END;

    [Test]
    PROCEDURE IT14_ImportSTAFileToArchive@1000000199();
    BEGIN
      // Import WHLF Status to Archived SO.
      Initialize;
      WHLFInterfaceHelper.ImportSTAFileStatusToArchived(ChannelCodeIT,'IT14Single');
    END;

    [Test]
    PROCEDURE IT14_ShipSalesOrderWithJob@1000000198();
    BEGIN
      // Import WHLF STA File with Status 50 -> Ship SO.
      Initialize;
      WHLFInterfaceHelper.ShipSalesOrderWithJob(ChannelCodeIT,'IT14Single');
    END;

    [Test]
    PROCEDURE IT14_CancelWHLFInterface@1000000197();
    BEGIN
      // Check Cancelation of WHLF Interface.
      Initialize;
      WHLFInterfaceHelper.CancelWHLFInterface(ChannelCodeIT,'IT14Single');
    END;

    [Test]
    PROCEDURE IT14_CancelWHLFInterfaceMulti@1000000196();
    BEGIN
      // Check Cancelation of WHLF Interface.
      Initialize;
      WHLFInterfaceHelper.CancelWHLFInterface(ChannelCodeIT,'IT14Multi');
    END;

    [Test]
    [HandlerFunctions(MessageHandler)]
    PROCEDURE IT14_WHLFInterfaceToReturn@1000000195();
    BEGIN
      // Trigger WHLF Interface for Sales Return Order.
      Initialize;
      WHLFInterfaceHelper.WHLFInterfaceToReturn(ChannelCodeIT,'IT14Single');
    END;

    [Test]
    [HandlerFunctions(MessageHandler)]
    PROCEDURE IT14_WHLFInterfaceToChange@1000000194();
    BEGIN
      // Trigger WHLF Interface for Sales Follow On Order.
      Initialize;
      WHLFInterfaceHelper.WHLFInterfaceToChange(ChannelCodeIT,'IT14Single');
    END;

    [Test]
    PROCEDURE IT14_ChangeChannelToIT7@1000000193();
    BEGIN
      // Change Channel IT-14 -> IT-7.
      Initialize;
      WHLFInterfaceHelper.ChangeChannelCancelInterface(ChannelCodeIT,'IT-7','IT14Single');
    END;

    [Test]
    PROCEDURE IT14_ImportSTADPDTrackingCode@1000000192();
    BEGIN
      // Import STA File with DPD Tracking Code.
      Initialize;
      WHLFInterfaceHelper.ImportSTAFileTrackingCode(ChannelCodeIT,'IT14Single');
    END;

    [Test]
    PROCEDURE IT14_ImportSTADPDTrCodeMulti@1000000191();
    BEGIN
      // Import STA File with DPD Tracking Code for multi-line Sales Order.
      Initialize;
      WHLFInterfaceHelper.ImportSTAFileTrackingCode(ChannelCodeIT,'IT14Multi');
    END;

    [Test]
    PROCEDURE IT14_ImportDPDScanInfoFile@1000000190();
    BEGIN
      // Import DPD SCANINFO File.
      Initialize;
      WHLFInterfaceHelper.ImportDPDScanInfoFile(ChannelCodeIT,'IT14Single');
    END;

    [Test]
    PROCEDURE IT14_ImportDPDScanInfoMulti@1000000189();
    BEGIN
      // Import DPD SCANINFO File for multi-line Sales Order.
      Initialize;
      WHLFInterfaceHelper.ImportDPDScanInfoFile(ChannelCodeIT,'IT14Multi');
    END;

    [Test]
    PROCEDURE IT14_ImportDPDScanInfoFileADD@1000000188();
    BEGIN
      // Import DPD SCANINFO File and trigger ADD.
      Initialize;
      WHLFInterfaceHelper.ImportDPDScanInfoFileADD(ChannelCodeIT,'IT14Single');
    END;

    [Test]
    PROCEDURE IT14_ImportDPDScanInfoADDMult@1000000187();
    BEGIN
      // Import DPD SCANINFO File and trigger ADD for multi-line Sales Order.
      Initialize;
      WHLFInterfaceHelper.ImportDPDScanInfoFileADD(ChannelCodeIT,'IT14Multi');
    END;

    [Test]
    PROCEDURE IT14_ImportDPDScanInfoFileSI@1000000186();
    BEGIN
      // Import DPD SCANINFO File and trigger Ship&Invoice.
      Initialize;
      WHLFInterfaceHelper.ImportDPDScanInfoFileShipInv(ChannelCodeIT,'IT14Single');
    END;

    [Test]
    PROCEDURE IT14_ImportDPDScanInfoSIMulti@1000000185();
    BEGIN
      // Import DPD SCANINFO File and trigger Ship&Invoice for multi-line Sales Order.
      Initialize;
      WHLFInterfaceHelper.ImportDPDScanInfoFileShipInv(ChannelCodeIT,'IT14Multi');
    END;

    [MessageHandler]
    PROCEDURE MessageHandler@1000000030(Msg@1000000000 : Text[1024]);
    BEGIN
    END;

    BEGIN
    {
      +--------------------------------------------+
      |                                            |
      |                  Home24                    |
      |       Internal Customizing by NAV-Team     |
      |                                            |
      +--------------------------------------------+

      Project No. Date      Shortcut  Description
      _____________________________________________
      H1921       12.03.15  MM        Testing: Cover WHS LF
      H3925       26.03.15  MM        AutoTesting: Extend WHLF tests to all countries

      Test Cases:
      Name                                            Channel
      CheckWHLFSetup
      CheckChannel                                    FR,AT,NL,CH,BE,IT
      LFInitInterface                                 DE,FR,AT,NL,CH,BE,IT
      WHLFReserveSingleLine                           DE,FR,AT,CH,BE,IT
      WHLFReserveMultiLine                            DE,FR,AT,CH,BE,IT
      WHLFReserveUpdatePmt                            DE,FR,AT,CH,BE,IT
      CreateKADSingleLine                             DE,FR,AT,NL,CH,BE,IT
      CreateKADSingleLineRes                          DE,FR,AT,NL,CH,BE,IT
      CreateKADMultiLine                              DE,FR,AT,NL,CH,BE,IT
      CreateKADMultiLineRes                           DE,FR,AT,NL,CH,BE,IT
      CancelNotPaidWHLFOrder                          DE,FR,AT,CH,BE,IT
      CancelNotPaidMultLFOrder                        DE,FR,AT,CH,BE,IT
      ImportSTAFileStatus0                            DE,FR,AT,NL,CH,BE,IT
      ImportSTAFileStatus0Mult                        DE,FR,AT,NL,CH,BE,IT
      ImportSTAFileStatus40                           CH
      ImportSTAFileStatus41                           DE,FR,AT,NL,CH,BE,IT
      ImportSTAFileStatus41Mul                        DE,FR,AT,NL,CH,BE,IT
      ImportSTAFileToArchive                          DE,FR,AT,NL,CH,BE,IT
      ShipSalesOrderWithJob                           DE,FR,AT,NL,CH,BE,IT
      ImportDHLProactivFile                           DE
      ImportDHLProactivFileDLV                        DE
      ImportDHLProactivFileSI                         DE
      CancelWHLFInterface                             DE,FR,AT,NL,CH,BE,IT
      CancelWHLFInterfaceMulti                        DE,FR,AT,NL,CH,BE,IT
      WHLFInterfaceToReturn                           DE,FR,AT,NL,CH,BE,IT
      WHLFInterfaceToChange                           DE,FR,AT,NL,CH,BE,IT
      ChangeChannel                                   DE,FR,AT,NL,CH,BE,IT
      ImportSTADPDTrackingCode                        DE,FR,AT,NL,CH,BE,IT
      ImportDPDScanInfoFile                           DE,FR,AT,NL,CH,BE,IT
      ImportDPDScanInfoMulti                          DE,FR,AT,NL,CH,BE,IT
      ImportDPDScanInfoFileADD                        DE,FR,AT,NL,CH,BE,IT
      ImportDPDScanInfoADDMult                        DE,FR,AT,NL,CH,BE,IT
      ImportDPDScanInfoFileSI                         DE,FR,AT,NL,CH,BE,IT
      ImportDPDScanInfoSIMulti                        DE,FR,AT,NL,CH,BE,IT
    }
    END.
  }
}

