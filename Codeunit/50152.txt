OBJECT Codeunit 50152 RHD Sales Import Mgt.
{
  OBJECT-PROPERTIES
  {
    Date=27.03.14;
    Time=12:00:00;
    Modified=Yes;
    Version List=GOB,HME1100;
  }
  PROPERTIES
  {
    OnRun=BEGIN
            RHDSetup.GET;
            RHDSetup.TESTFIELD("Interface Code Post Code");
            RHDSetup.TESTFIELD("Interface Code STA");
            // ...

            CASE InterfaceCode OF
              RHDSetup."Interface Code Post Code": ImportPostCode(RecFile);   // POSTCODE
              RHDSetup."Interface Code STA": ImportSTA(RecFile);              // STA-IMPORT
            END;
          END;

  }
  CODE
  {
    VAR
      RecFile@1000000003 : Record 2000000022;
      RHDSetup@1000000004 : Record 50177;
      InterfaceCode@1000000000 : Code[10];
      Filename@1000000001 : Text[250];
      BoolNoImport@1000000002 : Boolean;

    PROCEDURE SetInterfaceCode@1000000000(ParInterfaceCode@1000000000 : Code[10]);
    BEGIN
      InterfaceCode := ParInterfaceCode;
    END;

    PROCEDURE SetRecFile@1000000006(ParRecFile@1000000000 : Record 2000000022);
    BEGIN
      RecFile := ParRecFile;
    END;

    LOCAL PROCEDURE ImportPostCode@1000000001(ImpFile@1000000008 : Record 2000000022);
    VAR
      FPCInterSetup@1000000000 : Record 50014;
      RHDPCMatrix@1000000001 : Record 50184;
      LocFile@1000000005 : File;
      vString@1000000006 : Text[1024];
      i@1000000007 : Integer;
      m@1000000004 : Integer;
    BEGIN
      FPCInterSetup.GET(RHDSetup."Interface Code Post Code");
      FPCInterSetup.TESTFIELD("Import Folder");
      FPCInterSetup.TESTFIELD("Archive Root Folder");

      IF STRPOS(UPPERCASE(ImpFile.Name),'PLZ') <> 0 THEN BEGIN
        SetFilename(ImpFile.Name);
        LocFile.TEXTMODE(TRUE);
        LocFile.WRITEMODE(FALSE);
        LocFile.OPEN(ImpFile.Path + ImpFile.Name);
        REPEAT   // fÅr jeden Datensatz in der gerade geîffneten Datei
          m += 1;
          LocFile.READ(vString);
          IF m > 1 THEN BEGIN
            IF (m = 2) AND (NOT RHDPCMatrix.GET(COPYSTR(vString,1,STRPOS(vString,';')-1))) THEN
              RHDPCMatrix.INIT;
            FOR i := 1 TO 17 DO BEGIN // 17 Felder
              CASE i OF
                1: RHDPCMatrix."Post Code" := COPYSTR(vString,1,STRPOS(vString,';')-1);
                2: RHDPCMatrix.Description := COPYSTR(vString,1,STRPOS(vString,';')-1);
                //H0888 20140221 DMA +++++++++++++++++++++++++++++++++++++++++++++++++++
                3: RHDPCMatrix."LSC II"    := COPYSTR(vString,1,STRPOS(vString,';')-1);
                //3: EVALUATE(RHDPCMatrix.LSC,COPYSTR(vString,1,STRPOS(vString,';')-1)); //OLD LINE
                //H0888 20140221 DMA +++++++++++++++++++++++++++++++++++++++++++++++++++
                4: EVALUATE(RHDPCMatrix."Monday From",COPYSTR(vString,1,STRPOS(vString,';')-1));
                5: EVALUATE(RHDPCMatrix."Monday To",COPYSTR(vString,1,STRPOS(vString,';')-1));
                6: EVALUATE(RHDPCMatrix."Tuesday From",COPYSTR(vString,1,STRPOS(vString,';')-1));
                7: EVALUATE(RHDPCMatrix."Tuesday To",COPYSTR(vString,1,STRPOS(vString,';')-1));
                8: EVALUATE(RHDPCMatrix."Wednesday From",COPYSTR(vString,1,STRPOS(vString,';')-1));
                9: EVALUATE(RHDPCMatrix."Wednesday To",COPYSTR(vString,1,STRPOS(vString,';')-1));
                10: EVALUATE(RHDPCMatrix."Thursday From",COPYSTR(vString,1,STRPOS(vString,';')-1));
                11: EVALUATE(RHDPCMatrix."Thursday To",COPYSTR(vString,1,STRPOS(vString,';')-1));
                12: EVALUATE(RHDPCMatrix."Friday From",COPYSTR(vString,1,STRPOS(vString,';')-1));
                13: EVALUATE(RHDPCMatrix."Friday To",COPYSTR(vString,1,STRPOS(vString,';')-1));
                14: EVALUATE(RHDPCMatrix."Saturday From",COPYSTR(vString,1,STRPOS(vString,';')-1));
                15: EVALUATE(RHDPCMatrix."Saturday To",COPYSTR(vString,1,STRPOS(vString,';')-1));
                16: EVALUATE(RHDPCMatrix."Sunday From",COPYSTR(vString,1,STRPOS(vString,';')-1));
                17: EVALUATE(RHDPCMatrix."Sunday To",COPYSTR(vString,1));
              END;
              IF STRPOS(vString,';') <> 0 THEN
                vString := COPYSTR(vString,STRPOS(vString,';') + 1);
            END;
            IF NOT RHDPCMatrix.INSERT THEN
              RHDPCMatrix.MODIFY;
          END;
        UNTIL LocFile.POS = LocFile.LEN;
        LocFile.CLOSE;
        COPY(ImpFile.Path + ImpFile.Name,FPCInterSetup."Archive Root Folder" + ImpFile.Name);
        ERASE(ImpFile.Path + ImpFile.Name);
      END ELSE
        SetNoImport; // Kein Fehler, wenn eine Datei mit anderem Namen nicht eingelesen wurde
    END;

    LOCAL PROCEDURE ImportSTA@1000000007(ImpFile@1000000000 : Record 2000000022);
    VAR
      FPCInterSetup@1000000006 : Record 50014;
      RHDSalesImport@1000000004 : Record 50183;
      LocFile@1000000005 : File;
      vString@1000000003 : Text[1024];
    BEGIN
      FPCInterSetup.GET(RHDSetup."Interface Code STA");
      FPCInterSetup.TESTFIELD("Import Folder");
      FPCInterSetup.TESTFIELD("Archive Root Folder");

      IF STRPOS(UPPERCASE(ImpFile.Name),'STA') <> 0 THEN BEGIN
        SetFilename(ImpFile.Name);
        LocFile.TEXTMODE(TRUE);
        LocFile.WRITEMODE(FALSE);
        LocFile.OPEN(ImpFile.Path + ImpFile.Name);
        REPEAT   // fÅr jeden Datensatz in der gerade geîffneten Datei
          LocFile.READ(vString);

          RHDSalesImport.INIT;
          RHDSalesImport."Entry No." := 0;
          RHDSalesImport."Import Timestamp" := CURRENTDATETIME;
          RHDSalesImport."Import Status" := RHDSalesImport."Import Status"::Unprocessed;
          RHDSalesImport."Record Type" := COPYSTR(vString,1,3);
          RHDSalesImport."Client Identifier" := COPYSTR(vString,4,4);
          RHDSalesImport."Customer Order No." := COPYSTR(vString,8,20);
          RHDSalesImport."Customer Order No. 2" := COPYSTR(vString,28,20);
          EVALUATE(RHDSalesImport."Transmission No.",COPYSTR(vString,48,10));
          EVALUATE(RHDSalesImport."Order Pos. No.",COPYSTR(vString,58,5));
          EVALUATE(RHDSalesImport."Order Type",COPYSTR(vString,63,3));
          RHDSalesImport."Item No." := COPYSTR(vString,66,30);
          EVALUATE(RHDSalesImport.Quantity,COPYSTR(vString,96,5));
          RHDSalesImport."Stock Type" := COPYSTR(vString,101,1);
          EVALUATE(RHDSalesImport."Order Status",COPYSTR(vString,102,2));
          RHDSalesImport."Order Date" := COPYSTR(vString,104,10);
          RHDSalesImport."Order Period From" := COPYSTR(vString,114,5);
          RHDSalesImport."Order Period To" := COPYSTR(vString,119,5);
          RHDSalesImport."Carry Out Date" := COPYSTR(vString,124,19);
          RHDSalesImport.Timestamp := COPYSTR(vString,143,19);
          //H0860 20140321 DMA +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
          IF (DELCHR(COPYSTR(vString,114,5), '=', ' ') <> '') AND (STRPOS(COPYSTR(vString,114,5), ':') > 0) THEN
            EVALUATE(RHDSalesImport."Delivery Time Slot-from", COPYSTR(vString,114,5));
          IF (DELCHR(COPYSTR(vString,119,5), '=', ' ') <> '') AND (STRPOS(COPYSTR(vString,119,5), ':') > 0) THEN
            EVALUATE(RHDSalesImport."Delivery Time Slot-to", COPYSTR(vString,119,5));
          //H0860 20140321 DMA -------------------------------------------------------------

          //H1100 20140430 DMA +++++++++++++++++++++++++++++
          RHDSalesImport.Filename := ImpFile.Name;
          //H1100 20140430 DMA -----------------------------
          RHDSalesImport.INSERT;
        UNTIL LocFile.POS = LocFile.LEN;
        LocFile.CLOSE;
        COPY(ImpFile.Path + ImpFile.Name,FPCInterSetup."Archive Root Folder" + ImpFile.Name);
        ERASE(ImpFile.Path + ImpFile.Name);
      END ELSE
        SetNoImport; // Kein Fehler, wenn eine Datei mit anderem Namen nicht eingelesen wurde
    END;

    LOCAL PROCEDURE SetFilename@1000000003(ParFilename@1000000000 : Text[250]);
    BEGIN
      // For "RHD Sales Log"
      Filename := ParFilename;
    END;

    PROCEDURE GetFilename@1000000002() : Text[250];
    BEGIN
      // For "RHD Sales Log"
      EXIT(Filename);
    END;

    PROCEDURE SetNoImport@1000000004();
    BEGIN
      // No Import = No Log
      BoolNoImport := TRUE;
    END;

    PROCEDURE GetNoImport@1000000005() : Boolean;
    BEGIN
      // No Import = No Log
      EXIT(BoolNoImport);
    END;

    BEGIN
    {
      +--------------------------------------------------+
      |                   ∏  Copyright                   |
      |       GOB Software & Systeme GmbH & Co. KG       |
      +--------------------------------------------------+
      |                      home24                      |
      +--------------------------------------------------+

      Project   Date        Consultant  Comment
      ------------------------------------------------------
      P1070     23.10.13    gob-rste    RHD Redesign
      +--------------------------------------------+
      |                                            |
      |                  Home24                    |
      |       Internal Customizing by NAV-Team     |
      |                                            |
      +--------------------------------------------+

      Project No. Date     Shortcut  Description
      _____________________________________________
      H0888       21.02.14  DMA      Filling new LSC II field instead of LSC because for foreign post codes this data is not numberic
      H0860       20140321    DMA      Import new fields (Auftragszeitraum von/bis)
      H1100       20140430    DMA      BUG: AssistEdit for WEA/WEM/KAD/STA without function, CODE CHANGE
    }
    END.
  }
}

