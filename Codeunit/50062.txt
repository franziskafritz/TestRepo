OBJECT Codeunit 50062 eBayNavCRpc2
{
  OBJECT-PROPERTIES
  {
    Date=14.08.12;
    Time=12:00:00;
    Version List=eBay1.07.03,DYN002;
  }
  PROPERTIES
  {
    OnRun=BEGIN
            insertCallCodeunit('CreateAccount', CODEUNIT::eBayNavCCreateAccount);
            insertCallCodeunit('GetAccount', CODEUNIT::eBayNavCGetAccount);
            insertCallCodeunit('GetAccountBalance', CODEUNIT::eBayNavCGetAccountBalance);
            insertCallCodeunit('UpdateAccount', CODEUNIT::eBayNavCUpdateAccount);
            insertCallCodeunit('CreateAddress', CODEUNIT::eBayNavCCreateAddress);
            insertCallCodeunit('UpdateAddress', CODEUNIT::eBayNavCUpdateAddress);
            insertCallCodeunit('DeleteAddress', CODEUNIT::eBayNavCDeleteAddress);
            insertCallCodeunit('GetAddressBook', CODEUNIT::eBayNavCGetAddressBook);
            insertCallCodeunit('GetItem', CODEUNIT::eBayNavCGetItem);
            insertCallCodeunit('ListAllItems', CODEUNIT::eBayNavCListAllItems);
            insertCallCodeunit('GetItemInventory', CODEUNIT::eBayNavCGetItemInventory);
            insertCallCodeunit('GetAllItemPrices', CODEUNIT::eBayNavCGetAllItemPrices);
            insertCallCodeunit('CreateDocument', CODEUNIT::eBayNavCCreateDocument);
            insertCallCodeunit('GetAllAttributeDefinitions', CODEUNIT::eBayNavCGetAllAttributeDefs);
            insertCallCodeunit('GetAllCategories', CODEUNIT::eBayNavCGetAllCategories);

            //CHR120511 +
            insertCallCodeunit('PaymentUpdate', CODEUNIT::"WebShop Stock Import");
            //CHR120511 -

            // BSE110803 T00222 +
            insertCallCodeunit('CreateMasterData', CODEUNIT::eBayNavCCreateMasterData);
            // BSE110803 T00222 -

            // BSE110524 T00149 +
            // insertCallCodeunit('GetAllTransactions', CODEUNIT::Codeunit5251555);
            // BSE110524 T00149 -

            insertCallCodeunit('ListAllDocuments', CODEUNIT::eBayNavCListAllDocuments);
            insertCallCodeunit('GetDocument', CODEUNIT::eBayNavCGetDocument);
            insertCallCodeunit('GetDocumentStatus', CODEUNIT::eBayNavCGetDocumentStatus);
            insertCallCodeunit('GetDocumentPdf', CODEUNIT::eBayNavCGetDocumentPdf);
            insertCallCodeunit('Ping', CODEUNIT::eBayNavCPingPong);

            // BS101213 +
            insertCallCodeunit('GetAccountCustomer', CODEUNIT::eBayNavCGetAccountCustomer);
            insertCallCodeunit('AcknowledgeDocument', CODEUNIT::eBayNavCAcknowledgeDocument);
            // BS101213 -

            // BSE110323 T00149 +
            insertCallCodeunit('ListAllEbayTransactions', CODEUNIT::eBayNavCListAllEbayTransaction);
            insertCallCodeunit('GetEbayTransaction', CODEUNIT::eBayNavCGetEbayTransaction);
            insertCallCodeunit('AcknowledgeEbayTransaction', CODEUNIT::eBayNavCAcknowledgeEbayTransac);
            // BSE110323 T00149 -
          END;

  }
  CODE
  {
    VAR
      SavedRequestXml@1119423000 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{88D96A05-F192-11D4-A65F-0040963251E5}:'Microsoft XML, v6.0'.DOMDocument60";
      SavedRequestRpcNode@1119423006 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF86-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMElement";
      SavedResponseXml@1119423001 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{88D96A05-F192-11D4-A65F-0040963251E5}:'Microsoft XML, v6.0'.DOMDocument60";
      SavedResponseRpcNode@1119423005 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF86-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMElement";
      SavedShopCode@1119423002 : Code[10];
      eBayNavCServer@1170000000 : Codeunit 50061;

    PROCEDURE DispatchRequest@1119423000(shopCode@1119423000 : Code[10];VAR requestXml@1119423001 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{88D96A05-F192-11D4-A65F-0040963251E5}:'Microsoft XML, v6.0'.DOMDocument60";VAR responseXml@1119423002 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{88D96A05-F192-11D4-A65F-0040963251E5}:'Microsoft XML, v6.0'.DOMDocument60") success : Boolean;
    VAR
      xmlUtil@1119423003 : Codeunit 5095995;
      bodyNode@1119423004 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF86-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMElement";
      rpcName@1119423032 : Text[1024];
      rootNode@1119423005 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF86-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMElement";
      requestRpcNode@1119423006 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF86-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMElement";
      responseRpcNode@1119423031 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF86-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMElement";
      eBayUtil@1119423030 : Codeunit 5095800;
      MISSING_BODY_NODE@1119423008 : TextConst 'DEU=Der Body Knoten konnte nicht gefunden werden.;ENU=Could not find the Body node.';
      MISSING_RPC_NODE@1119423009 : TextConst 'DEU=Es konnte kein RPC Knoten gefunden werden.;ENU=Could not find an RPC node.';
      UNKNOWN_RPC@1119423028 : TextConst 'DEU=Unbekannter RPC "%1".;ENU=Unknown RPC "%1".';
      INCOMING_RPC@1119423029 : TextConst 'DEU=Eingehender RPC "%1"...;ENU=Incoming RPC "%1"...';
      eBayNavCCallCodeunit@1119455000 : Record 5251549;
      eBayNavCLogBuffer@1119455002 : Codeunit 50063;
      eBayNavCDispatcher@1000000000 : Codeunit 50064;
    BEGIN
      // Verarbeitet einen Remote Procedure Call und routet den Request an die entsprechende Codeunit
      // durch. Gleichzeitig stellt sie die XML-Dokumente, den Shopcode und einen Protokollpuffer
      // zur VerfÅgung, auf welche die RPC-Codeunits zugreifen kînnen. Damit kînnen wir C/AL Fehler
      // abfangen, ohne dass der NAS abschmiert.

      // SingleInstance Fun!
      CLEARLASTERROR();

      eBayNavCLogBuffer.ClearBuffer();
      eBayNavCLogBuffer.SetShopCode(shopCode);

      SavedShopCode := '';

      CLEAR(SavedRequestXml);
      CLEAR(SavedResponseXml);
      CLEAR(SavedResponseRpcNode);

      rootNode := requestXml.documentElement;

      IF NOT xmlUtil.GetNode(rootNode, 'Body', bodyNode) THEN BEGIN
        // Der Body-Knoten unter Transfer/Body fehlt
        eBayNavCServer.Log(TRUE, MISSING_BODY_NODE);
        success := FALSE;
      END ELSE BEGIN
        requestRpcNode := bodyNode.firstChild;

        IF ISCLEAR(requestRpcNode) THEN BEGIN
          // Transfer/Body/ hat keinen Kindknoten
          eBayNavCServer.Log(TRUE, MISSING_RPC_NODE);
          success := FALSE;
        END ELSE BEGIN
          rpcName := eBayUtil.StringCutRight(requestRpcNode.tagName, STRLEN('Request'));

          IF NOT eBayNavCCallCodeunit.GET(rpcName) THEN BEGIN
            // Unbekannter RPC -> Fehler
            eBayNavCServer.Log(TRUE, STRSUBSTNO(UNKNOWN_RPC, rpcName));
            success := FALSE;
          END ELSE BEGIN
            eBayNavCServer.Log(FALSE, STRSUBSTNO(INCOMING_RPC, rpcName));

            createResponseXmlDocument(shopCode, rpcName, responseXml, responseRpcNode);

            SavedRequestXml := requestXml;
            SavedResponseXml := responseXml;
            SavedShopCode := shopCode;
            SavedResponseRpcNode := responseRpcNode;
            SavedRequestRpcNode := requestRpcNode;

            // COMMIT ist notwendig, da in der CODEUNIT.RUN()
            // eine eigene Transaktion gestartet werden muss
            eBayNavCDispatcher.SetData(rpcName, shopCode, SavedRequestRpcNode, SavedResponseRpcNode);
            COMMIT();

            //success := CODEUNIT.RUN(eBayNavCCallCodeunit."Codeunit No.");
            success := eBayNavCDispatcher.RUN();

            // Sollte die Codeunit of einen Fehler gelaufen sein,
            // schreiben wir diesen noch in das Protokoll.
            // Die eBayNavCServer wei· dann auch gleich, welche
            // Fehlernachricht an den Client gesendet werden soll
            // - nÑmlich die letzte.
            IF NOT success THEN BEGIN
              eBayNavCLogBuffer.Log(TRUE, GETLASTERRORTEXT());
            END;

            // Nun alle temporÑren ProtokolleintrÑge in
            // die echte Datenbank schreiben
            eBayNavCLogBuffer.CommitBuffer();
          END;
        END;
      END;
    END;

    LOCAL PROCEDURE createResponseXmlDocument@1119423004(shopCode@1119423004 : Code[10];rpcName@1119423002 : Text[1024];VAR responseXml@1119423000 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{88D96A05-F192-11D4-A65F-0040963251E5}:'Microsoft XML, v6.0'.DOMDocument60";VAR rpcBodyNode@1119423001 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF86-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMElement");
    VAR
      xmlUtil@1119423003 : Codeunit 5095995;
      bodyNode@1119423005 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF86-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMElement";
      rootNode@1119423006 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF86-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMElement";
      headerNode@1119423007 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF86-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMElement";
    BEGIN
      // Erstellt ein Antwort-XML Dokument fÅr RPCs im folgendem Stil:
      //
      // <?xml version="1.0" encoding="utf-8"?>
      // <Transfer xmls="http://schema.mp-gruppe.de/NAVconnect/Webshop/">
      //   <Header shopID="{shopCode}" object="RemoteProcedureCall" action="Response"/>
      //   <Body>
      //     <{rpcName}/>
      //   </Body>
      // </Transfer>

      responseXml.loadXML('<?xml version="1.0" encoding="utf-8"?><Transfer xmls="http://schema.mp-gruppe.de/NAVconnect/Webshop/"/>');
      rootNode := responseXml.documentElement;

      xmlUtil.AddNode(rootNode, 'Header', headerNode);
      xmlUtil.AddAttributeText('shopID', shopCode);
      xmlUtil.AddAttributeText('object', 'RemoteProcedureCall');
      xmlUtil.AddAttributeText('action', 'Response');
      xmlUtil.AddNode(rootNode, 'Body', bodyNode);
      xmlUtil.AddNode(bodyNode, rpcName + 'Response', rpcBodyNode);
    END;

    PROCEDURE GetRequestXml@1119423001(VAR requestXml@1119423000 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{88D96A05-F192-11D4-A65F-0040963251E5}:'Microsoft XML, v6.0'.DOMDocument60");
    BEGIN
      // Kann von den RPC-Codeunits aufgerufen werden, um an das Request XML-Dokument
      // zu gelangen. Ist in der Regel nicht notwendig, da der Body- bzw. RPC-Knoten
      // an die RPC-Codeunits weitergegeben wird
      requestXml := SavedRequestXml;
    END;

    PROCEDURE GetRequestRpcNode@1119423006(VAR node@1119423000 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF86-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMElement");
    BEGIN
      node := SavedRequestRpcNode;
    END;

    PROCEDURE GetResponseXml@1119423002(VAR responseXml@1119423000 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{88D96A05-F192-11D4-A65F-0040963251E5}:'Microsoft XML, v6.0'.DOMDocument60");
    BEGIN
      responseXml := SavedResponseXml;
    END;

    PROCEDURE GetResponseRpcNode@1119423008(VAR node@1119423000 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF86-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMElement");
    BEGIN
      node := SavedResponseRpcNode;
    END;

    PROCEDURE GetShopCode@1119423003() shopCode : Code[10];
    BEGIN
      EXIT(SavedShopCode);
    END;

    LOCAL PROCEDURE insertCallCodeunit@1119455000(callName@1119455000 : Text[250];codeunitNo@1119455001 : Integer);
    VAR
      eBayNavCCallCodeunit@1119455002 : Record 5251549;
    BEGIN
      // Erstellt eine neue eBayNavCCallCodeunit, falls noch nicht vorhanden

      IF NOT eBayNavCCallCodeunit.GET(callName) THEN BEGIN
        eBayNavCCallCodeunit.INIT();
        eBayNavCCallCodeunit."Call Name" := callName;
        eBayNavCCallCodeunit."Codeunit No." := codeunitNo;
        eBayNavCCallCodeunit.INSERT(TRUE);
      END;
    END;

    PROCEDURE setSource@1170000000(sType@1170000000 : Integer;sNo@1170000001 : Code[20]);
    BEGIN
      // CHR070512 +
      eBayNavCServer.setSource(sType,sNo);
      // CHR070512 -
    END;

    EVENT SavedRequestXml@1119423000::ondataavailable@198();
    BEGIN
    END;

    EVENT SavedRequestXml@1119423000::onreadystatechange@-609();
    BEGIN
    END;

    EVENT SavedResponseXml@1119423001::ondataavailable@198();
    BEGIN
    END;

    EVENT SavedResponseXml@1119423001::onreadystatechange@-609();
    BEGIN
    END;

    BEGIN
    {
      BS101213 - Neue Call Codeunits
      BSE110209 T00111 - Captions, Textkonstanten und Co. Åberarbeitet
      BSE110323 T00149 - Neue Call Codeunits fÅr das eBay Checkout
      BSE110524 T00149 - GetAllTransactions auskommentiert. Codeunit wird nicht verwendet und ist frei.
      BSE110803 T00222 - CreateMasterData in CallListe aufgenommen
      CHR120511        - CreatePayment

      DYNY002 14.08.12 chrmu   new nav connector via webservice
    }
    END.
  }
}

