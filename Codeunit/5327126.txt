OBJECT Codeunit 5327126 ACF Management
{
  OBJECT-PROPERTIES
  {
    Date=04.04.13;
    Time=00:00:00;
    Version List=ACF3.02.03;
  }
  PROPERTIES
  {
    SingleInstance=Yes;
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      WDUserInteraction@1000000000 : Codeunit 5327152;
      Toolbox@1000000004 : Codeunit 5327123;
      Interface@1000000003 : Codeunit 5327145;
      SavedCurrFieldNo@1000000001 : Integer;
      SavedxRec@1000000002 : RecordRef;

    PROCEDURE CONFIRM@1000000000(DialogText@1000000000 : Text[1024];DefaultValue@1000000001 : Boolean) : Boolean;
    BEGIN
      EXIT(WDUserInteraction.""(DialogText,DefaultValue));
    END;

    PROCEDURE CONFIRM1@1000000044(DialogText@1000000000 : Text[1024];DefaultValue@1000000001 : Boolean;Parameter1@1000000012 : Variant) : Boolean;
    BEGIN
      EXIT(WDUserInteraction.""(
        STRSUBSTNO(DialogText,Parameter1),
        DefaultValue));
    END;

    PROCEDURE CONFIRM2@1000000043(DialogText@1000000000 : Text[1024];DefaultValue@1000000001 : Boolean;Parameter1@1000000012 : Variant;Parameter2@1000000011 : Variant) : Boolean;
    BEGIN
      EXIT(WDUserInteraction.""(
        STRSUBSTNO(DialogText,Parameter1,Parameter2),
        DefaultValue));
    END;

    PROCEDURE CONFIRM3@1000000042(DialogText@1000000000 : Text[1024];DefaultValue@1000000001 : Boolean;Parameter1@1000000012 : Variant;Parameter2@1000000011 : Variant;Parameter3@1000000010 : Variant) : Boolean;
    BEGIN
      EXIT(WDUserInteraction.""(
        STRSUBSTNO(DialogText,Parameter1,Parameter2,Parameter3),
        DefaultValue));
    END;

    PROCEDURE CONFIRM4@1000000041(DialogText@1000000000 : Text[1024];DefaultValue@1000000001 : Boolean;Parameter1@1000000012 : Variant;Parameter2@1000000011 : Variant;Parameter3@1000000010 : Variant;Parameter4@1000000009 : Variant) : Boolean;
    BEGIN
      EXIT(WDUserInteraction.""(
        STRSUBSTNO(DialogText,Parameter1,Parameter2,Parameter3,Parameter4),
        DefaultValue));
    END;

    PROCEDURE CONFIRM5@1000000040(DialogText@1000000000 : Text[1024];DefaultValue@1000000001 : Boolean;Parameter1@1000000012 : Variant;Parameter2@1000000011 : Variant;Parameter3@1000000010 : Variant;Parameter4@1000000009 : Variant;Parameter5@1000000008 : Variant) : Boolean;
    BEGIN
      EXIT(WDUserInteraction.""(
        STRSUBSTNO(DialogText,Parameter1,Parameter2,Parameter3,Parameter4,Parameter5),
        DefaultValue));
    END;

    PROCEDURE CONFIRM6@1000000039(DialogText@1000000000 : Text[1024];DefaultValue@1000000001 : Boolean;Parameter1@1000000012 : Variant;Parameter2@1000000011 : Variant;Parameter3@1000000010 : Variant;Parameter4@1000000009 : Variant;Parameter5@1000000008 : Variant;Parameter6@1000000007 : Variant) : Boolean;
    BEGIN
      EXIT(WDUserInteraction.""(
        STRSUBSTNO(DialogText,Parameter1,Parameter2,Parameter3,Parameter4,Parameter5,Parameter6),
        DefaultValue));
    END;

    PROCEDURE CONFIRM7@1000000038(DialogText@1000000000 : Text[1024];DefaultValue@1000000001 : Boolean;Parameter1@1000000012 : Variant;Parameter2@1000000011 : Variant;Parameter3@1000000010 : Variant;Parameter4@1000000009 : Variant;Parameter5@1000000008 : Variant;Parameter6@1000000007 : Variant;Parameter7@1000000005 : Variant) : Boolean;
    BEGIN
      EXIT(WDUserInteraction.""(
        STRSUBSTNO(DialogText,Parameter1,Parameter2,Parameter3,Parameter4,Parameter5,Parameter6,Parameter7),
        DefaultValue));
    END;

    PROCEDURE CONFIRM8@1000000037(DialogText@1000000000 : Text[1024];DefaultValue@1000000001 : Boolean;Parameter1@1000000012 : Variant;Parameter2@1000000011 : Variant;Parameter3@1000000010 : Variant;Parameter4@1000000009 : Variant;Parameter5@1000000008 : Variant;Parameter6@1000000007 : Variant;Parameter7@1000000005 : Variant;Parameter8@1000000004 : Variant) : Boolean;
    BEGIN
      EXIT(WDUserInteraction.""(
        STRSUBSTNO(DialogText,Parameter1,Parameter2,Parameter3,Parameter4,Parameter5,Parameter6,Parameter7,Parameter8),
        DefaultValue));
    END;

    PROCEDURE CONFIRM9@1000000036(DialogText@1000000000 : Text[1024];DefaultValue@1000000001 : Boolean;Parameter1@1000000012 : Variant;Parameter2@1000000011 : Variant;Parameter3@1000000010 : Variant;Parameter4@1000000009 : Variant;Parameter5@1000000008 : Variant;Parameter6@1000000007 : Variant;Parameter7@1000000005 : Variant;Parameter8@1000000004 : Variant;Parameter9@1000000003 : Variant) : Boolean;
    BEGIN
      EXIT(WDUserInteraction.""(
        STRSUBSTNO(DialogText,Parameter1,Parameter2,Parameter3,Parameter4,Parameter5,Parameter6,Parameter7,Parameter8,Parameter9),
        DefaultValue));
    END;

    PROCEDURE CONFIRM10@1000000021(DialogText@1000000000 : Text[1024];DefaultValue@1000000001 : Boolean;Parameter1@1000000012 : Variant;Parameter2@1000000011 : Variant;Parameter3@1000000010 : Variant;Parameter4@1000000009 : Variant;Parameter5@1000000008 : Variant;Parameter6@1000000007 : Variant;Parameter7@1000000005 : Variant;Parameter8@1000000004 : Variant;Parameter9@1000000003 : Variant;Parameter10@1000000002 : Variant) : Boolean;
    BEGIN
      EXIT(WDUserInteraction.""(
        STRSUBSTNO(DialogText,Parameter1,Parameter2,Parameter3,Parameter4,Parameter5,Parameter6,Parameter7,Parameter8,Parameter9,
        Parameter10),
        DefaultValue));
    END;

    PROCEDURE MESSAGE@1000000005(DialogText@1000000000 : Text[1024]);
    BEGIN
      WDUserInteraction.""(DialogText);
    END;

    PROCEDURE MESSAGE1@1000000017(DialogText@1000000000 : Text[1024];Parameter1@1000000001 : Variant);
    BEGIN
      WDUserInteraction.""(STRSUBSTNO(DialogText,Parameter1));
    END;

    PROCEDURE MESSAGE2@1000000019(DialogText@1000000000 : Text[1024];Parameter1@1000000001 : Variant;Parameter2@1000000002 : Variant);
    BEGIN
      WDUserInteraction.""(STRSUBSTNO(DialogText,Parameter1,Parameter2));
    END;

    PROCEDURE MESSAGE3@1000000033(DialogText@1000000000 : Text[1024];Parameter1@1000000001 : Variant;Parameter2@1000000002 : Variant;Parameter3@1000000003 : Variant);
    BEGIN
      WDUserInteraction.""(STRSUBSTNO(DialogText,Parameter1,Parameter2,Parameter3));
    END;

    PROCEDURE MESSAGE4@1000000032(DialogText@1000000000 : Text[1024];Parameter1@1000000001 : Variant;Parameter2@1000000002 : Variant;Parameter3@1000000003 : Variant;Parameter4@1000000004 : Variant);
    BEGIN
      WDUserInteraction.""(STRSUBSTNO(DialogText,Parameter1,Parameter2,Parameter3,Parameter4));
    END;

    PROCEDURE MESSAGE5@1000000030(DialogText@1000000000 : Text[1024];Parameter1@1000000001 : Variant;Parameter2@1000000002 : Variant;Parameter3@1000000003 : Variant;Parameter4@1000000004 : Variant;Parameter5@1000000005 : Variant);
    BEGIN
      WDUserInteraction.""(STRSUBSTNO(DialogText,Parameter1,Parameter2,Parameter3,Parameter4,Parameter5));
    END;

    PROCEDURE MESSAGE6@1000000029(DialogText@1000000000 : Text[1024];Parameter1@1000000001 : Variant;Parameter2@1000000002 : Variant;Parameter3@1000000003 : Variant;Parameter4@1000000004 : Variant;Parameter5@1000000005 : Variant;Parameter6@1000000007 : Variant);
    BEGIN
      WDUserInteraction.""(STRSUBSTNO(DialogText,Parameter1,Parameter2,Parameter3,Parameter4,Parameter5,Parameter6));
    END;

    PROCEDURE MESSAGE7@1000000028(DialogText@1000000000 : Text[1024];Parameter1@1000000001 : Variant;Parameter2@1000000002 : Variant;Parameter3@1000000003 : Variant;Parameter4@1000000004 : Variant;Parameter5@1000000005 : Variant;Parameter6@1000000007 : Variant;Parameter7@1000000008 : Variant);
    BEGIN
      WDUserInteraction.""(STRSUBSTNO(DialogText,Parameter1,Parameter2,Parameter3,Parameter4,Parameter5,Parameter6,
        Parameter7));
    END;

    PROCEDURE MESSAGE8@1000000027(DialogText@1000000000 : Text[1024];Parameter1@1000000001 : Variant;Parameter2@1000000002 : Variant;Parameter3@1000000003 : Variant;Parameter4@1000000004 : Variant;Parameter5@1000000005 : Variant;Parameter6@1000000007 : Variant;Parameter7@1000000008 : Variant;Parameter8@1000000009 : Variant);
    BEGIN
      WDUserInteraction.""(STRSUBSTNO(DialogText,Parameter1,Parameter2,Parameter3,Parameter4,Parameter5,Parameter6,
        Parameter7,Parameter8));
    END;

    PROCEDURE MESSAGE9@1000000020(DialogText@1000000000 : Text[1024];Parameter1@1000000001 : Variant;Parameter2@1000000002 : Variant;Parameter3@1000000003 : Variant;Parameter4@1000000004 : Variant;Parameter5@1000000005 : Variant;Parameter6@1000000007 : Variant;Parameter7@1000000008 : Variant;Parameter8@1000000009 : Variant;Parameter9@1000000010 : Variant);
    BEGIN
      WDUserInteraction.""(STRSUBSTNO(DialogText,Parameter1,Parameter2,Parameter3,Parameter4,Parameter5,Parameter6,
        Parameter7,Parameter8,Parameter9));
    END;

    PROCEDURE MESSAGE10@1000000022(DialogText@1000000000 : Text[1024];Parameter1@1000000001 : Variant;Parameter2@1000000002 : Variant;Parameter3@1000000003 : Variant;Parameter4@1000000004 : Variant;Parameter5@1000000005 : Variant;Parameter6@1000000007 : Variant;Parameter7@1000000008 : Variant;Parameter8@1000000009 : Variant;Parameter9@1000000010 : Variant;Parameter10@1000000011 : Variant);
    BEGIN
      WDUserInteraction.""(STRSUBSTNO(DialogText,Parameter1,Parameter2,Parameter3,Parameter4,Parameter5,Parameter6,
        Parameter7,Parameter8,Parameter9,Parameter10));
    END;

    PROCEDURE STRMENU@1000000001(DialogText@1000000008 : Text[1024];DefaultNumber@1000000007 : Integer;Instruction@1000000000 : Text[1024]) OptionNumber : Integer;
    VAR
      i@1000000001 : Integer;
      EntryNo@1000000002 : Integer;
      DialogValue@1000000003 : Text[250];
      WebDeskConfirm@1000000005 : Codeunit 5327180;
      SessionID@1000000006 : Text[64];
    BEGIN
      OptionNumber := WDUserInteraction.""(DialogText,DefaultNumber,Instruction);
    END;

    PROCEDURE DIALOGOPEN@1000000046(NAVInternalProgressText@1000000002 : Text[250]);
    BEGIN
      // Opens a progress dialog
      // NAVInternalProgressText examples: 'Value1: #1#######', 'Percentage 2: @2@@@@@@@@@@'
      WDUserInteraction.""(NAVInternalProgressText);
    END;

    PROCEDURE DIALOGUPDATE@1000000047(UpdateNumber@1000000000 : Integer;ProgressValue@1000000001 : Variant);
    BEGIN
      // Updates the dialog values
      WDUserInteraction.""(UpdateNumber, ProgressValue);
    END;

    PROCEDURE DIALOGCLOSE@1000000048();
    BEGIN
      // Closes the dialog
      WDUserInteraction.""();
    END;

    PROCEDURE HYPERLINK@1000000052(URL@1000000000 : Text[250]);
    BEGIN
      OpenURL(URL,COPYSTR(URL,1,50),FALSE,0,0);
    END;

    PROCEDURE OpenURL@1000000050(URL@1000000001 : Text[1024];Title@1000000005 : Text[50];RunModal@1000000000 : Boolean;Width@1000000003 : Integer;Height@1000000002 : Integer);
    VAR
      TransformedBool@1000000004 : Integer;
    BEGIN
      // Opens the given URL in an internal window
      WDUserInteraction.""(URL,'',Title,RunModal,Width, Height,0);
    END;

    PROCEDURE OpenURLExtended@1000000056(URL@1000000004 : Text[1024];URLExtended@1000000005 : Text[1024];Title@1000000003 : Text[50];RunModal@1000000002 : Boolean;Width@1000000001 : Integer;Height@1000000000 : Integer;Target@1000000006 : 'internal window,new window with defined size without navigation,new window with defined size with navigation,new window fullscreen without navigation,new window fullscreen with navigation');
    BEGIN
      // Use for URLs longer than 1024 characters
      // Target values:
      // 0 internal window (default for HYPERLINK and OpenURL)
      // 1 new window with defined size without navigation
      // 2 new window with defined size with navigation
      // 3 new window fullscreen without navigation
      // 4 new window fullscreen with navigation

      WDUserInteraction.""(URL,URLExtended,Title,RunModal,Width, Height,Target);
    END;

    PROCEDURE OpenGoogleMaps@1000000058(Address@1000000001 : Text[250];AddressMarkerTitle@1000000007 : Text[50];WindowTitle@1000000005 : Text[50];WebPageRunModal@1000000000 : Boolean;Width@1000000003 : Integer;Height@1000000002 : Integer);
    VAR
      AnveoAutomation@1000000006 : Automation "{8019F2D6-F98D-45FC-A61A-C540940279D2} 1.0:{56E38355-9EFF-4E0C-9901-B3A1B20A4D4F}:'AnveoAutomation'.AnveoAutomation";
      TransformedBool@1000000004 : Integer;
    BEGIN
      // Address example: '4 Yawkey Way, Boston, MA, 02215-3409, USA'
      // AddressMarker example: 'Fenway Park'
      WDUserInteraction.""(Address,AddressMarkerTitle,WindowTitle,WebPageRunModal,Width,Height);
    END;

    PROCEDURE OpenWebPage@1000000004(WebPageCode@1000000001 : Code[20];WebPageRunModal@1000000003 : Boolean;SrcRecRef@1000000002 : RecordRef;RelationCode@1000000004 : Code[20]);
    BEGIN
      // SrcRecRef is source record. It contains a record, but no filters to destination.
      // Filter is defined by RelationCode.
      WDUserInteraction.""(WebPageCode,WebPageRunModal,SrcRecRef,RelationCode);
    END;

    PROCEDURE OpenWebPageNewRec@1000000012(WebPageCode@1000000000 : Code[20];WebPageRunModal@1000000004 : Boolean;SrcRecRef@1000000002 : RecordRef;RelationCode@1000000001 : Code[20]);
    BEGIN
      // Opens the given Web Page and creates a new record in the table this Web Page is based on
      WDUserInteraction.""(WebPageCode,WebPageRunModal,SrcRecRef,RelationCode);
    END;

    PROCEDURE OpenSignatureWebPage@5326064(WindowTitle@1000000005 : Text[50];SignatureFieldWidth@5326066 : Integer;SignatureFieldHeight@5326065 : Integer;InfoFieldHeight@5326064 : Integer;SaveButtonText@5326063 : Text[30];ClearButtonText@5326062 : Text[30]);
    VAR
      TransformedBool@1000000004 : Integer;
    BEGIN
      // Opens the Signature Page for Mobile
      WDUserInteraction.""(WindowTitle, SignatureFieldWidth, SignatureFieldHeight, InfoFieldHeight,
        SaveButtonText, ClearButtonText);
    END;

    PROCEDURE CloseWebPage@1000000011();
    BEGIN
      // Closes current Web Page
      WDUserInteraction.""();
    END;

    PROCEDURE WebPageNewRec@1000000010(RecRef@1000000001 : RecordRef;FunctionCode@1000000000 : Code[20]);
    BEGIN
      // Creates a new record in the current Web Page
      // Parameters are currently NOT used (will be used in future releases)
      WDUserInteraction.""(RecRef,FunctionCode);
    END;

    PROCEDURE ReloadWebPage@1000000024();
    BEGIN
      //Reloads current Web Page
      WDUserInteraction.""();
    END;

    PROCEDURE ReloadWebPagesTableNo@1000000034(TableNo@1000000000 : Integer;RefreshRange@1000000001 : 'Card,List,All');
    BEGIN
      // Reloads all Web Page Elements with the given Table No. and in the given refresh range
      WDUserInteraction.""(TableNo,RefreshRange);
    END;

    PROCEDURE WebPageChangeRec@5326072(RecRef@5326062 : RecordRef);
    BEGIN
      // Changes the record on the current WebPage to the Record provided by RecRef
      WDUserInteraction.""(RecRef);
    END;

    PROCEDURE WebPageNextRec@5326071(VAR RecRef@5326062 : RecordRef;Steps@5326063 : Integer);
    BEGIN
      // Finds the record that is <Steps> away and sets it to the current WebPage

      IF GetNextRec(RecRef, Steps) <> 0 THEN
        WebPageChangeRec(RecRef);
    END;

    PROCEDURE GetWebPageFilters@5326062(WebPageElement@5326063 : Record 5327101;VAR RecRef@5326062 : RecordRef);
    BEGIN
      // RecRef returns with all filters set that were set by the Anveo user to the given Web Page Element
      WDUserInteraction.""(WebPageElement, RecRef);
    END;

    PROCEDURE OpenFileDownloadDialogWin@1000000018(FileName@1000000000 : Text[1024];DeleteAfterTransfer@1000000001 : Boolean);
    BEGIN
      // Offers file found under FileName for download
      // DeleteAfterTransfer decides if the file will be deleted on the server
      WDUserInteraction.""(FileName,DeleteAfterTransfer,FALSE);
    END;

    PROCEDURE OpenFileDownloadDialogWinSave@1000000057(FileName@1000000000 : Text[1024];DeleteAfterTransfer@1000000001 : Boolean;SaveFile@1000000002 : Boolean);
    BEGIN
      // Offers file found under FileName for download
      // DeleteAfterTransfer decides if the file will be deleted on the server
      // SaveFile decides if the user gets a "Save File" dialog
      WDUserInteraction.""(FileName,DeleteAfterTransfer,SaveFile);
    END;

    PROCEDURE OpenFileUploadDialogWin@1000000023(VAR UploadedFileName@1000000000 : Text[1024]) : Integer;
    BEGIN
      // UploadedFileName will be set to the uploaded file after function is executed
      // Return Value = 0: Cancelled by user / No file selected
      // Return Value = 1: Upload successful
      // Return Value = 2: Upload failed
      EXIT(WDUserInteraction.""(UploadedFileName));
    END;

    PROCEDURE GetSignature@5326069() SignatureFileName : Text[250];
    BEGIN
      // Returns the filename of the uploaded Signature png file
      SignatureFileName := WDUserInteraction.""();
    END;

    PROCEDURE SaveSignatureToField@5326068(VAR FldRef@5326062 : FieldRef);
    BEGIN
      // Saves the signature png file to the given BLOB FldRef
      // !! MODIFY is not called on the RecordRef. This has to be done in the code calling this function !!
      WDUserInteraction.""(FldRef);
    END;

    PROCEDURE KillAllProcesses@1000000003(SessionID@1000000000 : Text[64];EntryNo@1000000001 : Integer);
    BEGIN
      // Used internally
      WDUserInteraction.""(SessionID,EntryNo);
    END;

    PROCEDURE DeleteWebPageFromStore@1000000006(WDWebPage@1000000000 : Record 5327100);
    BEGIN
      // Used internally
      WDUserInteraction.""(WDWebPage);
    END;

    PROCEDURE GetSessionID@1000000009() SessionID : Text[64];
    BEGIN
      // Used internally
      SessionID := WDUserInteraction.""();
    END;

    PROCEDURE GetACFUserOrUSERID@1000000002() : Code[50];
    BEGIN
      // Returns ACF User ID, if exists. Otherwise returns USERID
      EXIT(WDUserInteraction.""(TRUE));
    END;

    PROCEDURE GetACFUser@1000000008() ACFUserID : Code[20];
    BEGIN
      // Returns ACF User ID, if exists. Otherwise returns empty string.
      EXIT(WDUserInteraction.""(FALSE));
    END;

    PROCEDURE IsACF@1000000013() IsWebDeskEnvironment : Boolean;
    BEGIN
      // Returns true, if it is Anveo Client Framework Environment.
      EXIT(GetACFUser<>'');
    END;

    PROCEDURE IsMobile@1000000068() Value : Boolean;
    VAR
      WebUser@1000000000 : Record 5327140;
    BEGIN
      // Returns TRUE when called from Anveo Mobile session, FALSE otherwise
      IF WebUser.GET(GetACFUser) THEN BEGIN
        CASE WebUser."Web Client GUI" OF
          WebUser."Web Client GUI"::"Classic Browser GUI": Value := FALSE;
          WebUser."Web Client GUI"::"Phone GUI": Value := TRUE;
        END;
      END;
    END;

    PROCEDURE Log@1000000031(Function@1000000005 : Text[25];Text@1000000002 : Text[1024]);
    VAR
      Toolbox@5326062 : Codeunit 5327123;
    BEGIN
      // Logging
      //V3.00 NP+
      //Core.Log('CUST:'+"Function", Text);
      Toolbox.""('CUST:'+"Function",Text,2);
      //V3.00 NP-
    END;

    PROCEDURE SetxRec@1000000015(newxRec@1000000000 : RecordRef;CurrFieldNo@1000000001 : Integer);
    BEGIN
      // Saves xRec and CurrFieldNo for usage of GetxRec
      SavedxRec:=newxRec;
      SavedCurrFieldNo := CurrFieldNo;
    END;

    PROCEDURE GetxRec@1000000016(VAR xRec@1000000000 : RecordRef;VAR CurrFieldNo@1000000001 : Integer);
    BEGIN
      // Used by Anveo Integration.
      // This function is called from tables that are used with Anveo and need to have an xRec set.
      IF SavedxRec.NUMBER = xRec.NUMBER THEN BEGIN
        //Copy saved xRec
        xRec := SavedxRec.DUPLICATE;

        CLEAR(SavedxRec);
        //Copy saved CurrFieldNo if set
        IF SavedCurrFieldNo<>0 THEN
          CurrFieldNo := SavedCurrFieldNo;
        SavedCurrFieldNo := 0;
      END;
    END;

    PROCEDURE GenerateMD5@1000000014(Value@1000000000 : Text[50]) MD5 : Text[50];
    VAR
      Core@1000000002 : Codeunit 5327101;
    BEGIN
      // Used internally
      EXIT(Core.""(Value));
    END;

    PROCEDURE SyncRightsWebUser@1000000007(VAR WebUser@1000000000 : Record 5327140);
    VAR
      SecurityMgt@1000000001 : Codeunit 5327120;
    BEGIN
      // Used internally
      SecurityMgt.SyncRightsWebUser(WebUser);
    END;

    PROCEDURE SyncRightsAllWebUsers@1000000025(ShowProgressDialog@1000000000 : Boolean);
    VAR
      SecurityMgt@1000000001 : Codeunit 5327120;
    BEGIN
      // Used internally
      SecurityMgt.SyncRightsAllWebUsers(ShowProgressDialog);
    END;

    PROCEDURE GetWebPageRead@1000000026(WebPageCode@1000000001 : Code[20]) RightExists : Boolean;
    VAR
      SecurityMgt@1000000003 : Codeunit 5327120;
    BEGIN
      // Checks read rights for all existing Web Page Elements
      EXIT(SecurityMgt.GetWebPageRead(WebPageCode));
    END;

    PROCEDURE GetRightRead@1000000062(TableNo@1000000001 : Integer;WebPageCode@1000000000 : Code[20]) RightExists : Boolean;
    VAR
      SecurityMgt@1000000002 : Codeunit 5327120;
    BEGIN
      // Checks Read rights for a table (when given a table no. <> 0) OR a Web Page (when given a Web Page Code <> '')
      // If the given table no. is <> 0 then Web Page Rights will NOT be checked.
      RightExists := SecurityMgt.GetRightRead(TableNo, WebPageCode);
    END;

    PROCEDURE GetRightInsert@1000000063(TableNo@1000000001 : Integer;WebPageCode@1000000000 : Code[20]) RightExists : Boolean;
    VAR
      SecurityMgt@1000000002 : Codeunit 5327120;
    BEGIN
      // Checks Insert rights for a table (when given a table no. <> 0) OR a Web Page (when given a Web Page Code <> '')
      // If the given table no. is <> 0 then Web Page Rights will NOT be checked.
      RightExists := SecurityMgt.GetRightInsert(TableNo, WebPageCode);
    END;

    PROCEDURE GetRightModify@1000000064(TableNo@1000000001 : Integer;WebPageCode@1000000000 : Code[20]) RightExists : Boolean;
    VAR
      SecurityMgt@1000000002 : Codeunit 5327120;
    BEGIN
      // Checks Modify rights for a table (when given a table no. <> 0) OR a Web Page (when given a Web Page Code <> '')
      // If the given table no. is <> 0 then Web Page Rights will NOT be checked.
      RightExists := SecurityMgt.GetRightModify(TableNo, WebPageCode);
    END;

    PROCEDURE GetRightDelete@1000000065(TableNo@1000000001 : Integer;WebPageCode@1000000000 : Code[20]) RightExists : Boolean;
    VAR
      SecurityMgt@1000000002 : Codeunit 5327120;
    BEGIN
      // Checks Delete rights for a table (when given a table no. <> 0) OR a Web Page (when given a Web Page Code <> '')
      // If the given table no. is <> 0 then Web Page Rights will NOT be checked.
      RightExists := SecurityMgt.GetRightDelete(TableNo, WebPageCode);
    END;

    PROCEDURE GetVersion@1000000035() : Text[100];
    VAR
      Core@1000000000 : Codeunit 5327101;
    BEGIN
      // Used internally
      EXIT(Interface."");
    END;

    PROCEDURE GetReleaseDate@1000000051() ReleaseDate : Date;
    VAR
      Core@1000000000 : Codeunit 5327101;
    BEGIN
      // Used internally
      EXIT(Interface."");
    END;

    PROCEDURE CheckSessionInactivity@1000000049();
    VAR
      Core@1000000000 : Codeunit 5327101;
    BEGIN
      // Used internally
      Core.""();
    END;

    PROCEDURE CONDITION@1000000073(Condition@1000000000 : Boolean;ValueIfTrue@1000000001 : Text[1024];ValueIfFalse@1000000002 : Text[1024]) ReturnValue : Text[1024];
    BEGIN
      // Help function to write shorter terms
      IF Condition THEN EXIT(ValueIfTrue) ELSE EXIT(ValueIfFalse);
    END;

    PROCEDURE ResetWDUser@1000000045(SessionID@1000000000 : Text[64]);
    BEGIN
      // Used internally
      WDUserInteraction.""(SessionID);
    END;

    PROCEDURE ClientAccountReplication@1000000053();
    BEGIN
      // Used internally
      WDUserInteraction.""();
    END;

    PROCEDURE ClientSingleAInsertUpdate@1000000060(WDWebUser@1000000000 : Record 5327140);
    BEGIN
      // Used internally
      WDUserInteraction.""(WDWebUser);
    END;

    PROCEDURE ClientSingleAccountDelete@1000000061(WDWebUser@1000000000 : Record 5327140);
    BEGIN
      // Used internally
      WDUserInteraction.""(WDWebUser);
    END;

    PROCEDURE ClientSingleAccountRename@1000000066(xWDWebUser@1000000000 : Record 5327140;WDWebUser@1000000001 : Record 5327140);
    BEGIN
      // Used internally
      WDUserInteraction.""(xWDWebUser, WDWebUser);
    END;

    PROCEDURE HTMLEncodeText@1000000054(InputText@1000000000 : Text[1024]) OutputText : Text[1024];
    VAR
      Core@1000000001 : Codeunit 5327101;
    BEGIN
      // Used internally
      OutputText := Toolbox.""(InputText);
    END;

    PROCEDURE URLEncodeText@1000000070(InputText@1000000000 : Text[1024]) OutputText : Text[1024];
    VAR
      Core@1000000001 : Codeunit 5327101;
    BEGIN
      // Used internally
      OutputText := Toolbox.""(InputText);
    END;

    PROCEDURE GetHardwareID@1000000055() : Text[32];
    VAR
      Core@1000000000 : Codeunit 5327101;
    BEGIN
      // Used internally
      EXIT(Core."");
    END;

    PROCEDURE CreateMLPageXML@1000000059(WebPageCode@1000000000 : Code[50]);
    VAR
      WDSetup@1000000002 : Record 5327160;
      CreatePageDefinition@1000000001 : Codeunit 5327122;
    BEGIN
      // Used internally
      WDSetup.GET();
      IF WDSetup."Use Anveo Mobile" THEN
        WDUserInteraction.""(WebPageCode);
    END;

    PROCEDURE CreateListMLHTMLTemplates@1000000069(WebPageCode@1000000000 : Code[20];IgnoreCreateManually@1000000001 : Boolean);
    VAR
      WDSetup@1000000002 : Record 5327160;
    BEGIN
      // Used internally
      WDSetup.GET();
      IF WDSetup."Use Anveo Mobile" THEN
        WDUserInteraction.""(WebPageCode, IgnoreCreateManually);
    END;

    PROCEDURE CreateDirectLoginURI@1000000067(WebUserCode@1000000000 : Code[20];VAR DirectLoginURI1@1000000001 : Text[1024];VAR DirectLoginURI2@1000000002 : Text[1024];RunInKioskMode@1000000003 : Boolean;DirectLoginCompany@1000000004 : Text[30]);
    BEGIN
      // Used internally
      WDUserInteraction.""(WebUserCode, DirectLoginURI1, DirectLoginURI2, RunInKioskMode, DirectLoginCompany);
    END;

    PROCEDURE SetNewLicense@1000000071(newLicenceString@1000000000 : Text[1024]);
    BEGIN
      // Used internally
      WDUserInteraction.""(newLicenceString);
    END;

    PROCEDURE SetNewDirectLoginPW@1000000072(PW@1000000000 : Text[250]);
    BEGIN
      // Used internally
      WDUserInteraction.""(PW);
    END;

    PROCEDURE GetTempFileName@5326063(FileExtension@5326062 : Text[30]) FileName : Text[1024];
    VAR
      Setup@5326063 : Record 5327160;
      FileNameGUID@5326064 : GUID;
    BEGIN
      Setup.GET();
      Setup.TESTFIELD("Anveo Web Store URL");
      Setup.TESTFIELD("Web Service File Transf. Fold.");
      FileName := Setup."Web Service File Transf. Fold.";
      FileNameGUID := FORMAT(CREATEGUID);
      FileName += DELCHR(FileNameGUID, '=', '{-}');
      FileName += '.'+FileExtension;
    END;

    PROCEDURE GetNextRec@5326070(VAR RecRef@5326063 : RecordRef;Steps@5326062 : Integer) StepsTaken : Integer;
    BEGIN
      // Finds the record that is <Steps> away
      EXIT(Toolbox.""(RecRef, Steps));
    END;

    PROCEDURE OPENRecRef@5326065(TableNo@1000000001 : Integer;VAR RecRef@1000000003 : RecordRef);
    BEGIN
      // Help function to open RecordRef, if it is not opened yet.
      IF RecRef.NUMBER = TableNo THEN EXIT;
      IF RecRef.NUMBER <> 0 THEN RecRef.CLOSE;
      RecRef.OPEN(TableNo);
    END;

    PROCEDURE SelectKey@5326066(TableNo@5326062 : Integer) SelectedKey : Integer;
    BEGIN
      // Used internally
      EXIT(Toolbox.""(TableNo));
    END;

    PROCEDURE GetKeyCaption@5326067(TableNo@5326062 : Integer;KeyIndex@5326063 : Integer) KeyCaption : Text[1024];
    BEGIN
      EXIT(Toolbox.""(TableNo,KeyIndex));
    END;

    PROCEDURE SetTableRelation@5326073(SrcRecRef@5326066 : RecordRef;VAR DestRecRef@5326065 : RecordRef;WebPageElement@5326064 : Record 5327101;RelationCode@5326063 : Code[20]) RelationFound : Boolean;
    VAR
      ACFCore@5326062 : Codeunit 5327101;
    BEGIN
      EXIT(ACFCore.""(SrcRecRef, DestRecRef, WebPageElement,RelationCode));
    END;

    PROCEDURE GeneratePassword@5326075(Length@1000000000 : Integer;ContainUppercase@1000000001 : Boolean) Password : Text[32];
    BEGIN
      EXIT(Toolbox.""(Length, ContainUppercase));
    END;

    PROCEDURE GetPasswordCharacteristics@5326074(Password@1000000000 : Text[32];VAR ContainsUppercaseLetters@1000000001 : Boolean;VAR ContainsLowercaseLetters@1000000002 : Boolean;VAR ContainsDigits@1000000003 : Boolean;VAR ContainsSpecialCharacters@1000000004 : Boolean;VAR VariousCharacters@1000000005 : Integer);
    BEGIN
      Toolbox.""(Password, ContainsUppercaseLetters, ContainsLowercaseLetters, ContainsDigits,
        ContainsSpecialCharacters, VariousCharacters);
    END;

    BEGIN
    {
      This codeunit is a wrapper for all interaction functions from outside to Anveo Web Desk.
      Do not call any web desk code directly from outside.

      Code outside Anveo Web Desk --> WD Management --> Any internal Anveo Web Desk code
    }
    END.
  }
}

