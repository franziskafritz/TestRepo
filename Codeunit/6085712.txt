OBJECT Codeunit 6085712 Purch. Approval E-Mail
{
  OBJECT-PROPERTIES
  {
    Date=04.03.14;
    Time=01:00:00;
    Version List=DCW13.70.00.3.50.07;
  }
  PROPERTIES
  {
    Permissions=TableData 454=rm,
                TableData 6085740=ri,
                TableData 6085741=ri,
                TableData 6085742=ri;
    OnRun=BEGIN
            SendApprovalEmails;
            SendReminderEmails;
          END;

  }
  CODE
  {
    VAR
      Text001@161024012 : TextConst 'DEU=(Abwarten);ENU=(On Hold)';
      Text002@161024015 : TextConst 'DEU=#DOCUMENTS#;ENU=#DOCUMENTS#';
      Text003@161024014 : TextConst 'DEU=#VALUE#;ENU=#VALUE#';
      Text004@161024013 : TextConst 'DEU="<td style=""border-width: 1px 1px 0 0; border-style: solid; border-color: #e7e8e6; font-size: 11px; font-family: Tahoma,Verdana;"">#VALUE#</td>";ENU="<td style=""border-width: 1px 1px 0 0; border-style: solid; border-color: #e7e8e6; font-size: 11px; font-family: Tahoma,Verdana;"">#VALUE#</td>"';
      Text005@161024016 : TextConst 'DEU="<td align=right style=""border-width: 1px 1px 0 0; border-style: solid; border-color: #e7e8e6; font-size: 11px; font-family: Tahoma,Verdana;"">#VALUE#</td>";ENU="<td align=right style=""border-width: 1px 1px 0 0; border-style: solid; border-color: #e7e8e6; font-size: 11px; font-family: Tahoma,Verdana;"">#VALUE#</td>"';
      Text006@161024018 : TextConst 'DEU="<td style=""border-width: 1px 1px 0 0; border-style: solid; border-color: #e7e8e6; font-size: 11px; font-family: Tahoma,Verdana; color: #d80d0d"">#VALUE#</td>";ENU="<td style=""border-width: 1px 1px 0 0; border-style: solid; border-color: #e7e8e6; font-size: 11px; font-family: Tahoma,Verdana; color: #d80d0d"">#VALUE#</td>"';
      Text007@161024017 : TextConst 'DEU="<td align=right style=""border-width: 1px 1px 0 0; border-style: solid; border-color: #e7e8e6; font-size: 11px; font-family: Tahoma,Verdana; color: #d80d0d"">#VALUE#</td>";ENU="<td align=right style=""border-width: 1px 1px 0 0; border-style: solid; border-color: #e7e8e6; font-size: 11px; font-family: Tahoma,Verdana; color: #d80d0d"">#VALUE#</td>"';
      Text008@161024019 : TextConst 'DEU=Sende Nachfolge-E-Mails...\@1@@@@@@@@@@@@@@@@@@@@@@@@@@;ENU=Sending Follow-up E-mails...\@1@@@@@@@@@@@@@@@@@@@@@@@@@@';
      Text009@161024020 : TextConst 'DEU=%1 %2 / %3 %4;ENU=%1 %2 / %3 %4';
      Text010@161024021 : TextConst 'DEU="navision://client/run?servername=%1&database=%2&company=%3&target=%4&servertype=%5";ENU="navision://client/run?servername=%1&database=%2&company=%3&target=%4&servertype=%5"';
      Text011@161024022 : TextConst 'DEU=#APPROVALFORMLINK#;ENU=#APPROVALFORMLINK#';
      Text012@161024024 : TextConst 'DEU=Document Capture E-Mail Fehler: E-Mail ist leer bei Benutzer %1 - %2;ENU=Document Capture E-mail Error: E-mail is blank on user %1 - %2';
      Text013@161024023 : TextConst 'DEU=Beleg;ENU=Document';
      Text014@161024031 : TextConst 'DEU=Kreditor;ENU=Vendor';
      Text015@161024030 : TextConst 'DEU=Datum;ENU=Date';
      Text016@161024029 : TextConst 'DEU=FÑlligkeitsdatum;ENU=Due Date';
      Text017@161024028 : TextConst 'DEU=WÑhrung;ENU=Currency';
      Text018@161024027 : TextConst 'DEU=Betrag exkl. MwSt.;ENU=Amount Excl. VAT';
      Text019@161024026 : TextConst 'DEU=Betrag inkl. MwSt.;ENU=Amount Incl. VAT';
      Text020@161024025 : TextConst 'DEU=FreigabefÑlligkeitsdatum;ENU=Approval Due Date';
      Text021@161024032 : TextConst 'DEU="<table style=""border-width: 0 0 1px 1px; border-style: solid; border-color: #e7e8e6;"" cellspacing=0 cellpadding=3>";ENU="<table style=""border-width: 0 0 1px 1px; border-style: solid; border-color: #e7e8e6;"" cellspacing=0 cellpadding=3>"';
      Text022@161024035 : TextConst 'DEU=</table>;ENU=</table>';
      Text023@161024033 : TextConst 'DEU="<p style=""font-weight: bold"">%1</p>";ENU="<p style=""font-weight: bold"">%1</p>"';
      Text024@161024034 : TextConst 'DEU=Sie haben folgende Belege zur Freigabe;ENU=You have the following documents for approval';
      Text025@161024037 : TextConst 'DEU=Verteilt von %1 (au·er Haus);ENU=Shared by %1 (out of office)';
      Text026@161024036 : TextConst 'DEU=Verteilt von %1;ENU=Shared by %1';
      Text027@161024039 : TextConst 'DEU="<td style=""border-width: 1px 1px 0 0; border-style: solid; border-color: #e7e8e6; font-size: 11px; font-family: Tahoma,Verdana; font-weight:bold"">#VALUE#</td>";ENU="<td style=""border-width: 1px 1px 0 0; border-style: solid; border-color: #e7e8e6; font-size: 11px; font-family: Tahoma,Verdana; font-weight:bold"">#VALUE#</td>"';
      Text028@161024038 : TextConst 'DEU="<td align=right style=""border-width: 1px 1px 0 0; border-style: solid; border-color: #e7e8e6; font-size: 11px; font-family: Tahoma,Verdana; font-weight: bold"">#VALUE#</td>";ENU="<td align=right style=""border-width: 1px 1px 0 0; border-style: solid; border-color: #e7e8e6; font-size: 11px; font-family: Tahoma,Verdana; font-weight: bold"">#VALUE#</td>"';
      Text029@161024040 : TextConst 'DEU=Sende Erinnerungs-E-Mails...\@1@@@@@@@@@@@@@@@@@@@@@@@@@@;ENU=Sending Reminder E-mails...\@1@@@@@@@@@@@@@@@@@@@@@@@@@@';
      Text030@161024041 : TextConst 'DEU=%1<br />;ENU=%1<br />';
      Text031@161024042 : TextConst 'DEU=<b>%1</b><br />;ENU=<b>%1</b><br />';
      Text032@161024043 : TextConst 'DEU=<br />;ENU=<br />';
      Text033@161024044 : TextConst 'DEU="DynamicsNAV://%1:%2/%3/%4/runpage?page=%5";ENU="DynamicsNAV://%1:%2/%3/%4/runpage?page=%5"';
      Text034@161024045 : TextConst 'DEU=Sie mÅssen die Freigabe E-Mail in die Vorlage in Tabelle %1 importieren.;ENU=You must import the approval e-mail template in the %1 table';

    PROCEDURE SendApprovalEmails@161024015();
    VAR
      DCSetup@161024017 : Record 6085573;
      UserSetup@161024015 : Record 91;
      ApprEntry@161024013 : Record 454;
      EventReg@161024022 : Record 6085740;
      EventEntry@161024023 : Record 6085741;
      EventEntryCmt@161024025 : Record 6085742;
      PurchHeader@161024024 : Record 38;
      ApprovalSharing@161024032 : Record 6085749;
      Purchaser@161024034 : Record 13;
      UserSetup2@161024030 : Record 91;
      DCAppMgnt@161024031 : Codeunit 6085722;
      Mail@161024012 : Codeunit 6085598;
      HTML@161024016 : Codeunit 6085587;
      TableRow@161024033 : Codeunit 6085587;
      DocumentHTML@161024018 : Codeunit 6085587;
      TempFile@161024026 : File;
      Window@161024021 : Dialog;
      NVInStream@161024027 : InStream;
      Filename@161024029 : Text[1024];
      FileData@161024028 : Text[1024];
      RecCount@161024019 : Integer;
      i@161024020 : Integer;
      SkipEmail@161024014 : Boolean;
      Created@161024035 : Boolean;
    BEGIN
      DCSetup.GET;
      DCSetup.TESTFIELD("Error E-mail");
      DCSetup.TESTFIELD("Purch: Approval E-mail Subject");
      DCSetup.CALCFIELDS("Purch: Approval Template");
      IF NOT DCSetup."Purch: Approval Template".HASVALUE THEN
        ERROR(Text034,DCSetup.TABLECAPTION);

      TempFile.CREATETEMPFILE;
      Filename := TempFile.NAME;
      TempFile.CLOSE;
      TempFile.CREATE(Filename);
      DCSetup."Purch: Approval Template".CREATEINSTREAM(NVInStream);
      WHILE NVInStream.READ(FileData) <> 0 DO
        TempFile.WRITE(FileData);
      TempFile.CLOSE;

      ApprEntry.SETCURRENTKEY("Approver ID",Status);
      ApprEntry.SETRANGE("Table ID",DATABASE::"Purchase Header");
      ApprEntry.SETRANGE(Status,ApprEntry.Status::Open);

      IF UserSetup.FINDFIRST THEN BEGIN
        IF GUIALLOWED THEN BEGIN
          Window.OPEN(Text008);
          RecCount := UserSetup.COUNT;
        END;

        EventReg.LOCKTABLE;
        EventEntry.LOCKTABLE;
        IF EventEntry.FINDLAST THEN
          EventReg."From Entry No." := EventEntry."Entry No." + 1;
        EventReg.Area := EventReg.Area::"Purch. Approval Status E-mail";
        EventReg.INSERT(TRUE);

        REPEAT
          IF GUIALLOWED THEN BEGIN
            i := i + 1;
            Window.UPDATE(1,CalcProgress(RecCount,i));
          END;
          SkipEmail := FALSE;

          DCAppMgnt.FilterApprovalSharingFromUser(ApprovalSharing,UserSetup."User ID");
          ApprovalSharing.SETRANGE("Forward E-mails",TRUE);
          IF NOT ApprovalSharing.ISEMPTY THEN
            SkipEmail := TRUE;

          IF NOT SkipEmail THEN BEGIN
            CLEAR(DocumentHTML);
            Created := FALSE;

            ApprEntry.SETRANGE("Approver ID",UserSetup."User ID");
            IF ApprEntry.FINDFIRST THEN BEGIN
              Created := TRUE;
              DocumentHTML.Append(STRSUBSTNO(Text023,Text024));

              DocumentHTML.Append(Text021);
              CreateTableHeaderRow(TableRow);
              DocumentHTML.Append('#####');
              DocumentHTML.Replace2('#####',TableRow);

              REPEAT
                PurchHeader.GET(ApprEntry."Document Type",ApprEntry."Document No.");
                CreateTableRow(PurchHeader,ApprEntry,TableRow);
                DocumentHTML.Append('#####');
                DocumentHTML.Replace2('#####',TableRow);

                EventEntry.INIT;
                EventEntry.Type := EventEntry.Type::Information;
                EventEntry.INSERT(TRUE);

                EventEntryCmt."Event Entry No." := EventEntry."Entry No.";
                EventEntryCmt.Comment := STRSUBSTNO(Text009,ApprEntry.FIELDCAPTION("Approver ID"),ApprEntry."Approver ID",
                  PurchHeader."Document Type",PurchHeader."No.");
                EventEntryCmt.INSERT(TRUE);
              UNTIL ApprEntry.NEXT = 0;

              DocumentHTML.Append(Text022);
            END;

            DCAppMgnt.FilterApprovalSharingToUser(ApprovalSharing,UserSetup."User ID");
            ApprovalSharing.SETRANGE("Forward E-mails",TRUE);
            IF ApprovalSharing.FINDFIRST THEN
              REPEAT
                ApprEntry.SETRANGE("Approver ID",ApprovalSharing."Owner User ID");
                IF ApprEntry.FINDFIRST THEN BEGIN
                  Created := TRUE;

                  CLEAR(Purchaser);
                  IF UserSetup2.GET(ApprovalSharing."Owner User ID") THEN
                    IF Purchaser.GET(UserSetup2."Salespers./Purch. Code") THEN
                      IF Purchaser.Name = '' THEN
                        Purchaser.Name := Purchaser.Code;

                  IF Purchaser.Name = '' THEN
                    Purchaser.Name := UserSetup."User ID";

                  IF ApprovalSharing."Sharing Type" = ApprovalSharing."Sharing Type"::Normal THEN
                    DocumentHTML.Append(STRSUBSTNO(Text023,STRSUBSTNO(Text026,Purchaser.Name)))
                  ELSE
                    DocumentHTML.Append(STRSUBSTNO(Text023,STRSUBSTNO(Text025,Purchaser.Name)));

                  DocumentHTML.Append(Text021);
                  CreateTableHeaderRow(TableRow);
                  DocumentHTML.Append('#####');
                  DocumentHTML.Replace2('#####',TableRow);

                  REPEAT
                    PurchHeader.GET(ApprEntry."Document Type",ApprEntry."Document No.");
                    CreateTableRow(PurchHeader,ApprEntry,TableRow);
                    DocumentHTML.Append('#####');
                    DocumentHTML.Replace2('#####',TableRow);

                    EventEntry.INIT;
                    EventEntry.Type := EventEntry.Type::Information;
                    EventEntry.INSERT(TRUE);

                    EventEntryCmt."Event Entry No." := EventEntry."Entry No.";
                    EventEntryCmt.Comment := STRSUBSTNO(Text009,ApprEntry.FIELDCAPTION("Approver ID"),ApprEntry."Approver ID",
                      PurchHeader."Document Type",PurchHeader."No.");
                    EventEntryCmt.INSERT(TRUE);
                  UNTIL ApprEntry.NEXT = 0;

                  DocumentHTML.Append(Text022);
                END;
              UNTIL ApprovalSharing.NEXT = 0;

            IF Created THEN BEGIN
              HTML.LoadFromFile(Filename);

              HTML.Replace2(Text002,DocumentHTML);
              HTML.Replace(Text011,GetHyperlink(UserSetup."User ID"));

              SetupMail(Mail,UserSetup,DCSetup."Purch: Approval E-mail Subject" + ' - ' + COMPANYNAME);

              Mail.SetBodyFromBigStringMgnt(HTML);
              IF NOT Mail.Send THEN
                ERROR(Mail.GetLastError);

              EventReg."To Entry No." := EventEntry."Entry No.";
              EventReg.MODIFY(TRUE);
              COMMIT;

              CLEAR(HTML);
            END;
          END;
        UNTIL UserSetup.NEXT = 0;

        EventReg."To Entry No." := EventEntry."Entry No.";
        EventReg.MODIFY(TRUE);
        COMMIT;

        IF GUIALLOWED THEN
          Window.CLOSE;

        DCSetup."Purch: Last Status E-mail Sent" := TODAY;
        DCSetup.MODIFY;
      END;
    END;

    PROCEDURE SendReminderEmails@161024019();
    VAR
      DCSetup@161024013 : Record 6085573;
      ApprovalEntry@161024029 : Record 454;
      ApprovalEntry2@161024031 : Record 454;
      ReminderEMailSetup@161024030 : Record 6085736;
      UserSetup@161024012 : Record 91;
      ManagerUserSetup@161024037 : Record 91;
      Purchaser@161024014 : Record 13;
      EventReg@161024028 : Record 6085740;
      EventEntry@161024027 : Record 6085741;
      EventEntryCmt@161024026 : Record 6085742;
      ApprovalSharing@161024033 : Record 6085749;
      PurchHeader@161024035 : Record 38;
      EmailText@161024036 : Record 6085737;
      DCAppMgnt@161024032 : Codeunit 6085722;
      Mail@161024025 : Codeunit 6085598;
      HTML@161024024 : Codeunit 6085587;
      TableRow@161024023 : Codeunit 6085587;
      DocumentHTML@161024022 : Codeunit 6085587;
      TempFile@161024021 : File;
      Window@161024020 : Dialog;
      NVInStream@161024019 : InStream;
      Filename@161024018 : Text[1024];
      FileData@161024017 : Text[1024];
      RecCount@161024016 : Integer;
      i@161024015 : Integer;
      SkipEmail@161024034 : Boolean;
      HasSentCC@161024038 : Boolean;
      Created@161024039 : Boolean;
    BEGIN
      DCSetup.GET;
      DCSetup.TESTFIELD("Error E-mail");
      DCSetup.TESTFIELD("Purch: Approval E-mail Subject");
      DCSetup.CALCFIELDS("Purch: Approval Template");
      IF NOT DCSetup."Purch: Approval Template".HASVALUE THEN
        ERROR(Text034,DCSetup.TABLECAPTION);

      TempFile.CREATETEMPFILE;
      Filename := TempFile.NAME;
      TempFile.CLOSE;
      TempFile.CREATE(Filename);
      DCSetup."Purch: Approval Template".CREATEINSTREAM(NVInStream);
      WHILE NVInStream.READ(FileData) <> 0 DO
        TempFile.WRITE(FileData);
      TempFile.CLOSE;

      ReminderEMailSetup.ASCENDING(FALSE);
      IF ReminderEMailSetup.FINDFIRST THEN BEGIN
        IF GUIALLOWED THEN BEGIN
          Window.OPEN(Text029);
          RecCount := ReminderEMailSetup.COUNT;
        END;

        EventReg.LOCKTABLE;
        EventEntry.LOCKTABLE;
        IF EventEntry.FINDLAST THEN
          EventReg."From Entry No." := EventEntry."Entry No." + 1;
        EventReg.Area := EventReg.Area::"Purch. Approval Reminder E-mail";
        EventReg.INSERT(TRUE);

        REPEAT
          IF GUIALLOWED THEN BEGIN
            i := i + 1;
            Window.UPDATE(1,CalcProgress(RecCount,i));
          END;

          IF FORMAT(ReminderEMailSetup."Due Date Calculation") <> '' THEN BEGIN
            ApprovalEntry.SETRANGE("Table ID",DATABASE::"Purchase Header");
            ApprovalEntry.SETRANGE("Document Type",ApprovalEntry."Document Type"::Invoice,ApprovalEntry."Document Type"::"Credit Memo");
            ApprovalEntry.SETRANGE(Status,ApprovalEntry.Status::Open);
            ApprovalEntry.SETRANGE("Last Date-Time Modified",0DT,
              CREATEDATETIME(CALCDATE('-' + FORMAT(ReminderEMailSetup."Due Date Calculation"),TODAY),0T));
            ApprovalEntry.SETRANGE("Reminder Level",0,ReminderEMailSetup.Level - 1);
            IF ApprovalEntry.FINDFIRST THEN
              REPEAT
                CLEAR(DocumentHTML);
                Created := TRUE;

                EmailText.SETRANGE(Type,EmailText.Type::"Approval Reminder E-Mail Setup");
                EmailText.SETRANGE("Reminder Level",ReminderEMailSetup.Level);
                EmailText.SETRANGE(Position,EmailText.Position::Beginning);
                IF EmailText.FINDFIRST THEN BEGIN
                  REPEAT
                    IF EmailText.Bold THEN
                      DocumentHTML.Append(STRSUBSTNO(Text031,EmailText.Text))
                    ELSE
                      DocumentHTML.Append(STRSUBSTNO(Text030,EmailText.Text));
                  UNTIL EmailText.NEXT = 0;
                  DocumentHTML.Append(Text032);
                END;

                DocumentHTML.Append(Text021);
                CreateTableHeaderRow(TableRow);
                DocumentHTML.Append('#####');
                DocumentHTML.Replace2('#####',TableRow);

                PurchHeader.GET(ApprovalEntry."Document Type",ApprovalEntry."Document No.");
                CreateTableRow(PurchHeader,ApprovalEntry,TableRow);
                DocumentHTML.Append('#####');
                DocumentHTML.Replace2('#####',TableRow);
                DocumentHTML.Append(Text022);

                EmailText.SETRANGE(Position,EmailText.Position::Ending);
                IF EmailText.FINDFIRST THEN BEGIN
                  DocumentHTML.Append(Text032);
                  REPEAT
                    IF EmailText.Bold THEN
                      DocumentHTML.Append(STRSUBSTNO(Text031,EmailText.Text))
                    ELSE
                      DocumentHTML.Append(STRSUBSTNO(Text030,EmailText.Text));
                  UNTIL EmailText.NEXT = 0;
                  DocumentHTML.Append(Text032);
                END;

                SkipEmail := NOT UserSetup.GET(ApprovalEntry."Approver ID");
                IF NOT SkipEmail THEN BEGIN
                  HasSentCC := FALSE;
                  DCAppMgnt.FilterApprovalSharingFromUser(ApprovalSharing,UserSetup."User ID");
                  ApprovalSharing.SETRANGE("Forward E-mails",TRUE);
                  IF ApprovalSharing.FINDFIRST THEN BEGIN
                    REPEAT
                      IF UserSetup.GET(ApprovalSharing."Shared to User ID") THEN BEGIN
                        HTML.LoadFromFile(Filename);

                        HTML.Replace2(Text002,DocumentHTML);
                        HTML.Replace(Text011,GetHyperlink(UserSetup."User ID"));

                        SetupMail(Mail,UserSetup,ReminderEMailSetup."E-mail Subject" + ' - ' + COMPANYNAME);

                        CLEAR(ManagerUserSetup);

                        CASE ReminderEMailSetup."Send CC to Manager" OF
                          ReminderEMailSetup."Send CC to Manager"::"Manager of Original Approver":
                            BEGIN
                              IF ManagerUserSetup.GET(ApprovalEntry."Original Approver ID") THEN
                                IF NOT ManagerUserSetup.GET(ManagerUserSetup.Substitute) THEN
                                  CLEAR(ManagerUserSetup);
                            END;
                          ReminderEMailSetup."Send CC to Manager"::"Manager of Current Approver":
                            IF ManagerUserSetup.GET(ApprovalEntry."Approver ID") THEN
                              IF NOT ManagerUserSetup.GET(ManagerUserSetup.Substitute) THEN
                                CLEAR(ManagerUserSetup);
                        END;

                        IF (NOT HasSentCC) AND (ManagerUserSetup."E-Mail" <> '') THEN BEGIN
                          Mail.AddCC(ManagerUserSetup."E-Mail",ManagerUserSetup."E-Mail");
                          IF (UserSetup.GET(ReminderEMailSetup."Send CC to User ID")) AND (UserSetup."E-Mail" <> '') THEN
                            Mail.AddCC(UserSetup."E-Mail",UserSetup."E-Mail");
                          HasSentCC := TRUE;
                        END;

                        Mail.SetBodyFromBigStringMgnt(HTML);
                        IF NOT Mail.Send THEN
                          ERROR(Mail.GetLastError);
                        CLEAR(HTML);
                      END;
                    UNTIL (ApprovalSharing.NEXT = 0) OR (NOT SkipEmail);
                  END ELSE BEGIN
                    HTML.LoadFromFile(Filename);

                    HTML.Replace2(Text002,DocumentHTML);
                    HTML.Replace(Text011,GetHyperlink(UserSetup."User ID"));

                    SetupMail(Mail,UserSetup,ReminderEMailSetup."E-mail Subject" + ' - ' + COMPANYNAME);

                    CLEAR(ManagerUserSetup);
                    CASE ReminderEMailSetup."Send CC to Manager" OF
                      ReminderEMailSetup."Send CC to Manager"::"Manager of Original Approver":
                        IF ManagerUserSetup.GET(ApprovalEntry."Original Approver ID") THEN
                          IF NOT ManagerUserSetup.GET(ManagerUserSetup.Substitute) THEN
                            CLEAR(ManagerUserSetup);
                      ReminderEMailSetup."Send CC to Manager"::"Manager of Current Approver":
                        IF ManagerUserSetup.GET(ApprovalEntry."Approver ID") THEN
                          IF NOT ManagerUserSetup.GET(ManagerUserSetup.Substitute) THEN
                            CLEAR(ManagerUserSetup);
                    END;
                    IF ManagerUserSetup."E-Mail" <> '' THEN
                      Mail.AddCC(ManagerUserSetup."E-Mail",ManagerUserSetup."E-Mail");

                    IF (UserSetup.GET(ReminderEMailSetup."Send CC to User ID")) AND (UserSetup."E-Mail" <> '') THEN
                      Mail.AddCC(UserSetup."E-Mail",UserSetup."E-Mail");

                    Mail.SetBodyFromBigStringMgnt(HTML);
                    IF NOT Mail.Send THEN
                      ERROR(Mail.GetLastError);
                    CLEAR(HTML);
                  END;

                  ApprovalEntry2 := ApprovalEntry;
                  ApprovalEntry2."Reminder Level" := ReminderEMailSetup.Level;
                  ApprovalEntry2.MODIFY;
                END;
              UNTIL ApprovalEntry.NEXT = 0;

          END;

        UNTIL ReminderEMailSetup.NEXT = 0;

        EventReg."To Entry No." := EventEntry."Entry No.";
        EventReg.MODIFY(TRUE);
        COMMIT;
      END;
    END;

    PROCEDURE CreateTableHeaderRow@161024018(VAR BigString@161024012 : Codeunit 6085587);
    VAR
      CaptureMgnt@161024013 : Codeunit 6085576;
      LeftAlignedTd@161024014 : Text[1024];
      RightAlignedTd@161024015 : Text[1024];
    BEGIN
      CLEAR(BigString);

      LeftAlignedTd := Text027;
      RightAlignedTd := Text028;

      BigString.Append('<tr>');
      BigString.Append(CaptureMgnt.Replace(LeftAlignedTd,Text003,Text013,FALSE));
      BigString.Append(CaptureMgnt.Replace(LeftAlignedTd,Text003,Text014,FALSE));
      BigString.Append(CaptureMgnt.Replace(LeftAlignedTd,Text003,Text015,FALSE));
      BigString.Append(CaptureMgnt.Replace(LeftAlignedTd,Text003,Text016,FALSE));
      BigString.Append(CaptureMgnt.Replace(LeftAlignedTd,Text003,Text017,FALSE));
      BigString.Append(CaptureMgnt.Replace(RightAlignedTd,Text003,Text018,FALSE));
      BigString.Append(CaptureMgnt.Replace(RightAlignedTd,Text003,Text019,FALSE));
      BigString.Append(CaptureMgnt.Replace(LeftAlignedTd,Text003,Text020,FALSE));
      BigString.Append('</tr>');
    END;

    PROCEDURE CreateTableRow@161024012(PurchHeader@161024016 : Record 38;ApprEntry@161024020 : Record 454;VAR BigString@161024012 : Codeunit 6085587);
    VAR
      Currency@161024021 : Record 4;
      CaptureMgnt@161024013 : Codeunit 6085576;
      LeftAlignedTd@161024014 : Text[1024];
      RightAlignedTd@161024015 : Text[1024];
      TotalAmountExclVAT@161024019 : Decimal;
      TotalAmountInclVAT@161024018 : Decimal;
    BEGIN
      CLEAR(BigString);

      IF (PurchHeader."Document Type" = PurchHeader."Document Type"::Invoice) AND (PurchHeader."Due Date" <= TODAY) THEN BEGIN
        LeftAlignedTd := Text006;
        RightAlignedTd := Text007;
      END ELSE BEGIN
        LeftAlignedTd := Text004;
        RightAlignedTd := Text005;
      END;

      TotalAmountExclVAT := ApprEntry.Amount;
      TotalAmountInclVAT := GetAmountInclVAT(PurchHeader);

      IF PurchHeader."Currency Code" = '' THEN
        Currency.InitRoundingPrecision
      ELSE
        Currency.GET(PurchHeader."Currency Code");

      WITH PurchHeader DO BEGIN
        BigString.Append('<tr>');
        IF "On Hold" = '' THEN
          BigString.Append(CaptureMgnt.Replace(LeftAlignedTd,Text003,FORMAT("Document Type") + ' ' + "No.",FALSE))
        ELSE
          BigString.Append(CaptureMgnt.Replace(LeftAlignedTd,Text003,FORMAT("Document Type") + ' ' + "No." + ' ' + Text001,FALSE));
        BigString.Append(CaptureMgnt.Replace(LeftAlignedTd,Text003,"Buy-from Vendor No." + ' - ' + "Buy-from Vendor Name",FALSE));
        BigString.Append(CaptureMgnt.Replace(LeftAlignedTd,Text003,FORMAT("Document Date"),FALSE));
        BigString.Append(CaptureMgnt.Replace(LeftAlignedTd,Text003,FORMAT("Due Date"),FALSE));
        BigString.Append(CaptureMgnt.Replace(LeftAlignedTd,Text003,"Currency Code",FALSE));
        BigString.Append(CaptureMgnt.Replace(RightAlignedTd,Text003,
          FORMAT(TotalAmountExclVAT,0,STRSUBSTNO('<Precision,%1><Standard Format,0>',Currency."Amount Decimal Places")),FALSE));
        BigString.Append(CaptureMgnt.Replace(RightAlignedTd,Text003,
          FORMAT(TotalAmountInclVAT,0,STRSUBSTNO('<Precision,%1><Standard Format,0>',Currency."Amount Decimal Places")),FALSE));
        BigString.Append(CaptureMgnt.Replace(LeftAlignedTd,Text003,FORMAT(ApprEntry."Due Date"),FALSE));
        BigString.Append('</tr>');
      END;
    END;

    PROCEDURE SetupMail@161024013(VAR Mail@161024012 : Codeunit 6085598;UserSetup@161024018 : Record 91;Subject@161024017 : Text[1024]);
    VAR
      SMTPMailSetup@161024014 : Record 409;
      DCSetup@161024013 : Record 6085573;
      ServerAddr@161024016 : Text[250];
      ServerPort@161024015 : Integer;
    BEGIN
      DCSetup.GET;
      DCSetup.TESTFIELD("Sender E-mail");
      DCSetup.TESTFIELD("Sender Name");
      DCSetup.TESTFIELD("Purch: Approval E-mail Subject");

      SMTPMailSetup.GET;
      SMTPMailSetup.TESTFIELD("SMTP Server");

      IF STRPOS(SMTPMailSetup."SMTP Server",':') <> 0 THEN BEGIN
        ServerAddr := COPYSTR(SMTPMailSetup."SMTP Server",1,STRPOS(SMTPMailSetup."SMTP Server",':')-1);
        EVALUATE(ServerPort,COPYSTR(SMTPMailSetup."SMTP Server",STRPOS(SMTPMailSetup."SMTP Server",':')+1));
      END ELSE BEGIN
        ServerAddr := SMTPMailSetup."SMTP Server";
        ServerPort := 25;
      END;

      CLEAR(Mail);
      Mail.SetServerAddress := ServerAddr;
      Mail.SetServerPort := ServerPort;
      CASE SMTPMailSetup.Authentication OF
        SMTPMailSetup.Authentication::Anonymous:
          Mail.SetSmtpAuthMethod := 'NONE';
        SMTPMailSetup.Authentication::NTLM:
          Mail.SetSmtpAuthMethod := 'NTLM';
        SMTPMailSetup.Authentication::Basic:
          BEGIN
            Mail.SetSmtpAuthMethod := 'LOGIN';
            SMTPMailSetup.TESTFIELD("User ID");
            SMTPMailSetup.TESTFIELD(Password);
            Mail.SetUsername := SMTPMailSetup."User ID";
            Mail.SetPassword := SMTPMailSetup.Password;
          END;
      END;
      Mail.SetStartTLS := DCSetup."SMTP Require Secure SSL/TLS";

      Mail.SetBodyIsHtml := TRUE;

      Mail.SetFromAddress := DCSetup."Sender E-mail";
      Mail.SetFromName := DCSetup."Sender Name";

      IF UserSetup."E-Mail" = '' THEN BEGIN
        Mail.AddTo(DCSetup."Error E-mail",DCSetup."Error E-mail");
        Mail.SetSubject := STRSUBSTNO(Text012,UserSetup."User ID",COMPANYNAME);
      END ELSE BEGIN
        Mail.SetSubject := Subject;
        Mail.AddTo(UserSetup."E-Mail",UserSetup."E-Mail");
      END;
    END;

    PROCEDURE GetAmountInclVAT@161024014(PurchHeader@161024014 : Record 38) Amount : Decimal;
    VAR
      PurchLine@161024012 : Record 39;
      TempVATAmountLine0@161024013 : TEMPORARY Record 290;
    BEGIN
      PurchLine.SetPurchHeader(PurchHeader);
      PurchLine.CalcVATAmountLines(1,PurchHeader,PurchLine,TempVATAmountLine0);

      IF TempVATAmountLine0.FINDFIRST THEN
        REPEAT
          Amount := Amount + TempVATAmountLine0."Amount Including VAT";
        UNTIL TempVATAmountLine0.NEXT = 0;
    END;

    PROCEDURE CalcProgress@161024017(VAR TotalCount@161024012 : Integer;VAR Index@161024013 : Integer) : Integer;
    BEGIN
      EXIT(ROUND(Index / TotalCount * 10000,1,'>'));
    END;

    PROCEDURE GetHyperlink@161024016(_UserId@161024017 : Code[20]) : Text[1024];
    VAR
      Setup@161024016 : Record 6085573;
      WebUser@161024018 : Record 6086001;
    BEGIN
      Setup.GET;

      IF WebUser.GET(_UserId) THEN
        EXIT(Setup."Web Site Url" + '/' + LOWERCASE(Setup."Company Code"))
      ELSE BEGIN
        IF Setup."Purch: Approval NAV Client" = Setup."Purch: Approval NAV Client"::Classic THEN BEGIN
          IF Setup."Purch: Use TIFF-Form for Appr." THEN
            EXIT(CONTEXTURL + '&target=Form ' + FORMAT(FORM::"Purch. Appr. Entries w. Image"))
          ELSE
            EXIT(CONTEXTURL + '&target=Form ' + FORMAT(FORM::"Purch. Approval Entries"));
        END ELSE BEGIN
          EXIT(STRSUBSTNO(Text033,Setup."Dynamics NAV Server Name",Setup."Dynamics NAV Server Port",
            Setup."Dynamics NAV Server Instance",COMPANYNAME,6085710));
        END;
      END;
    END;

    BEGIN
    END.
  }
}

