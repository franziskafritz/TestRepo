OBJECT Codeunit 50050 DD Interface Handler
{
  OBJECT-PROPERTIES
  {
    Date=12.07.12;
    Time=12:05:54;
    Modified=Yes;
    Version List=DD1.00;
  }
  PROPERTIES
  {
    SingleInstance=Yes;
    OnRun=BEGIN
            LMSetup.GET;

            IF ISCLEAR(PDFCPRTimer) THEN
              CREATE(PDFCPRTimer);
            EnablePDFCPRTimer;
            MESSAGE('PDF/CPR Timer started: %1 sec',FORMAT(LMSetup."LM PDF_CPR Intervall"/1000));

            //*** verlagert nach LM Interface Handler gob-mar/11.03.2009
            IF ISCLEAR(PrintTimer) THEN
              CREATE(PrintTimer);
            EnablePrintTimer;
            MESSAGE('Print Timer started: %1 sec',FORMAT(LMSetup."LM Print PDF Intervall"/1000));
            //*** verlagert nach LM Interface Handler gob-mar/11.03.2009}

            IF ISCLEAR(InboundTimer) THEN
              CREATE(InboundTimer);
            EnableInboundTimer;
            MESSAGE('Inbound Timer started: %1 sec',FORMAT(LMSetup."LM Timer Inbound"/1000));

            IF ISCLEAR(OutboundTimer) THEN
              CREATE(OutboundTimer);
            EnableOutboundTimer;
            MESSAGE('Outbound Timer started: %1 sec',FORMAT(LMSetup."LM Order Timer Outbound"/1000));
          END;

  }
  CODE
  {
    VAR
      LMHeader@1000 : Record 50061;
      LMItem@1004 : Record 50062;
      InterfaceOut@1001 : Codeunit 50051;
      InterfaceIn@1005 : Codeunit 50052;
      OutboundTimer@1002 : Automation "{3B311C81-140E-11D5-8B18-00D0590B4EC5} 1.0:{3B311C92-140E-11D5-8B18-00D0590B4EC5}:'Navision Timer 1.0'.Timer" WITHEVENTS;
      Loop@1003 : Boolean;
      Counter@1006 : Integer;
      InterfaceBusy@1000000002 : Boolean;
      SalesSetup@1000000004 : Record 311;
      PrintTimer@1000000008 : Automation "{3B311C81-140E-11D5-8B18-00D0590B4EC5} 1.0:{3B311C92-140E-11D5-8B18-00D0590B4EC5}:'Navision Timer 1.0'.Timer" WITHEVENTS;
      LMSetup@1000000009 : Record 50060;
      InboundTimer@1000000010 : Automation "{3B311C81-140E-11D5-8B18-00D0590B4EC5} 1.0:{3B311C92-140E-11D5-8B18-00D0590B4EC5}:'Navision Timer 1.0'.Timer" WITHEVENTS;
      PDFCPRTimer@1000000011 : Automation "{3B311C81-140E-11D5-8B18-00D0590B4EC5} 1.0:{3B311C92-140E-11D5-8B18-00D0590B4EC5}:'Navision Timer 1.0'.Timer" WITHEVENTS;

    PROCEDURE EnablePDFCPRTimer@1();
    BEGIN
      PDFCPRTimer.Interval := LMSetup."LM PDF_CPR Intervall";
      PDFCPRTimer.Enabled := TRUE;
    END;

    PROCEDURE DisablePDFCPRTimer@3();
    BEGIN
      PDFCPRTimer.Enabled := FALSE;
    END;

    PROCEDURE EnablePrintTimer@1000000004();
    BEGIN
      PrintTimer.Interval := LMSetup."LM Print PDF Intervall";
      PrintTimer.Enabled := TRUE;
    END;

    PROCEDURE DisablePrintTimer@1000000003();
    BEGIN
      PrintTimer.Enabled := FALSE;
    END;

    PROCEDURE EnableOutboundTimer@1000000001();
    BEGIN
      OutboundTimer.Interval := LMSetup."LM Order Timer Outbound";
      OutboundTimer.Enabled := TRUE;
    END;

    PROCEDURE DisableOutboundTimer@1000000000();
    BEGIN
      OutboundTimer.Enabled := FALSE;
    END;

    PROCEDURE EnableInboundTimer@1000000005();
    BEGIN
      InboundTimer.Interval := LMSetup."LM Timer Inbound";
      InboundTimer.Enabled := TRUE;
    END;

    PROCEDURE DisableInboundTimer@1000000002();
    BEGIN
      InboundTimer.Enabled := FALSE;
    END;

    PROCEDURE HASDATA@5() : Boolean;
    VAR
      HASDATA@1000 : Boolean;
    BEGIN
      HASDATA := FALSE;
      WITH LMHeader DO BEGIN
        RESET;
        SETCURRENTKEY("DD Status",Direction);
        SETRANGE("DD Status",LMHeader."DD Status"::new);
        SETRANGE(Direction,Direction::out);
        IF FIND('-') THEN
          HASDATA := TRUE;
      END;

      WITH LMItem DO BEGIN
        RESET;
        SETRANGE("DD Status","DD Status"::new);
        SETRANGE(Direction,Direction::out);
        IF FIND('-') THEN
          HASDATA := TRUE;
      END;

      EXIT(HASDATA);
    END;

    PROCEDURE TimerRequestLM2@1115500000();
    BEGIN
      //A/11.03.2009/gob-mar/V1.07
      IF ISCLEAR(PrintTimer) THEN
        CREATE(PrintTimer);
      EnablePrintTimer;
      MESSAGE('Print Timer started: %1 sec',FORMAT(LMSetup."LM Print PDF Intervall"/1000));
      //E/11.03.2009/gob-mar/V1.07
    END;

    EVENT OutboundTimer@1002::Timer@1(Milliseconds@1000 : Integer);
    VAR
      LMInterfaceOutbound@1000000000 : Codeunit 50051;
    BEGIN
      LMSetup.GET;
      DisableOutboundTimer;
      IF LMSetup."LM Order Timer Outbound Active" THEN
        LMInterfaceOutbound.StartOutbound;
      EnableOutboundTimer;
    END;

    EVENT OutboundTimer@1002::TimerError@2(ErrorString@1000 : Text[1024]);
    BEGIN

      MESSAGE('Outbound Timer error!');
    END;

    EVENT PrintTimer@1000000008::Timer@1(Milliseconds@1000000000 : Integer);
    VAR
      LMSetup@1000000001 : Record 50060;
      LMPrint@1000000002 : Codeunit 50058;
    BEGIN
      LMSetup.GET;
      DisablePrintTimer;
      //DisablePDFCPRTimer;
      IF LMSetup."Auto Print Documents" THEN
        LMPrint.PrintInit;
      EnablePrintTimer;
      //EnablePDFCPRTimer;
    END;

    EVENT PrintTimer@1000000008::TimerError@2(ErrorString@1000000000 : Text[1024]);
    BEGIN
      MESSAGE('Print PDF Timer error!');
    END;

    EVENT InboundTimer@1000000010::Timer@1(Milliseconds@1000000000 : Integer);
    BEGIN
      LMSetup.GET;
      DisableInboundTimer;
      IF LMSetup."LM Inbound Interface Active" THEN
        CODEUNIT.RUN(CODEUNIT::Codeunit76016);
      EnableInboundTimer;
    END;

    EVENT InboundTimer@1000000010::TimerError@2(ErrorString@1000000000 : Text[1024]);
    BEGIN
      MESSAGE('Inbound Timer error!');
    END;

    EVENT PDFCPRTimer@1000000011::Timer@1(Milliseconds@1000000000 : Integer);
    VAR
      LMInterfaceOutbound@1000000001 : Codeunit 50051;
    BEGIN
      LMSetup.GET;
      DisablePDFCPRTimer;
      IF LMSetup."LM PDF CPR Interface Active" THEN
        LMInterfaceOutbound.StartPDFCPROutbound;
      EnablePDFCPRTimer;
    END;

    EVENT PDFCPRTimer@1000000011::TimerError@2(ErrorString@1000000000 : Text[1024]);
    BEGIN
      MESSAGE('PDF/CPR Timer error!');
    END;

    BEGIN
    {

      +----------------------------------------------+
      | GOB Software & Systeme                       |
      +----------------------------------------------+
      | Allgemeine Programmierung                    |
      | FP Commerce                                  |
      +----------------------------------------------+

      Version Bemerkung
      ------------------------------------------------
    }
    END.
  }
}

