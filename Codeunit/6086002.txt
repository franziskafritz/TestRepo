OBJECT Codeunit 6086002 Web User Functions (WS)
{
  OBJECT-PROPERTIES
  {
    Date=25.11.13;
    Time=01:00:00;
    Version List=DCW13.70.00.3.50.05;
  }
  PROPERTIES
  {
    Permissions=TableData 6086001=rimd,
                TableData 6086006=rimd;
    OnRun=BEGIN
          END;

  }
  CODE
  {

    PROCEDURE ValidateUser@161024012(Username@161024012 : Code[50];Password@161024013 : Text[250]) : Boolean;
    VAR
      WebUser@161024014 : Record 6086001;
      DCSetup@161024016 : Record 6085573;
      Cryptography@161024015 : Codeunit 6085599;
    BEGIN
      IF NOT WebUser.GET(Username) THEN
        EXIT(FALSE);

      IF WebUser.Blocked THEN
        EXIT(FALSE);

      DCSetup.GET;
      DCSetup.TESTFIELD("Hash Validation Key");

      IF WebUser.Password <> Cryptography.HashValueSHA1(DCSetup."Hash Validation Key",Password) THEN
        EXIT(FALSE);

      WebUser."Last Login Date" := TODAY;
      WebUser.MODIFY;

      UpdateWebUserCompany(Username);

      EXIT(TRUE);
    END;

    PROCEDURE LogOff@6085573();
    BEGIN
    END;

    PROCEDURE ChangePassword@161024015(Username@161024013 : Code[50];OldPassword@161024012 : Text[250];NewPassword@161024014 : Text[250]) : Boolean;
    VAR
      WebUser@1161054000 : Record 6086001;
      DCSetup@1161054002 : Record 6085573;
      Cryptography@1161054001 : Codeunit 6085599;
    BEGIN
      WebUser.GET(Username);
      DCSetup.GET;
      DCSetup.TESTFIELD("Hash Validation Key");

      IF WebUser.Password <> Cryptography.HashValueSHA1(DCSetup."Hash Validation Key",OldPassword) THEN
        EXIT(FALSE);

      WebUser.Password := Cryptography.HashValueSHA1(DCSetup."Hash Validation Key",NewPassword);
      WebUser."Last Password Changed Date" := TODAY;
      WebUser.MODIFY;

      EXIT(TRUE);
    END;

    PROCEDURE UpdateWebUserCompany@161024013(Username@161024012 : Code[50]);
    VAR
      Company@161024015 : Record 2000000006;
      Setup@161024014 : Record 6085573;
      WebUserCompany@161024016 : Record 6086006;
      UserSetup@161024017 : Record 91;
      ApprEntry@161024018 : Record 454;
      User@161024013 : Code[50];
    BEGIN
      WebUserCompany.SETRANGE("User Id",Username);
      WebUserCompany.DELETEALL;

      IF Company.FINDFIRST THEN
        REPEAT
          Setup.CHANGECOMPANY(Company.Name);
          IF Setup.READPERMISSION THEN BEGIN
            IF Setup.GET THEN BEGIN
              IF Setup."Enable Web Approval" THEN BEGIN
                UserSetup.CHANGECOMPANY(Company.Name);
                IF UserSetup.READPERMISSION THEN BEGIN
                  IF UserSetup.GET(Username) THEN BEGIN
                    IF Setup."Company Code" <> '' THEN
                      WebUserCompany."Company Code" := Setup."Company Code"
                    ELSE
                      WebUserCompany."Company Code" := 'DEFAULT';
                    WebUserCompany."Company Name" := Company.Name;
                    WebUserCompany."User Id" := Username;
                    IF NOT WebUserCompany.FIND('=') THEN BEGIN
                      ApprEntry.CHANGECOMPANY(Company.Name);
                      ApprEntry.SETCURRENTKEY("Approver ID",Status);
                      ApprEntry.SETRANGE("Approver ID",Username);
                      ApprEntry.SETRANGE(Status,ApprEntry.Status::Open);
                      ApprEntry.SETRANGE("Table ID",DATABASE::"Purchase Header");
                      ApprEntry.SETFILTER("Document Type",'2|3');
                      WebUserCompany."No. of Documents for Approval" := ApprEntry.COUNT;
                      WebUserCompany.INSERT;
                    END;
                  END;
                END;
              END;
            END;
          END;
        UNTIL Company.NEXT = 0;
    END;

    PROCEDURE GetDateFormat@161024014() : Integer;
    VAR
      TestDate@161024012 : Text[30];
      DayPos@161024014 : Integer;
      MonthPos@161024013 : Integer;
      YearPos@161024015 : Integer;
    BEGIN
      TestDate := FORMAT(13029999D);
      DayPos := STRPOS(TestDate,'13');
      MonthPos := STRPOS(TestDate,'2');
      YearPos := STRPOS(TestDate,'99');

      CASE TRUE OF
        // Day / Month / Year
        (DayPos < MonthPos) AND (MonthPos < YearPos):
          EXIT(1);

        // Month / Day / Year
        (MonthPos < DayPos) AND (DayPos < YearPos):
          EXIT(2);

        // Year / Day / Month
        (YearPos < DayPos) AND (DayPos < MonthPos):
          EXIT(3);

        // Year / Month / Day
        (YearPos < MonthPos) AND (MonthPos < DayPos):
          EXIT(4);

        // Day / Year / Month
        (DayPos < YearPos) AND (YearPos < MonthPos):
          EXIT(5);

        // Month / Year / Day
        (MonthPos < YearPos) AND (YearPos < DayPos):
          EXIT(6);
      END;
    END;

    BEGIN
    END.
  }
}

