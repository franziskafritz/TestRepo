OBJECT Codeunit 50268 Sales Batch Post Functions
{
  OBJECT-PROPERTIES
  {
    Date=11.03.15;
    Time=10:25:55;
    Modified=Yes;
    Version List=HME3875,T0082;
  }
  PROPERTIES
  {
    OnRun=BEGIN
            CASE ActionTypeID OF
              1 : BEGIN
                  //Set all Quantities to 0
                  //H2109 10.02.15 ARI +++++++++++++++++++++++++
                    SalesLine.VALIDATE("Qty. to Ship",0);
                    SalesLine.VALIDATE("Qty. to Invoice",0);
                  //H2109 10.02.15 ARI -------------------------
                    SalesLine.MODIFY;
                  END;
              2 : BEGIN
                  //Ship
                  //H1149 ARI 13.05.14 +++++++++++++++++++++
                    SalesLine.VALIDATE("Qty. to Ship",SalesBatchPostLine."Qty. to Post");
                    SalesLine.VALIDATE("Qty. to Invoice",0);
                  //H1149 ARI 13.05.14 ---------------------
                    SalesLine.MODIFY;
                  END;
              3 : BEGIN
                  //Invoice
                    SalesLine.VALIDATE("Qty. to Ship",0);
                    SalesLine.VALIDATE("Qty. to Invoice",SalesBatchPostLine."Qty. to Post");
                    SalesLine.MODIFY;
                  END;
              4 : BEGIN
                  //Ship and Invoice
                    SalesLine.VALIDATE("Qty. to Ship",SalesBatchPostLine."Qty. to Post");
                    SalesLine.VALIDATE("Qty. to Invoice",SalesBatchPostLine."Qty. to Post");
                    SalesLine.MODIFY;
                  END;
              5 : BEGIN
                  //Post Shipment
                    SalesHeader.Ship := TRUE;
                  //H1149 ARI 13.05.14 +++++++++++++++++++++
                    SalesHeader.Invoice := FALSE;
                  //H1149 ARI 13.05.14 ---------------------
                    //T0011 18.06.14 tec-cs  ++++++++++++++++++++++++++++
                    SalesHeader.Receive := FALSE;
                    //T0011 18.06.14 tec-cs  ----------------------------
                    SalesHeader."Posting Date" := PostingDate;
                    SalesHeader."Document Date" := PostingDate;
                    //H1217 04.06.2014 ARI ++++++++++++++++++++
                    SalesHeader.MODIFY;
                    //H1217 04.06.2014 ARI --------------------
                    SalesPost.RUN(SalesHeader);
                  END;
              6 : BEGIN
                  //Post Invoice
                    SalesHeader.Invoice := TRUE;
                  //H1149 ARI 13.05.14 +++++++++++++++++++++
                    SalesHeader.Ship := FALSE;
                    //T0011 18.06.14 tec-cs  ++++++++++++++++++++++++++++
                    SalesHeader.Receive := FALSE;
                    //T0011 18.06.14 tec-cs  ----------------------------
                  //H1149 ARI 13.05.14 ---------------------
                    SalesHeader."Posting Date" := PostingDate;
                    SalesHeader."Document Date" := PostingDate;
                    //H1217 04.06.2014 ARI ++++++++++++++++++++
                    SalesHeader.MODIFY;
                    //H1217 04.06.2014 ARI --------------------
                    SalesPost.RUN(SalesHeader);
                  END;
              7 : BEGIN
                  //Post Shipment and Invoice
                    SalesHeader.Ship := TRUE;
                    SalesHeader.Invoice := TRUE;
                    //T0011 18.06.14 tec-cs  ++++++++++++++++++++++++++++
                    SalesHeader.Receive := FALSE;
                    //T0011 18.06.14 tec-cs  ----------------------------
                    SalesHeader."Posting Date" := PostingDate;
                    SalesHeader."Document Date" := PostingDate;
                    //H1217 04.06.2014 ARI ++++++++++++++++++++
                    SalesHeader.MODIFY;
                    //H1217 04.06.2014 ARI --------------------
                    SalesPost.RUN(SalesHeader);
                  END;

             //T0011 18.06.14 tec-cs  ++++++++++++++++++++++++++++
              8 : BEGIN
                    // check receive and Invoice
                    SalesLine.VALIDATE("Return Qty. to Receive", SalesBatchPostLine."Qty. to Post");
                    SalesLine.VALIDATE("Qty. to Invoice",SalesBatchPostLine."Qty. to Post");
                    SalesLine.MODIFY;
                  END;

              9 : BEGIN
                    // Post Receive and Invoice
                    SalesHeader.Ship := FALSE;
                    SalesHeader.Receive := TRUE;
                    SalesHeader.Invoice := TRUE;
                    SalesHeader."Posting Date" := PostingDate;
                    SalesHeader."Document Date" := PostingDate;
                    SalesHeader.MODIFY;
                    SalesPost.RUN(SalesHeader);
                  END;
             //T0011 18.06.14 tec-cs  ----------------------------
            END;
          END;

  }
  CODE
  {
    VAR
      SalesPost@1000000005 : Codeunit 80;
      SalesHeader@1000000004 : Record 36;
      SalesLine@1000000003 : Record 37;
      SalesLineTemp@1000000006 : TEMPORARY Record 37;
      SalesBatchPostLine@1000000002 : Record 50226;
      SalesBatchPostLineTemp@1000000007 : TEMPORARY Record 50226;
      ActionTypeID@1000000001 : Integer;
      PostingDate@1000000000 : Date;
      SalesBatchPostFunctions@1000000008 : Codeunit 50268;

    PROCEDURE SetParameter@1000000000(SalesHeaderV@1000000002 : Record 36;SalesLineV@1000000000 : Record 37;BatchPostSalesLineV@1000000003 : Record 50226;ActionIDV@1000000001 : Integer;PostingDateV@1000000004 : Date);
    BEGIN
      SalesHeader := SalesHeaderV;
      SalesLine := SalesLineV;
      SalesBatchPostLine := BatchPostSalesLineV;
      ActionTypeID := ActionIDV;
      PostingDate := PostingDateV;
    END;

    PROCEDURE SetQuantitiesToZero@1000000001(SalesHeaderV@1000000000 : Record 36;ProcessIDV@1000000002 : Integer;MarketPlaceV@1000000004 : Boolean) : Boolean;
    VAR
      SalesLineL@1000000001 : Record 37;
      SetQtyToZeroL@1000000003 : Boolean;
    BEGIN
      CLEAR(SalesLineTemp);
      SalesLineL.SETRANGE("Document Type",SalesHeaderV."Document Type");
      SalesLineL.SETRANGE("Document No.",SalesHeaderV."No.");

      IF SalesLineL.FINDSET(TRUE,FALSE) THEN
        REPEAT
          SalesLineTemp.COPY(SalesLineL,FALSE);
          SalesLineTemp.INSERT;
          //H1157 20.06.14 ARI +++++++++++++++++++++++++++++++++++++++
          SetQtyToZeroL := FALSE;
          CASE SalesLineL.Type OF
            SalesLineL.Type::Item:
              BEGIN
                SetQtyToZeroL := TRUE;
              END;
            SalesLineL.Type::Resource, SalesLineL.Type::"Charge (Item)":
              BEGIN
                //Dont set QtysToZero if its Trusted Shop
                //H2109 10.02.15 ARI +++++++++++++++++++++++++++++++++++++
                IF SalesLineL."Resource Type" <> SalesLineL."Resource Type"::"Trusted Shop" THEN BEGIN
                  SalesBatchPostLineTemp.SETRANGE("Document Type",SalesLineL."Document Type");
                  SalesBatchPostLineTemp.SETRANGE("Document No.",SalesLineL."Document No.");
                  SalesBatchPostLineTemp.SETRANGE("Process ID",ProcessIDV);
                  SalesBatchPostLineTemp.SETRANGE(ID,SalesLineL."Parent ID");
                  IF NOT SalesBatchPostLineTemp.FINDFIRST THEN
                    SetQtyToZeroL := TRUE;
                END ELSE BEGIN
                  IF MarketPlaceV THEN
                    SetQtyToZeroL := TRUE;
                END;
                //H2109 10.02.15 ARI -------------------------------------
              END;
          END;
          IF SetQtyToZeroL THEN BEGIN
            IF NOT SalesBatchPostLineTemp.GET(SalesLineL."Document Type",SalesLineL."Document No.",
                                              ProcessIDV,SalesLineL."Line No.") THEN BEGIN
              IF (SalesLineL."Qty. to Invoice" <> 0) OR (SalesLineL."Qty. to Ship" <> 0) THEN
                SalesBatchPostFunctions.SetParameter(SalesHeaderV,SalesLineL,SalesBatchPostLineTemp,1,0D);
                COMMIT;
                IF NOT SalesBatchPostFunctions.RUN THEN
                  EXIT(TRUE);
            END;
          END;
          //H1157 20.06.14 ARI ---------------------------------------
        UNTIL SalesLineL.NEXT = 0;
    END;

    PROCEDURE CheckResourcesandCharges@1000000004(SalesHeaderV@1000000000 : Record 36;SalesBatchPostHeaderV@1000000002 : Record 50225) : Boolean;
    VAR
      SalesLineL@1000000006 : Record 37;
      ResourceL@1000000003 : Record 156;
      ItemChargeL@1000000007 : Record 5800;
      ProcessLineL@1000000005 : Boolean;
      ActionTypeL@1000000004 : Integer;
    BEGIN
      SalesLineTemp.SETFILTER(Type,'%1|%2',SalesLineTemp.Type::Resource,SalesLineTemp.Type::"Charge (Item)");
      SalesLineTemp.SETFILTER(Quantity,'>0');

      IF SalesLineTemp.FINDSET(TRUE,FALSE) THEN BEGIN
        REPEAT
          SalesBatchPostLineTemp.SETRANGE(ID);
          SalesBatchPostLineTemp.SETRANGE("Line No.");
          ProcessLineL := FALSE;
          ActionTypeL := CheckActionType(SalesBatchPostHeaderV."Posting Type");

          IF SalesLineTemp.Type = SalesLineTemp.Type::Resource THEN BEGIN
            IF SalesLineTemp."Parent ID" <> 0 THEN BEGIN
            //Related Resource
            //H3875,H2193,H1509,H0996 11.03.15 CC-GHE ++++++++++++++++++++++
              ResourceL.GET(SalesLineTemp."No.");
              IF NOT ResourceL."Dont post with Item Line" THEN BEGIN
                SalesBatchPostLineTemp.SETRANGE(ID,SalesLineTemp."Parent ID");
                IF SalesBatchPostLineTemp.FINDFIRST THEN BEGIN
                  IF SalesBatchPostHeaderV."Market Place" AND NOT SalesLineTemp."Market Place" THEN BEGIN
                    SalesBatchPostHeaderV.InsertNewRecord(SalesLineTemp,SalesBatchPostHeaderV."Posting Date",
                                                          SalesBatchPostHeaderV."Posting Type",0,'MP 2.0','',
                                                          SalesBatchPostHeaderV."Manual Posting");
                    //SET QTY to Zero (to be sure that its not posted
                    SalesBatchPostFunctions.SetParameter(SalesHeaderV,SalesLineTemp,SalesBatchPostLineTemp,1,0D);
                    COMMIT;
                    IF NOT SalesBatchPostFunctions.RUN THEN
                      EXIT(FALSE);
                  END ELSE BEGIN
                      ProcessLineL := TRUE;
                  END;
                END;
              END;
            //H3875,H2193,H1509,H0996 24.02.15 ARI ----------------------
            END ELSE BEGIN
            //Independent Resource (Trusted Shop)
              //H1295 27.06.14 ARI +++++++++++++++++++++++++++++
              SalesLineL.GET(SalesLineTemp."Document Type",SalesLineTemp."Document No.",SalesLineTemp."Line No.");
              //H1295 27.06.14 ARI -----------------------------
              //H1509,H0996 11.09.14 ARI +++++++++++++++++++++++++++++
              IF SalesBatchPostHeaderV."Market Place" THEN BEGIN
                //Create new Sales Batch Post Header for Invoicing Trusted Shop for H24
                SalesBatchPostHeaderV.InsertNewRecord(SalesLineL,SalesBatchPostHeaderV."Posting Date",
                //T0082 08.12.14 tec-Gh    +++++++++++++++++++++++++++++++++++
                //                                      SalesBatchPostHeaderV."Posting Type",0,'MP 2.0','');
                                                      SalesBatchPostHeaderV."Posting Type",0,'MP 2.0','',
                                                      SalesBatchPostHeaderV."Manual Posting" );
                //T0082 08.12.14 TEC-GH --------------------------------------
              END ELSE BEGIN
                IF NOT CheckIndependentRessources(SalesBatchPostHeaderV,SalesLineL,ActionTypeL) THEN
                  EXIT(FALSE);
              END;
              //H1509,H0996 11.09.14 ARI -----------------------------
            END;
          END ELSE BEGIN
          //Item Charge
            IF SalesLineTemp."Linked to Sales Order Line No." <> 0 THEN BEGIN
              //H1509,H0996 10.09.14 ARI ++++++++++++++++++++++
              ItemChargeL.GET(SalesLineTemp."No.");
              IF NOT ItemChargeL."Dont post with Item Line" THEN BEGIN
                SalesBatchPostLineTemp.SETRANGE("Line No.", SalesLineTemp."Linked to Sales Order Line No.");
                IF SalesBatchPostLineTemp.FINDFIRST THEN
                  ProcessLineL := TRUE;
              END;
              //H1509,H0996 10.09.14 ARI ----------------------
            END;
          END;

          IF ProcessLineL THEN BEGIN
            //H1295 27.06.14 ARI +++++++++++++++++++++++++++++
            SalesLineL.GET(SalesLineTemp."Document Type",SalesLineTemp."Document No.",SalesLineTemp."Line No.");
            //H1295 27.06.14 ARI -----------------------------
            SalesBatchPostFunctions.SetParameter(SalesHeader,SalesLineL,SalesBatchPostLineTemp,ActionTypeL,
                                                 SalesBatchPostHeaderV."Posting Date");
            COMMIT;
            IF NOT SalesBatchPostFunctions.RUN THEN
              EXIT(FALSE);
          END;
        UNTIL SalesLineTemp.NEXT = 0;
      END ELSE BEGIN
        EXIT(TRUE);
      END;

      EXIT(TRUE);
    END;

    PROCEDURE CheckIndependentRessources@1000000005(SalesBatchPostHeaderV@1000000000 : Record 50225;SalesLineV@1000000003 : Record 37;ActionTypeV@1000000005 : Integer) : Boolean;
    VAR
      SalesBatchPostLineTempL@1000000002 : TEMPORARY Record 50226;
      ProcessLineL@1000000001 : Boolean;
    BEGIN
      CASE ActionTypeV OF
        2 : BEGIN
            //Ship
              IF (SalesLineV."Quantity Shipped" < SalesLineV.Quantity) THEN
                ProcessLineL := TRUE;
            END;
        3 : BEGIN
            //Invoice
              IF (SalesLineV."Quantity Invoiced" < SalesLineV.Quantity) THEN
                ProcessLineL := TRUE;
            END;
      END;

      IF ProcessLineL THEN BEGIN
        SalesBatchPostLineTempL."Qty. to Post" := 1;
        SalesBatchPostLineTempL.INSERT;

        SalesBatchPostFunctions.SetParameter(SalesHeader,SalesLineV,SalesBatchPostLineTempL,ActionTypeV,
                                             SalesBatchPostHeaderV."Posting Date");
        COMMIT;
        IF NOT SalesBatchPostFunctions.RUN THEN BEGIN
          EXIT(FALSE);
        END;
      END;
      EXIT(TRUE);
    END;

    PROCEDURE CheckActionType@1000000002(PostingTypeV@1000000000 : 'Ship,Invoice') : Integer;
    BEGIN
      CASE PostingTypeV OF
        PostingTypeV::Ship : EXIT(2);
        PostingTypeV::Invoice : EXIT(3);
      END;
    END;

    PROCEDURE SetHeaderStatus@1000000003(VAR SalesBatchPostHeaderR@1000000000 : Record 50225;MaxNumberofTriesV@1000000001 : Integer;DelayDaysV@1000000002 : Integer);
    BEGIN
      IF SalesBatchPostHeaderR."Number of tries" < MaxNumberofTriesV THEN BEGIN
        SalesBatchPostHeaderR.Status := SalesBatchPostHeaderR.Status::Open;
        SalesBatchPostHeaderR."Planned Processing Date" := CALCDATE('<+' + FORMAT(DelayDaysV) + 'D>',WORKDATE);
      END ELSE
        SalesBatchPostHeaderR.Status := SalesBatchPostHeaderR.Status::Failure;

      SalesBatchPostHeaderR."Actual Processing Date/Time" := CREATEDATETIME(WORKDATE,TIME);
    END;

    PROCEDURE SetTempSalesBatchPostLIne@1000000006(SalesBatchPostLineV@1000000000 : Record 50226);
    BEGIN
      SalesBatchPostLineTemp.COPY(SalesBatchPostLineV,FALSE);
      SalesBatchPostLineTemp.INSERT;
    END;

    BEGIN
    {
      +--------------------------------------------+
      |                                            |
      |                  Home24                    |
      |     Cooperation Tectura & Home24 NAV Team  |
      |                                            |
      +--------------------------------------------+

      Project No. Date      Shortcut  Description
      _____________________________________________

      T0011       17.06.14  tec-cs    FTTC3 - Phase 2 - Return tracking:
                                      - new posting option for Sales Return Orders: Receive+Invoice
      T0082       25.11.14 tec-sh     added parameter in function T50225.InsertNewRecord
                                      "ManualPostingV"  (Boolean to mark manual postings)
      H3875       11.03.15  CC-GH     MP2: Bugfix  Create additional Invoice for H24 Resource Lines (Voucher Memo Lines)

      +--------------------------------------------+
      |                                            |
      |                  Home24                    |
      |       Internal Customizing by NAV-Team     |
      |                                            |
      +--------------------------------------------+

      Project No. Date     Shortcut  Description
      _____________________________________________
      H0996       16.04.14 ARI       Created
      H1149       13.05.14 ARI       Make sure that Postings will be correct (Ship/Invoice)
      H1217       04.06.14 ARI       Modify Sales Header before Posting
      H1157       13.06.14 ARI       Set Parameter Call in Function SetQtytoZero corrected
      H1295       27.06.14 ARI       Get SalesLine from TempSalesLine
      H1509       10.09.14 ARI       MP2: Do not post item charges related to MP item lines: Code Change
      H2193       24.02.14 ARI       MP2: Create additional Invoice for H24 Resource Lines (Voucher Memo Lines)
    }
    END.
  }
}

